{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"cedd13fcd8c75a68742265dd8eced4087e940ffd","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"459d6f3200863021bee1fe72a719aef236fb4090","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"63d1a594969b7b5b97e1babebc7b85ef07c02e4f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"748d13cb8f9f852f35c3d4a50261fab34ce01952","modified":1637635891374},{"_id":"node_modules/hexo-theme-butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"7ca673fb629ea74f5ba5e75b4f0f95248cfb5090","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"cd333235ff1648a6bf58dfafc81f2c57672a15a5","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"741e522b2387f94764a73844e7b084cc7e927c54","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"79a50c40d9f5463f1fa42aa870ac6b8b84540412","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"60c1b795b6e227b5dd81963b51d29d1b81d0bf49","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"82aa988527a11835e7ac86ce4f23b8cd20014dfa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"7d378e328a53cc99d5acc9682dce53f5eb61537d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"4156224c47bfc2482281ac4e4df701c30476ff00","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"1377952022ee0a9eaa7a2fd1098f1571efc468d9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"6f2608c4d93d3d10ae6b2cd7f8918f303f024321","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"8dafc2dcd8c33f70a546fee443f0b6d80b3cd243","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"018aa446265fe627301b1d53d7cba4f4ff1960ac","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"4cc2d517195c8779471d326ada09f9371cbad4dd","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"9821872007cf57efae4b728dc575ef9d004547bb","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"65f2442e04c4defd16e7c1e67701d3bb41d9577a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"c6611d97087c51845cb1ab4821696a62fa33daeb","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"21556f9cb412ddc500ad12ecfd419f3ea6c9f663","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"b816ded1451f28c7c54151ffe6c259b110253ae3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"40c3f64422205a24e68ce1ad8fe8163f24fdd525","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"4def0aab9e2172ad1f29abd1535d8e08ff23aa0b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"889ef16fa34a39e5533bc170e62f20f3450cc522","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"e55f8bdb876d5429a908498db1307b94094c0d06","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"65fa23680af0daf64930a399c2f2ca37809a8149","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"24370508ee87f14418e8f06e9d79ad8c52a342c4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"c205b9fd72b2fe19e6d15c5b5ab0fb38c653032e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"92f81a437c9db49f7ebcf608bc09488ecdb55a21","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"4c3c5cb69b3aead8c232cb0fbc251929f28aad75","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"b53a2d4f9c37b375a4446d2273dcfb7712d91b3e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"5b404356f311d2ee36478291ca3553210867b738","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"933cb710d2dbcea25c6426a57c6f49d2f48b792c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"d50e5c22cd6bc3c378bc581918136746cfa3447f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"0366c658cdcff839aa1df2e2d252a03a53fd427e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"27afd2274bd5f2cbbf1bad9f0afe2b2b72c213ca","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"b5525891f6affd02c1ea3b2327c026882efe428b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"eda47f3e807a466ba8275627ea936c5100c43818","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"e211efbd1952d4b1b881287aa43423133c1d166e","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"85e72c70a0cef29e40be1968f5d23b06c6f8e3aa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"fa4b87e7b29bdd1f09eb1a30e06ba74b224f0ba2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"7feb755ca7c22da36bbad11e74ecd95fdcf3b879","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"98235fcda3b87ad6f7e91eafbed94d0d6ae847ca","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"90fe01c968696a9f791cb2b84fca621cbbb56f47","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"d748951d9fbcd04dda839085af78b01b8fa04cba","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"0551c5893d1589a3d17ce161e50ecb1d724cc6e8","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"ea1ba40dd5954c2ed718a126336fb7f94da4e66f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"7a072589e6097dbe942783131964f2372fdf1eb6","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"978c397d0966eaf9e6e2afd13866f8f4900b509f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"2c5fb77c448ce0a734040c8ce532b28fed688899","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"4e629f510b73f998ab208b739c5bd7dcd168d1a7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"f59a9a0059d5261251bdd6de45aa97dd2d11e633","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"1c3f9d7efc3b9dfcfa8926a1132d0c44ffc7d4b2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"f741e85295ce15c70a6027ec15a542636dd5dcca","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"917e0e399e117217184ca63d3eb5c4843bcccf7b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"f168f5c669978f633abe118cdcc4a12cfc883c01","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"6befe4c51b86d0c1de130beeecad9e28d6442713","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"b0488ceacde74af139d66c8db5cb36cc21737b9b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"97fec1e814f88237862f4d800a35362b802f6625","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"2cc49d3f6a6beb9f7bff93e292f88aa5681da1d0","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"7c4152162a03aa8331a783df5695e4ebbb816a8c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"400ce038548d6f9ddb486150c724c87b6923a88b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"2e52c64e89f16267596a8465841dd46f51820982","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"c46a932257212f82e4a9974fbbc5de8878c8b383","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0b7571919e8ad51285deda56a1868fccf8c563d7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"bafb3d5710824caa59a56017afb058fd2b4eac65","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"16378d8646ea3f4ac99c18f0296dd85b13f9d775","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"2b45fe09d5b591dca156b76dae99981f8d8e1c61","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"36f3c603d2a2ecddaa6d2675a89d76ad94968f72","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"f9b00ead54573ba6e6eb33481588af144aab648d","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"a47d8f9f593091cc91192c0c49deaa2c0d2317fd","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"b443d6b16baf3ea250041342cc0361a42a412b7f","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"34088a15655704d12e9b1807b47b3f6a860c9eec","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f6506ccfd1ce994b9e53aa95588d0b6dbad11411","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"cb38ffe911023092a90a28f2ba8317a92b22cd0c","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"59b4c26a827ace5a54855881d199977103ff6f50","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"a2bc2601b7e0ae5caf1fc51a07390562d928620a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"8c0726fb8d9a497d2f900b0be2845efaa68e3d87","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"89cbcc8e087788ecec18b5fa58710afacdb7d080","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"e0e7065124ef0d99f8322a47bc47838982e04ad0","modified":499162500000},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":499162500000},{"_id":"public/2021/11/23/hello-world/index.html","hash":"f6013bea2c97bf87ac8a033a34aeb5bcb1f43690","modified":1637641870501},{"_id":"public/archives/index.html","hash":"7ef99082af5b8c268c2a1d32edc958da9a7ea499","modified":1637651555533},{"_id":"public/archives/2021/index.html","hash":"60f5aa0fc2aaab3eaa2221013de4e115245d8634","modified":1637651555533},{"_id":"public/archives/2021/11/index.html","hash":"0b9a45287078864a5d25a6255e61dc4ba15f65ff","modified":1637651555533},{"_id":"public/index.html","hash":"f73a2a0c6addb60bb460add046e2af65ebd10de3","modified":1637651555533},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1637636220636},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1637636220636},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1637636220636},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1637636220636},{"_id":"public/css/index.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1637636220636},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1637636220636},{"_id":"public/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":1637636220636},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1637636220636},{"_id":"public/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":1637636220636},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1637636220636},{"_id":"public/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":1637636220636},{"_id":"source/image/donate/wechat.jpg","hash":"22da3bf7b0edd0afbf44a116ec95a085473e0192","modified":1637637245235},{"_id":"source/image/donate/alipay.jpg","hash":"8112c45ebb7be6ce6917bce5283a3bfb868fd9f5","modified":1637637252890},{"_id":"source/_data/link.yml","hash":"6aaf04b5c920e403bea8f82e4b3f4d719760e6df","modified":1637638295082},{"_id":"source/categories/index.md","hash":"5fffc9903d16313260035cca87b842e6174f665b","modified":1637638184850},{"_id":"source/link/index.md","hash":"d0916285272be44bbbd15e297eefbdfe259bc772","modified":1637638216369},{"_id":"public/404.html","hash":"90e0703f7d94c9af348c6c60c36a347335517ac9","modified":1637651555533},{"_id":"public/categories/index.html","hash":"74d98b2ce7ffd0a449b193294383cce65ad2f3ff","modified":1637651555533},{"_id":"public/link/index.html","hash":"281e98fe2ede4abaae0631f905a067b8a406d42d","modified":1637651555533},{"_id":"source/_posts/test.md","hash":"653293ab78a28fdf4103ed48f1bb04c693851a65","modified":1637647703883},{"_id":"source/tags/index.md","hash":"e6683951312625c72ab708eff05c6e944c0367e9","modified":1637647501805},{"_id":"public/search.xml","hash":"430049849bd4d96cbdd54e5e6f726e110c8559ca","modified":1637650634370},{"_id":"public/tags/index.html","hash":"cb8b5b8d0d770c14eb5bef1389859e9fdfaa9780","modified":1637651555533},{"_id":"public/2021/11/23/test/index.html","hash":"04f3334db2ec314c08a817d7f9436521bf518617","modified":1637647710684},{"_id":"public/categories/生物信息学-群体遗传学-Linux/index.html","hash":"78ec0474b1a0e6ed497e6f5ca3303b9b014c8572","modified":1637651555533},{"_id":"public/tags/生物信息学/index.html","hash":"ab52111b2c45f8eead1c211a4b40ea6a0b2b9997","modified":1637651555533},{"_id":"public/tags/Linux/index.html","hash":"e1a49d04a1faf2198fcee13034872d68ce4a5dfd","modified":1637651555533},{"_id":"source/_posts/重测序分析脚本.md","hash":"30aa987f0870a1acc31a8f1469a80099dfa8735a","modified":1637649984633},{"_id":"source/_posts/ggtree学习笔记/1.png","hash":"cc50b48b259ac8306fe3dd753afe0b47fc8eebb2","modified":1613356761000},{"_id":"source/_posts/ggtree学习笔记/11.png","hash":"e07775e957806492cb4dfaa3043e53cc922784f5","modified":1613374485000},{"_id":"source/_posts/ggtree学习笔记/12.png","hash":"8f918ba0f267e8b5f78f000d3354b39dfc6ceedc","modified":1613374737000},{"_id":"source/_posts/ggtree学习笔记/13.png","hash":"119b4eb7c497c5138cc957fa4988a9734a760b61","modified":1613375059000},{"_id":"source/_posts/ggtree学习笔记/14.png","hash":"5b9cb81ffcfb9cb99a8dc883bdcffce1754a6dc2","modified":1613375490000},{"_id":"source/_posts/ggtree学习笔记/16.png","hash":"70131721b725ec5002cf6da999010e04c53fb860","modified":1613375957000},{"_id":"source/_posts/ggtree学习笔记/17.png","hash":"50890216af4d2aaa7bcbbaf8aabea6d01819217b","modified":1613376343000},{"_id":"source/_posts/ggtree学习笔记/18.png","hash":"2913a6d6320ed563176b86a8b82ee569ada7272d","modified":1613376772000},{"_id":"source/_posts/ggtree学习笔记/19.png","hash":"f73ca612d093f0cae4559d53f93a33fc6d8747c8","modified":1613377049000},{"_id":"source/_posts/ggtree学习笔记/2.png","hash":"33406237ca38e841d9bd311dfdd488e3690177df","modified":1613358360000},{"_id":"source/_posts/ggtree学习笔记/20.png","hash":"725141c57d7dafcc20e300dbbbf1fc3c2fd47140","modified":1613377344000},{"_id":"source/_posts/ggtree学习笔记/21.png","hash":"68ef9ba465b4e198e313d4ad4eb3f8bb352b6de2","modified":1613377622000},{"_id":"source/_posts/ggtree学习笔记/23.png","hash":"c3de909b67e7f551957e843554d8bbc5e8b966f3","modified":1613378341000},{"_id":"source/_posts/ggtree学习笔记/24.png","hash":"df15394976dbffb6b7727c473a8ffae51ee38e23","modified":1613378546000},{"_id":"source/_posts/ggtree学习笔记/25.png","hash":"7a569e79212884629c0f5fa15cf9f0dee312a00c","modified":1613378997000},{"_id":"source/_posts/ggtree学习笔记/26.png","hash":"9cb6f2522904397fb0bd6bf1098bc170d800c2c0","modified":1613379090000},{"_id":"source/_posts/ggtree学习笔记/27.png","hash":"64fedb62fd1ee3974a2793fd41d66391eea17857","modified":1613379465000},{"_id":"source/_posts/ggtree学习笔记/28.png","hash":"93f03bac764c934774d451167fe07b3b653267e7","modified":1613379481000},{"_id":"source/_posts/ggtree学习笔记/29.png","hash":"c8147e402e18d9c042db48fc255925ed27dd3108","modified":1613379955000},{"_id":"source/_posts/ggtree学习笔记/3.png","hash":"c7506eb5ccf406f0ce6b267494973897b7a6a0a1","modified":1613361141000},{"_id":"source/_posts/ggtree学习笔记/30.png","hash":"46a13b1aeb0468740b2efd492b63fd0daf5f6467","modified":1613380104000},{"_id":"source/_posts/ggtree学习笔记/31.png","hash":"b334d5f30791a434e4fa7d30c611e6847c371587","modified":1613380812000},{"_id":"source/_posts/ggtree学习笔记/32.png","hash":"2ffda8a8bff4c7f3c40e66599fa9d46c99923d9c","modified":1613381165000},{"_id":"source/_posts/ggtree学习笔记/33.png","hash":"4629301bf49ed3ab7b3b0f37499574f11ef40aca","modified":1613381462000},{"_id":"source/_posts/ggtree学习笔记/34.png","hash":"73b3a723fa4bce46d1692410ab33aec467e5f656","modified":1613381760000},{"_id":"source/_posts/ggtree学习笔记/35.png","hash":"bed0bb0256b270d997bd18ce27cc8812da37287e","modified":1613381954000},{"_id":"source/_posts/ggtree学习笔记/36.png","hash":"4c9cf2649a554bbba38747eddb6b179a5854254c","modified":1613383517000},{"_id":"source/_posts/ggtree学习笔记/37.png","hash":"5fd9e653335cede7ca76f2ae8785a18906a53555","modified":1613383631000},{"_id":"source/_posts/ggtree学习笔记/38.png","hash":"8869df65e3e12de7814a96153a6f51617b15f49f","modified":1613383843000},{"_id":"source/_posts/ggtree学习笔记/39.png","hash":"4a1353badb4991e51fe1bdc2fad6ad3784070e28","modified":1613384118000},{"_id":"source/_posts/ggtree学习笔记/4.png","hash":"865873452f1e51acec31500fbe12bb4acf6b8ffd","modified":1613361590000},{"_id":"source/_posts/ggtree学习笔记/40.png","hash":"ed082a665221c45d00bc52bee38d0f7a91042740","modified":1613384338000},{"_id":"source/_posts/ggtree学习笔记/41.png","hash":"17772b7afd8b4741c61d02a88f9ac18053bf1070","modified":1613384957000},{"_id":"source/_posts/ggtree学习笔记/46.png","hash":"5d6445ff5b140be80fdc774b408fab361d89bf52","modified":1613385503000},{"_id":"source/_posts/ggtree学习笔记/48.png","hash":"317aa6468c94231e667288aa82a3c4d4ec04ac3a","modified":1613438062000},{"_id":"source/_posts/ggtree学习笔记/52.png","hash":"74f257d6045fa1875d9d13923f357a7851849ba5","modified":1613440136000},{"_id":"source/_posts/ggtree学习笔记/54.png","hash":"97390f346631df7266c8864aaa7926184eef6c29","modified":1613440414000},{"_id":"source/_posts/ggtree学习笔记/56.png","hash":"7641336344c2915bee36bf117c6d8e6f61da085b","modified":1613440793000},{"_id":"source/_posts/ggtree学习笔记/6.png","hash":"c9c47a43373b5ec8bc5ffb2590f1c1a7ab7bb2f0","modified":1613364298000},{"_id":"source/_posts/ggtree学习笔记/7.png","hash":"af4c7bdbfd3c639609d6ea1407a8600abb172ff0","modified":1613366992000},{"_id":"source/_posts/ggtree学习笔记/ggtree学习笔记.R","hash":"1897fe5fb1cf540477444222049bb54532e923f7","modified":1613441868000},{"_id":"source/_posts/ggtree学习笔记.md","hash":"d26c5864cbfcd391c705f0a7907bb7d7a44813a5","modified":1637649869066},{"_id":"source/_posts/ggtree学习笔记/10.png","hash":"8e27cd7c2b23120ee3f4cd7b3d8ebe0aa75b4807","modified":1613371075000},{"_id":"source/_posts/ggtree学习笔记/15.png","hash":"3e1345557fefce9c27b8826c48054efd82b94988","modified":1613375620000},{"_id":"source/_posts/ggtree学习笔记/42.png","hash":"c58a1979d96805ad6154fad601f759ae987cc4ad","modified":1613385130000},{"_id":"source/_posts/ggtree学习笔记/44.png","hash":"d5768bbfa369566b5318edf95f64ef4ee628af64","modified":1613385320000},{"_id":"source/_posts/ggtree学习笔记/53.png","hash":"e3c0fcdda66d260dfda4d9cad356d90947792f82","modified":1613440311000},{"_id":"source/_posts/ggtree学习笔记/55.png","hash":"52d88f49e9668c89a1428e9e920ac23e2ea4eed3","modified":1613440566000},{"_id":"source/_posts/ggtree学习笔记/9.png","hash":"84e87cbdfabb0485193d6446a9f28a6cdf81a006","modified":1613368952000},{"_id":"source/_posts/ggtree学习笔记/22.png","hash":"c9ba8c6136e03a1d292bf1c5070a223529f51bd6","modified":1613377993000},{"_id":"source/_posts/ggtree学习笔记/8.png","hash":"6bc6e38890ba8e94c8e56c4eb823acbc9bb209c9","modified":1613367735000},{"_id":"source/_posts/ggtree学习笔记/49.png","hash":"89f2fe1a18f45a9364f0292a77f9ff9cd4d98e70","modified":1613438579000},{"_id":"source/_posts/ggtree学习笔记/5.png","hash":"de12eb3990cdf3c3c604fe260ce2cb956520caf5","modified":1613363636000},{"_id":"source/_posts/ggtree学习笔记/51.png","hash":"b0c640b2bd22f0d3c237f5e5d181ea2771791905","modified":1613438802000},{"_id":"source/_posts/ggtree学习笔记/50.png","hash":"6fa05a5aefbf60bde610df72d0b9a106893f4d95","modified":1613438706000},{"_id":"source/_posts/ggtree学习笔记/59.png","hash":"14cec4cc65d70ca33864670ff9bf207ddb31ac59","modified":1613442551000},{"_id":"source/_posts/ggtree学习笔记/60.png","hash":"4e2c09b1f7da0a1c49311172af55f7a099c07775","modified":1613442636000},{"_id":"source/_posts/ggtree学习笔记/61.png","hash":"a3d3e8640ab2e262ff7a88f912fb36c7bba66007","modified":1613442697000},{"_id":"source/_posts/ggtree学习笔记/62.png","hash":"19995b575208b09150274c7eee4780839a1486e5","modified":1613442953000},{"_id":"source/_posts/ggtree学习笔记/47.png","hash":"2ebc201e14cd1d976451af6cb2758f70a7862b54","modified":1613437783000},{"_id":"source/_posts/ggtree学习笔记/57.png","hash":"f2ac3cee1d32a93c0af67c6b1c5626c06656022a","modified":1613441994000},{"_id":"source/_posts/ggtree学习笔记/45.png","hash":"66f735b3c48d43a93d5b25e26f16a4520c6b653c","modified":1613385399000},{"_id":"source/_posts/ggtree学习笔记/43.png","hash":"272032fd12dd9cfe5ed9d7615a53faee9ddd1f4a","modified":1613385222000},{"_id":"source/_posts/ggtree学习笔记/58.png","hash":"3f4c70f15bd9c9e7e88f72c403d55c9b8ff0e69b","modified":1613442504000},{"_id":"public/2021/11/23/重测序分析脚本/index.html","hash":"622fb9520bd26538d5c3f0a0830061d7d47533bb","modified":1637650634370},{"_id":"public/2021/02/15/ggtree学习笔记/index.html","hash":"3e83de1585a986afb7a6f78dac473634022f7dd5","modified":1637650634370},{"_id":"public/archives/2021/02/index.html","hash":"befb5aeb7b407e8525b24dac6c497e01d8ebd8dc","modified":1637651555533},{"_id":"public/categories/R语言/index.html","hash":"f8847e678ee3835ca1a0d1ac557f5c604684dd56","modified":1637651555533},{"_id":"public/tags/R语言/index.html","hash":"ab44fdafca52c1bb012bc2eab6f7ab65f7d1d45c","modified":1637651555533},{"_id":"public/2021/02/15/ggtree学习笔记/1.png","hash":"cc50b48b259ac8306fe3dd753afe0b47fc8eebb2","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/11.png","hash":"e07775e957806492cb4dfaa3043e53cc922784f5","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/13.png","hash":"119b4eb7c497c5138cc957fa4988a9734a760b61","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/12.png","hash":"8f918ba0f267e8b5f78f000d3354b39dfc6ceedc","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/14.png","hash":"5b9cb81ffcfb9cb99a8dc883bdcffce1754a6dc2","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/16.png","hash":"70131721b725ec5002cf6da999010e04c53fb860","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/17.png","hash":"50890216af4d2aaa7bcbbaf8aabea6d01819217b","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/19.png","hash":"f73ca612d093f0cae4559d53f93a33fc6d8747c8","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/18.png","hash":"2913a6d6320ed563176b86a8b82ee569ada7272d","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/2.png","hash":"33406237ca38e841d9bd311dfdd488e3690177df","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/21.png","hash":"68ef9ba465b4e198e313d4ad4eb3f8bb352b6de2","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/20.png","hash":"725141c57d7dafcc20e300dbbbf1fc3c2fd47140","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/23.png","hash":"c3de909b67e7f551957e843554d8bbc5e8b966f3","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/24.png","hash":"df15394976dbffb6b7727c473a8ffae51ee38e23","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/25.png","hash":"7a569e79212884629c0f5fa15cf9f0dee312a00c","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/26.png","hash":"9cb6f2522904397fb0bd6bf1098bc170d800c2c0","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/28.png","hash":"93f03bac764c934774d451167fe07b3b653267e7","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/27.png","hash":"64fedb62fd1ee3974a2793fd41d66391eea17857","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/29.png","hash":"c8147e402e18d9c042db48fc255925ed27dd3108","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/3.png","hash":"c7506eb5ccf406f0ce6b267494973897b7a6a0a1","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/30.png","hash":"46a13b1aeb0468740b2efd492b63fd0daf5f6467","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/31.png","hash":"b334d5f30791a434e4fa7d30c611e6847c371587","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/32.png","hash":"2ffda8a8bff4c7f3c40e66599fa9d46c99923d9c","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/33.png","hash":"4629301bf49ed3ab7b3b0f37499574f11ef40aca","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/35.png","hash":"bed0bb0256b270d997bd18ce27cc8812da37287e","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/34.png","hash":"73b3a723fa4bce46d1692410ab33aec467e5f656","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/36.png","hash":"4c9cf2649a554bbba38747eddb6b179a5854254c","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/37.png","hash":"5fd9e653335cede7ca76f2ae8785a18906a53555","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/38.png","hash":"8869df65e3e12de7814a96153a6f51617b15f49f","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/39.png","hash":"4a1353badb4991e51fe1bdc2fad6ad3784070e28","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/4.png","hash":"865873452f1e51acec31500fbe12bb4acf6b8ffd","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/40.png","hash":"ed082a665221c45d00bc52bee38d0f7a91042740","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/41.png","hash":"17772b7afd8b4741c61d02a88f9ac18053bf1070","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/46.png","hash":"5d6445ff5b140be80fdc774b408fab361d89bf52","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/48.png","hash":"317aa6468c94231e667288aa82a3c4d4ec04ac3a","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/52.png","hash":"74f257d6045fa1875d9d13923f357a7851849ba5","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/54.png","hash":"97390f346631df7266c8864aaa7926184eef6c29","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/56.png","hash":"7641336344c2915bee36bf117c6d8e6f61da085b","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/6.png","hash":"c9c47a43373b5ec8bc5ffb2590f1c1a7ab7bb2f0","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/7.png","hash":"af4c7bdbfd3c639609d6ea1407a8600abb172ff0","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/ggtree学习笔记.R","hash":"1897fe5fb1cf540477444222049bb54532e923f7","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/10.png","hash":"8e27cd7c2b23120ee3f4cd7b3d8ebe0aa75b4807","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/15.png","hash":"3e1345557fefce9c27b8826c48054efd82b94988","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/42.png","hash":"c58a1979d96805ad6154fad601f759ae987cc4ad","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/44.png","hash":"d5768bbfa369566b5318edf95f64ef4ee628af64","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/53.png","hash":"e3c0fcdda66d260dfda4d9cad356d90947792f82","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/55.png","hash":"52d88f49e9668c89a1428e9e920ac23e2ea4eed3","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/9.png","hash":"84e87cbdfabb0485193d6446a9f28a6cdf81a006","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/22.png","hash":"c9ba8c6136e03a1d292bf1c5070a223529f51bd6","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/8.png","hash":"6bc6e38890ba8e94c8e56c4eb823acbc9bb209c9","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/49.png","hash":"89f2fe1a18f45a9364f0292a77f9ff9cd4d98e70","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/51.png","hash":"b0c640b2bd22f0d3c237f5e5d181ea2771791905","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/59.png","hash":"14cec4cc65d70ca33864670ff9bf207ddb31ac59","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/5.png","hash":"de12eb3990cdf3c3c604fe260ce2cb956520caf5","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/50.png","hash":"6fa05a5aefbf60bde610df72d0b9a106893f4d95","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/57.png","hash":"f2ac3cee1d32a93c0af67c6b1c5626c06656022a","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/60.png","hash":"4e2c09b1f7da0a1c49311172af55f7a099c07775","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/62.png","hash":"19995b575208b09150274c7eee4780839a1486e5","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/47.png","hash":"2ebc201e14cd1d976451af6cb2758f70a7862b54","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/61.png","hash":"a3d3e8640ab2e262ff7a88f912fb36c7bba66007","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/45.png","hash":"66f735b3c48d43a93d5b25e26f16a4520c6b653c","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/43.png","hash":"272032fd12dd9cfe5ed9d7615a53faee9ddd1f4a","modified":1637648719518},{"_id":"public/2021/02/15/ggtree学习笔记/58.png","hash":"3f4c70f15bd9c9e7e88f72c403d55c9b8ff0e69b","modified":1637648719518},{"_id":"source/_posts/NCBI-blast-本地比对.md","hash":"d470879934df3a25e2dbcdcec83a42cd024eacaf","modified":1637649736913},{"_id":"public/2021/11/23/NCBI-blast-本地比对/index.html","hash":"452b4afdf47bd50437001047270082e098258e7c","modified":1637650634370},{"_id":"source/_posts/ggplot2画箭头/1.jpg","hash":"2407b238840e63e78fc99ab7c094bf83af9f796b","modified":1608102896000},{"_id":"source/_posts/ggplot2坡度图/1.png","hash":"92d1e0dae8a9eb036b4a29b518029fcc62ee9f80","modified":1609334552000},{"_id":"source/_posts/iTAK简明教程/2.png","hash":"6d713abba9d78708cc667e25692634822a9ca934","modified":1622517731742},{"_id":"source/_posts/iTAK简明教程/1.png","hash":"48d8538524a165862d4b5be4f6444cd816ce70e4","modified":1622517521284},{"_id":"source/_posts/iTOL修饰进化树/1.png","hash":"8675d7791d8a634279845912104e9ce6aeb7eb4c","modified":1578573284000},{"_id":"source/_posts/iTOL修饰进化树/3.png","hash":"52bef2042286639156e1f7b94a8865e677e9062e","modified":1578574122000},{"_id":"source/_posts/iTOL修饰进化树/5.png","hash":"e450a58d81bc36052f6c04ce187f3962e52fb3ba","modified":1578574318000},{"_id":"source/_posts/iTOL修饰进化树/2.png","hash":"8ee00b9dc31db11ba04d99c936c94deed96b7366","modified":1578573540000},{"_id":"source/_posts/iTOL修饰进化树/4.png","hash":"bea49d3e4eb0c671e0c6a67baade253c495e2cfc","modified":1578574258000},{"_id":"source/_posts/MiKTeX安装报错解决办法/1.jpg","hash":"9b051ed75e062738316ee4537553eaddf3e746fa","modified":1614952840981},{"_id":"source/_posts/Nature：PTI影响ETI/0.png","hash":"c2160aedac082a465be04347eb05635111369643","modified":1623997497214},{"_id":"source/_posts/Nature：PTI影响ETI/13.png","hash":"d6813e5df31e77b38be0f2df8f5bedba1ab78b9c","modified":1624105453231},{"_id":"source/_posts/Nature：PTI影响ETI/01.png","hash":"3e90d6d2c3d43249b728723d95bef3b255c0f89e","modified":1623997511773},{"_id":"source/_posts/Nature：PTI影响ETI/11.png","hash":"374f3f89ccf201d1ab6f1c5312786f49ce160dfc","modified":1624104335456},{"_id":"source/_posts/Nature：PTI影响ETI/1.png","hash":"a2e2113eba3152ec02996b5f7c6f68f877fd4196","modified":1623997312463},{"_id":"source/_posts/Nature：PTI影响ETI/10.png","hash":"436d3f0c670c15686cfade5a257aa0c29a77b42c","modified":1624102174175},{"_id":"source/_posts/Nature：PTI影响ETI/12.png","hash":"4c361efc55348e88da836c343b7b1bfa1ce7a264","modified":1624105083410},{"_id":"source/_posts/NMDS分析/2.png","hash":"ff76cd16854fd9303aebd7ff81238cacc7534436","modified":1604724740000},{"_id":"source/_posts/NMDS分析/3.png","hash":"8de7837855b8d223b841147e8fdf9d18d3f8b45e","modified":1604724740000},{"_id":"source/_posts/NMDS分析/4.png","hash":"7958f96f8be51a7574904a6d0a5ed9906328e96f","modified":1604724742000},{"_id":"source/_posts/NMDS分析/5.png","hash":"9936dc2638de444465ed2c713b544f73ec8f2cc5","modified":1604724742000},{"_id":"source/_posts/NMDS分析/1.png","hash":"8d34a3db258731dfe050c253881191a98a62ae14","modified":1604716836000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/6.jpg","hash":"5853a65bf623f0f69722564999cc6257bfb6fba6","modified":1607845470000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/0.png","hash":"67102f41516e40ff21c0f92ff9da136a842ea088","modified":1607840908000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/2.jpg","hash":"91fe7df6ba5b7cd9318d18a46b5f8c9c1fc34ac5","modified":1607841972000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/4.jpg","hash":"9d4d79f8654e4f2a355072816711de468d61fa04","modified":1607841994000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/5.jpg","hash":"af8e71c9289ef1c133bf3b9092e27609ea30d81a","modified":1607842004000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/1.jpg","hash":"93c4db41b3873fbc94ef8c5d1d20e0c589b3abb1","modified":1607841960000},{"_id":"source/_posts/OPLS-DA在R语言中的实现/3.jpg","hash":"4f5b8180b2a2aa03eae61d78466f3ebbe2485b4d","modified":1607841982000},{"_id":"source/_posts/PCA 在 R 语言中的实现/2.png","hash":"dbb91ac73cc80b03a58e802aa1c0470718256f8f","modified":1578448768000},{"_id":"source/_posts/PCA 在 R 语言中的实现/3.png","hash":"00c9276012fb07d0d3edccd1f5561a9974373599","modified":1578448776000},{"_id":"source/_posts/PCA 在 R 语言中的实现/1.png","hash":"b1a0d959f0bcd9c7115874f03cc00e31fe1a6a62","modified":1578448754000},{"_id":"source/_posts/PCA和PERMANOVA分析/1.png","hash":"e018d8d1529243174d4fc1d90cd1569cb62c4f7f","modified":1578445186000},{"_id":"source/_posts/PTI中的信号网络/2.png","hash":"888ac2c83ca8d7de40f0bac98a3abdd1d779bfbc","modified":1608963022000},{"_id":"source/_posts/PCA 在 R 语言中的实现/4.png","hash":"13e4646af752df99b982304ff3d8fa9159964a56","modified":1578448786000},{"_id":"source/_posts/PTI中的信号网络/1.png","hash":"67595bea24a789ac7388113726c5a11631ee2579","modified":1608950742000},{"_id":"source/_posts/PTI中的信号网络/4.png","hash":"032038a3d7136051467a763e57455137202d0aae","modified":1609056042000},{"_id":"source/_posts/PTI中的信号网络/3.png","hash":"577ca4d6beccce8a7f5ce7f9c67690eddf31824a","modified":1608964892000},{"_id":"source/_posts/R语言批量合并Excel文件/1.png","hash":"e075cad0ad01e10190ecc4fafc74b4620a1ca20b","modified":1578461186000},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/4.png","hash":"96fd7ea305fa8741a183bc6d1c79e276f76b8701","modified":1610718910000},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/5.png","hash":"ec2baf985193dd365d394b72ad540e4a501c42f1","modified":1610718918000},{"_id":"source/_posts/tidyHeatmap学习笔记/1.png","hash":"8310164c5707c9ca635fec58fc09901d51178dc1","modified":1612439537312},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/1.png","hash":"04cfe108aaa9f18d7b3c328995a224f6c75a648c","modified":1610717742000},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/2.png","hash":"62886e505360b79b5558680f604c96cbcc60c0b0","modified":1610718028000},{"_id":"source/_posts/Tools4You教程2-相关性分析/2.png","hash":"68a9d0017e008e9193fc44d6292546ffac623a6f","modified":1610972324000},{"_id":"source/_posts/Tools4You教程2-相关性分析/6.png","hash":"151529b55a3b9e3c656c2bd2bd04463dbe55cee8","modified":1610973982000},{"_id":"source/_posts/Tools4You教程2-相关性分析/7.png","hash":"7a15ed3c4c0b88ba91e7fd05bd29c804977de8bb","modified":1611307706000},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/3.png","hash":"277e06d03137c31846b94e52af15ce6af1ad3059","modified":1610718852000},{"_id":"source/_posts/Tools4You教程2-相关性分析/3.png","hash":"bf814123ea8b98a53e410ff53813a41977cb8bc1","modified":1610972774000},{"_id":"source/_posts/Tools4You教程2-相关性分析/1.png","hash":"d5fef8d58a4eeea4f0c155708f009751b8f3dec5","modified":1610972222000},{"_id":"source/_posts/Tools4You教程3：线性回归分析/2.png","hash":"5f890be97d04715015109cf9a975b0963c151ad6","modified":1611024946000},{"_id":"source/_posts/Tools4You教程3：线性回归分析/3.png","hash":"4764b2ce4773066e0bfe0370ab0487381d4b6262","modified":1611025396000},{"_id":"source/_posts/Tools4You教程3：线性回归分析/4.png","hash":"054af1871ef00681096ed6f984413ca0ea509739","modified":1611025692000},{"_id":"source/_posts/Tools4You教程3：线性回归分析/1.png","hash":"9e88f7d9ec0520d16d87dbd3a188531253ac8410","modified":1611024614000},{"_id":"source/_posts/Tools4You教程4：PCA/0.png","hash":"7cbcadcd196d31189424f982c4ff6e9b3e461dba","modified":1611833885221},{"_id":"source/_posts/Tools4You教程4：PCA/1.png","hash":"19dfdb5feae902fed30ec388946a54dedeef0b59","modified":1611833463935},{"_id":"source/_posts/Tools4You教程4：PCA/10.png","hash":"9ae352182dd60c5a1ff740b723786c658fbe59ba","modified":1611838096317},{"_id":"source/_posts/Tools4You教程4：PCA/11.png","hash":"9b732786074dcc1a7e2fcc18414e9f28c74300da","modified":1611838171661},{"_id":"source/_posts/Tools4You教程4：PCA/13.png","hash":"b235ae20d4a5a92021e40147eb53d3f04b0197a8","modified":1611881437999},{"_id":"source/_posts/Tools4You教程4：PCA/2.png","hash":"f5d526914dfcf6c43264d0eba15436470727c390","modified":1611834666836},{"_id":"source/_posts/Tools4You教程4：PCA/3.png","hash":"49fb270b2ae996e378beacd2b20eea63fcb14365","modified":1611834568025},{"_id":"source/_posts/Tools4You教程4：PCA/4.png","hash":"0d77ee8bb8d8c758b1b782096c0d55a30375ba4c","modified":1611836523077},{"_id":"source/_posts/Tools4You教程4：PCA/5.png","hash":"3ad9308021d2a7af803d4a41428ec0a51934492f","modified":1611836893286},{"_id":"source/_posts/Tools4You教程4：PCA/8.png","hash":"32b719291cf8656ad858e82555bc3dae8f815e72","modified":1611837549592},{"_id":"source/_posts/Tools4You教程4：PCA/7.png","hash":"4178fb8845454a49e019c13eb84eb6934b1128fc","modified":1611837205117},{"_id":"source/_posts/Tools4You教程2-相关性分析/5.png","hash":"d014ede5843447dc22ad052cbe5734cb170928f2","modified":1610973224000},{"_id":"source/_posts/Tools4You教程4：PCA/12.png","hash":"2a1fd669474b394fbcd247d79a0409dcf7e3b791","modified":1611924212629},{"_id":"source/_posts/Tools4You教程4：PCA/9.png","hash":"5bdb1fed2559b8718d3ea733d8dd31b18adbef0d","modified":1611837965082},{"_id":"source/_posts/Tools4You教程2-相关性分析/4.png","hash":"c03485e765761faf2d0e83b917178a94704b5f8b","modified":1610972922000},{"_id":"source/_posts/Tools4You教程4：PCA/6.png","hash":"34c4da24027240fff055a6707d1a8b25076c5ff4","modified":1611837106527},{"_id":"source/_posts/Tools4You教程5：PCoA/1.png","hash":"6cd0bf0310e976959a2a68c5d33d0333501b5c22","modified":1611920872044},{"_id":"source/_posts/Tools4You教程5：PCoA/2.png","hash":"f5d526914dfcf6c43264d0eba15436470727c390","modified":1611834666836},{"_id":"source/_posts/Tools4You教程6：方差分析/1.png","hash":"319f2f0468c533365b7507899d2d489281f8289a","modified":1612185859418},{"_id":"source/_posts/Tools4You教程6：方差分析/10.png","hash":"b89b63c91b2811a520eea645ed606e9ee05e2906","modified":1612187923180},{"_id":"source/_posts/Tools4You教程6：方差分析/11.png","hash":"aaaf5ad8ec205d99f012d0fcbfe16421b210db64","modified":1612187975727},{"_id":"source/_posts/Tools4You教程6：方差分析/12.png","hash":"1e9e25cb115f90fa188a26369d571592d755d0ff","modified":1612315795563},{"_id":"source/_posts/Tools4You教程6：方差分析/2.png","hash":"547de853d28da0df68e2a6aba4e05d1286fb3fad","modified":1612186052832},{"_id":"source/_posts/Tools4You教程6：方差分析/3.png","hash":"4f00a62a12869ed0160d0c234232640d20a8f0e7","modified":1612186115025},{"_id":"source/_posts/Tools4You教程6：方差分析/5.png","hash":"5d702233ff22b43ac1a661743d33c870f5deb5c9","modified":1612186761126},{"_id":"source/_posts/Tools4You教程6：方差分析/6.png","hash":"2e44c23343c9ef814d17931026a71d7f90e838ce","modified":1612187029599},{"_id":"source/_posts/Tools4You教程6：方差分析/7.png","hash":"405d7568f2914bdf055faa538ce2fd138c9b155b","modified":1612187297414},{"_id":"source/_posts/Tools4You教程6：方差分析/9.png","hash":"e7efe88ae4a0eabe50b57739b26ba8d1d6c263e7","modified":1612187707310},{"_id":"source/_posts/Tools4You教程6：方差分析/4.png","hash":"7942c2da71e3dd51ce02f18de6edbba0a5d49865","modified":1612186563997},{"_id":"source/_posts/Tools4You教程6：方差分析/8.png","hash":"d6e01b240ee3389082fc95c1ae1650e40060a996","modified":1612187597676},{"_id":"source/_posts/不同数量样品绘制柱状图/1.png","hash":"a82af3ae8c7fc31ca6c5201cc800261b25b43e13","modified":1608360096000},{"_id":"source/_posts/不同数量样品绘制柱状图/2.png","hash":"536b610cfedde827a2b322c0d7c23d49168f0022","modified":1608363090000},{"_id":"source/_posts/部署Rshiny到服务器的常见问题/1.png","hash":"7833f0e04590a3bfcd695dcb7f59d8323c7bc0d6","modified":1610160988000},{"_id":"source/_posts/部署Rshiny到服务器的常见问题/2.png","hash":"6b2ff565708f48af605bf8c1ceee1cfc34586d64","modified":1612093359319},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/4.jpg","hash":"f7f60bdce89b01f9d56f44934d3b56503af27256","modified":1614512551813},{"_id":"source/_posts/代谢组S-plot/1.png","hash":"f7c864f42d6af955fa79335629290824eb0ae507","modified":1608110518000},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/3.jpg","hash":"f2f58c0b538b976aeb2ab00f09779b1133505626","modified":1614511785680},{"_id":"source/_posts/带连接线的堆积柱状图/1.png","hash":"ae05fd35866999c7f447afb5d7ae0687796b2396","modified":1610886044000},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/1.jpg","hash":"c1ccbb037f617707c1f98f8e29ac59d02b58091f","modified":1614427596812},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/2.jpg","hash":"b55c1e9769198b2eddcf91bfbe5aecdc66b212e3","modified":1614430357158},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/5.png","hash":"b544a3ba6ca8ab636fbb68baffad1bc6c440d2e8","modified":1611126852000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/9.png","hash":"3f55a6ef64dfc3f24fef2439542aabd0eb944866","modified":1611130838000},{"_id":"source/_posts/酚酸是不是水稻中的化感物质/1.png","hash":"a90ef71d864cc45ee3ab352e61a690b46a355fe0","modified":1615104834875},{"_id":"source/_posts/酚酸是不是水稻中的化感物质/2.png","hash":"b9996809db21c826ea214bb009f63665cd9171ba","modified":1615108691762},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/5.jpg","hash":"0b82e632861b9fdcae5ba10db67f30aa9d55973a","modified":1614513438401},{"_id":"source/_posts/分类-回归树-CART-在R语言中的实现/1.png","hash":"185b25106f31a7ff749e80d165762f5669c8ebc2","modified":1608622704000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/1.png","hash":"0b47437ed38f16d60e4120e0adfa8960a443175d","modified":1611034988000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/11.png","hash":"af39b5790252a0009486808cfd4548a3635cfb5b","modified":1611144886000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/10.png","hash":"b828c760e30f6b1be4536da632138375ed4a840a","modified":1611131176000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/4.png","hash":"6373c6e8d04f9ad347b3b374e55768cc8a2d26b8","modified":1611118380000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/7.png","hash":"2a265a9b286a1a74bbe79b11065933069d023235","modified":1611128978000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/6.png","hash":"dbc9c46c20f02bb2202c3664f90bbf4bc5261d4a","modified":1611128628000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/8.png","hash":"fd54ad9b38c77e52294d605ea2fdeca87b106fcb","modified":1611129254000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/2.png","hash":"6bbe65e506c2d21120877effa255f0561d9b4ab9","modified":1611055466000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/3.png","hash":"34cdbf9b813ff7d7db2db4a1a27b5fddac0d0799","modified":1611117584000},{"_id":"source/_posts/开发一个R包/1.png","hash":"37ec8c86389aa859dd4d4b06e56250863acaad3a","modified":1578645794000},{"_id":"source/_posts/开发一个R包/2.png","hash":"b717c6d31fec8fce6ca51d83d6a393dcc24f49ec","modified":1578648086000},{"_id":"source/_posts/开发一个R包/4.png","hash":"ef06dc1fe8f0c1f06e7d549c587291c699a22fb4","modified":1578648350000},{"_id":"source/_posts/开发一个R包/5.png","hash":"f9677f0648f19645a50f43c277389f4212ba72c1","modified":1578648664000},{"_id":"source/_posts/开发一个R包/8.png","hash":"ce7780b870ff03d70ca9c41da2c9aeb8054d29de","modified":1578649222000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/12.png","hash":"6d29023f7be3c44ce99def5a4fd0ad78e11d42c9","modified":1611146572000},{"_id":"source/_posts/开发一个R包/6.png","hash":"df943edbb0068c5246cdbde8f67034fff5b361ae","modified":1578648848000},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/13.png","hash":"b64768e41e64f559863b3155868301ddc1fb9916","modified":1611149138000},{"_id":"source/_posts/开发一个R包/3.png","hash":"a7f767661cab070de4c8ad5360d4823a9fbfb074","modified":1578648252000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/01.png","hash":"5b456d6d3ec6e44f8cdde87c357ff77730fa27f0","modified":1609485368000},{"_id":"source/_posts/利用ImageJ批量计算叶片面积/2.png","hash":"44d34a45cb9e792d495a61395628b575861e6f98","modified":1612243559583},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/0.png","hash":"e3904da54c9989e4e1475a9c22e940215036b95c","modified":1609481542000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/02.jpg","hash":"b801b6734b8bb8600c99783e459a588d21053e77","modified":1609485668000},{"_id":"source/_posts/开发一个R包/7.png","hash":"9456ae3c79618ce7996106f59363d10d47b0dc58","modified":1578649088000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/1.png","hash":"8d61c50bdf4d1184b2c873006c111e6604ee9566","modified":1609481556000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/3.png","hash":"b886b82b12ee81cd733e4008b0943ad8d49cddb1","modified":1609481576000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/4.png","hash":"f7d3f935f5affe5584873a12e8f88d107e0730a0","modified":1609481584000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/6.png","hash":"0f3c01245c66d44803af80ef22fb795f8e0442fc","modified":1609481610000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/8.png","hash":"960b9ad465a281de86065c9f4c5b8b3904969ce8","modified":1609481642000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/2.png","hash":"955e684556bb85a5e97aa002b05a27b332678757","modified":1609481568000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/5.png","hash":"5993b9fe4864e4be17f1e2f6440f8e1c67d748ab","modified":1609481602000},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/7.png","hash":"3280d0772ee5746856c436184c32f920513d2ae0","modified":1609481620000},{"_id":"source/_posts/群体遗传学与重测序分析/01.png","hash":"9fdd6567b9c3987e613bef2a62dd85b29242aaf9","modified":1578446228000},{"_id":"source/_posts/群体遗传学与重测序分析/10.png","hash":"8b6bf6d65205f32e458cc6056bc3e3bb0cf01bab","modified":1578445352000},{"_id":"source/_posts/群体遗传学与重测序分析/12.png","hash":"61f27936c96557d879dc7170a89da9ffcfe6905d","modified":1578445378000},{"_id":"source/_posts/群体遗传学与重测序分析/21.png","hash":"1224de88ea22aa676b6690d61b5e48940384d012","modified":1578445450000},{"_id":"source/_posts/群体遗传学与重测序分析/25.png","hash":"f2e56f077661ad4f13fb33b17b060359bcd49b68","modified":1578445490000},{"_id":"source/_posts/群体遗传学与重测序分析/27.png","hash":"82a8f2629df9760c4bb39b9ca4cd6c9d9addf9f6","modified":1578445504000},{"_id":"source/_posts/群体遗传学与重测序分析/28.png","hash":"0a3a36324b90ba3ce6552429d0c6c5ffcb4fbf56","modified":1578445510000},{"_id":"source/_posts/群体遗传学与重测序分析/30.png","hash":"af6045f05043eb0a0614919af76a0992d5271523","modified":1578445526000},{"_id":"source/_posts/群体遗传学与重测序分析/37.png","hash":"7c8762678f9193b75196c14e7c20b6ce2b68f7fd","modified":1578445572000},{"_id":"source/_posts/群体遗传学与重测序分析/5.png","hash":"6a414b14c04c1400babaa12f7fdf428783bc3bfb","modified":1578445306000},{"_id":"source/_posts/群体遗传学与重测序分析/7.png","hash":"1acc7bad0dbbd2141fb89e861b359da58b83eb97","modified":1578445326000},{"_id":"source/_posts/群体遗传学与重测序分析/9.png","hash":"64fabd5e3b4d0c6465045197d0d1040f1aa81b24","modified":1578445344000},{"_id":"source/_posts/群体遗传学与重测序分析/1.jpg","hash":"5f37cbc7484dc0f6582dcb302a1b3a1497fb35ce","modified":1578445260000},{"_id":"source/_posts/群体遗传学与重测序分析/17.png","hash":"83905a08e8de8543041323773fabb1ee44aad5b3","modified":1578445420000},{"_id":"source/_posts/群体遗传学与重测序分析/18.png","hash":"256d2a715f83c6ff215ce260a9f53632bcff3791","modified":1578445428000},{"_id":"source/_posts/群体遗传学与重测序分析/19.png","hash":"747c06b7f19abd36e7cda85581201299074361ae","modified":1578445436000},{"_id":"source/_posts/群体遗传学与重测序分析/23.png","hash":"ced1e98bb742d29421362054e4e5a4b165de425b","modified":1578445476000},{"_id":"source/_posts/群体遗传学与重测序分析/29.png","hash":"65f5c75699c5e86da12999052b941fb21ebf5e33","modified":1578445520000},{"_id":"source/_posts/群体遗传学与重测序分析/34.png","hash":"a8622cd4ba834bc318622f59cfac5dc1ccae858d","modified":1578445554000},{"_id":"source/_posts/群体遗传学与重测序分析/35.png","hash":"4c88072f21bb9e3f9ca46f100d8e9148d7f1a603","modified":1578445560000},{"_id":"source/_posts/群体遗传学与重测序分析/8.png","hash":"eca649d3af953f9131fd9650be68cc016c35e4a5","modified":1578445336000},{"_id":"source/_posts/群体遗传学与重测序分析/24.png","hash":"c316490e91b5d38a1ea02bafca73aadc16eeefc9","modified":1578445482000},{"_id":"source/_posts/群体遗传学与重测序分析/33.png","hash":"50a68d3b48b6817c03d94a3f1370a5488449e844","modified":1578445548000},{"_id":"source/_posts/群体遗传学与重测序分析/36.png","hash":"491b3879fefa04d8e00ff7d0bd29d320050b4544","modified":1578446182000},{"_id":"source/_posts/群体遗传学与重测序分析/38.png","hash":"c38c8b6a1d200c592bc0fd938146d213c0b4f4ec","modified":1578445578000},{"_id":"source/_posts/群体遗传学与重测序分析/32.png","hash":"636a4bd7b9aae0f2142d85c21ad2361c4ee22aa4","modified":1578445540000},{"_id":"source/_posts/群体遗传学与重测序分析/6.png","hash":"c8d1281f45c5745174334cf8db2606a839afa47d","modified":1578445314000},{"_id":"source/_posts/群体遗传学与重测序分析/16.png","hash":"9c616bd7bdbc34dfef6991a0e9c587ddfa74c38d","modified":1578445412000},{"_id":"source/_posts/群体遗传学与重测序分析/2.png","hash":"b42c14ae2240d1980750e6b7ebb764cf926c997d","modified":1578445270000},{"_id":"source/_posts/群体遗传学与重测序分析/22.png","hash":"387b5b8bfe7536de5af14fcf8f37719653342fdb","modified":1578445470000},{"_id":"source/_posts/群体遗传学与重测序分析/26.png","hash":"0c77bac869bc842f062bd4cdd4f445a0ebdb42a7","modified":1578445496000},{"_id":"source/_posts/群体遗传学与重测序分析/3.png","hash":"a84d7c7307e91c0a32fb3abf1e4da94d5a0e9389","modified":1578446830000},{"_id":"source/_posts/利用ImageJ批量计算叶片面积/1.png","hash":"19a7161a7860cac894409a758d8ab4d0345b7d3e","modified":1612243280856},{"_id":"source/_posts/群体遗传学与重测序分析/4.png","hash":"dd4e127484d102f0366d4919eec915a30f9aa815","modified":1578445296000},{"_id":"source/_posts/群体遗传学与重测序分析/13.png","hash":"c12f7d251083fedb0ebc76fdf8e4c283d819b508","modified":1578445388000},{"_id":"source/_posts/群体遗传学与重测序分析/15.png","hash":"9115c258c5b5d111be81247e4b62961c74318ad7","modified":1578445406000},{"_id":"source/_posts/群体遗传学与重测序分析/31.png","hash":"0560f6b99b429ec8f8ceae7a5ace7d4c6f6c54cc","modified":1578445534000},{"_id":"source/_posts/群体遗传学与重测序分析/14.png","hash":"01b69b6949576c5524913ea3a679860afdd75ad1","modified":1578445398000},{"_id":"source/_posts/群体遗传学与重测序分析/11.png","hash":"297f0a738f97ae5b5eea9627d4f25875db6fe6a8","modified":1578445366000},{"_id":"source/_posts/群体遗传学与重测序分析/20.png","hash":"6437ff9ae0187ec50e46c283b72db5bc9bfadc89","modified":1578445442000},{"_id":"source/_posts/使用ImageJ计算叶片面积/10.png","hash":"d9c6d6e7458b235caf21cbc0284f390b4bcdae83","modified":1612005058440},{"_id":"source/_posts/使用ImageJ计算叶片面积/5.png","hash":"3c5f98e23aba8357c2edca2cc5ac1a6df5ff0206","modified":1612004490727},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/3.png","hash":"470c1c9cf8ba285cde5b3c61a418a339f7939eee","modified":1612330376025},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/4.png","hash":"b16a167f1103d0df2f00226034b99d39bf06ac2e","modified":1612330398420},{"_id":"source/_posts/使用ImageJ计算叶片面积/8.png","hash":"34cccbdaa8a1c201fba4a94cecaf756de3be8268","modified":1612004797566},{"_id":"source/_posts/使用ImageJ计算叶片面积/9.png","hash":"18d8b38b884291c00fc97f8286cbc4f8930597c4","modified":1612004897529},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/1.png","hash":"39c7e5268e2273c52a9298d145e6579e6e14c589","modified":1612330241901},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/2.png","hash":"e862e6a8844508827429dcf9f06da9b3c52cf119","modified":1612330334345},{"_id":"source/_posts/水稻Pan-genome/10.png","hash":"b54f25955b45cfaa19eff24c2b8245b903977f66","modified":1622552681716},{"_id":"source/_posts/水稻Pan-genome/3.png","hash":"b2e81d936006d33b5f4835c8eb097cd9768606c3","modified":1622551051168},{"_id":"source/_posts/水稻Pan-genome/6.png","hash":"9c227966240884247852078d32d80ae959a13e1f","modified":1622551909378},{"_id":"source/_posts/使用ImageJ计算叶片面积/7.png","hash":"9aacb7855d66cb83955f1db6b0fe1f877ed8e9bd","modified":1612004625058},{"_id":"source/_posts/水稻Pan-genome/7.png","hash":"44b1751c0869acc36d7774112f56e1046027d270","modified":1622551966150},{"_id":"source/_posts/使用ImageJ计算叶片面积/1.png","hash":"ba604be8c17978af164464cf9b1e45c0daad5258","modified":1612001434134},{"_id":"source/_posts/水稻Pan-genome/5.png","hash":"816b1c60e9f50b5fcf4dfa677ad40771bd4a7e32","modified":1622551575037},{"_id":"source/_posts/水稻Pan-genome/4.png","hash":"b749659d22f1b2ebb286dd4b91f26e8528ce5359","modified":1622551369249},{"_id":"source/_posts/水稻Pan-genome/9.png","hash":"cf26932e0007c3ab8d8ffda16c5198d8d2a37ccf","modified":1622552358668},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/1.png","hash":"d67f6f997d7f487fe448bb6ef03d783700114160","modified":1622013952669},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/8.png","hash":"f0f9c0ae82af58da0f8af43c9a9411c26ac8cf4e","modified":1622018245609},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/5.png","hash":"98ebb5ebb5e051ef57028648a6db80e82ba7260d","modified":1622015731790},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/7.png","hash":"c1f8c8654d5653aa769f11a76796a7dbb98bedb7","modified":1622017690035},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/9.png","hash":"59e58f6705dccc6e35b154ba4a398318cbe40d47","modified":1622018831989},{"_id":"source/_posts/听他十年，成长十年/2.jpg","hash":"24a2939de0017bc10aa58b136757d7c63d93fb57","modified":1578461186000},{"_id":"source/_posts/听他十年，成长十年/5","hash":"fa27aaaba572215cb4e34c844814ec2897be39ca","modified":1578461186000},{"_id":"source/_posts/听他十年，成长十年/8.jpeg","hash":"7f5296f8283adfedfd60bfc080bb30a8dfbf2a97","modified":1578461186000},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/10.png","hash":"0f8aa32576cd03de78ab87cead6299e32af83ec0","modified":1622018948648},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/2.png","hash":"cca70914792b6f27e35e726d838d1534c51b2f69","modified":1622014668992},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/3.png","hash":"b36ed4e70e115ad3f4c7f54e8a3038c4e2f40ebc","modified":1622015060702},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/6.png","hash":"78976b1f47a5bd00cd82422f4fd66a36e2f9eddc","modified":1622016659887},{"_id":"source/_posts/听他十年，成长十年/3.jpeg","hash":"dc2a82419f03940ed1d82812854c9b7aa44a9187","modified":1578461186000},{"_id":"source/_posts/听他十年，成长十年/6.jpg","hash":"711fb757e4ff2b2ea29f7f21bd5a230086f0540c","modified":1578461186000},{"_id":"source/_posts/听他十年，成长十年/1.jpeg","hash":"3ecc3553e918f7192082a3222cf8c5839dc4dc3d","modified":1578461186000},{"_id":"source/_posts/水稻Pan-genome/1.png","hash":"67283e33ce4bcf64e2e666726a6f2a0484f4f833","modified":1622549315793},{"_id":"source/_posts/水稻Pan-genome/8.png","hash":"19a61189f2ff3fdc586c4eda4f943265ed9afd8d","modified":1622552294732},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/4.png","hash":"41ab956c207c74dc566ec8294735f6c9f58b8673","modified":1578461186000},{"_id":"source/_posts/使用ImageJ计算叶片面积/6.png","hash":"80e9418b548f7334dc13b54a4c8d33bdd1b914b7","modified":1612004547283},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/1.png","hash":"660ed12e61405525442e084a2d66e9c2ce88e95d","modified":1578461186000},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/3.png","hash":"707417c6bcb7bb8eb453d8ed113eac9f961da567","modified":1578461186000},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/4.png","hash":"9ee69019fa853d12db1db69e7d5c320662e22980","modified":1622015569193},{"_id":"source/_posts/听他十年，成长十年/4.png","hash":"19d52d83fb3c7ed55d318b0f8e50c35718089bfa","modified":1578461186000},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/2.png","hash":"c89702293f056534d691593fb153ace1bd2b6ac7","modified":1578461186000},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/5.png","hash":"01ea790645ea47c2ecb18b1ce3f45cf31e29e134","modified":1578461186000},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/0.png","hash":"f0996da4bea7151296c0b93130b96202f599c94b","modified":1611309400000},{"_id":"source/_posts/听他十年，成长十年/7.png","hash":"ec5aff8830877f97d9999b3782b7fb983f4124bf","modified":1578461186000},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/2.jpg","hash":"5232f71e231278f1abaaf184ebc39ef92a7a87f7","modified":1611284660000},{"_id":"source/_posts/水稻Pan-genome/2.png","hash":"26bd48ff868dbe47badbf78d24c38fc250e80b4b","modified":1622550517348},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/1.png","hash":"c2224783f8bd807bfad5616cde8e5983c92f19e5","modified":1603719936000},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/7.png","hash":"850ef180d8af2bc9342e718c7d09df5e4bd1e522","modified":1603764296000},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/9.png","hash":"505c04b57a5e34bdf51d5dce581de7fcc3d6c921","modified":1603765374000},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/5.png","hash":"4bd079d4d30f2889f0542578d4c62dc9e3d3f8f8","modified":1603762974000},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/6.png","hash":"c8ed32ca7ff82482782281e83d831e8e7435c360","modified":1603763924000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/2.png","hash":"2f17745423aa36dbd827543c3fe40f825bb820a4","modified":1613131422000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/5.png","hash":"49a2dd3534bebe5a57c595b463122a0b8faeeb17","modified":1613178892000},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/1.jpg","hash":"5270543245c6dc4da41f0094c2e65d77863cbfc6","modified":1611298780000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/6.png","hash":"dfd7ef0d11fb9be49623e50b749bee92381f713a","modified":1613180188000},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/8.png","hash":"ce4b519c81e42c2336d4d1b68085eefab009b421","modified":1603764162000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/8.png","hash":"23ad5261aa9a718ba1092967d446f6e155ed8bb0","modified":1613181581000},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/11.png","hash":"a844a5bb5e4993136c1cbb3d58a657d450e8f050","modified":1622019061189},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/3.png","hash":"be9be1bf8b9d0911629079578cbe325df5325400","modified":1603762116000},{"_id":"source/_posts/使用ImageJ计算叶片面积/3.png","hash":"7dcbe6994fe12058641026e0f7817a1bb2bc6ee6","modified":1612004331505},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/2.png","hash":"e42e88b7a217e6b8fa70ee0e15d26f3161fa4ce3","modified":1603760782000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/10.png","hash":"e7da4d85584c9cc3ea615db00190ea620adcca02","modified":1613185016000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/9.png","hash":"2079323319919ae8e6b43acd30cd8b9f9624d369","modified":1613182336000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/3.png","hash":"cc25e09d8720eeea41ccda25e81cea7183b02ace","modified":1613131464000},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/6.jpg","hash":"61f29eb19bc24d8a5844f78f7df50a87d2dded6c","modified":1611284532000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/7.png","hash":"62ea1a00cdcf2b16da5708cf21696009ec35208a","modified":1613180457000},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/3.jpg","hash":"d3b51887ca253d0f99c1d77c163ec661bdfdd021","modified":1611284518000},{"_id":"source/_posts/clusterProfiler做富集分析/1.png","hash":"756283ba77de878cb626cb494c9d8755a66bb5a7","modified":1617174271970},{"_id":"source/_posts/clusterProfiler做富集分析/2.png","hash":"8a331633035e000b482c56bb180721e4ded281f2","modified":1617174419297},{"_id":"source/_posts/clusterProfiler做富集分析/3.png","hash":"9dd5252d09ed18fd4403836ff2c52c820e488b2a","modified":1617174863103},{"_id":"source/_posts/GENIE3构建基因调控网络/1.png","hash":"308070e499339256821d0a40d5c8fda5286d3dc0","modified":1625538411920},{"_id":"source/_posts/使用ImageJ计算叶片面积/4.png","hash":"83bb0dcc775b346a987801b46bd3d99b415daf91","modified":1612004365684},{"_id":"source/_posts/ComplexHeatmap学习笔记/1.jpg","hash":"5a6457daa93fbc9ba6ce48a126d442cf2d3c4c75","modified":1615015890457},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/5.jpg","hash":"6a6f55a1556ecc481ca2a0bce2941fb04917bf31","modified":1611284528000},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/4.jpg","hash":"8d25b076047857960ce234a0511412dbe3e4084f","modified":1611284524000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/4.png","hash":"d2302c6c454013c127535da7a6b93a1b52a048ae","modified":1613131480000},{"_id":"source/_posts/GENIE3构建基因调控网络/2.png","hash":"4d37a1e5a7842beb038f14db2bf5265714537482","modified":1625147871717},{"_id":"source/_posts/clusterProfiler做富集分析/4.png","hash":"a7b42c9212bd519012435a87edfb05321a24f393","modified":1617175061712},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/新建 Microsoft PowerPoint 演示文稿.pptx","hash":"52728225ad9a0c09843b4b641fbe588bf04f0f14","modified":1611298782000},{"_id":"source/_posts/新希望—野生（近缘）种质资源/1.png","hash":"36758edcbcd6b56db7a81d9c5cb72dc4b61155d2","modified":1613128592000},{"_id":"source/_posts/使用ImageJ计算叶片面积/2.png","hash":"981a4be2d01e136f205948904036f5466651cb6c","modified":1611996473621},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/4.png","hash":"3df8797c73d4247e8ebbd091786c9e9482e9caa0","modified":1603762538000},{"_id":"source/_posts/Coursera助学金申请模板.md","hash":"d3a04326ab15db53d2eca95e8793f82be1ae4082","modified":1614300877684},{"_id":"source/_posts/GENIE3构建基因调控网络.md","hash":"e805b57929e04227b1e42298a3cc5f1df1fe0deb","modified":1627204672107},{"_id":"source/_posts/Linux-Tips.md","hash":"bf667530d2c9175ab44f4216753c747a52a6abb8","modified":1618364533361},{"_id":"source/_posts/MiKTeX安装报错解决办法.md","hash":"3d9f3e417055f7c7d7bc83ec13632fb4b01bfc97","modified":1614953134325},{"_id":"source/_posts/NMDS分析.md","hash":"9a0a4836337d3082c0770720390928081f559365","modified":1612251524088},{"_id":"source/_posts/Nature：PTI影响ETI.md","hash":"d7d548c096225e858c7e76f5b648566fa3ed0265","modified":1625546028479},{"_id":"source/_posts/OPLS-DA在R语言中的实现.md","hash":"cb0283c0f6e7aa80c681bb35a1b72e1aeeb1bbba","modified":1612251524088},{"_id":"source/_posts/PCA在R语言中的实现.md","hash":"c8f6959d901b7befc2ad9d9e176ce0c356b1e171","modified":1612251524088},{"_id":"source/_posts/PCA和PERMANOVA分析.md","hash":"eec158e610c1802d9f4d04cab652774d38e1e3d1","modified":1612251524088},{"_id":"source/_posts/PTI中的信号网络.md","hash":"4e5100b29d4838caf9f017c7c758dec87820da92","modified":1612251524088},{"_id":"source/_posts/Python提取fasta文件成单行文件.md","hash":"316b7d045dbd2e0e90d5ad472725e44fadb6610d","modified":1617762113077},{"_id":"source/_posts/Python-爬取知乎问题-即将步入研究生，有什么忠告？-所有回答后将数据写入-Excel-并生成-html-文件.md","hash":"1aa1d7287042ce1bda643a35f9b653e888623878","modified":1612251524088},{"_id":"source/_posts/Python爬取水稻基因的Entrez-ID.md","hash":"8fd95b81f2bce821f436f475998709b91c57662c","modified":1616922179961},{"_id":"source/_posts/Python英文文献爬虫.md","hash":"de2105f90245e5f8681a127d872b641bc2b30f03","modified":1612251524088},{"_id":"source/_posts/R包stat4xiang.md","hash":"64dcb61954fd65174fd6bf91608eff5f22df3b83","modified":1612251524098},{"_id":"source/_posts/R语言常用Tips.md","hash":"c58aa292b8618f04faef7adfe77beeb0a8424154","modified":1617332966521},{"_id":"source/_posts/R语言批量合并Excel文件.md","hash":"b6a9abf9d8158c8d74db1ebc3eea6c83538c3a72","modified":1612251524098},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You.md","hash":"255e2834585daf545918a70792783fdb22577341","modified":1612329673961},{"_id":"source/_posts/Tools4You教程2-相关性分析.md","hash":"9ffb0d3cb08f9a46f6b1a1a5cef356e18e02f70e","modified":1612329739660},{"_id":"source/_posts/Tools4You教程3：线性回归分析.md","hash":"4a91b31c0c45c3b27d80380952784e7fa79723e2","modified":1612329753885},{"_id":"source/_posts/Tools4You教程4：PCA.md","hash":"d6f551d7aed06009964b373c3b32301295f4d4ec","modified":1615035299837},{"_id":"source/_posts/Tools4You教程5：PCoA.md","hash":"43677b42fe26638733538a4a1446c40b17ce63a4","modified":1612329730945},{"_id":"source/_posts/Tools4You教程6：方差分析.md","hash":"66ee32067a6b0943ee92ed5bdc17535c8bd67102","modified":1612329808291},{"_id":"source/_posts/Ubuntu更新R.md","hash":"6064c4c938f7830094cfe927392dfc8b74be3f15","modified":1612251524102},{"_id":"source/_posts/UniProt数据库爬虫获取相关信息.md","hash":"5bd5e85508e6d5db1d5fdb8c9004a91e971ed43d","modified":1618808175688},{"_id":"source/_posts/WGS学习笔记.md","hash":"f82e27024839169b69cfa083d2f4e90d323e4308","modified":1615036395639},{"_id":"source/_posts/clusterProfiler做富集分析.md","hash":"e5dd96b8c2f38260949f96e159915492e3acd02e","modified":1617182111990},{"_id":"source/_posts/data-table学习笔记.md","hash":"7a99f56700ab2b9f677f9c41ff99063586a046b6","modified":1612251524102},{"_id":"source/_posts/ggplot2分面填充色与字体大小.md","hash":"1065c7aef61840a602a83c268ccab5d7ec6f2fd4","modified":1612251524102},{"_id":"source/_posts/ggplot2坡度图.md","hash":"cb85132c8105a645161730fb1d810f927dadc9cb","modified":1612251524102},{"_id":"source/_posts/ggplot2柱状图相关.md","hash":"3c03e798600a5225bbc35408f0a3d4353c134df1","modified":1614583811048},{"_id":"source/_posts/ggplot2画箭头.md","hash":"8cf266fbf2310cac5e27b50ca98091293ec72bba","modified":1612251524102},{"_id":"source/_posts/ggprism学习笔记.md","hash":"7c21a38d32416790e23680820a177d6fb3cbbc49","modified":1613811696253},{"_id":"source/_posts/iTAK简明教程.md","hash":"c4dd607d5ef1a5f562cf941b7e296a2ca427e3c4","modified":1622518208485},{"_id":"source/_posts/iTOL修饰进化树.md","hash":"10e0577849c9eb2e56e6b5da41c1effc0611e7a3","modified":1612251524102},{"_id":"source/_posts/tidyHeatmap学习笔记.md","hash":"dbb5628eefe155e99f1d6ca6ee382e289e421aa4","modified":1612439623261},{"_id":"source/_posts/ComplexHeatmap学习笔记.md","hash":"5f17a98cc6ee8e09fa3ed7efe8df8410deb99149","modified":1615016741359},{"_id":"source/_posts/Win10子系统安装运行QIIME2.md","hash":"f2bc4ba3f4a24eae83dbada1a176c82f8c7476db","modified":1625297958106},{"_id":"source/_posts/不同数量样品绘制柱状图.md","hash":"ba30cc0fe77feb6a17261c92b5b65e669dd1ffb0","modified":1612251524102},{"_id":"source/_posts/代谢组S-plot.md","hash":"f8a2ba8ef1448f0ab2b40acee11c6ff4fb208f14","modified":1612251524102},{"_id":"source/_posts/使用ImageJ计算叶片面积.md","hash":"57800052f5884b71fef392795771552c0635fdea","modified":1612251524102},{"_id":"source/_posts/分子生物常用网站.md","hash":"3df366c30506a1f645289bbf38d92dec29d75917","modified":1618926331643},{"_id":"source/_posts/分类-回归树-CART-在R语言中的实现.md","hash":"633e35ff55b0ec2be39c983ddad45ebd50baf706","modified":1612251524102},{"_id":"source/_posts/分组柱状图加散点.md","hash":"3ebf7bb548cb254da62b05ec21f1a394716c0791","modified":1612251524102},{"_id":"source/_posts/利用ImageJ批量计算叶片面积.md","hash":"bd60bf052f5bc0d9a2ba1db3708d3abbf60c9c5f","modified":1612251509332},{"_id":"source/_posts/化感和化感物质在植物防御中的作用.md","hash":"9318c595addefe49509c9c1f9063a6b2101f3fd4","modified":1612251524107},{"_id":"source/_posts/合并基因组文件.md","hash":"8293763c0134db3f404977aa6ae30f48988bb01e","modified":1617772741039},{"_id":"source/_posts/听他十年，成长十年.md","hash":"e8f22f6fcb9fe3ab1ae6bd30a99c9b257c0b3603","modified":1612251524107},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应.md","hash":"fef9da684723043c17a1896c472f699a93648dcf","modified":1612251524107},{"_id":"source/_posts/基因or蛋白序列文件处理常用Python代码.md","hash":"c937892771a2dc5c0776fbfff881b1e57ced49fe","modified":1618972023346},{"_id":"source/_posts/安装hexo遇到的bug及解决方法.md","hash":"6c0ed6d4d872d69998fb294722662a341e74e5c1","modified":1612251524107},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫.md","hash":"58d5c12bdb3ead18d047a0cfa69a858a9b9e1e23","modified":1612251524107},{"_id":"source/_posts/带连接线的堆积柱状图.md","hash":"a9f9f2d2a6e800907dee5c62589114d793f675d6","modified":1612251524107},{"_id":"source/_posts/开发一个R包.md","hash":"bf35f88a3d53768db735de669eefb73eaac99dcf","modified":1630325669592},{"_id":"source/_posts/我的统计函数-stat-xiang.md","hash":"50626bcf40296587775097a89223bdeac3dba6b5","modified":1612251524107},{"_id":"source/_posts/批量OPLS-DA函数.md","hash":"491ec6d39ca6de45a02afa35fd1a418ba3355dfc","modified":1612251524107},{"_id":"source/_posts/文献检索、追踪、阅读等小总结.md","hash":"32051238b18f1f52515f54a94620dbc8996f831b","modified":1612251524107},{"_id":"source/_posts/新希望—野生（近缘）种质资源.md","hash":"e53c7d48003f05238003790589fb61c1fc907111","modified":1613869191565},{"_id":"source/_posts/植物科学常用数据库和生物信息学工具.md","hash":"57c18f0cdd97b39f7d0d6a79f83751f2d558fd64","modified":1612251524107},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析.md","hash":"b7ad7469cb6a158ad54c53e51369faa0138346a2","modified":1622020049544},{"_id":"source/_posts/水稻Pan-genome.md","hash":"7d20568cc2572abd46ef46a7dc7733e9f380ed94","modified":1622554447366},{"_id":"source/_posts/清理WinSXS文件夹.md","hash":"85079bed796e7cdd657f96146e43cba082dc3fc9","modified":1612251524107},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制.md","hash":"a0e01db2ae488c4157fb6a3380d06a0470d831f0","modified":1612507141184},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色.md","hash":"e610551d7894d6cbeecec85dda358d90b2b7900b","modified":1614514931686},{"_id":"source/_posts/群体遗传学与重测序分析.md","hash":"b5173f58f1d08482ef2298be10bf508be6517f16","modified":1612251524107},{"_id":"source/_posts/语言显示函数运行进度.md","hash":"58106e25768a52f57f7302dcca077ff160d331f6","modified":1609735068000},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库.md","hash":"b6b014dac065eac33d1ee81737cbbb2b60fa48f4","modified":1612251524107},{"_id":"source/_posts/部署Rshiny到服务器的常见问题.md","hash":"a2e2bee277f45f484aa9863afd5626cbcf06d5d8","modified":1612251524107},{"_id":"source/_posts/配色包paletteer使用.md","hash":"26f3f15247b570a2abb7190945dfdb7ef2d1dcf5","modified":1618277788004},{"_id":"source/_posts/酚酸是不是水稻中的化感物质.md","hash":"bc1630e7a7d570f512de22587eb303a116b8a0d4","modified":1615168488497},{"_id":"source/_posts/Nature：PTI影响ETI/19.png","hash":"9a32c17199e706e97cfe2e5720d3ddd42e738b8f","modified":1624108072918},{"_id":"source/_posts/Nature：PTI影响ETI/20.png","hash":"23e4a3af08f6377578030ae6c820f784105d2405","modified":1624108368132},{"_id":"source/_posts/Nature：PTI影响ETI/3.png","hash":"d42f7490433a0d51eab471a9e323c368d3d3c896","modified":1624005702293},{"_id":"source/_posts/iTOL修饰进化树/6.png","hash":"5ec66ea454c263afa391e6634c945c27cd6eb016","modified":1578574352000},{"_id":"source/_posts/Nature：PTI影响ETI/14.png","hash":"72bfef505e0cb9578ea10262c19f8d5e20e68cd8","modified":1624106400823},{"_id":"source/_posts/Nature：PTI影响ETI/15.png","hash":"f18e5868ffd08560a5ac5ef3029de5688180e307","modified":1624107076801},{"_id":"source/_posts/Nature：PTI影响ETI/21.png","hash":"a9cd0cde47fd6fdb7aa77cf560045e6352a20dbc","modified":1624108694194},{"_id":"source/_posts/Nature：PTI影响ETI/23.png","hash":"9b55996393f66d4b6537874789408787fa8f6765","modified":1624109337416},{"_id":"source/_posts/Nature：PTI影响ETI/6.png","hash":"501dba17d098742c0a84b07557c25e7526ceaffb","modified":1624021909542},{"_id":"source/_posts/Nature：PTI影响ETI/5.png","hash":"eae857757934cd52816252c7ed16dc3dad98e965","modified":1624018909842},{"_id":"source/_posts/Nature：PTI影响ETI/9.png","hash":"ed98d498655d8067f679e873a27f10f1dbcf1ad9","modified":1624023958967},{"_id":"source/_posts/Nature：PTI影响ETI/18.png","hash":"12e02b59266e4be7839f0bc6da6bad3880c80228","modified":1624107765088},{"_id":"source/_posts/Nature：PTI影响ETI/4.png","hash":"9600f85261a365780bef7a0b069fc3f9c04acfdf","modified":1624007281592},{"_id":"source/_posts/Nature：PTI影响ETI/16.png","hash":"73e3e679f59d74084a1f98fa54c7bb3ce383af1c","modified":1624107149739},{"_id":"source/_posts/Nature：PTI影响ETI/2.png","hash":"2dc75243fdb05828ff951f5a270fd5500425f526","modified":1624003534413},{"_id":"source/_posts/Nature：PTI影响ETI/22.png","hash":"36a61524a472a58e079c540ea047d28d92976690","modified":1624109123049},{"_id":"source/_posts/Nature：PTI影响ETI/8.png","hash":"f56cf4faa3dff2eaf064fa68c65afa25b726a4c3","modified":1624023236762},{"_id":"source/_posts/Nature：PTI影响ETI/17.png","hash":"c77b83222eefafacaf9b986352bc57abb640a436","modified":1624107372289},{"_id":"source/_posts/iTOL修饰进化树/7.png","hash":"3dd04f21597d3546afa776e18d1a48a24003691e","modified":1578575038000},{"_id":"source/_posts/Nature：PTI影响ETI/7.png","hash":"8921445598fc93100e592cd4b6197b3c6331f7d6","modified":1624022675314},{"_id":"source/_posts/Nature：PTI影响ETI/24.png","hash":"747ba8bfcae7ca8c71341e049815cb760910cf5e","modified":1624109886016},{"_id":"public/2021/07/06/GENIE3构建基因调控网络/index.html","hash":"ce565472be9969eec681124918f44e6b0c830a33","modified":1637650634370},{"_id":"public/2021/07/03/Win10子系统安装运行QIIME2/index.html","hash":"a36eb5c6b4d5de138d623cc0812cd4c28d0fdf16","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/index.html","hash":"7f2b831cd5c3da907778e2da1769ae429f92ae40","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/index.html","hash":"b19d27a2f23a0b4eeaddfe8fc398261306a94f2d","modified":1637650634370},{"_id":"public/2021/06/01/iTAK简明教程/index.html","hash":"6491d496d4e87e45b658f6bc62617230f575e9da","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/index.html","hash":"1fd90dbccd6aa1253788bf2bbe6c389844f2d91d","modified":1637650634370},{"_id":"public/2021/04/21/基因or蛋白序列文件处理常用Python代码/index.html","hash":"5fe4932ba3d4c6a87cfe7c3282423f9fd39fc4e8","modified":1637650634370},{"_id":"public/2021/04/18/UniProt数据库爬虫获取相关信息/index.html","hash":"acc5703be90a694e5b01ac6600087b6c9775aa5b","modified":1637650634370},{"_id":"public/2021/04/13/配色包paletteer使用/index.html","hash":"4a2bb1c1e6ec025f4879712e8d271735b97f8889","modified":1637650634370},{"_id":"public/2021/04/07/合并基因组文件/index.html","hash":"bd74abb68facc52b8e90ade009ab7f17b805b251","modified":1637650634370},{"_id":"public/2021/04/07/Python提取fasta文件成单行文件/index.html","hash":"6a3bf6f0876f46cfaba7d2bc66e5390197326021","modified":1637650634370},{"_id":"public/2021/04/05/分子生物常用网站/index.html","hash":"440c596cbb75f99836dcc02b2b08fa33816b0f79","modified":1637650634370},{"_id":"public/2021/04/05/Linux-Tips/index.html","hash":"7f56d694d2effd98d6eebca08f0b1a4f4d9ca65f","modified":1637650634370},{"_id":"public/2021/03/31/clusterProfiler做富集分析/index.html","hash":"8da5649605d1419252301eae0a87f092ae81ef36","modified":1637650634370},{"_id":"public/2021/03/28/Python爬取水稻基因的Entrez-ID/index.html","hash":"3d52c471dbae149303ff16f8341f48f61da114ea","modified":1637650634370},{"_id":"public/2021/03/07/酚酸是不是水稻中的化感物质/index.html","hash":"b5243e8f3f17d46d3b9acc434a3a549f0c848ed0","modified":1637650634370},{"_id":"public/2021/03/06/ComplexHeatmap学习笔记/index.html","hash":"8f92dcc117a2a069987ebbcc8589e5fabc75d633","modified":1637650634370},{"_id":"public/2021/03/05/MiKTeX安装报错解决办法/index.html","hash":"6399b1400c5e9ed3d5de09cc44db166f3030eb9e","modified":1637650634370},{"_id":"public/2021/03/01/ggplot2柱状图相关/index.html","hash":"3e7dcf423882373c434989aa28ab9955c100fcc5","modified":1637650634370},{"_id":"public/2021/03/01/WGS学习笔记/index.html","hash":"1da83357be935f94e9bb29579442feb05904404c","modified":1637650634370},{"_id":"public/2021/02/27/稻壳酮（momilactones）在水稻化感中的角色/index.html","hash":"64e5ad74dc4728b4df289d7699c438a667aa9be1","modified":1637650634370},{"_id":"public/2021/02/26/Coursera助学金申请模板/index.html","hash":"a0cbc6504b14a8724375ac681fac29e399c3f443","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/index.html","hash":"1d3e89710567009c6b6c4341614c9bfa261a69a3","modified":1637650634370},{"_id":"public/2021/02/08/ggprism学习笔记/index.html","hash":"b826ce11302c6c4357a0027933a29b5d0e215da6","modified":1637650634370},{"_id":"public/2021/02/04/tidyHeatmap学习笔记/index.html","hash":"5e9c943df6ce0d7c3da4323aba4535cd6c2ebcdd","modified":1637650634370},{"_id":"public/2021/02/03/生态和农业中植物亲缘识别的机制/index.html","hash":"f6933573c5546b93d1d300c155d605a7e5126eee","modified":1637650634370},{"_id":"public/2021/02/02/利用ImageJ批量计算叶片面积/index.html","hash":"06eba18189e739d3b2825b21a221805766ebb2a6","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/index.html","hash":"103d6ab07c7571b5e5d5b4015fe84a4b309b438b","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/index.html","hash":"35cf0bf9772b94303e80413c2933cf5db3c9d5df","modified":1637650634370},{"_id":"public/2021/01/29/Tools4You教程5：PCoA/index.html","hash":"d5b0d7a9f7a107e8dcd10f57462f89fd8daaf4b6","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/index.html","hash":"2ce3f3df1010997fc9a2321b8f43ee13f3788a6f","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/index.html","hash":"fa0f1040c7a33135c36593c16a65acf3bc26dcde","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/index.html","hash":"5a55bafa318b1e288de8d21f3fd100462daa3a65","modified":1637650634370},{"_id":"public/2021/01/19/Tools4You教程3：线性回归分析/index.html","hash":"faeaf0717d176b863813631506cb4c405e57ece4","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/index.html","hash":"81ab8bd21d199020bba0c19fee5deb5e2afa885c","modified":1637650634370},{"_id":"public/2021/01/18/R语言常用Tips/index.html","hash":"22d9531c2304c1247efb405f8b6dc67655c6f996","modified":1637650634370},{"_id":"public/2021/01/17/带连接线的堆积柱状图/index.html","hash":"50726d8d96006fb9ac9a56a6fc61b003aded9e0d","modified":1637650634370},{"_id":"public/2021/01/15/Tools4You教程1-0——关于Tools4You/index.html","hash":"2c18edd844a0269ae59b01d47f0ae23218f56665","modified":1637650634370},{"_id":"public/2021/01/09/部署Rshiny到服务器的常见问题/index.html","hash":"09949bda91ce7b97874a0ef1d06a77f6884da2e5","modified":1637650634370},{"_id":"public/2021/01/09/Ubuntu更新R/index.html","hash":"6f5cd082c8dfce1306b4530691aef0a8df2eb664","modified":1637650634370},{"_id":"public/2021/01/04/NMDS分析/index.html","hash":"0808ebf44b5f77db1bf94c30e6959b4696b8d5d5","modified":1637650634370},{"_id":"public/2021/01/04/R包stat4xiang/index.html","hash":"63adb2726f2409d388d8ff4bd64426f886b1619b","modified":1637650634370},{"_id":"public/2021/01/04/我的统计函数-stat-xiang/index.html","hash":"f230644d5c24296d5792c31937176a8ce21a8121","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/index.html","hash":"2512da6652a30bc378066dcac33a3d0bd22cec7d","modified":1637650634370},{"_id":"public/2020/12/31/批量OPLS-DA函数/index.html","hash":"da292f78983aaca7ed13ad8b2b4a84817d6d7945","modified":1637650634370},{"_id":"public/2020/12/30/ggplot2坡度图/index.html","hash":"96a65a5dbf7573bb7505f4529ab9ffe94f7ed3a0","modified":1637650634370},{"_id":"public/2020/12/27/PTI中的信号网络/index.html","hash":"c600b876f0e0845493f70db3449e0844a2afb88e","modified":1637650634370},{"_id":"public/2020/12/25/清理WinSXS文件夹/index.html","hash":"e4953c8c2123e7980bf0b6b4aa0dcf2831df87ca","modified":1637650634370},{"_id":"public/2020/12/23/data-table学习笔记/index.html","hash":"05505ec9ad68989e66e8d0df4a6bdebce2a2e3d6","modified":1637650634370},{"_id":"public/2020/12/22/分类-回归树-CART-在R语言中的实现/index.html","hash":"1e27a1ff560c105a269e99b6b43b820dfe3af931","modified":1637650634370},{"_id":"public/2020/12/21/ggplot2分面填充色与字体大小/index.html","hash":"e2072aafe34e963db8b8890bf92354e1d49ef361","modified":1637650634370},{"_id":"public/2020/12/21/分组柱状图加散点/index.html","hash":"f93a9b320ab4e112f5f85b2dd7a748362ee40985","modified":1637650634370},{"_id":"public/2020/12/19/不同数量样品绘制柱状图/index.html","hash":"1b3cb6b417baece977f62018a0d7b11bbbd7fc00","modified":1637650634370},{"_id":"public/2020/12/17/植物科学常用数据库和生物信息学工具/index.html","hash":"267aa551dbf7c0af90f2de6efec9e8162b447deb","modified":1637650634370},{"_id":"public/2020/12/17/安装hexo遇到的bug及解决方法/index.html","hash":"2838eb11a733e36f31ad5e3cd27a78b4f80ebfd3","modified":1637650634370},{"_id":"public/2020/12/16/代谢组S-plot/index.html","hash":"1f40d5200e70eac222be43f5ef6627f04bfd05a5","modified":1637650634370},{"_id":"public/2020/12/16/ggplot2画箭头/index.html","hash":"ad68e6eec885fb6eaa2ecbc57e6a261b084231d3","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/index.html","hash":"2f9904bb43e178ca3d1828bc17a0d5af360c5095","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/index.html","hash":"4223c045faf9943fe8cee96584d8d607b95f00ee","modified":1637650634370},{"_id":"public/2020/01/12/Python英文文献爬虫/index.html","hash":"4c728e704ad0519ed0a9727e1ddf8532804228ff","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/index.html","hash":"4797152e493b35c40f3f6ec5aff5a91c2ccb10f1","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/index.html","hash":"c5aa199fd753fca933c27c731f1469fdc41a1ba5","modified":1637650634370},{"_id":"public/2020/01/07/R语言批量合并Excel文件/index.html","hash":"38cc362e4335d6397242f19903b2add7f6a4df94","modified":1637650634370},{"_id":"public/2020/01/07/Python-爬取知乎问题-即将步入研究生，有什么忠告？-所有回答后将数据写入-Excel-并生成-html-文件/index.html","hash":"767d519809fc630a46c53c7daccf97f53979d553","modified":1637650634370},{"_id":"public/2020/01/07/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/index.html","hash":"3161dde4ecd0e2ac62bc76adedb8945ffc23008e","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/index.html","hash":"bcc59118c833242d264fd1f45fde4efdaefd6173","modified":1637650634370},{"_id":"public/2020/01/07/PCA在R语言中的实现/index.html","hash":"0a6cb1f6fac1febc3cf54cf154e346bb14cd1e2a","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/index.html","hash":"db5aa6fb6cd09d5c1c0b8fb96f37a8ee9ebc6642","modified":1637650634370},{"_id":"public/2020/01/07/PCA和PERMANOVA分析/index.html","hash":"4dbe9ac9ec5c7c8b65e49f5ab95be11e1faede68","modified":1637650634370},{"_id":"public/2020/01/07/语言显示函数运行进度/index.html","hash":"9010c161f6d2b27d70fbe414f9ab461fbf8e85bd","modified":1637650634370},{"_id":"public/archives/page/2/index.html","hash":"9b45aeecff44dc1c001d798527753fbd054f899e","modified":1637651555533},{"_id":"public/archives/page/3/index.html","hash":"2133f0ab553239c0f1be6cd53ae8869a0c67cf20","modified":1637651555533},{"_id":"public/archives/page/4/index.html","hash":"ab8b1c46ea526ef3d7742c30b512bc2e1de200a3","modified":1637651555533},{"_id":"public/archives/page/5/index.html","hash":"a8820d270d4af2c64f578df8ae632f67a9246d81","modified":1637651555533},{"_id":"public/archives/page/6/index.html","hash":"5dedc88e476653c8420ab3a9ce6970f0d712ea4c","modified":1637651555533},{"_id":"public/archives/page/7/index.html","hash":"5e46236effb9952c88fccd8301fbf0770cda6b20","modified":1637651555533},{"_id":"public/archives/page/8/index.html","hash":"19d69af274f5370e59ab5070cb2d8920aa96f945","modified":1637651555533},{"_id":"public/archives/2020/index.html","hash":"4e1913e5fc2b043b37815aa539c9995e93ef40f6","modified":1637651555533},{"_id":"public/archives/2020/page/2/index.html","hash":"0b8bb035e27c58c7bdbcb96ddbb5a0098cd5b652","modified":1637651555533},{"_id":"public/archives/2020/page/3/index.html","hash":"95627a8ed576e889c740e156b012fc5620b6033b","modified":1637651555533},{"_id":"public/archives/2020/01/index.html","hash":"e4356a514f9621758169c80cbb1417bb4de4cffb","modified":1637651555533},{"_id":"public/archives/2020/01/page/2/index.html","hash":"371c563546faa5487084fa29bc9568b323c9f7a2","modified":1637651555533},{"_id":"public/archives/2020/12/index.html","hash":"0aae3753ddb8a660e235069845d140a7c2784d36","modified":1637651555533},{"_id":"public/archives/2020/12/page/2/index.html","hash":"79c5a96d8d1d8293efb811a36065e0a03f80deb6","modified":1637651555533},{"_id":"public/archives/2021/page/2/index.html","hash":"8c147e6b3fee2b42f8b8a52facf139dfb4e475fc","modified":1637651555533},{"_id":"public/archives/2021/page/3/index.html","hash":"dfa5ec0d3ca9de9a9acc60a71d03847456e36da4","modified":1637651555533},{"_id":"public/archives/2021/page/4/index.html","hash":"6376ff88ecb44efc42eaac6b643050c4e1b0a076","modified":1637651555533},{"_id":"public/archives/2021/page/5/index.html","hash":"3ad0a09e365457d230ec416d79ed9d3e63071b68","modified":1637651555533},{"_id":"public/archives/2021/01/index.html","hash":"2ac8e4a8a2c2eb9e5bfcd86f65b2893b24749ee2","modified":1637651555533},{"_id":"public/archives/2021/01/page/2/index.html","hash":"b8b877af61be5707d4c5033e4ddd3d0e0d653438","modified":1637651555533},{"_id":"public/archives/2021/03/index.html","hash":"fa404d0069230dec73d66c2aab1e2a24933db12a","modified":1637651555533},{"_id":"public/archives/2021/04/index.html","hash":"f22dc78c7f9eeed0b84f409f1c4e83845a61152a","modified":1637651555533},{"_id":"public/archives/2021/05/index.html","hash":"984cd7b6c81141c4583baf9d33b937923ab3f4e0","modified":1637651555533},{"_id":"public/archives/2021/06/index.html","hash":"75c3e285fd0ae691c8c9ac4c704b85be170e3ae8","modified":1637651555533},{"_id":"public/archives/2021/07/index.html","hash":"d8457f0e1a8dd2aefb4e70bf1371c9115cfe9bf0","modified":1637651555533},{"_id":"public/categories/R语言/page/2/index.html","hash":"07b60d343f9bdf1bd1bff140d64c1d58022b4721","modified":1637651555533},{"_id":"public/categories/R语言/page/3/index.html","hash":"e8285de1a7feaae689acc58a85d7ae989db2ff8f","modified":1637651555533},{"_id":"public/categories/R语言/page/4/index.html","hash":"fb24ccd25d5058125511bed274d0336b46234406","modified":1637651555533},{"_id":"public/categories/技能/index.html","hash":"d106f896230e3a8f59b4d807f7c1671e223d2dda","modified":1637651555533},{"_id":"public/categories/生物信息学/index.html","hash":"cb3f702c35ea50f7544580a2f8edd94931c6efbc","modified":1637651555533},{"_id":"public/categories/Linux/index.html","hash":"194367d0749fc0457b368cc58f83c5797f4d42ab","modified":1637651555533},{"_id":"public/categories/Python/index.html","hash":"64160fbf3f4293634342e4b2d58fb4b8107dd401","modified":1637651555533},{"_id":"public/categories/文献/index.html","hash":"d5f594fef88ea3ce06ce4b647097d158c485e394","modified":1637651555533},{"_id":"public/categories/文献/page/2/index.html","hash":"c604978755e0ea2f05e006073341d5d401c219f9","modified":1637651555533},{"_id":"public/categories/Tools4You/index.html","hash":"3034f17948e9b6833794561a9c18b7d04810f0eb","modified":1637651555533},{"_id":"public/categories/数据库/index.html","hash":"b95079af59b79330e3d27245719fe065507d30b0","modified":1637651555533},{"_id":"public/categories/hexo/index.html","hash":"3ecf0bfdfbb65906c9b7c3f9966f6d33dc92a4c4","modified":1637651555533},{"_id":"public/categories/杂文/index.html","hash":"c379514805bc791a6a014893b737f965fed13b00","modified":1637651555533},{"_id":"public/tags/R语言/page/2/index.html","hash":"971af1b476e1e75ad6360a02ae3dd94848994f68","modified":1637651555533},{"_id":"public/tags/R语言/page/3/index.html","hash":"1a171766afec0ddc0a035fa781ab9414f78e232b","modified":1637651555533},{"_id":"public/tags/技能/index.html","hash":"b1735a4c8bebc8be3a7db1c150f8341728ca255e","modified":1637651555533},{"_id":"public/tags/Python/index.html","hash":"e85bed001e895c567f9929867473fe2a42f6edff","modified":1637651555533},{"_id":"public/tags/R-语言/index.html","hash":"2246cd29c49a0c9ba6f241adaa7f3697a4e9aea8","modified":1637651555533},{"_id":"public/tags/文献/index.html","hash":"060f78e3ebf8b312e829edcc46ad153780eeb050","modified":1637651555533},{"_id":"public/tags/文献/page/2/index.html","hash":"84887213710511c82d1c9a9c2a476cbdbf653572","modified":1637651555533},{"_id":"public/tags/Tools4You/index.html","hash":"74d06a6fa537f3ed6bcc6cf987bd19daec9885dd","modified":1637651555533},{"_id":"public/tags/数据库/index.html","hash":"3b88936f87db8a0733943b493506d3b3fda5df33","modified":1637651555533},{"_id":"public/tags/hexo/index.html","hash":"9772e72d901d6bc93339ef46dd8daecd1a6d5833","modified":1637651555533},{"_id":"public/tags/杂文/index.html","hash":"6f782c23609762514de4bc1aacb8145633dd75e4","modified":1637651555533},{"_id":"public/page/2/index.html","hash":"da82511716fa8360d073b4b56a2b5cb5860d8de7","modified":1637651555533},{"_id":"public/page/3/index.html","hash":"6cb5538d1fd7ae62ff254d3ebdc7996e75ace463","modified":1637651555533},{"_id":"public/page/4/index.html","hash":"608e0de04708a5a4900ddc35e3ba5b5c0e74cbf6","modified":1637651555533},{"_id":"public/page/5/index.html","hash":"87c5e00267a95715e254a6c46ba8e7eb52129a53","modified":1637651555533},{"_id":"public/page/6/index.html","hash":"b56100ea2a7215a6de96251a8c668436629f1fa6","modified":1637651555533},{"_id":"public/page/7/index.html","hash":"239cd3f71c4d2bbae34417ea793a69bdfc68a6df","modified":1637651555533},{"_id":"public/page/8/index.html","hash":"307c372531969828f70a7810ca1ece9a066ff3d1","modified":1637651555533},{"_id":"public/page/9/index.html","hash":"cb158c13faa8bd881e213d66c4eabb2d490ae6dc","modified":1637651555533},{"_id":"public/page/10/index.html","hash":"5f958078d41b0441b0a227afecc845b4903d4c05","modified":1637651555533},{"_id":"public/page/11/index.html","hash":"ee8e7ecd8ee2ce78c6bb3a95b03b56986aaa5f13","modified":1637650634370},{"_id":"public/page/12/index.html","hash":"2553125ba7913cd2bf5c4cc2f87d1fe9d50b58ec","modified":1637650634370},{"_id":"public/page/13/index.html","hash":"feadf03c9d732315d442835803c86ec40f43f246","modified":1637650634370},{"_id":"public/page/14/index.html","hash":"6f92611c262581976617499db376eb195057f96e","modified":1637650634370},{"_id":"public/page/15/index.html","hash":"a7cbbfde13f30894223aa0188d695ea7470dad46","modified":1637650634370},{"_id":"public/2021/03/31/clusterProfiler做富集分析/1.png","hash":"756283ba77de878cb626cb494c9d8755a66bb5a7","modified":1637650634370},{"_id":"public/2021/03/31/clusterProfiler做富集分析/2.png","hash":"8a331633035e000b482c56bb180721e4ded281f2","modified":1637650634370},{"_id":"public/2021/03/31/clusterProfiler做富集分析/3.png","hash":"9dd5252d09ed18fd4403836ff2c52c820e488b2a","modified":1637650634370},{"_id":"public/2021/07/06/GENIE3构建基因调控网络/1.png","hash":"308070e499339256821d0a40d5c8fda5286d3dc0","modified":1637650634370},{"_id":"public/2020/12/30/ggplot2坡度图/1.png","hash":"92d1e0dae8a9eb036b4a29b518029fcc62ee9f80","modified":1637650634370},{"_id":"public/2021/06/01/iTAK简明教程/2.png","hash":"6d713abba9d78708cc667e25692634822a9ca934","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/1.png","hash":"8675d7791d8a634279845912104e9ce6aeb7eb4c","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/3.png","hash":"52bef2042286639156e1f7b94a8865e677e9062e","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/6.png","hash":"5ec66ea454c263afa391e6634c945c27cd6eb016","modified":1637650634370},{"_id":"public/2021/01/04/NMDS分析/1.png","hash":"8d34a3db258731dfe050c253881191a98a62ae14","modified":1637650634370},{"_id":"public/2021/01/04/NMDS分析/2.png","hash":"ff76cd16854fd9303aebd7ff81238cacc7534436","modified":1637650634370},{"_id":"public/2021/01/04/NMDS分析/3.png","hash":"8de7837855b8d223b841147e8fdf9d18d3f8b45e","modified":1637650634370},{"_id":"public/2021/01/04/NMDS分析/4.png","hash":"7958f96f8be51a7574904a6d0a5ed9906328e96f","modified":1637650634370},{"_id":"public/2021/01/04/NMDS分析/5.png","hash":"9936dc2638de444465ed2c713b544f73ec8f2cc5","modified":1637650634370},{"_id":"public/2021/03/05/MiKTeX安装报错解决办法/1.jpg","hash":"9b051ed75e062738316ee4537553eaddf3e746fa","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/0.png","hash":"c2160aedac082a465be04347eb05635111369643","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/01.png","hash":"3e90d6d2c3d43249b728723d95bef3b255c0f89e","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/19.png","hash":"9a32c17199e706e97cfe2e5720d3ddd42e738b8f","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/20.png","hash":"23e4a3af08f6377578030ae6c820f784105d2405","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/3.png","hash":"d42f7490433a0d51eab471a9e323c368d3d3c896","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/6.jpg","hash":"5853a65bf623f0f69722564999cc6257bfb6fba6","modified":1637650634370},{"_id":"public/2020/01/07/R语言批量合并Excel文件/1.png","hash":"e075cad0ad01e10190ecc4fafc74b4620a1ca20b","modified":1637650634370},{"_id":"public/2021/01/15/Tools4You教程1-0——关于Tools4You/4.png","hash":"96fd7ea305fa8741a183bc6d1c79e276f76b8701","modified":1637650634370},{"_id":"public/2021/01/15/Tools4You教程1-0——关于Tools4You/5.png","hash":"ec2baf985193dd365d394b72ad540e4a501c42f1","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/2.png","hash":"68a9d0017e008e9193fc44d6292546ffac623a6f","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/6.png","hash":"151529b55a3b9e3c656c2bd2bd04463dbe55cee8","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/7.png","hash":"7a15ed3c4c0b88ba91e7fd05bd29c804977de8bb","modified":1637650634370},{"_id":"public/2021/01/19/Tools4You教程3：线性回归分析/2.png","hash":"5f890be97d04715015109cf9a975b0963c151ad6","modified":1637650634370},{"_id":"public/2021/01/19/Tools4You教程3：线性回归分析/3.png","hash":"4764b2ce4773066e0bfe0370ab0487381d4b6262","modified":1637650634370},{"_id":"public/2021/01/19/Tools4You教程3：线性回归分析/4.png","hash":"054af1871ef00681096ed6f984413ca0ea509739","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/1.png","hash":"319f2f0468c533365b7507899d2d489281f8289a","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/10.png","hash":"b89b63c91b2811a520eea645ed606e9ee05e2906","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/11.png","hash":"aaaf5ad8ec205d99f012d0fcbfe16421b210db64","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/12.png","hash":"1e9e25cb115f90fa188a26369d571592d755d0ff","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/2.png","hash":"547de853d28da0df68e2a6aba4e05d1286fb3fad","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/3.png","hash":"4f00a62a12869ed0160d0c234232640d20a8f0e7","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/4.png","hash":"7942c2da71e3dd51ce02f18de6edbba0a5d49865","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/5.png","hash":"5d702233ff22b43ac1a661743d33c870f5deb5c9","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/6.png","hash":"2e44c23343c9ef814d17931026a71d7f90e838ce","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/7.png","hash":"405d7568f2914bdf055faa538ce2fd138c9b155b","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/8.png","hash":"d6e01b240ee3389082fc95c1ae1650e40060a996","modified":1637650634370},{"_id":"public/2021/02/01/Tools4You教程6：方差分析/9.png","hash":"e7efe88ae4a0eabe50b57739b26ba8d1d6c263e7","modified":1637650634370},{"_id":"public/2021/01/29/Tools4You教程5：PCoA/1.png","hash":"6cd0bf0310e976959a2a68c5d33d0333501b5c22","modified":1637650634370},{"_id":"public/2021/01/29/Tools4You教程5：PCoA/2.png","hash":"f5d526914dfcf6c43264d0eba15436470727c390","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/0.png","hash":"7cbcadcd196d31189424f982c4ff6e9b3e461dba","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/1.png","hash":"19dfdb5feae902fed30ec388946a54dedeef0b59","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/10.png","hash":"9ae352182dd60c5a1ff740b723786c658fbe59ba","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/11.png","hash":"9b732786074dcc1a7e2fcc18414e9f28c74300da","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/13.png","hash":"b235ae20d4a5a92021e40147eb53d3f04b0197a8","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/2.png","hash":"f5d526914dfcf6c43264d0eba15436470727c390","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/3.png","hash":"49fb270b2ae996e378beacd2b20eea63fcb14365","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/4.png","hash":"0d77ee8bb8d8c758b1b782096c0d55a30375ba4c","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/5.png","hash":"3ad9308021d2a7af803d4a41428ec0a51934492f","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/7.png","hash":"4178fb8845454a49e019c13eb84eb6934b1128fc","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/8.png","hash":"32b719291cf8656ad858e82555bc3dae8f815e72","modified":1637650634370},{"_id":"public/2020/12/19/不同数量样品绘制柱状图/1.png","hash":"a82af3ae8c7fc31ca6c5201cc800261b25b43e13","modified":1637650634370},{"_id":"public/2020/12/19/不同数量样品绘制柱状图/2.png","hash":"536b610cfedde827a2b322c0d7c23d49168f0022","modified":1637650634370},{"_id":"public/2020/12/16/代谢组S-plot/1.png","hash":"f7c864f42d6af955fa79335629290824eb0ae507","modified":1637650634370},{"_id":"public/2021/02/02/利用ImageJ批量计算叶片面积/2.png","hash":"44d34a45cb9e792d495a61395628b575861e6f98","modified":1637650634370},{"_id":"public/2021/01/17/带连接线的堆积柱状图/1.png","hash":"ae05fd35866999c7f447afb5d7ae0687796b2396","modified":1637650634370},{"_id":"public/2021/02/27/稻壳酮（momilactones）在水稻化感中的角色/2.jpg","hash":"b55c1e9769198b2eddcf91bfbe5aecdc66b212e3","modified":1637650634370},{"_id":"public/2021/02/27/稻壳酮（momilactones）在水稻化感中的角色/3.jpg","hash":"f2f58c0b538b976aeb2ab00f09779b1133505626","modified":1637650634370},{"_id":"public/2021/02/27/稻壳酮（momilactones）在水稻化感中的角色/4.jpg","hash":"f7f60bdce89b01f9d56f44934d3b56503af27256","modified":1637650634370},{"_id":"public/2021/02/27/稻壳酮（momilactones）在水稻化感中的角色/5.jpg","hash":"0b82e632861b9fdcae5ba10db67f30aa9d55973a","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/1.png","hash":"37ec8c86389aa859dd4d4b06e56250863acaad3a","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/2.png","hash":"b717c6d31fec8fce6ca51d83d6a393dcc24f49ec","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/3.png","hash":"a7f767661cab070de4c8ad5360d4823a9fbfb074","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/4.png","hash":"ef06dc1fe8f0c1f06e7d549c587291c699a22fb4","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/5.png","hash":"f9677f0648f19645a50f43c277389f4212ba72c1","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/6.png","hash":"df943edbb0068c5246cdbde8f67034fff5b361ae","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/8.png","hash":"ce7780b870ff03d70ca9c41da2c9aeb8054d29de","modified":1637650634370},{"_id":"public/2021/01/09/部署Rshiny到服务器的常见问题/1.png","hash":"7833f0e04590a3bfcd695dcb7f59d8323c7bc0d6","modified":1637650634370},{"_id":"public/2021/01/09/部署Rshiny到服务器的常见问题/2.png","hash":"6b2ff565708f48af605bf8c1ceee1cfc34586d64","modified":1637650634370},{"_id":"public/2021/03/07/酚酸是不是水稻中的化感物质/1.png","hash":"a90ef71d864cc45ee3ab352e61a690b46a355fe0","modified":1637650634370},{"_id":"public/2021/03/07/酚酸是不是水稻中的化感物质/2.png","hash":"b9996809db21c826ea214bb009f63665cd9171ba","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/5.png","hash":"b544a3ba6ca8ab636fbb68baffad1bc6c440d2e8","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/9.png","hash":"3f55a6ef64dfc3f24fef2439542aabd0eb944866","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/2.jpg","hash":"24a2939de0017bc10aa58b136757d7c63d93fb57","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/5","hash":"fa27aaaba572215cb4e34c844814ec2897be39ca","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/8.jpeg","hash":"7f5296f8283adfedfd60bfc080bb30a8dfbf2a97","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/10.png","hash":"d9c6d6e7458b235caf21cbc0284f390b4bcdae83","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/5.png","hash":"3c5f98e23aba8357c2edca2cc5ac1a6df5ff0206","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/01.png","hash":"5b456d6d3ec6e44f8cdde87c357ff77730fa27f0","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/0.png","hash":"f0996da4bea7151296c0b93130b96202f599c94b","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/1.png","hash":"c2224783f8bd807bfad5616cde8e5983c92f19e5","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/7.png","hash":"850ef180d8af2bc9342e718c7d09df5e4bd1e522","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/9.png","hash":"505c04b57a5e34bdf51d5dce581de7fcc3d6c921","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/2.png","hash":"2f17745423aa36dbd827543c3fe40f825bb820a4","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/5.png","hash":"49a2dd3534bebe5a57c595b463122a0b8faeeb17","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/10.png","hash":"b54f25955b45cfaa19eff24c2b8245b903977f66","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/3.png","hash":"b2e81d936006d33b5f4835c8eb097cd9768606c3","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/6.png","hash":"9c227966240884247852078d32d80ae959a13e1f","modified":1637650634370},{"_id":"public/2021/02/03/生态和农业中植物亲缘识别的机制/3.png","hash":"470c1c9cf8ba285cde5b3c61a418a339f7939eee","modified":1637650634370},{"_id":"public/2021/02/03/生态和农业中植物亲缘识别的机制/4.png","hash":"b16a167f1103d0df2f00226034b99d39bf06ac2e","modified":1637650634370},{"_id":"public/2020/01/07/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/4.png","hash":"41ab956c207c74dc566ec8294735f6c9f58b8673","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/01.png","hash":"9fdd6567b9c3987e613bef2a62dd85b29242aaf9","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/10.png","hash":"8b6bf6d65205f32e458cc6056bc3e3bb0cf01bab","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/12.png","hash":"61f27936c96557d879dc7170a89da9ffcfe6905d","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/21.png","hash":"1224de88ea22aa676b6690d61b5e48940384d012","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/25.png","hash":"f2e56f077661ad4f13fb33b17b060359bcd49b68","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/27.png","hash":"82a8f2629df9760c4bb39b9ca4cd6c9d9addf9f6","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/28.png","hash":"0a3a36324b90ba3ce6552429d0c6c5ffcb4fbf56","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/30.png","hash":"af6045f05043eb0a0614919af76a0992d5271523","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/37.png","hash":"7c8762678f9193b75196c14e7c20b6ce2b68f7fd","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/5.png","hash":"6a414b14c04c1400babaa12f7fdf428783bc3bfb","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/7.png","hash":"1acc7bad0dbbd2141fb89e861b359da58b83eb97","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/9.png","hash":"64fabd5e3b4d0c6465045197d0d1040f1aa81b24","modified":1637650634370},{"_id":"public/2020/12/16/ggplot2画箭头/1.jpg","hash":"2407b238840e63e78fc99ab7c094bf83af9f796b","modified":1637650634370},{"_id":"public/2020/01/07/PCA和PERMANOVA分析/1.png","hash":"e018d8d1529243174d4fc1d90cd1569cb62c4f7f","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/13.png","hash":"d6813e5df31e77b38be0f2df8f5bedba1ab78b9c","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/14.png","hash":"72bfef505e0cb9578ea10262c19f8d5e20e68cd8","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/15.png","hash":"f18e5868ffd08560a5ac5ef3029de5688180e307","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/21.png","hash":"a9cd0cde47fd6fdb7aa77cf560045e6352a20dbc","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/23.png","hash":"9b55996393f66d4b6537874789408787fa8f6765","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/6.png","hash":"501dba17d098742c0a84b07557c25e7526ceaffb","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/0.png","hash":"67102f41516e40ff21c0f92ff9da136a842ea088","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/2.jpg","hash":"91fe7df6ba5b7cd9318d18a46b5f8c9c1fc34ac5","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/4.jpg","hash":"9d4d79f8654e4f2a355072816711de468d61fa04","modified":1637650634370},{"_id":"public/2020/12/27/PTI中的信号网络/2.png","hash":"888ac2c83ca8d7de40f0bac98a3abdd1d779bfbc","modified":1637650634370},{"_id":"public/2021/02/04/tidyHeatmap学习笔记/1.png","hash":"8310164c5707c9ca635fec58fc09901d51178dc1","modified":1637650634370},{"_id":"public/2021/01/15/Tools4You教程1-0——关于Tools4You/1.png","hash":"04cfe108aaa9f18d7b3c328995a224f6c75a648c","modified":1637650634370},{"_id":"public/2021/01/15/Tools4You教程1-0——关于Tools4You/2.png","hash":"62886e505360b79b5558680f604c96cbcc60c0b0","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/12.png","hash":"2a1fd669474b394fbcd247d79a0409dcf7e3b791","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/9.png","hash":"5bdb1fed2559b8718d3ea733d8dd31b18adbef0d","modified":1637650634370},{"_id":"public/2020/12/22/分类-回归树-CART-在R语言中的实现/1.png","hash":"185b25106f31a7ff749e80d165762f5669c8ebc2","modified":1637650634370},{"_id":"public/2021/02/27/稻壳酮（momilactones）在水稻化感中的角色/1.jpg","hash":"c1ccbb037f617707c1f98f8e29ac59d02b58091f","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/1.png","hash":"0b47437ed38f16d60e4120e0adfa8960a443175d","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/10.png","hash":"b828c760e30f6b1be4536da632138375ed4a840a","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/11.png","hash":"af39b5790252a0009486808cfd4548a3635cfb5b","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/4.png","hash":"6373c6e8d04f9ad347b3b374e55768cc8a2d26b8","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/7.png","hash":"2a265a9b286a1a74bbe79b11065933069d023235","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/6.png","hash":"dbc9c46c20f02bb2202c3664f90bbf4bc5261d4a","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/8.png","hash":"fd54ad9b38c77e52294d605ea2fdeca87b106fcb","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/3.jpeg","hash":"dc2a82419f03940ed1d82812854c9b7aa44a9187","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/6.jpg","hash":"711fb757e4ff2b2ea29f7f21bd5a230086f0540c","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/8.png","hash":"34cccbdaa8a1c201fba4a94cecaf756de3be8268","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/9.png","hash":"18d8b38b884291c00fc97f8286cbc4f8930597c4","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/0.png","hash":"e3904da54c9989e4e1475a9c22e940215036b95c","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/02.jpg","hash":"b801b6734b8bb8600c99783e459a588d21053e77","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/2.jpg","hash":"5232f71e231278f1abaaf184ebc39ef92a7a87f7","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/6.png","hash":"dfd7ef0d11fb9be49623e50b749bee92381f713a","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/1.png","hash":"d67f6f997d7f487fe448bb6ef03d783700114160","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/8.png","hash":"f0f9c0ae82af58da0f8af43c9a9411c26ac8cf4e","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/7.png","hash":"44b1751c0869acc36d7774112f56e1046027d270","modified":1637650634370},{"_id":"public/2021/02/03/生态和农业中植物亲缘识别的机制/1.png","hash":"39c7e5268e2273c52a9298d145e6579e6e14c589","modified":1637650634370},{"_id":"public/2020/01/07/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/1.png","hash":"660ed12e61405525442e084a2d66e9c2ce88e95d","modified":1637650634370},{"_id":"public/2020/01/07/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/3.png","hash":"707417c6bcb7bb8eb453d8ed113eac9f961da567","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/1.jpg","hash":"5f37cbc7484dc0f6582dcb302a1b3a1497fb35ce","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/17.png","hash":"83905a08e8de8543041323773fabb1ee44aad5b3","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/18.png","hash":"256d2a715f83c6ff215ce260a9f53632bcff3791","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/19.png","hash":"747c06b7f19abd36e7cda85581201299074361ae","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/23.png","hash":"ced1e98bb742d29421362054e4e5a4b165de425b","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/29.png","hash":"65f5c75699c5e86da12999052b941fb21ebf5e33","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/34.png","hash":"a8622cd4ba834bc318622f59cfac5dc1ccae858d","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/35.png","hash":"4c88072f21bb9e3f9ca46f100d8e9148d7f1a603","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/8.png","hash":"eca649d3af953f9131fd9650be68cc016c35e4a5","modified":1637650634370},{"_id":"public/2021/03/06/ComplexHeatmap学习笔记/1.jpg","hash":"5a6457daa93fbc9ba6ce48a126d442cf2d3c4c75","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/5.png","hash":"eae857757934cd52816252c7ed16dc3dad98e965","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/9.png","hash":"ed98d498655d8067f679e873a27f10f1dbcf1ad9","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/1.jpg","hash":"93c4db41b3873fbc94ef8c5d1d20e0c589b3abb1","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/3.jpg","hash":"4f5b8180b2a2aa03eae61d78466f3ebbe2485b4d","modified":1637650634370},{"_id":"public/2020/12/13/OPLS-DA在R语言中的实现/5.jpg","hash":"af8e71c9289ef1c133bf3b9092e27609ea30d81a","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/3.png","hash":"bf814123ea8b98a53e410ff53813a41977cb8bc1","modified":1637650634370},{"_id":"public/2021/01/15/Tools4You教程1-0——关于Tools4You/3.png","hash":"277e06d03137c31846b94e52af15ce6af1ad3059","modified":1637650634370},{"_id":"public/2021/01/19/Tools4You教程3：线性回归分析/1.png","hash":"9e88f7d9ec0520d16d87dbd3a188531253ac8410","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/2.png","hash":"6bbe65e506c2d21120877effa255f0561d9b4ab9","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/1.jpeg","hash":"3ecc3553e918f7192082a3222cf8c5839dc4dc3d","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/5.png","hash":"4bd079d4d30f2889f0542578d4c62dc9e3d3f8f8","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/6.png","hash":"c8ed32ca7ff82482782281e83d831e8e7435c360","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/8.png","hash":"23ad5261aa9a718ba1092967d446f6e155ed8bb0","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/5.png","hash":"98ebb5ebb5e051ef57028648a6db80e82ba7260d","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/9.png","hash":"59e58f6705dccc6e35b154ba4a398318cbe40d47","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/5.png","hash":"816b1c60e9f50b5fcf4dfa677ad40771bd4a7e32","modified":1637650634370},{"_id":"public/2020/01/07/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/5.png","hash":"01ea790645ea47c2ecb18b1ce3f45cf31e29e134","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/24.png","hash":"c316490e91b5d38a1ea02bafca73aadc16eeefc9","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/33.png","hash":"50a68d3b48b6817c03d94a3f1370a5488449e844","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/36.png","hash":"491b3879fefa04d8e00ff7d0bd29d320050b4544","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/38.png","hash":"c38c8b6a1d200c592bc0fd938146d213c0b4f4ec","modified":1637650634370},{"_id":"public/2021/07/06/GENIE3构建基因调控网络/2.png","hash":"4d37a1e5a7842beb038f14db2bf5265714537482","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/18.png","hash":"12e02b59266e4be7839f0bc6da6bad3880c80228","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/4.png","hash":"9600f85261a365780bef7a0b069fc3f9c04acfdf","modified":1637650634370},{"_id":"public/2020/12/27/PTI中的信号网络/1.png","hash":"67595bea24a789ac7388113726c5a11631ee2579","modified":1637650634370},{"_id":"public/2020/12/27/PTI中的信号网络/4.png","hash":"032038a3d7136051467a763e57455137202d0aae","modified":1637650634370},{"_id":"public/2021/01/28/Tools4You教程4：PCA/6.png","hash":"34c4da24027240fff055a6707d1a8b25076c5ff4","modified":1637650634370},{"_id":"public/2020/01/10/开发一个R包/7.png","hash":"9456ae3c79618ce7996106f59363d10d47b0dc58","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/1.png","hash":"8d61c50bdf4d1184b2c873006c111e6604ee9566","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/3.png","hash":"b886b82b12ee81cd733e4008b0943ad8d49cddb1","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/4.png","hash":"f7d3f935f5affe5584873a12e8f88d107e0730a0","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/2.png","hash":"cca70914792b6f27e35e726d838d1534c51b2f69","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/3.png","hash":"b36ed4e70e115ad3f4c7f54e8a3038c4e2f40ebc","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/6.png","hash":"78976b1f47a5bd00cd82422f4fd66a36e2f9eddc","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/7.png","hash":"c1f8c8654d5653aa769f11a76796a7dbb98bedb7","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/4.png","hash":"b749659d22f1b2ebb286dd4b91f26e8528ce5359","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/9.png","hash":"cf26932e0007c3ab8d8ffda16c5198d8d2a37ccf","modified":1637650634370},{"_id":"public/2020/01/07/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/2.png","hash":"c89702293f056534d691593fb153ace1bd2b6ac7","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/32.png","hash":"636a4bd7b9aae0f2142d85c21ad2361c4ee22aa4","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/6.png","hash":"c8d1281f45c5745174334cf8db2606a839afa47d","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/11.png","hash":"374f3f89ccf201d1ab6f1c5312786f49ce160dfc","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/1.png","hash":"a2e2113eba3152ec02996b5f7c6f68f877fd4196","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/10.png","hash":"436d3f0c670c15686cfade5a257aa0c29a77b42c","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/2.png","hash":"2dc75243fdb05828ff951f5a270fd5500425f526","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/8.png","hash":"f56cf4faa3dff2eaf064fa68c65afa25b726a4c3","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/3.png","hash":"34cdbf9b813ff7d7db2db4a1a27b5fddac0d0799","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/1.png","hash":"ba604be8c17978af164464cf9b1e45c0daad5258","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/2.png","hash":"955e684556bb85a5e97aa002b05a27b332678757","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/8.png","hash":"960b9ad465a281de86065c9f4c5b8b3904969ce8","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/5.png","hash":"5993b9fe4864e4be17f1e2f6440f8e1c67d748ab","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/6.png","hash":"0f3c01245c66d44803af80ef22fb795f8e0442fc","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/8.png","hash":"ce4b519c81e42c2336d4d1b68085eefab009b421","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/10.png","hash":"e7da4d85584c9cc3ea615db00190ea620adcca02","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/10.png","hash":"0f8aa32576cd03de78ab87cead6299e32af83ec0","modified":1637650634370},{"_id":"public/2021/02/03/生态和农业中植物亲缘识别的机制/2.png","hash":"e862e6a8844508827429dcf9f06da9b3c52cf119","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/16.png","hash":"9c616bd7bdbc34dfef6991a0e9c587ddfa74c38d","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/2.png","hash":"b42c14ae2240d1980750e6b7ebb764cf926c997d","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/22.png","hash":"387b5b8bfe7536de5af14fcf8f37719653342fdb","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/26.png","hash":"0c77bac869bc842f062bd4cdd4f445a0ebdb42a7","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/3.png","hash":"a84d7c7307e91c0a32fb3abf1e4da94d5a0e9389","modified":1637650634370},{"_id":"public/2021/03/31/clusterProfiler做富集分析/4.png","hash":"a7b42c9212bd519012435a87edfb05321a24f393","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/16.png","hash":"73e3e679f59d74084a1f98fa54c7bb3ce383af1c","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/1.png","hash":"d5fef8d58a4eeea4f0c155708f009751b8f3dec5","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/12.png","hash":"6d29023f7be3c44ce99def5a4fd0ad78e11d42c9","modified":1637650634370},{"_id":"public/2021/01/01/尿囊素保护番茄免受UV-C胁迫/7.png","hash":"3280d0772ee5746856c436184c32f920513d2ae0","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/9.png","hash":"2079323319919ae8e6b43acd30cd8b9f9624d369","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/15.png","hash":"9115c258c5b5d111be81247e4b62961c74318ad7","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/7.png","hash":"3dd04f21597d3546afa776e18d1a48a24003691e","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/22.png","hash":"36a61524a472a58e079c540ea047d28d92976690","modified":1637650634370},{"_id":"public/2021/01/19/化感和化感物质在植物防御中的作用/13.png","hash":"b64768e41e64f559863b3155868301ddc1fb9916","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/4.png","hash":"19d52d83fb3c7ed55d318b0f8e50c35718089bfa","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/1.jpg","hash":"5270543245c6dc4da41f0094c2e65d77863cbfc6","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/3.png","hash":"be9be1bf8b9d0911629079578cbe325df5325400","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/3.png","hash":"cc25e09d8720eeea41ccda25e81cea7183b02ace","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/11.png","hash":"297f0a738f97ae5b5eea9627d4f25875db6fe6a8","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/13.png","hash":"c12f7d251083fedb0ebc76fdf8e4c283d819b508","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/4.png","hash":"dd4e127484d102f0366d4919eec915a30f9aa815","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/17.png","hash":"c77b83222eefafacaf9b986352bc57abb640a436","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/12.png","hash":"4c361efc55348e88da836c343b7b1bfa1ce7a264","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/4.png","hash":"c03485e765761faf2d0e83b917178a94704b5f8b","modified":1637650634370},{"_id":"public/2021/02/02/利用ImageJ批量计算叶片面积/1.png","hash":"19a7161a7860cac894409a758d8ab4d0345b7d3e","modified":1637650634370},{"_id":"public/2020/01/07/听他十年，成长十年/7.png","hash":"ec5aff8830877f97d9999b3782b7fb983f4124bf","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/7.png","hash":"9aacb7855d66cb83955f1db6b0fe1f877ed8e9bd","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/2.png","hash":"e42e88b7a217e6b8fa70ee0e15d26f3161fa4ce3","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/31.png","hash":"0560f6b99b429ec8f8ceae7a5ace7d4c6f6c54cc","modified":1637650634370},{"_id":"public/2021/06/01/iTAK简明教程/1.png","hash":"48d8538524a165862d4b5be4f6444cd816ce70e4","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/5.png","hash":"e450a58d81bc36052f6c04ce187f3962e52fb3ba","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/4.png","hash":"bea49d3e4eb0c671e0c6a67baade253c495e2cfc","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/7.png","hash":"8921445598fc93100e592cd4b6197b3c6331f7d6","modified":1637650634370},{"_id":"public/2020/12/27/PTI中的信号网络/3.png","hash":"577ca4d6beccce8a7f5ce7f9c67690eddf31824a","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/4.png","hash":"9ee69019fa853d12db1db69e7d5c320662e22980","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/8.png","hash":"19a61189f2ff3fdc586c4eda4f943265ed9afd8d","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/1.png","hash":"67283e33ce4bcf64e2e666726a6f2a0484f4f833","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/14.png","hash":"01b69b6949576c5524913ea3a679860afdd75ad1","modified":1637650634370},{"_id":"public/2021/06/18/Nature：PTI影响ETI/24.png","hash":"747ba8bfcae7ca8c71341e049815cb760910cf5e","modified":1637650634370},{"_id":"public/2021/01/18/Tools4You教程2-相关性分析/5.png","hash":"d014ede5843447dc22ad052cbe5734cb170928f2","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/7.png","hash":"62ea1a00cdcf2b16da5708cf21696009ec35208a","modified":1637650634370},{"_id":"public/2020/01/09/iTOL修饰进化树/2.png","hash":"8ee00b9dc31db11ba04d99c936c94deed96b7366","modified":1637650634370},{"_id":"public/2020/01/07/群体遗传学与重测序分析/20.png","hash":"6437ff9ae0187ec50e46c283b72db5bc9bfadc89","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/6.png","hash":"80e9418b548f7334dc13b54a4c8d33bdd1b914b7","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/6.jpg","hash":"61f29eb19bc24d8a5844f78f7df50a87d2dded6c","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/4.png","hash":"d2302c6c454013c127535da7a6b93a1b52a048ae","modified":1637650634370},{"_id":"public/2021/06/01/水稻Pan-genome/2.png","hash":"26bd48ff868dbe47badbf78d24c38fc250e80b4b","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/3.jpg","hash":"d3b51887ca253d0f99c1d77c163ec661bdfdd021","modified":1637650634370},{"_id":"public/2021/05/26/水稻-稻瘟病互作转录组分析/11.png","hash":"a844a5bb5e4993136c1cbb3d58a657d450e8f050","modified":1637650634370},{"_id":"public/2021/02/12/新希望—野生（近缘）种质资源/1.png","hash":"36758edcbcd6b56db7a81d9c5cb72dc4b61155d2","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/4.jpg","hash":"8d25b076047857960ce234a0511412dbe3e4084f","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/5.jpg","hash":"6a6f55a1556ecc481ca2a0bce2941fb04917bf31","modified":1637650634370},{"_id":"public/2021/01/22/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/新建 Microsoft PowerPoint 演示文稿.pptx","hash":"52728225ad9a0c09843b4b641fbe588bf04f0f14","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/3.png","hash":"7dcbe6994fe12058641026e0f7817a1bb2bc6ee6","modified":1637650634370},{"_id":"public/2020/12/14/文献检索、追踪、阅读等小总结/4.png","hash":"3df8797c73d4247e8ebbd091786c9e9482e9caa0","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/4.png","hash":"83bb0dcc775b346a987801b46bd3d99b415daf91","modified":1637650634370},{"_id":"public/2021/01/30/使用ImageJ计算叶片面积/2.png","hash":"981a4be2d01e136f205948904036f5466651cb6c","modified":1637650634370}],"Category":[{"name":"生物信息学 - 群体遗传学 - Linux","_id":"ckwbp5x4g00020cg0gcy1gth5"},{"name":"R语言","_id":"ckwbphnmt000148g06r997oj1"},{"name":"技能","_id":"ckwbqwcdl000ar0g00lfh2k04"},{"name":"生物信息学","_id":"ckwbqwcdq000or0g0djafe81c"},{"name":"Linux","_id":"ckwbqwceq001ar0g0bmfi16s9"},{"name":"Python","_id":"ckwbqwces001mr0g08tl9cx0d"},{"name":"文献","_id":"ckwbqwcfn002ar0g0d9eab5ks"},{"name":"Tools4You","_id":"ckwbqwcji002tr0g0cn3ogj4p"},{"name":"数据库","_id":"ckwbqwcjv003or0g01ifrdc4o"},{"name":"hexo","_id":"ckwbqwck0004er0g070vkbeuo"},{"name":"杂文","_id":"ckwbqwcma0054r0g00orj0dgx"}],"Data":[{"_id":"link","data":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"categories","date":"2021-11-23T03:29:24.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-11-23 11:29:24\ntype: \"categories\"\n---\n","updated":"2021-11-23T03:29:44.850Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckwbjmoc50000gwg0au7edn0a","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"link","date":"2021-11-23T03:30:05.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: link\ndate: 2021-11-23 11:30:05\ntype: \"link\"\n---\n","updated":"2021-11-23T03:30:16.369Z","path":"link/index.html","comments":1,"layout":"page","_id":"ckwbjmoc70001gwg00158eqzj","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"tags","date":"2021-11-23T06:04:43.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-11-23 14:04:43\ntype: \"tags\"\n---\n","updated":"2021-11-23T06:05:01.805Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckwbp5x4400000cg0d0ls8pl1","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""}],"Post":[{"title":"重测序分析脚本","date":"2021-11-23T06:05:26.000Z","cover":"/img/cover/popgene.jpg","_content":"\n<center><font face=arial bold size=10 color=black>重测序与群体遗传学</font></center>\n<center><font size=4 color=red>云南农业大学  云南生物资源保护与利用国家重点实验室</font></center>\n<center><font size=4 color=red>（李详  2019年12月31日）</font></center>\n\n---\n\n# 软件安装\n\n该部分软件很难用`conda`直接安装，安装步骤比较特殊。\n\n<!-- more -->\n\n## lumpy-sv\n\n```shell\nlumpy-sv 依赖 Python2.7，切换到py27环境下进行安装。\nconda activate py27\ngit clone --recursive https://github.com/arq5x/lumpy-sv.git\ncd lumpy-sv\nmake\n## 安装svtyper\nconda install svtyper\n```\n\n## cnvnator\n\n```shell\ncnvnator依赖于root软件包及samtools软件包(包含HTSlib)，因此先安装Samtools及root软件包。\n\n## 安装samtools\nwget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2\ntar -xvf samtools-1.9.tar.bz2\ncd samtools-1.9/\n./configure\nmake\n## 安装root软件, 直接下载后解压即可\nwget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz\ntar -zxvf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz\n## 安装cnvnator\ngit clone https://github.com/abyzovlab/CNVnator.git\ncd CNVnator\n## 链接samtools软件目录到cnvnator目录\nln -s ../samtools-1.9 ./samtools\n## 加载root软件到环境变量\nexport ROOTSYS=/pub/software/root\nexport PATH=/pub/software/root/bin:$PATH\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib\n## 安装cnvnator\nmake LIBS=\"-lcrypto\" \n\nless ../data/sample.list | awk '{ print \"bwa mem -t 2 -R '\\''@RG\\\\tID:\"$1\"\\\\tSM:\"$1\"\\\\tPL:illumina'\\'' ../01.ref/genome.fasta  ../data/\"$1\"_1.fq.gz ../data/\"$1\"_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o \"$1\".sort.bam -\" }'\n```\n\n# 变异检测\n\n## 构建基因组index\n\n```shell\n# create link\nln -s  ../data/genome.fasta  ./genome.fasta\n\n# for gatk\nsamtools faidx genome.fasta \n\n# for bwa\nbwa index  genome.fasta  \n\n# for picard\npicard CreateSequenceDictionary R=genome.fasta\n```\n\n## 比对排序去重\n\n```shell\n# 比对排序\nbwa mem -t 2 -R '@RG\\tID:S1\\tSM:S1\\tPL:illumina' ../01.ref/genome.fasta  ../data/S1_1.fq.gz ../data/S1_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S1.sort.bam -\nbwa mem -t 2 -R '@RG\\tID:S2\\tSM:S2\\tPL:illumina' ../01.ref/genome.fasta  ../data/S2_1.fq.gz ../data/S2_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S2.sort.bam -\n\n# 去除重复\npicard -Xmx4g  MarkDuplicates I=S1.sort.bam O=S1.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S1.marked_dup_metrics.txt\npicard -Xmx4g  MarkDuplicates I=S2.sort.bam O=S2.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S2.marked_dup_metrics.txt\n\n# 比对率统计\n/pub/software/samtools/samtools  flagstat  S1.sort.bam > S1.sort.bam.flagstat\n/pub/software/samtools/samtools  flagstat  S2.sort.bam > S2.sort.bam.flagstat\n```\n\n## SNP、Indel检测\n\n```shell\n# step1.HaplotypeCaller\ngatk --java-options \"-Xmx10g -Djava.io.tmpdir=./tmp\" HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S1.sort.rmdup.bam  -ERC GVCF -O S1.g.vcf 1>S1.HC.log   2>&1\ngatk --java-options \"-Xmx10g -Djava.io.tmpdir=./tmp\" HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S2.sort.rmdup.bam  -ERC GVCF -O S2.g.vcf 1>S2.HC.log   2>&1\n\n# step2.CombineGVCFs\nls ./S*.g.vcf > gvcf.list\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"    CombineGVCFs -R ../01.ref/genome.fasta -V gvcf.list  -O all.merge.g.vcf \n\n# step3.GenotypeGVCFs\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"   GenotypeGVCFs -R ../01.ref/genome.fasta --variant all.merge.g.vcf -O all.merge_raw.vcf\n\n# step4.SNP\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type SNP -O all.raw.snp.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.snp.vcf --filter-expression \"QD < 2.0 || MQ < 40.0 || FS > 60.0 || SOR > 3.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0\" --filter-name 'SNP_filter' -O all.filter.snp.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.snp.vcf --exclude-filtered  -O all.filtered.snp.vcf\n\n# step5.InDel\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type INDEL -O all.raw.indel.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.indel.vcf --filter-expression \"QD < 2.0 || FS > 200.0 || SOR > 10.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0\" --filter-name 'INDEL_filter' -O all.filter.indel.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.indel.vcf  --exclude-filtered   -O all.filtered.indel.vcf\n```\n\n## SV检测\n\n```shell\n# step1.discordants_bam\n/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S1.sort.rmdup.bam > S1.discordants.bam\n/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S2.sort.rmdup.bam > S2.discordants.bam\n\n# step2.splitters_bam\n/pub/software/samtools/samtools view -h ../02.mapping/S1.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   > S1.splitters.bam\n/pub/software/samtools/samtools view -h ../02.mapping/S2.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   > S2.splitters.bam\n\n# step3.lumpy\n/pub/software/lumpy-sv/bin/lumpyexpress -B ../02.mapping/S1.sort.rmdup.bam,../02.mapping/S2.sort.rmdup.bam  -S S1.splitters.bam,S2.splitters.bam   -D S1.discordants.bam,S2.discordants.bam -o all.sv.lumpy.vcf\n\n# step4.ind_genotype\nvcftools --vcf all.sv.lumpy.vcf --indv S1 --recode --recode-INFO-all --out S1 && svtyper -i S1.recode.vcf -B ../02.mapping/S1.sort.rmdup.bam  -o S1.genotype.vcf\nvcftools --vcf all.sv.lumpy.vcf --indv S2 --recode --recode-INFO-all --out S2 && svtyper -i S2.recode.vcf -B ../02.mapping/S2.sort.rmdup.bam  -o S2.genotype.vcf\n```\n\n## CNV检测\n\n```shell\n# step1.prepare_genome\n\n## split genome into single sequence\n\n ln -s  ../data/genome.fasta ./genome.fa\n\n seqkit split -i ./genome.fa  -O split\n\n ls ./split/genome.id_*.fa |sed 's/\\.\\/split\\/genome\\.id_//' |awk '{print \"mv ./split/genome.id_\"$aa\"  ./split/\"$aa}' > mv_name.sh\n\n sh mv_name.sh\n\n# step2.cnvnator\nexport ROOTSYS=/pub/software/root\nexport PATH=/pub/software/root/bin:$PATH\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib\n\n## 链接文件到当前目录\nln -s ../02.mapping/S1.sort.rmdup.bam \n\n## 提取比对结果\n/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -tree S1.sort.rmdup.bam\n\n##生成深度分布\n/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -his 500  -d split\n\n## 进行统计计算\n/pub/software/CNVnator/cnvnator -root S1.root -stat 500\n\n## 检查bin size是否合适\n/pub/software/CNVnator/cnvnator -root S1.root -eval 500  > S1.eval.ratio \n\n## RD信号分割\n/pub/software/CNVnator/cnvnator -root S1.root -partition 500\n\n## 进行CNV检测\n/pub/software/CNVnator/cnvnator -root S1.root  -call 500 > S1.cnv\n```\n\n## SNP INDEL注释\n\n```shell\n# step1.prepare_genome\nln -s ../data/genome.gtf \nln -s ../data/genome.fasta\n\ngtfToGenePred  -genePredExt genome.gtf genome_refGene.txt\n/pub/software/annovar/retrieve_seq_from_fasta.pl --format refGene --seqfile genome.fasta genome_refGene.txt --out genome_refGeneMrna.fa\n\n#step2.ann_vcf\nln -s  ../03.SNP_indel/all.filtered.snp.vcf \n\n/pub/software/annovar/convert2annovar.pl -format vcf4old all.filtered.snp.vcf  >all.snp.vcf.annovar.input\n\n/pub/software/annovar/annotate_variation.pl -geneanno --neargene 2000 -buildver genome -dbtype refGene -outfile all.anno -exonsort all.snp.vcf.annovar.input ./\n```\n\n## CNV和SV注释\n\n```shell\nless -S ../04.SV/all.sv.lumpy.vcf|awk -F \";\" '{ if($1!~/#/){print $1\"\\t\"$2\"\\t\"$3\"\\t\"$4} }'|awk '{print $1\"\\t\"$2\"\\t\"$11\"\\t\"$3\"\\t\"$8}'|sed 's/END=//' |sed 's/SVTYPE=//'| awk '$3<$2' > SV.bed\nless -S ../04.SV/all.sv.lumpy.vcf|awk -F \";\" '{ if($1!~/#/){print $1\"\\t\"$2\"\\t\"$3\"\\t\"$4} }'|awk '{print $1\"\\t\"$2\"\\t\"$11\"\\t\"$3\"\\t\"$8}'|sed 's/END=//' |sed 's/SVTYPE=//'  > SV.bed\nawk '$5 !~ /BND/' SV.bed >  SV_filter.bed\nbedtools  intersect -wo  -a SV_filter.bed -b gene.gtf  > SV_filter.Anno\nless -S ../05.CNV/S1.cnv | awk '{print $2 \"\\t\" $1}'|sed 's/:/\\t/'|sed 's/-/\\t/' > CNV.bed\nbedtools  intersect -wo  -a  CNV.bed  -b gene.gtf > CNV.Anno\n\n```\n\n# 群体结构\n\n## 过滤\n\n```shell\nvcf=../data/all.vcf\n\n## filter missing and maf\nplink --vcf  $vcf --geno 0.1 --maf 0.01 --out all.missing_maf --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:# --keep-allele-order\n\n## filter LD \nplink --vcf  all.missing_maf.vcf  --indep-pairwise 50 10 0.2 --out tmp.ld   --allow-extra-chr --set-missing-var-ids @:# \nplink --vcf  all.missing_maf.vcf  --make-bed --extract tmp.ld.prune.in  --out all.LDfilter --recode vcf-iid  --keep-allele-order  --allow-extra-chr --set-missing-var-ids @:#  \n\n```\n\n## 建树\n\n### NJ\n\n```shell\nperl  ../../script/vcf2phy.pl  ../../00.filter/all.LDfilter.vcf  > sequences.dat\n\necho -e \"sequences.dat\\nY\" > dnadist.cfg\n\ndnadist < dnadist.cfg  >dnadist.log\n\nmv outfile infile.dist\n\necho -e \"infile.dist\\nY\"  > neighbor.cfg\n\nneighbor  <  neighbor.cfg  >nj.log\n\nless infile.dist | tr '\\n' '|'| sed 's/| / /g' | tr '|' '\\n' >infile.dist.table\nless outtree | tr '\\n' ' '|sed 's/ //g' > outtree.nwk\n\n```\n\n### tree_snphylo\n\n```shell\n/pub/software/SNPhylo/snphylo.sh -v ../../00.filter/all.LDfilter.vcf -r -l 1 -m 0.01 -o GA0001 -b -B 2 -P tree_snphylo \n\n```\n\n## PCA\n\n```shell\nplink --vcf  ../00.filter/all.LDfilter.vcf --pca 10 --out  PCA_out   --allow-extra-chr --set-missing-var-ids @:# \n\nRscript ../script/draw_PCA.R  PCA_out.eigenvec 1 2  ../data/sample.pop  PCA_out_figure\n\n```\n\n## 群体结构\n\n```shell\n# step0.vcf2bed\nplink --vcf  ../00.filter/all.LDfilter.vcf  --make-bed --out all  --allow-extra-chr --keep-allele-order --set-missing-var-ids @:#\n\n# step1.get_Admix_shell\nseq 2 4 | awk '{print \"admixture --cv -j2 all.bed \"$1\" 1>admix.\"$1\".log 2>&1\"}' > admixture.sh\n\n# step2.run_admix\nsh admixture.sh\n\n# step3.draw_structure\nmkdir result\ncp  ./*.Q result/\nRscript  ../script/draw_admixture.R result all.nosex  structure \n\n# admixture\nadmixture --cv -j2 all.bed 2 1>admix.2.log 2>&1\nadmixture --cv -j2 all.bed 3 1>admix.3.log 2>&1\nadmixture --cv -j2 all.bed 4 1>admix.4.log 2>&1\n\n```\n\n## 遗传衰减\n\n```shell\n# step1.LD_calcu\n/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop  ../data/pop.SC.table -MaxDist 500 -OutStat pop.SC.stat\n/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop ../data/pop.YZR.table -MaxDist 500 -OutStat pop.YZR.stat\n\n# step2.draw_singlePlot\nperl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.SC.stat.gz -output pop.SC.ld\nperl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.YZR.stat.gz -output pop.YZR.ld\n\n# step3.draw_multiPlotare/PopLDdecay/bin/Plot_MultiPop.pl -inList ld_stat.list -output ld_stat.multi\n\n```\n\n## 选择分析\n\n### i_ROD\n\n```shell\n# step1.pi\nvcf=../../data/all.vcf\nwindow=20000\nstep=2000\nvcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.SC.table   --out ./Pi.pop1\nvcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.YZR.table  --out ./Pi.pop2\n\n# step2.ROD\npi1=Pi.pop1.windowed.pi\npi2=Pi.pop2.windowed.pi\nperl ../../script/merge2pi_ROD.pl $pi1 $pi2  >Pi.ROD \n\n```\n\n###  tajimaD\n\n```shell\nvcf=../../data/all.vcf\nwindow=20000\n\nvcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.SC.table  --out TajimaD.pop1\nvcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.YZR.table --out   TajimaD.pop2\n\n```\n\n### Fst\n\n```shell\nvcf=../../data/all.vcf\nwindow=20000\nstep=2000\nvcftools  --vcf $vcf --fst-window-size $window --fst-window-step $step  --weir-fst-pop  ../../data/pop.SC.table --weir-fst-pop ../../data/pop.YZR.table --out  ./Fst.pop1.pop2\n\n```\n\n### ROD_Fst\n\n```shell\nfst=../03.Fst/Fst.pop1.pop2.windowed.weir.fst\nROD=../01.pi_ROD/Pi.ROD\ngff=../../data/genome.gff\n\nperl ../../script/top_Fst_ROD_S.pl  $fst $ROD 0.05 0.05  Fst_ROD.table Fst_ROD.stat\n\nawk '$NF==\"top\"' Fst_ROD.table  > Fst_ROD.table.top\n\n\nawk '$3==\"gene\"' $gff > gene.gff\n\nbedtools  intersect -wo -F 0.1  -a  Fst_ROD.table.top -b gene.gff | awk -F \"\\t\"  '{print $7\"\\t\"$10\"\\t\"$11\"\\t\"$13\"\\t\"$15}' | sort -u  > Fst_ROD.table.top.gene\n\n```\n\n# GWAS\n\n## mpute\n\n```shell\nbeagle -Xmx4g  -Djava.io.tmpdir=./TMP  gt=../data/all.vcf   out=all.impute impute=true window=10 nthreads=2\n\n```\n\n## GWAS\n\n```shell\n# step1.prepare\n## prepare vcf\nplink --vcf ../data/all.vcf --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr\n\n\n## prepare phenotype\n\nperl ../script/sort_pheno.pl snp_filter.tfam ../data/trait.table > trait.sort.txt\n\n# step2.kinship\n/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter\n\n# step3.gwas\n/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1> emmax.log 2>emmax.err\n\n# draw_manhattan\npaste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print \"SNP\\tCHR\\tBP\\tP\"}{if($2==$5){print $2\"\\t\"$1\"\\t\"$4\"\\t\"$NF}}'  > emmax.out.ps.manht_input\nRscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure\n\n```\n\n## GWAS-Q\n\n```shell\n# step3.gwas\nln -s ../01.GWAS/snp_filter.tped\nln -s ../01.GWAS/snp_filter.tfam\nln -s ../01.GWAS/snp_filter.nosex\nln -s ../01.GWAS/snp_filter.map\n\nln -s ../01.GWAS/trait.sort.txt\nln -s ../../02.population_genetics/03.structure/all.3.Q\n\npaste snp_filter.nosex all.3.Q |awk '{print $1\" \"$1\" 1 \"$3\" \"$4}'  > pop.Qmatrix\n\n/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship -c pop.Qmatrix   -o emmax.out 1> emmax.log 2>emmax.err\n\n# step4.draw_manhattan\npaste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print \"SNP\\tCHR\\tBP\\tP\"}{if($2==$5){print $2\"\\t\"$1\"\\t\"$4\"\\t\"$NF}}'  > emmax.out.ps.manht_input\nRscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_Q\n\n```\n\n## GWAS_realData\n\n```less\n# step1.prepare\n## prepare vcf\nplink --vcf  ../data_real/Sample215.M5M8H3.2allel.vcf  --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr\n\n\n## prepare phenotype\n\nperl ../script/sort_pheno.pl snp_filter.tfam  ../data_real/trait.C16_0.table  > trait.sort.txt\n\n# step2.kinship\n/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter\n\n# step3.gwas\n/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1> emmax.log 2>emmax.err\n\n# step4.draw_manhattan\npaste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print \"SNP\\tCHR\\tBP\\tP\"}{if($2==$5){print $2\"\\t\"$1\"\\t\"$4\"\\t\"$NF}}'  > emmax.out.ps.manht_input\nRscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_readData\n\n```\n\n#  QTL-seq\n\n## change_VCF2Table\n\n```shell\nref=\nvcf=\noutfile=\ngatk  VariantsToTable -R  $ref -V $vcf -F CHROM -F POS -F REF -F ALT -GF AD -GF DP -GF GQ -GF PL -O  $outfile\n\n```\n\n## QTLSeq_Analysis\n\n```R\nlibrary(QTLseqr)\nlibrary(\"ggplot2\")\n\n\nHighBulk <- \"SRR834931\" ## 高值混池名称\nLowBulk <- \"SRR834927\"  ## 低值混池名称\nChroms <- paste0(rep(\"Chr\", 12), 1:12) ## 染色体列表\n\n## SNP数据读取\ndf <- importFromGATK(file = \"../data/Yang_et_al_2013.table\" ,\n    highBulk = HighBulk, # 指定高值混池\n    lowBulk = LowBulk, # 指定低至混池\n    chromList = Chroms # 指定分析用染色体列表\n    ) \n\n\n## 绘制深度分布图 \n\np1 <- ggplot(data = df) +\n  geom_histogram(aes(x = DP.HIGH + DP.LOW)) +\n  xlim(0,800)\n  \npdf(file=\"SNP_depth.pdf\")\np1\ndev.off()\n\n## 绘制ref等位基因频率分布图\np2 <- ggplot(data = df) +\n  geom_histogram(aes(x = REF_FRQ))\n  \npdf(file=\"ref_allele_frequency.pdf\")\np2\ndev.off()\n\n\n## 绘制高值混池SNP-index分布\np3 <- ggplot(data = df) +\n  geom_histogram(aes(x = SNPindex.HIGH))\npdf(file=\"SNPindex.HIGH.dis.pdf\")\np3\ndev.off()\n\n## 绘制低值混池SNP-index分布\np4 <- ggplot(data = df) +\n  geom_histogram(aes(x = SNPindex.LOW))\n\npdf(file=\"SNPindex.LOW.dis.pdf\")\np4\ndev.off()\n\n## SNP过滤\n\ndf_filt <- filterSNPs(\n    SNPset = df,\n    refAlleleFreq = 0.20, ## ref allele频率过滤，0.2表示0.2~0.8之间\n    minTotalDepth = 100, ## 最小深度过滤\n    maxTotalDepth = 400, ## 最大深度过滤\n    minSampleDepth = 40, ## 单个样品最小深度\n    minGQ = 99, ## genotype quality 过滤\n    verbose = TRUE  ## 输出日志\n  )\n\n## 进行deltaSNPindex 计算\ndf_filt <- runQTLseqAnalysis(df_filt,\n    windowSize = 1e6, ## 窗口大小\n    popStruc = \"F2\",  ## 群体类型，F2 或者RIL\n    bulkSize = c(385, 430), ## 混样个数，第一个高值组\n    replications = 10000, ## bootstrap次数\n    intervals = c(95, 99) ## 置信区间\n)\n\n\n## SNP 沿染色体分布图\np5 <- plotQTLStats(SNPset = df_filt, var = \"nSNPs\")\npdf(file=\"SNP_filter.window.pdf\", width = 20, height = 4)\np5\ndev.off()\n\n## deltaSNPindex沿染色体分布\np6 <- plotQTLStats(SNPset = df_filt, var = \"deltaSNP\", plotIntervals = TRUE)\npdf(file=\"deltaSNPindex.pdf\", width = 20, height = 4)\np6\ndev.off()\n\n## 提取显著性区域\nQTL <- getSigRegions(SNPset = df_filt, \n    method = \"QTLseq\", interval = 95)\n\n## 输出到文件\nwrite.table(QTL[[1]],\n    \"QTLseq_result.SigRegions.table\",\n    sep=\"\\t\",quote=F)\n\n## 提取QTLseq结果\nresults99 <- getQTLTable(\n  SNPset = df_filt,  \n  method = \"QTLseq\", \n  interval = 99,  ## 结果阈值\n  export = FALSE)\n\n## 输出到文件\nwrite.table(results99,\n    file=\"QTLseq_result_deltaSNPindex_CI99.table\" ,\n    sep=\"\\t\", quote = F)\n\n```\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/重测序分析脚本.md","raw":"---\ntitle: 重测序分析脚本\ndate: 2021-11-23 14:05:26\ncategories:\n- 生物信息学\n  - 群体遗传学\n  - Linux\ntags: \n- 生物信息学\n- Linux\ncover: /img/cover/popgene.jpg\n---\n\n<center><font face=arial bold size=10 color=black>重测序与群体遗传学</font></center>\n<center><font size=4 color=red>云南农业大学  云南生物资源保护与利用国家重点实验室</font></center>\n<center><font size=4 color=red>（李详  2019年12月31日）</font></center>\n\n---\n\n# 软件安装\n\n该部分软件很难用`conda`直接安装，安装步骤比较特殊。\n\n<!-- more -->\n\n## lumpy-sv\n\n```shell\nlumpy-sv 依赖 Python2.7，切换到py27环境下进行安装。\nconda activate py27\ngit clone --recursive https://github.com/arq5x/lumpy-sv.git\ncd lumpy-sv\nmake\n## 安装svtyper\nconda install svtyper\n```\n\n## cnvnator\n\n```shell\ncnvnator依赖于root软件包及samtools软件包(包含HTSlib)，因此先安装Samtools及root软件包。\n\n## 安装samtools\nwget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2\ntar -xvf samtools-1.9.tar.bz2\ncd samtools-1.9/\n./configure\nmake\n## 安装root软件, 直接下载后解压即可\nwget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz\ntar -zxvf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz\n## 安装cnvnator\ngit clone https://github.com/abyzovlab/CNVnator.git\ncd CNVnator\n## 链接samtools软件目录到cnvnator目录\nln -s ../samtools-1.9 ./samtools\n## 加载root软件到环境变量\nexport ROOTSYS=/pub/software/root\nexport PATH=/pub/software/root/bin:$PATH\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib\n## 安装cnvnator\nmake LIBS=\"-lcrypto\" \n\nless ../data/sample.list | awk '{ print \"bwa mem -t 2 -R '\\''@RG\\\\tID:\"$1\"\\\\tSM:\"$1\"\\\\tPL:illumina'\\'' ../01.ref/genome.fasta  ../data/\"$1\"_1.fq.gz ../data/\"$1\"_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o \"$1\".sort.bam -\" }'\n```\n\n# 变异检测\n\n## 构建基因组index\n\n```shell\n# create link\nln -s  ../data/genome.fasta  ./genome.fasta\n\n# for gatk\nsamtools faidx genome.fasta \n\n# for bwa\nbwa index  genome.fasta  \n\n# for picard\npicard CreateSequenceDictionary R=genome.fasta\n```\n\n## 比对排序去重\n\n```shell\n# 比对排序\nbwa mem -t 2 -R '@RG\\tID:S1\\tSM:S1\\tPL:illumina' ../01.ref/genome.fasta  ../data/S1_1.fq.gz ../data/S1_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S1.sort.bam -\nbwa mem -t 2 -R '@RG\\tID:S2\\tSM:S2\\tPL:illumina' ../01.ref/genome.fasta  ../data/S2_1.fq.gz ../data/S2_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S2.sort.bam -\n\n# 去除重复\npicard -Xmx4g  MarkDuplicates I=S1.sort.bam O=S1.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S1.marked_dup_metrics.txt\npicard -Xmx4g  MarkDuplicates I=S2.sort.bam O=S2.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S2.marked_dup_metrics.txt\n\n# 比对率统计\n/pub/software/samtools/samtools  flagstat  S1.sort.bam > S1.sort.bam.flagstat\n/pub/software/samtools/samtools  flagstat  S2.sort.bam > S2.sort.bam.flagstat\n```\n\n## SNP、Indel检测\n\n```shell\n# step1.HaplotypeCaller\ngatk --java-options \"-Xmx10g -Djava.io.tmpdir=./tmp\" HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S1.sort.rmdup.bam  -ERC GVCF -O S1.g.vcf 1>S1.HC.log   2>&1\ngatk --java-options \"-Xmx10g -Djava.io.tmpdir=./tmp\" HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S2.sort.rmdup.bam  -ERC GVCF -O S2.g.vcf 1>S2.HC.log   2>&1\n\n# step2.CombineGVCFs\nls ./S*.g.vcf > gvcf.list\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"    CombineGVCFs -R ../01.ref/genome.fasta -V gvcf.list  -O all.merge.g.vcf \n\n# step3.GenotypeGVCFs\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"   GenotypeGVCFs -R ../01.ref/genome.fasta --variant all.merge.g.vcf -O all.merge_raw.vcf\n\n# step4.SNP\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type SNP -O all.raw.snp.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.snp.vcf --filter-expression \"QD < 2.0 || MQ < 40.0 || FS > 60.0 || SOR > 3.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0\" --filter-name 'SNP_filter' -O all.filter.snp.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.snp.vcf --exclude-filtered  -O all.filtered.snp.vcf\n\n# step5.InDel\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type INDEL -O all.raw.indel.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.indel.vcf --filter-expression \"QD < 2.0 || FS > 200.0 || SOR > 10.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0\" --filter-name 'INDEL_filter' -O all.filter.indel.vcf\n\ngatk  --java-options \"-Xmx4g -Djava.io.tmpdir=./tmp\"  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.indel.vcf  --exclude-filtered   -O all.filtered.indel.vcf\n```\n\n## SV检测\n\n```shell\n# step1.discordants_bam\n/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S1.sort.rmdup.bam > S1.discordants.bam\n/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S2.sort.rmdup.bam > S2.discordants.bam\n\n# step2.splitters_bam\n/pub/software/samtools/samtools view -h ../02.mapping/S1.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   > S1.splitters.bam\n/pub/software/samtools/samtools view -h ../02.mapping/S2.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   > S2.splitters.bam\n\n# step3.lumpy\n/pub/software/lumpy-sv/bin/lumpyexpress -B ../02.mapping/S1.sort.rmdup.bam,../02.mapping/S2.sort.rmdup.bam  -S S1.splitters.bam,S2.splitters.bam   -D S1.discordants.bam,S2.discordants.bam -o all.sv.lumpy.vcf\n\n# step4.ind_genotype\nvcftools --vcf all.sv.lumpy.vcf --indv S1 --recode --recode-INFO-all --out S1 && svtyper -i S1.recode.vcf -B ../02.mapping/S1.sort.rmdup.bam  -o S1.genotype.vcf\nvcftools --vcf all.sv.lumpy.vcf --indv S2 --recode --recode-INFO-all --out S2 && svtyper -i S2.recode.vcf -B ../02.mapping/S2.sort.rmdup.bam  -o S2.genotype.vcf\n```\n\n## CNV检测\n\n```shell\n# step1.prepare_genome\n\n## split genome into single sequence\n\n ln -s  ../data/genome.fasta ./genome.fa\n\n seqkit split -i ./genome.fa  -O split\n\n ls ./split/genome.id_*.fa |sed 's/\\.\\/split\\/genome\\.id_//' |awk '{print \"mv ./split/genome.id_\"$aa\"  ./split/\"$aa}' > mv_name.sh\n\n sh mv_name.sh\n\n# step2.cnvnator\nexport ROOTSYS=/pub/software/root\nexport PATH=/pub/software/root/bin:$PATH\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib\n\n## 链接文件到当前目录\nln -s ../02.mapping/S1.sort.rmdup.bam \n\n## 提取比对结果\n/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -tree S1.sort.rmdup.bam\n\n##生成深度分布\n/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -his 500  -d split\n\n## 进行统计计算\n/pub/software/CNVnator/cnvnator -root S1.root -stat 500\n\n## 检查bin size是否合适\n/pub/software/CNVnator/cnvnator -root S1.root -eval 500  > S1.eval.ratio \n\n## RD信号分割\n/pub/software/CNVnator/cnvnator -root S1.root -partition 500\n\n## 进行CNV检测\n/pub/software/CNVnator/cnvnator -root S1.root  -call 500 > S1.cnv\n```\n\n## SNP INDEL注释\n\n```shell\n# step1.prepare_genome\nln -s ../data/genome.gtf \nln -s ../data/genome.fasta\n\ngtfToGenePred  -genePredExt genome.gtf genome_refGene.txt\n/pub/software/annovar/retrieve_seq_from_fasta.pl --format refGene --seqfile genome.fasta genome_refGene.txt --out genome_refGeneMrna.fa\n\n#step2.ann_vcf\nln -s  ../03.SNP_indel/all.filtered.snp.vcf \n\n/pub/software/annovar/convert2annovar.pl -format vcf4old all.filtered.snp.vcf  >all.snp.vcf.annovar.input\n\n/pub/software/annovar/annotate_variation.pl -geneanno --neargene 2000 -buildver genome -dbtype refGene -outfile all.anno -exonsort all.snp.vcf.annovar.input ./\n```\n\n## CNV和SV注释\n\n```shell\nless -S ../04.SV/all.sv.lumpy.vcf|awk -F \";\" '{ if($1!~/#/){print $1\"\\t\"$2\"\\t\"$3\"\\t\"$4} }'|awk '{print $1\"\\t\"$2\"\\t\"$11\"\\t\"$3\"\\t\"$8}'|sed 's/END=//' |sed 's/SVTYPE=//'| awk '$3<$2' > SV.bed\nless -S ../04.SV/all.sv.lumpy.vcf|awk -F \";\" '{ if($1!~/#/){print $1\"\\t\"$2\"\\t\"$3\"\\t\"$4} }'|awk '{print $1\"\\t\"$2\"\\t\"$11\"\\t\"$3\"\\t\"$8}'|sed 's/END=//' |sed 's/SVTYPE=//'  > SV.bed\nawk '$5 !~ /BND/' SV.bed >  SV_filter.bed\nbedtools  intersect -wo  -a SV_filter.bed -b gene.gtf  > SV_filter.Anno\nless -S ../05.CNV/S1.cnv | awk '{print $2 \"\\t\" $1}'|sed 's/:/\\t/'|sed 's/-/\\t/' > CNV.bed\nbedtools  intersect -wo  -a  CNV.bed  -b gene.gtf > CNV.Anno\n\n```\n\n# 群体结构\n\n## 过滤\n\n```shell\nvcf=../data/all.vcf\n\n## filter missing and maf\nplink --vcf  $vcf --geno 0.1 --maf 0.01 --out all.missing_maf --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:# --keep-allele-order\n\n## filter LD \nplink --vcf  all.missing_maf.vcf  --indep-pairwise 50 10 0.2 --out tmp.ld   --allow-extra-chr --set-missing-var-ids @:# \nplink --vcf  all.missing_maf.vcf  --make-bed --extract tmp.ld.prune.in  --out all.LDfilter --recode vcf-iid  --keep-allele-order  --allow-extra-chr --set-missing-var-ids @:#  \n\n```\n\n## 建树\n\n### NJ\n\n```shell\nperl  ../../script/vcf2phy.pl  ../../00.filter/all.LDfilter.vcf  > sequences.dat\n\necho -e \"sequences.dat\\nY\" > dnadist.cfg\n\ndnadist < dnadist.cfg  >dnadist.log\n\nmv outfile infile.dist\n\necho -e \"infile.dist\\nY\"  > neighbor.cfg\n\nneighbor  <  neighbor.cfg  >nj.log\n\nless infile.dist | tr '\\n' '|'| sed 's/| / /g' | tr '|' '\\n' >infile.dist.table\nless outtree | tr '\\n' ' '|sed 's/ //g' > outtree.nwk\n\n```\n\n### tree_snphylo\n\n```shell\n/pub/software/SNPhylo/snphylo.sh -v ../../00.filter/all.LDfilter.vcf -r -l 1 -m 0.01 -o GA0001 -b -B 2 -P tree_snphylo \n\n```\n\n## PCA\n\n```shell\nplink --vcf  ../00.filter/all.LDfilter.vcf --pca 10 --out  PCA_out   --allow-extra-chr --set-missing-var-ids @:# \n\nRscript ../script/draw_PCA.R  PCA_out.eigenvec 1 2  ../data/sample.pop  PCA_out_figure\n\n```\n\n## 群体结构\n\n```shell\n# step0.vcf2bed\nplink --vcf  ../00.filter/all.LDfilter.vcf  --make-bed --out all  --allow-extra-chr --keep-allele-order --set-missing-var-ids @:#\n\n# step1.get_Admix_shell\nseq 2 4 | awk '{print \"admixture --cv -j2 all.bed \"$1\" 1>admix.\"$1\".log 2>&1\"}' > admixture.sh\n\n# step2.run_admix\nsh admixture.sh\n\n# step3.draw_structure\nmkdir result\ncp  ./*.Q result/\nRscript  ../script/draw_admixture.R result all.nosex  structure \n\n# admixture\nadmixture --cv -j2 all.bed 2 1>admix.2.log 2>&1\nadmixture --cv -j2 all.bed 3 1>admix.3.log 2>&1\nadmixture --cv -j2 all.bed 4 1>admix.4.log 2>&1\n\n```\n\n## 遗传衰减\n\n```shell\n# step1.LD_calcu\n/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop  ../data/pop.SC.table -MaxDist 500 -OutStat pop.SC.stat\n/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop ../data/pop.YZR.table -MaxDist 500 -OutStat pop.YZR.stat\n\n# step2.draw_singlePlot\nperl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.SC.stat.gz -output pop.SC.ld\nperl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.YZR.stat.gz -output pop.YZR.ld\n\n# step3.draw_multiPlotare/PopLDdecay/bin/Plot_MultiPop.pl -inList ld_stat.list -output ld_stat.multi\n\n```\n\n## 选择分析\n\n### i_ROD\n\n```shell\n# step1.pi\nvcf=../../data/all.vcf\nwindow=20000\nstep=2000\nvcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.SC.table   --out ./Pi.pop1\nvcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.YZR.table  --out ./Pi.pop2\n\n# step2.ROD\npi1=Pi.pop1.windowed.pi\npi2=Pi.pop2.windowed.pi\nperl ../../script/merge2pi_ROD.pl $pi1 $pi2  >Pi.ROD \n\n```\n\n###  tajimaD\n\n```shell\nvcf=../../data/all.vcf\nwindow=20000\n\nvcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.SC.table  --out TajimaD.pop1\nvcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.YZR.table --out   TajimaD.pop2\n\n```\n\n### Fst\n\n```shell\nvcf=../../data/all.vcf\nwindow=20000\nstep=2000\nvcftools  --vcf $vcf --fst-window-size $window --fst-window-step $step  --weir-fst-pop  ../../data/pop.SC.table --weir-fst-pop ../../data/pop.YZR.table --out  ./Fst.pop1.pop2\n\n```\n\n### ROD_Fst\n\n```shell\nfst=../03.Fst/Fst.pop1.pop2.windowed.weir.fst\nROD=../01.pi_ROD/Pi.ROD\ngff=../../data/genome.gff\n\nperl ../../script/top_Fst_ROD_S.pl  $fst $ROD 0.05 0.05  Fst_ROD.table Fst_ROD.stat\n\nawk '$NF==\"top\"' Fst_ROD.table  > Fst_ROD.table.top\n\n\nawk '$3==\"gene\"' $gff > gene.gff\n\nbedtools  intersect -wo -F 0.1  -a  Fst_ROD.table.top -b gene.gff | awk -F \"\\t\"  '{print $7\"\\t\"$10\"\\t\"$11\"\\t\"$13\"\\t\"$15}' | sort -u  > Fst_ROD.table.top.gene\n\n```\n\n# GWAS\n\n## mpute\n\n```shell\nbeagle -Xmx4g  -Djava.io.tmpdir=./TMP  gt=../data/all.vcf   out=all.impute impute=true window=10 nthreads=2\n\n```\n\n## GWAS\n\n```shell\n# step1.prepare\n## prepare vcf\nplink --vcf ../data/all.vcf --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr\n\n\n## prepare phenotype\n\nperl ../script/sort_pheno.pl snp_filter.tfam ../data/trait.table > trait.sort.txt\n\n# step2.kinship\n/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter\n\n# step3.gwas\n/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1> emmax.log 2>emmax.err\n\n# draw_manhattan\npaste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print \"SNP\\tCHR\\tBP\\tP\"}{if($2==$5){print $2\"\\t\"$1\"\\t\"$4\"\\t\"$NF}}'  > emmax.out.ps.manht_input\nRscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure\n\n```\n\n## GWAS-Q\n\n```shell\n# step3.gwas\nln -s ../01.GWAS/snp_filter.tped\nln -s ../01.GWAS/snp_filter.tfam\nln -s ../01.GWAS/snp_filter.nosex\nln -s ../01.GWAS/snp_filter.map\n\nln -s ../01.GWAS/trait.sort.txt\nln -s ../../02.population_genetics/03.structure/all.3.Q\n\npaste snp_filter.nosex all.3.Q |awk '{print $1\" \"$1\" 1 \"$3\" \"$4}'  > pop.Qmatrix\n\n/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship -c pop.Qmatrix   -o emmax.out 1> emmax.log 2>emmax.err\n\n# step4.draw_manhattan\npaste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print \"SNP\\tCHR\\tBP\\tP\"}{if($2==$5){print $2\"\\t\"$1\"\\t\"$4\"\\t\"$NF}}'  > emmax.out.ps.manht_input\nRscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_Q\n\n```\n\n## GWAS_realData\n\n```less\n# step1.prepare\n## prepare vcf\nplink --vcf  ../data_real/Sample215.M5M8H3.2allel.vcf  --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr\n\n\n## prepare phenotype\n\nperl ../script/sort_pheno.pl snp_filter.tfam  ../data_real/trait.C16_0.table  > trait.sort.txt\n\n# step2.kinship\n/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter\n\n# step3.gwas\n/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1> emmax.log 2>emmax.err\n\n# step4.draw_manhattan\npaste  snp_filter.map  emmax.out.ps | awk  'BEGIN{print \"SNP\\tCHR\\tBP\\tP\"}{if($2==$5){print $2\"\\t\"$1\"\\t\"$4\"\\t\"$NF}}'  > emmax.out.ps.manht_input\nRscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_readData\n\n```\n\n#  QTL-seq\n\n## change_VCF2Table\n\n```shell\nref=\nvcf=\noutfile=\ngatk  VariantsToTable -R  $ref -V $vcf -F CHROM -F POS -F REF -F ALT -GF AD -GF DP -GF GQ -GF PL -O  $outfile\n\n```\n\n## QTLSeq_Analysis\n\n```R\nlibrary(QTLseqr)\nlibrary(\"ggplot2\")\n\n\nHighBulk <- \"SRR834931\" ## 高值混池名称\nLowBulk <- \"SRR834927\"  ## 低值混池名称\nChroms <- paste0(rep(\"Chr\", 12), 1:12) ## 染色体列表\n\n## SNP数据读取\ndf <- importFromGATK(file = \"../data/Yang_et_al_2013.table\" ,\n    highBulk = HighBulk, # 指定高值混池\n    lowBulk = LowBulk, # 指定低至混池\n    chromList = Chroms # 指定分析用染色体列表\n    ) \n\n\n## 绘制深度分布图 \n\np1 <- ggplot(data = df) +\n  geom_histogram(aes(x = DP.HIGH + DP.LOW)) +\n  xlim(0,800)\n  \npdf(file=\"SNP_depth.pdf\")\np1\ndev.off()\n\n## 绘制ref等位基因频率分布图\np2 <- ggplot(data = df) +\n  geom_histogram(aes(x = REF_FRQ))\n  \npdf(file=\"ref_allele_frequency.pdf\")\np2\ndev.off()\n\n\n## 绘制高值混池SNP-index分布\np3 <- ggplot(data = df) +\n  geom_histogram(aes(x = SNPindex.HIGH))\npdf(file=\"SNPindex.HIGH.dis.pdf\")\np3\ndev.off()\n\n## 绘制低值混池SNP-index分布\np4 <- ggplot(data = df) +\n  geom_histogram(aes(x = SNPindex.LOW))\n\npdf(file=\"SNPindex.LOW.dis.pdf\")\np4\ndev.off()\n\n## SNP过滤\n\ndf_filt <- filterSNPs(\n    SNPset = df,\n    refAlleleFreq = 0.20, ## ref allele频率过滤，0.2表示0.2~0.8之间\n    minTotalDepth = 100, ## 最小深度过滤\n    maxTotalDepth = 400, ## 最大深度过滤\n    minSampleDepth = 40, ## 单个样品最小深度\n    minGQ = 99, ## genotype quality 过滤\n    verbose = TRUE  ## 输出日志\n  )\n\n## 进行deltaSNPindex 计算\ndf_filt <- runQTLseqAnalysis(df_filt,\n    windowSize = 1e6, ## 窗口大小\n    popStruc = \"F2\",  ## 群体类型，F2 或者RIL\n    bulkSize = c(385, 430), ## 混样个数，第一个高值组\n    replications = 10000, ## bootstrap次数\n    intervals = c(95, 99) ## 置信区间\n)\n\n\n## SNP 沿染色体分布图\np5 <- plotQTLStats(SNPset = df_filt, var = \"nSNPs\")\npdf(file=\"SNP_filter.window.pdf\", width = 20, height = 4)\np5\ndev.off()\n\n## deltaSNPindex沿染色体分布\np6 <- plotQTLStats(SNPset = df_filt, var = \"deltaSNP\", plotIntervals = TRUE)\npdf(file=\"deltaSNPindex.pdf\", width = 20, height = 4)\np6\ndev.off()\n\n## 提取显著性区域\nQTL <- getSigRegions(SNPset = df_filt, \n    method = \"QTLseq\", interval = 95)\n\n## 输出到文件\nwrite.table(QTL[[1]],\n    \"QTLseq_result.SigRegions.table\",\n    sep=\"\\t\",quote=F)\n\n## 提取QTLseq结果\nresults99 <- getQTLTable(\n  SNPset = df_filt,  \n  method = \"QTLseq\", \n  interval = 99,  ## 结果阈值\n  export = FALSE)\n\n## 输出到文件\nwrite.table(results99,\n    file=\"QTLseq_result_deltaSNPindex_CI99.table\" ,\n    sep=\"\\t\", quote = F)\n\n```\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"重测序分析脚本","published":1,"updated":"2021-11-23T06:46:24.633Z","_id":"ckwbpbhbc000048g03lhl7n46","comments":1,"layout":"post","photos":[],"link":"","content":"<center><font face=arial bold size=10 color=black>重测序与群体遗传学</font></center>\n<center><font size=4 color=red>云南农业大学  云南生物资源保护与利用国家重点实验室</font></center>\n<center><font size=4 color=red>（李详  2019年12月31日）</font></center>\n\n<hr>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><p>该部分软件很难用<code>conda</code>直接安装，安装步骤比较特殊。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"lumpy-sv\"><a href=\"#lumpy-sv\" class=\"headerlink\" title=\"lumpy-sv\"></a>lumpy-sv</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lumpy-sv 依赖 Python2.7，切换到py27环境下进行安装。</span><br><span class=\"line\">conda activate py27</span><br><span class=\"line\">git clone --recursive https://github.com/arq5x/lumpy-sv.git</span><br><span class=\"line\">cd lumpy-sv</span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装svtyper</span></span></span><br><span class=\"line\">conda install svtyper</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cnvnator\"><a href=\"#cnvnator\" class=\"headerlink\" title=\"cnvnator\"></a>cnvnator</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnvnator依赖于root软件包及samtools软件包(包含HTSlib)，因此先安装Samtools及root软件包。</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装samtools</span></span></span><br><span class=\"line\">wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2</span><br><span class=\"line\">tar -xvf samtools-1.9.tar.bz2</span><br><span class=\"line\">cd samtools-1.9/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装root软件, 直接下载后解压即可</span></span></span><br><span class=\"line\">wget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz</span><br><span class=\"line\">tar -zxvf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装cnvnator</span></span></span><br><span class=\"line\">git clone https://github.com/abyzovlab/CNVnator.git</span><br><span class=\"line\">cd CNVnator</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 链接samtools软件目录到cnvnator目录</span></span></span><br><span class=\"line\">ln -s ../samtools-1.9 ./samtools</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 加载root软件到环境变量</span></span></span><br><span class=\"line\">export ROOTSYS=/pub/software/root</span><br><span class=\"line\">export PATH=/pub/software/root/bin:$PATH</span><br><span class=\"line\">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装cnvnator</span></span></span><br><span class=\"line\">make LIBS=&quot;-lcrypto&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">less ../data/sample.list | awk &#x27;&#123; print &quot;bwa mem -t 2 -R &#x27;\\&#x27;&#x27;@RG\\\\tID:&quot;$1&quot;\\\\tSM:&quot;$1&quot;\\\\tPL:illumina&#x27;\\&#x27;&#x27; ../01.ref/genome.fasta  ../data/&quot;$1&quot;_1.fq.gz ../data/&quot;$1&quot;_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o &quot;$1&quot;.sort.bam -&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"变异检测\"><a href=\"#变异检测\" class=\"headerlink\" title=\"变异检测\"></a>变异检测</h1><h2 id=\"构建基因组index\"><a href=\"#构建基因组index\" class=\"headerlink\" title=\"构建基因组index\"></a>构建基因组index</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> create link</span></span><br><span class=\"line\">ln -s  ../data/genome.fasta  ./genome.fasta</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">for</span> gatk</span></span><br><span class=\"line\">samtools faidx genome.fasta </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">for</span> bwa</span></span><br><span class=\"line\">bwa index  genome.fasta  </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">for</span> picard</span></span><br><span class=\"line\">picard CreateSequenceDictionary R=genome.fasta</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"比对排序去重\"><a href=\"#比对排序去重\" class=\"headerlink\" title=\"比对排序去重\"></a>比对排序去重</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 比对排序</span></span><br><span class=\"line\">bwa mem -t 2 -R &#x27;@RG\\tID:S1\\tSM:S1\\tPL:illumina&#x27; ../01.ref/genome.fasta  ../data/S1_1.fq.gz ../data/S1_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S1.sort.bam -</span><br><span class=\"line\">bwa mem -t 2 -R &#x27;@RG\\tID:S2\\tSM:S2\\tPL:illumina&#x27; ../01.ref/genome.fasta  ../data/S2_1.fq.gz ../data/S2_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S2.sort.bam -</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 去除重复</span></span><br><span class=\"line\">picard -Xmx4g  MarkDuplicates I=S1.sort.bam O=S1.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S1.marked_dup_metrics.txt</span><br><span class=\"line\">picard -Xmx4g  MarkDuplicates I=S2.sort.bam O=S2.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S2.marked_dup_metrics.txt</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 比对率统计</span></span><br><span class=\"line\">/pub/software/samtools/samtools  flagstat  S1.sort.bam &gt; S1.sort.bam.flagstat</span><br><span class=\"line\">/pub/software/samtools/samtools  flagstat  S2.sort.bam &gt; S2.sort.bam.flagstat</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SNP、Indel检测\"><a href=\"#SNP、Indel检测\" class=\"headerlink\" title=\"SNP、Indel检测\"></a>SNP、Indel检测</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.HaplotypeCaller</span></span><br><span class=\"line\">gatk --java-options &quot;-Xmx10g -Djava.io.tmpdir=./tmp&quot; HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S1.sort.rmdup.bam  -ERC GVCF -O S1.g.vcf 1&gt;S1.HC.log   2&gt;&amp;1</span><br><span class=\"line\">gatk --java-options &quot;-Xmx10g -Djava.io.tmpdir=./tmp&quot; HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S2.sort.rmdup.bam  -ERC GVCF -O S2.g.vcf 1&gt;S2.HC.log   2&gt;&amp;1</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.CombineGVCFs</span></span><br><span class=\"line\">ls ./S*.g.vcf &gt; gvcf.list</span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;    CombineGVCFs -R ../01.ref/genome.fasta -V gvcf.list  -O all.merge.g.vcf </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.GenotypeGVCFs</span></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;   GenotypeGVCFs -R ../01.ref/genome.fasta --variant all.merge.g.vcf -O all.merge_raw.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step4.SNP</span></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type SNP -O all.raw.snp.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.snp.vcf --filter-expression &quot;QD &lt; 2.0 || MQ &lt; 40.0 || FS &gt; 60.0 || SOR &gt; 3.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0&quot; --filter-name &#x27;SNP_filter&#x27; -O all.filter.snp.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.snp.vcf --exclude-filtered  -O all.filtered.snp.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step5.InDel</span></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type INDEL -O all.raw.indel.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.indel.vcf --filter-expression &quot;QD &lt; 2.0 || FS &gt; 200.0 || SOR &gt; 10.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0&quot; --filter-name &#x27;INDEL_filter&#x27; -O all.filter.indel.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.indel.vcf  --exclude-filtered   -O all.filtered.indel.vcf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SV检测\"><a href=\"#SV检测\" class=\"headerlink\" title=\"SV检测\"></a>SV检测</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.discordants_bam</span></span><br><span class=\"line\">/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S1.sort.rmdup.bam &gt; S1.discordants.bam</span><br><span class=\"line\">/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S2.sort.rmdup.bam &gt; S2.discordants.bam</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.splitters_bam</span></span><br><span class=\"line\">/pub/software/samtools/samtools view -h ../02.mapping/S1.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   &gt; S1.splitters.bam</span><br><span class=\"line\">/pub/software/samtools/samtools view -h ../02.mapping/S2.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   &gt; S2.splitters.bam</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.lumpy</span></span><br><span class=\"line\">/pub/software/lumpy-sv/bin/lumpyexpress -B ../02.mapping/S1.sort.rmdup.bam,../02.mapping/S2.sort.rmdup.bam  -S S1.splitters.bam,S2.splitters.bam   -D S1.discordants.bam,S2.discordants.bam -o all.sv.lumpy.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step4.ind_genotype</span></span><br><span class=\"line\">vcftools --vcf all.sv.lumpy.vcf --indv S1 --recode --recode-INFO-all --out S1 &amp;&amp; svtyper -i S1.recode.vcf -B ../02.mapping/S1.sort.rmdup.bam  -o S1.genotype.vcf</span><br><span class=\"line\">vcftools --vcf all.sv.lumpy.vcf --indv S2 --recode --recode-INFO-all --out S2 &amp;&amp; svtyper -i S2.recode.vcf -B ../02.mapping/S2.sort.rmdup.bam  -o S2.genotype.vcf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CNV检测\"><a href=\"#CNV检测\" class=\"headerlink\" title=\"CNV检测\"></a>CNV检测</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.prepare_genome</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># split genome into single sequence</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"> ln -s  ../data/genome.fasta ./genome.fa</span><br><span class=\"line\"></span><br><span class=\"line\"> seqkit split -i ./genome.fa  -O split</span><br><span class=\"line\"></span><br><span class=\"line\"> ls ./split/genome.id_*.fa |sed &#x27;s/\\.\\/split\\/genome\\.id_//&#x27; |awk &#x27;&#123;print &quot;mv ./split/genome.id_&quot;$aa&quot;  ./split/&quot;$aa&#125;&#x27; &gt; mv_name.sh</span><br><span class=\"line\"></span><br><span class=\"line\"> sh mv_name.sh</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.cnvnator</span></span><br><span class=\"line\">export ROOTSYS=/pub/software/root</span><br><span class=\"line\">export PATH=/pub/software/root/bin:$PATH</span><br><span class=\"line\">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 链接文件到当前目录</span></span></span><br><span class=\"line\">ln -s ../02.mapping/S1.sort.rmdup.bam </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 提取比对结果</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -tree S1.sort.rmdup.bam</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#生成深度分布</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -his 500  -d split</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 进行统计计算</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root -stat 500</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 检查bin size是否合适</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root -eval 500  &gt; S1.eval.ratio </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># RD信号分割</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root -partition 500</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 进行CNV检测</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root  -call 500 &gt; S1.cnv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SNP-INDEL注释\"><a href=\"#SNP-INDEL注释\" class=\"headerlink\" title=\"SNP INDEL注释\"></a>SNP INDEL注释</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.prepare_genome</span></span><br><span class=\"line\">ln -s ../data/genome.gtf </span><br><span class=\"line\">ln -s ../data/genome.fasta</span><br><span class=\"line\"></span><br><span class=\"line\">gtfToGenePred  -genePredExt genome.gtf genome_refGene.txt</span><br><span class=\"line\">/pub/software/annovar/retrieve_seq_from_fasta.pl --format refGene --seqfile genome.fasta genome_refGene.txt --out genome_refGeneMrna.fa</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">step2.ann_vcf</span></span><br><span class=\"line\">ln -s  ../03.SNP_indel/all.filtered.snp.vcf </span><br><span class=\"line\"></span><br><span class=\"line\">/pub/software/annovar/convert2annovar.pl -format vcf4old all.filtered.snp.vcf  &gt;all.snp.vcf.annovar.input</span><br><span class=\"line\"></span><br><span class=\"line\">/pub/software/annovar/annotate_variation.pl -geneanno --neargene 2000 -buildver genome -dbtype refGene -outfile all.anno -exonsort all.snp.vcf.annovar.input ./</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CNV和SV注释\"><a href=\"#CNV和SV注释\" class=\"headerlink\" title=\"CNV和SV注释\"></a>CNV和SV注释</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less -S ../04.SV/all.sv.lumpy.vcf|awk -F &quot;;&quot; &#x27;&#123; if($1!~/#/)&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$3&quot;\\t&quot;$4&#125; &#125;&#x27;|awk &#x27;&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$11&quot;\\t&quot;$3&quot;\\t&quot;$8&#125;&#x27;|sed &#x27;s/END=//&#x27; |sed &#x27;s/SVTYPE=//&#x27;| awk &#x27;$3&lt;$2&#x27; &gt; SV.bed</span><br><span class=\"line\">less -S ../04.SV/all.sv.lumpy.vcf|awk -F &quot;;&quot; &#x27;&#123; if($1!~/#/)&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$3&quot;\\t&quot;$4&#125; &#125;&#x27;|awk &#x27;&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$11&quot;\\t&quot;$3&quot;\\t&quot;$8&#125;&#x27;|sed &#x27;s/END=//&#x27; |sed &#x27;s/SVTYPE=//&#x27;  &gt; SV.bed</span><br><span class=\"line\">awk &#x27;$5 !~ /BND/&#x27; SV.bed &gt;  SV_filter.bed</span><br><span class=\"line\">bedtools  intersect -wo  -a SV_filter.bed -b gene.gtf  &gt; SV_filter.Anno</span><br><span class=\"line\">less -S ../05.CNV/S1.cnv | awk &#x27;&#123;print $2 &quot;\\t&quot; $1&#125;&#x27;|sed &#x27;s/:/\\t/&#x27;|sed &#x27;s/-/\\t/&#x27; &gt; CNV.bed</span><br><span class=\"line\">bedtools  intersect -wo  -a  CNV.bed  -b gene.gtf &gt; CNV.Anno</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"群体结构\"><a href=\"#群体结构\" class=\"headerlink\" title=\"群体结构\"></a>群体结构</h1><h2 id=\"过滤\"><a href=\"#过滤\" class=\"headerlink\" title=\"过滤\"></a>过滤</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vcf=../data/all.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># filter missing and maf</span></span></span><br><span class=\"line\">plink --vcf  $vcf --geno 0.1 --maf 0.01 --out all.missing_maf --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:# --keep-allele-order</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># filter LD</span></span> </span><br><span class=\"line\">plink --vcf  all.missing_maf.vcf  --indep-pairwise 50 10 0.2 --out tmp.ld   --allow-extra-chr --set-missing-var-ids @:# </span><br><span class=\"line\">plink --vcf  all.missing_maf.vcf  --make-bed --extract tmp.ld.prune.in  --out all.LDfilter --recode vcf-iid  --keep-allele-order  --allow-extra-chr --set-missing-var-ids @:#  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建树\"><a href=\"#建树\" class=\"headerlink\" title=\"建树\"></a>建树</h2><h3 id=\"NJ\"><a href=\"#NJ\" class=\"headerlink\" title=\"NJ\"></a>NJ</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl  ../../script/vcf2phy.pl  ../../00.filter/all.LDfilter.vcf  &gt; sequences.dat</span><br><span class=\"line\"></span><br><span class=\"line\">echo -e &quot;sequences.dat\\nY&quot; &gt; dnadist.cfg</span><br><span class=\"line\"></span><br><span class=\"line\">dnadist &lt; dnadist.cfg  &gt;dnadist.log</span><br><span class=\"line\"></span><br><span class=\"line\">mv outfile infile.dist</span><br><span class=\"line\"></span><br><span class=\"line\">echo -e &quot;infile.dist\\nY&quot;  &gt; neighbor.cfg</span><br><span class=\"line\"></span><br><span class=\"line\">neighbor  &lt;  neighbor.cfg  &gt;nj.log</span><br><span class=\"line\"></span><br><span class=\"line\">less infile.dist | tr &#x27;\\n&#x27; &#x27;|&#x27;| sed &#x27;s/| / /g&#x27; | tr &#x27;|&#x27; &#x27;\\n&#x27; &gt;infile.dist.table</span><br><span class=\"line\">less outtree | tr &#x27;\\n&#x27; &#x27; &#x27;|sed &#x27;s/ //g&#x27; &gt; outtree.nwk</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"tree-snphylo\"><a href=\"#tree-snphylo\" class=\"headerlink\" title=\"tree_snphylo\"></a>tree_snphylo</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/pub/software/SNPhylo/snphylo.sh -v ../../00.filter/all.LDfilter.vcf -r -l 1 -m 0.01 -o GA0001 -b -B 2 -P tree_snphylo </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PCA\"><a href=\"#PCA\" class=\"headerlink\" title=\"PCA\"></a>PCA</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plink --vcf  ../00.filter/all.LDfilter.vcf --pca 10 --out  PCA_out   --allow-extra-chr --set-missing-var-ids @:# </span><br><span class=\"line\"></span><br><span class=\"line\">Rscript ../script/draw_PCA.R  PCA_out.eigenvec 1 2  ../data/sample.pop  PCA_out_figure</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"群体结构-1\"><a href=\"#群体结构-1\" class=\"headerlink\" title=\"群体结构\"></a>群体结构</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step0.vcf2bed</span></span><br><span class=\"line\">plink --vcf  ../00.filter/all.LDfilter.vcf  --make-bed --out all  --allow-extra-chr --keep-allele-order --set-missing-var-ids @:#</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.get_Admix_shell</span></span><br><span class=\"line\">seq 2 4 | awk &#x27;&#123;print &quot;admixture --cv -j2 all.bed &quot;$1&quot; 1&gt;admix.&quot;$1&quot;.log 2&gt;&amp;1&quot;&#125;&#x27; &gt; admixture.sh</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.run_admix</span></span><br><span class=\"line\">sh admixture.sh</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.draw_structure</span></span><br><span class=\"line\">mkdir result</span><br><span class=\"line\">cp  ./*.Q result/</span><br><span class=\"line\">Rscript  ../script/draw_admixture.R result all.nosex  structure </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> admixture</span></span><br><span class=\"line\">admixture --cv -j2 all.bed 2 1&gt;admix.2.log 2&gt;&amp;1</span><br><span class=\"line\">admixture --cv -j2 all.bed 3 1&gt;admix.3.log 2&gt;&amp;1</span><br><span class=\"line\">admixture --cv -j2 all.bed 4 1&gt;admix.4.log 2&gt;&amp;1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遗传衰减\"><a href=\"#遗传衰减\" class=\"headerlink\" title=\"遗传衰减\"></a>遗传衰减</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.LD_calcu</span></span><br><span class=\"line\">/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop  ../data/pop.SC.table -MaxDist 500 -OutStat pop.SC.stat</span><br><span class=\"line\">/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop ../data/pop.YZR.table -MaxDist 500 -OutStat pop.YZR.stat</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.draw_singlePlot</span></span><br><span class=\"line\">perl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.SC.stat.gz -output pop.SC.ld</span><br><span class=\"line\">perl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.YZR.stat.gz -output pop.YZR.ld</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.draw_multiPlotare/PopLDdecay/bin/Plot_MultiPop.pl -inList ld_stat.list -output ld_stat.multi</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择分析\"><a href=\"#选择分析\" class=\"headerlink\" title=\"选择分析\"></a>选择分析</h2><h3 id=\"i-ROD\"><a href=\"#i-ROD\" class=\"headerlink\" title=\"i_ROD\"></a>i_ROD</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.pi</span></span><br><span class=\"line\">vcf=../../data/all.vcf</span><br><span class=\"line\">window=20000</span><br><span class=\"line\">step=2000</span><br><span class=\"line\">vcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.SC.table   --out ./Pi.pop1</span><br><span class=\"line\">vcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.YZR.table  --out ./Pi.pop2</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.ROD</span></span><br><span class=\"line\">pi1=Pi.pop1.windowed.pi</span><br><span class=\"line\">pi2=Pi.pop2.windowed.pi</span><br><span class=\"line\">perl ../../script/merge2pi_ROD.pl $pi1 $pi2  &gt;Pi.ROD </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"tajimaD\"><a href=\"#tajimaD\" class=\"headerlink\" title=\"tajimaD\"></a>tajimaD</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vcf=../../data/all.vcf</span><br><span class=\"line\">window=20000</span><br><span class=\"line\"></span><br><span class=\"line\">vcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.SC.table  --out TajimaD.pop1</span><br><span class=\"line\">vcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.YZR.table --out   TajimaD.pop2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Fst\"><a href=\"#Fst\" class=\"headerlink\" title=\"Fst\"></a>Fst</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vcf=../../data/all.vcf</span><br><span class=\"line\">window=20000</span><br><span class=\"line\">step=2000</span><br><span class=\"line\">vcftools  --vcf $vcf --fst-window-size $window --fst-window-step $step  --weir-fst-pop  ../../data/pop.SC.table --weir-fst-pop ../../data/pop.YZR.table --out  ./Fst.pop1.pop2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ROD-Fst\"><a href=\"#ROD-Fst\" class=\"headerlink\" title=\"ROD_Fst\"></a>ROD_Fst</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fst=../03.Fst/Fst.pop1.pop2.windowed.weir.fst</span><br><span class=\"line\">ROD=../01.pi_ROD/Pi.ROD</span><br><span class=\"line\">gff=../../data/genome.gff</span><br><span class=\"line\"></span><br><span class=\"line\">perl ../../script/top_Fst_ROD_S.pl  $fst $ROD 0.05 0.05  Fst_ROD.table Fst_ROD.stat</span><br><span class=\"line\"></span><br><span class=\"line\">awk &#x27;$NF==&quot;top&quot;&#x27; Fst_ROD.table  &gt; Fst_ROD.table.top</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">awk &#x27;$3==&quot;gene&quot;&#x27; $gff &gt; gene.gff</span><br><span class=\"line\"></span><br><span class=\"line\">bedtools  intersect -wo -F 0.1  -a  Fst_ROD.table.top -b gene.gff | awk -F &quot;\\t&quot;  &#x27;&#123;print $7&quot;\\t&quot;$10&quot;\\t&quot;$11&quot;\\t&quot;$13&quot;\\t&quot;$15&#125;&#x27; | sort -u  &gt; Fst_ROD.table.top.gene</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"GWAS\"><a href=\"#GWAS\" class=\"headerlink\" title=\"GWAS\"></a>GWAS</h1><h2 id=\"mpute\"><a href=\"#mpute\" class=\"headerlink\" title=\"mpute\"></a>mpute</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beagle -Xmx4g  -Djava.io.tmpdir=./TMP  gt=../data/all.vcf   out=all.impute impute=true window=10 nthreads=2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GWAS-1\"><a href=\"#GWAS-1\" class=\"headerlink\" title=\"GWAS\"></a>GWAS</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.prepare</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># prepare vcf</span></span></span><br><span class=\"line\">plink --vcf ../data/all.vcf --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># prepare phenotype</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">perl ../script/sort_pheno.pl snp_filter.tfam ../data/trait.table &gt; trait.sort.txt</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.kinship</span></span><br><span class=\"line\">/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.gwas</span></span><br><span class=\"line\">/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1&gt; emmax.log 2&gt;emmax.err</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> draw_manhattan</span></span><br><span class=\"line\">paste  snp_filter.map  emmax.out.ps | awk  &#x27;BEGIN&#123;print &quot;SNP\\tCHR\\tBP\\tP&quot;&#125;&#123;if($2==$5)&#123;print $2&quot;\\t&quot;$1&quot;\\t&quot;$4&quot;\\t&quot;$NF&#125;&#125;&#x27;  &gt; emmax.out.ps.manht_input</span><br><span class=\"line\">Rscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GWAS-Q\"><a href=\"#GWAS-Q\" class=\"headerlink\" title=\"GWAS-Q\"></a>GWAS-Q</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.gwas</span></span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.tped</span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.tfam</span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.nosex</span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.map</span><br><span class=\"line\"></span><br><span class=\"line\">ln -s ../01.GWAS/trait.sort.txt</span><br><span class=\"line\">ln -s ../../02.population_genetics/03.structure/all.3.Q</span><br><span class=\"line\"></span><br><span class=\"line\">paste snp_filter.nosex all.3.Q |awk &#x27;&#123;print $1&quot; &quot;$1&quot; 1 &quot;$3&quot; &quot;$4&#125;&#x27;  &gt; pop.Qmatrix</span><br><span class=\"line\"></span><br><span class=\"line\">/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship -c pop.Qmatrix   -o emmax.out 1&gt; emmax.log 2&gt;emmax.err</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step4.draw_manhattan</span></span><br><span class=\"line\">paste  snp_filter.map  emmax.out.ps | awk  &#x27;BEGIN&#123;print &quot;SNP\\tCHR\\tBP\\tP&quot;&#125;&#123;if($2==$5)&#123;print $2&quot;\\t&quot;$1&quot;\\t&quot;$4&quot;\\t&quot;$NF&#125;&#125;&#x27;  &gt; emmax.out.ps.manht_input</span><br><span class=\"line\">Rscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_Q</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GWAS-realData\"><a href=\"#GWAS-realData\" class=\"headerlink\" title=\"GWAS_realData\"></a>GWAS_realData</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"selector-tag\">step1</span><span class=\"selector-class\">.prepare</span></span><br><span class=\"line\">## <span class=\"selector-tag\">prepare</span> <span class=\"selector-tag\">vcf</span></span><br><span class=\"line\"><span class=\"selector-tag\">plink</span> <span class=\"selector-tag\">--vcf</span>  ../<span class=\"selector-tag\">data_real</span>/<span class=\"selector-tag\">Sample215</span><span class=\"selector-class\">.M5M8H3</span><span class=\"selector-class\">.2allel</span><span class=\"selector-class\">.vcf</span>  <span class=\"selector-tag\">--maf</span> <span class=\"selector-tag\">0</span><span class=\"selector-class\">.05</span> <span class=\"selector-tag\">--geno</span> <span class=\"selector-tag\">0</span><span class=\"selector-class\">.1</span>  <span class=\"selector-tag\">--recode12</span>  <span class=\"selector-tag\">--output-missing-genotype</span> <span class=\"selector-tag\">0</span> <span class=\"selector-tag\">--transpose</span> <span class=\"selector-tag\">--out</span> <span class=\"selector-tag\">snp_filter</span>   <span class=\"selector-tag\">--set-missing-var-ids</span> @:#  <span class=\"selector-tag\">--allow-extra-chr</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"selector-tag\">prepare</span> <span class=\"selector-tag\">phenotype</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">perl</span> ../<span class=\"selector-tag\">script</span>/<span class=\"selector-tag\">sort_pheno</span><span class=\"selector-class\">.pl</span> <span class=\"selector-tag\">snp_filter</span><span class=\"selector-class\">.tfam</span>  ../<span class=\"selector-tag\">data_real</span>/<span class=\"selector-tag\">trait</span><span class=\"selector-class\">.C16_0</span><span class=\"selector-class\">.table</span>  &gt; <span class=\"selector-tag\">trait</span><span class=\"selector-class\">.sort</span><span class=\"selector-class\">.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"selector-tag\">step2</span><span class=\"selector-class\">.kinship</span></span><br><span class=\"line\">/<span class=\"selector-tag\">pub</span>/<span class=\"selector-tag\">software</span>/<span class=\"selector-tag\">emmax</span>/<span class=\"selector-tag\">emmax-kin-intel64</span> <span class=\"selector-tag\">-v</span> <span class=\"selector-tag\">-d</span> <span class=\"selector-tag\">10</span>  <span class=\"selector-tag\">-o</span> ./<span class=\"selector-tag\">pop</span><span class=\"selector-class\">.kinship</span>  <span class=\"selector-tag\">snp_filter</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"selector-tag\">step3</span><span class=\"selector-class\">.gwas</span></span><br><span class=\"line\">/<span class=\"selector-tag\">pub</span>/<span class=\"selector-tag\">software</span>/<span class=\"selector-tag\">emmax</span>/<span class=\"selector-tag\">emmax-intel64</span> <span class=\"selector-tag\">-v</span> <span class=\"selector-tag\">-d</span> <span class=\"selector-tag\">10</span> <span class=\"selector-tag\">-t</span> <span class=\"selector-tag\">snp_filter</span>  <span class=\"selector-tag\">-p</span> <span class=\"selector-tag\">trait</span><span class=\"selector-class\">.sort</span><span class=\"selector-class\">.txt</span> <span class=\"selector-tag\">-k</span> <span class=\"selector-tag\">pop</span><span class=\"selector-class\">.kinship</span>   <span class=\"selector-tag\">-o</span> <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span> <span class=\"selector-tag\">1</span>&gt; <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.log</span> <span class=\"selector-tag\">2</span>&gt;<span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.err</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"selector-tag\">step4</span><span class=\"selector-class\">.draw_manhattan</span></span><br><span class=\"line\"><span class=\"selector-tag\">paste</span>  <span class=\"selector-tag\">snp_filter</span><span class=\"selector-class\">.map</span>  <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span> | <span class=\"selector-tag\">awk</span>  &#x27;<span class=\"selector-tag\">BEGIN</span>&#123;<span class=\"selector-tag\">print</span> &quot;<span class=\"selector-tag\">SNP</span>\\<span class=\"selector-tag\">tCHR</span>\\<span class=\"selector-tag\">tBP</span>\\<span class=\"selector-tag\">tP</span>&quot;&#125;&#123;<span class=\"selector-tag\">if</span>($<span class=\"number\">2</span>==$<span class=\"number\">5</span>)&#123;<span class=\"selector-tag\">print</span> $<span class=\"selector-tag\">2</span>&quot;\\<span class=\"selector-tag\">t</span>&quot;$<span class=\"selector-tag\">1</span>&quot;\\<span class=\"selector-tag\">t</span>&quot;$<span class=\"selector-tag\">4</span>&quot;\\<span class=\"selector-tag\">t</span>&quot;$<span class=\"selector-tag\">NF</span>&#125;&#125;&#x27;  &gt; <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span><span class=\"selector-class\">.manht_input</span></span><br><span class=\"line\"><span class=\"selector-tag\">Rscript</span> ../<span class=\"selector-tag\">script</span>/<span class=\"selector-tag\">manhattan</span><span class=\"selector-class\">.R</span> <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span><span class=\"selector-class\">.manht_input</span>  <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span><span class=\"selector-class\">.manht_figure_readData</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"QTL-seq\"><a href=\"#QTL-seq\" class=\"headerlink\" title=\"QTL-seq\"></a>QTL-seq</h1><h2 id=\"change-VCF2Table\"><a href=\"#change-VCF2Table\" class=\"headerlink\" title=\"change_VCF2Table\"></a>change_VCF2Table</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ref=</span><br><span class=\"line\">vcf=</span><br><span class=\"line\">outfile=</span><br><span class=\"line\">gatk  VariantsToTable -R  $ref -V $vcf -F CHROM -F POS -F REF -F ALT -GF AD -GF DP -GF GQ -GF PL -O  $outfile</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"QTLSeq-Analysis\"><a href=\"#QTLSeq-Analysis\" class=\"headerlink\" title=\"QTLSeq_Analysis\"></a>QTLSeq_Analysis</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(QTLseqr)</span><br><span class=\"line\">library(<span class=\"string\">&quot;ggplot2&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HighBulk &lt;- <span class=\"string\">&quot;SRR834931&quot;</span> <span class=\"comment\">## 高值混池名称</span></span><br><span class=\"line\">LowBulk &lt;- <span class=\"string\">&quot;SRR834927&quot;</span>  <span class=\"comment\">## 低值混池名称</span></span><br><span class=\"line\">Chroms &lt;- paste0(<span class=\"built_in\">rep</span>(<span class=\"string\">&quot;Chr&quot;</span>, <span class=\"number\">12</span>), <span class=\"number\">1</span>:<span class=\"number\">12</span>) <span class=\"comment\">## 染色体列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SNP数据读取</span></span><br><span class=\"line\">df &lt;- importFromGATK(file = <span class=\"string\">&quot;../data/Yang_et_al_2013.table&quot;</span> ,</span><br><span class=\"line\">    highBulk = HighBulk, <span class=\"comment\"># 指定高值混池</span></span><br><span class=\"line\">    lowBulk = LowBulk, <span class=\"comment\"># 指定低至混池</span></span><br><span class=\"line\">    chromList = Chroms <span class=\"comment\"># 指定分析用染色体列表</span></span><br><span class=\"line\">    ) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制深度分布图 </span></span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = DP.HIGH + DP.LOW)) +</span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>,<span class=\"number\">800</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNP_depth.pdf&quot;</span>)</span><br><span class=\"line\">p1</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制ref等位基因频率分布图</span></span><br><span class=\"line\">p2 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = REF_FRQ))</span><br><span class=\"line\">  </span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;ref_allele_frequency.pdf&quot;</span>)</span><br><span class=\"line\">p2</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制高值混池SNP-index分布</span></span><br><span class=\"line\">p3 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = SNPindex.HIGH))</span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNPindex.HIGH.dis.pdf&quot;</span>)</span><br><span class=\"line\">p3</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制低值混池SNP-index分布</span></span><br><span class=\"line\">p4 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = SNPindex.LOW))</span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNPindex.LOW.dis.pdf&quot;</span>)</span><br><span class=\"line\">p4</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SNP过滤</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_filt &lt;- filterSNPs(</span><br><span class=\"line\">    SNPset = df,</span><br><span class=\"line\">    refAlleleFreq = <span class=\"number\">0.20</span>, <span class=\"comment\">## ref allele频率过滤，0.2表示0.2~0.8之间</span></span><br><span class=\"line\">    minTotalDepth = <span class=\"number\">100</span>, <span class=\"comment\">## 最小深度过滤</span></span><br><span class=\"line\">    maxTotalDepth = <span class=\"number\">400</span>, <span class=\"comment\">## 最大深度过滤</span></span><br><span class=\"line\">    minSampleDepth = <span class=\"number\">40</span>, <span class=\"comment\">## 单个样品最小深度</span></span><br><span class=\"line\">    minGQ = <span class=\"number\">99</span>, <span class=\"comment\">## genotype quality 过滤</span></span><br><span class=\"line\">    verbose = <span class=\"literal\">TRUE</span>  <span class=\"comment\">## 输出日志</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 进行deltaSNPindex 计算</span></span><br><span class=\"line\">df_filt &lt;- runQTLseqAnalysis(df_filt,</span><br><span class=\"line\">    windowSize = <span class=\"number\">1e6</span>, <span class=\"comment\">## 窗口大小</span></span><br><span class=\"line\">    popStruc = <span class=\"string\">&quot;F2&quot;</span>,  <span class=\"comment\">## 群体类型，F2 或者RIL</span></span><br><span class=\"line\">    bulkSize = <span class=\"built_in\">c</span>(<span class=\"number\">385</span>, <span class=\"number\">430</span>), <span class=\"comment\">## 混样个数，第一个高值组</span></span><br><span class=\"line\">    replications = <span class=\"number\">10000</span>, <span class=\"comment\">## bootstrap次数</span></span><br><span class=\"line\">    intervals = <span class=\"built_in\">c</span>(<span class=\"number\">95</span>, <span class=\"number\">99</span>) <span class=\"comment\">## 置信区间</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SNP 沿染色体分布图</span></span><br><span class=\"line\">p5 &lt;- plotQTLStats(SNPset = df_filt, var = <span class=\"string\">&quot;nSNPs&quot;</span>)</span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNP_filter.window.pdf&quot;</span>, width = <span class=\"number\">20</span>, height = <span class=\"number\">4</span>)</span><br><span class=\"line\">p5</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## deltaSNPindex沿染色体分布</span></span><br><span class=\"line\">p6 &lt;- plotQTLStats(SNPset = df_filt, var = <span class=\"string\">&quot;deltaSNP&quot;</span>, plotIntervals = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;deltaSNPindex.pdf&quot;</span>, width = <span class=\"number\">20</span>, height = <span class=\"number\">4</span>)</span><br><span class=\"line\">p6</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 提取显著性区域</span></span><br><span class=\"line\">QTL &lt;- getSigRegions(SNPset = df_filt, </span><br><span class=\"line\">    method = <span class=\"string\">&quot;QTLseq&quot;</span>, interval = <span class=\"number\">95</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 输出到文件</span></span><br><span class=\"line\">write.table(QTL[[<span class=\"number\">1</span>]],</span><br><span class=\"line\">    <span class=\"string\">&quot;QTLseq_result.SigRegions.table&quot;</span>,</span><br><span class=\"line\">    sep=<span class=\"string\">&quot;\\t&quot;</span>,<span class=\"built_in\">quote</span>=<span class=\"built_in\">F</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 提取QTLseq结果</span></span><br><span class=\"line\">results99 &lt;- getQTLTable(</span><br><span class=\"line\">  SNPset = df_filt,  </span><br><span class=\"line\">  method = <span class=\"string\">&quot;QTLseq&quot;</span>, </span><br><span class=\"line\">  interval = <span class=\"number\">99</span>,  <span class=\"comment\">## 结果阈值</span></span><br><span class=\"line\">  export = <span class=\"literal\">FALSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 输出到文件</span></span><br><span class=\"line\">write.table(results99,</span><br><span class=\"line\">    file=<span class=\"string\">&quot;QTLseq_result_deltaSNPindex_CI99.table&quot;</span> ,</span><br><span class=\"line\">    sep=<span class=\"string\">&quot;\\t&quot;</span>, <span class=\"built_in\">quote</span> = <span class=\"built_in\">F</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"<center><font face=arial bold size=10 color=black>重测序与群体遗传学</font></center>\n<center><font size=4 color=red>云南农业大学  云南生物资源保护与利用国家重点实验室</font></center>\n<center><font size=4 color=red>（李详  2019年12月31日）</font></center>\n\n<hr>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><p>该部分软件很难用<code>conda</code>直接安装，安装步骤比较特殊。</p>","more":"<h2 id=\"lumpy-sv\"><a href=\"#lumpy-sv\" class=\"headerlink\" title=\"lumpy-sv\"></a>lumpy-sv</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lumpy-sv 依赖 Python2.7，切换到py27环境下进行安装。</span><br><span class=\"line\">conda activate py27</span><br><span class=\"line\">git clone --recursive https://github.com/arq5x/lumpy-sv.git</span><br><span class=\"line\">cd lumpy-sv</span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装svtyper</span></span></span><br><span class=\"line\">conda install svtyper</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"cnvnator\"><a href=\"#cnvnator\" class=\"headerlink\" title=\"cnvnator\"></a>cnvnator</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnvnator依赖于root软件包及samtools软件包(包含HTSlib)，因此先安装Samtools及root软件包。</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装samtools</span></span></span><br><span class=\"line\">wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2</span><br><span class=\"line\">tar -xvf samtools-1.9.tar.bz2</span><br><span class=\"line\">cd samtools-1.9/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装root软件, 直接下载后解压即可</span></span></span><br><span class=\"line\">wget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz</span><br><span class=\"line\">tar -zxvf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装cnvnator</span></span></span><br><span class=\"line\">git clone https://github.com/abyzovlab/CNVnator.git</span><br><span class=\"line\">cd CNVnator</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 链接samtools软件目录到cnvnator目录</span></span></span><br><span class=\"line\">ln -s ../samtools-1.9 ./samtools</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 加载root软件到环境变量</span></span></span><br><span class=\"line\">export ROOTSYS=/pub/software/root</span><br><span class=\"line\">export PATH=/pub/software/root/bin:$PATH</span><br><span class=\"line\">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 安装cnvnator</span></span></span><br><span class=\"line\">make LIBS=&quot;-lcrypto&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">less ../data/sample.list | awk &#x27;&#123; print &quot;bwa mem -t 2 -R &#x27;\\&#x27;&#x27;@RG\\\\tID:&quot;$1&quot;\\\\tSM:&quot;$1&quot;\\\\tPL:illumina&#x27;\\&#x27;&#x27; ../01.ref/genome.fasta  ../data/&quot;$1&quot;_1.fq.gz ../data/&quot;$1&quot;_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o &quot;$1&quot;.sort.bam -&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"变异检测\"><a href=\"#变异检测\" class=\"headerlink\" title=\"变异检测\"></a>变异检测</h1><h2 id=\"构建基因组index\"><a href=\"#构建基因组index\" class=\"headerlink\" title=\"构建基因组index\"></a>构建基因组index</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> create link</span></span><br><span class=\"line\">ln -s  ../data/genome.fasta  ./genome.fasta</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">for</span> gatk</span></span><br><span class=\"line\">samtools faidx genome.fasta </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">for</span> bwa</span></span><br><span class=\"line\">bwa index  genome.fasta  </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"keyword\">for</span> picard</span></span><br><span class=\"line\">picard CreateSequenceDictionary R=genome.fasta</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"比对排序去重\"><a href=\"#比对排序去重\" class=\"headerlink\" title=\"比对排序去重\"></a>比对排序去重</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 比对排序</span></span><br><span class=\"line\">bwa mem -t 2 -R &#x27;@RG\\tID:S1\\tSM:S1\\tPL:illumina&#x27; ../01.ref/genome.fasta  ../data/S1_1.fq.gz ../data/S1_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S1.sort.bam -</span><br><span class=\"line\">bwa mem -t 2 -R &#x27;@RG\\tID:S2\\tSM:S2\\tPL:illumina&#x27; ../01.ref/genome.fasta  ../data/S2_1.fq.gz ../data/S2_2.fq.gz |  /pub/software/samtools/samtools sort -@ 2 -m 1G -o S2.sort.bam -</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 去除重复</span></span><br><span class=\"line\">picard -Xmx4g  MarkDuplicates I=S1.sort.bam O=S1.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S1.marked_dup_metrics.txt</span><br><span class=\"line\">picard -Xmx4g  MarkDuplicates I=S2.sort.bam O=S2.sort.rmdup.bam  CREATE_INDEX=true  REMOVE_DUPLICATES=true M=S2.marked_dup_metrics.txt</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 比对率统计</span></span><br><span class=\"line\">/pub/software/samtools/samtools  flagstat  S1.sort.bam &gt; S1.sort.bam.flagstat</span><br><span class=\"line\">/pub/software/samtools/samtools  flagstat  S2.sort.bam &gt; S2.sort.bam.flagstat</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SNP、Indel检测\"><a href=\"#SNP、Indel检测\" class=\"headerlink\" title=\"SNP、Indel检测\"></a>SNP、Indel检测</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.HaplotypeCaller</span></span><br><span class=\"line\">gatk --java-options &quot;-Xmx10g -Djava.io.tmpdir=./tmp&quot; HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S1.sort.rmdup.bam  -ERC GVCF -O S1.g.vcf 1&gt;S1.HC.log   2&gt;&amp;1</span><br><span class=\"line\">gatk --java-options &quot;-Xmx10g -Djava.io.tmpdir=./tmp&quot; HaplotypeCaller -R ../01.ref/genome.fasta -I ../02.mapping/S2.sort.rmdup.bam  -ERC GVCF -O S2.g.vcf 1&gt;S2.HC.log   2&gt;&amp;1</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.CombineGVCFs</span></span><br><span class=\"line\">ls ./S*.g.vcf &gt; gvcf.list</span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;    CombineGVCFs -R ../01.ref/genome.fasta -V gvcf.list  -O all.merge.g.vcf </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.GenotypeGVCFs</span></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;   GenotypeGVCFs -R ../01.ref/genome.fasta --variant all.merge.g.vcf -O all.merge_raw.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step4.SNP</span></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type SNP -O all.raw.snp.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.snp.vcf --filter-expression &quot;QD &lt; 2.0 || MQ &lt; 40.0 || FS &gt; 60.0 || SOR &gt; 3.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0&quot; --filter-name &#x27;SNP_filter&#x27; -O all.filter.snp.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.snp.vcf --exclude-filtered  -O all.filtered.snp.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step5.InDel</span></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.merge_raw.vcf --select-type INDEL -O all.raw.indel.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  VariantFiltration -R ../01.ref/genome.fasta -V all.raw.indel.vcf --filter-expression &quot;QD &lt; 2.0 || FS &gt; 200.0 || SOR &gt; 10.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0&quot; --filter-name &#x27;INDEL_filter&#x27; -O all.filter.indel.vcf</span><br><span class=\"line\"></span><br><span class=\"line\">gatk  --java-options &quot;-Xmx4g -Djava.io.tmpdir=./tmp&quot;  SelectVariants  -R ../01.ref/genome.fasta -V all.filter.indel.vcf  --exclude-filtered   -O all.filtered.indel.vcf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SV检测\"><a href=\"#SV检测\" class=\"headerlink\" title=\"SV检测\"></a>SV检测</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.discordants_bam</span></span><br><span class=\"line\">/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S1.sort.rmdup.bam &gt; S1.discordants.bam</span><br><span class=\"line\">/pub/software/samtools/samtools view -b -F 1294 -@ 12 ../02.mapping/S2.sort.rmdup.bam &gt; S2.discordants.bam</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.splitters_bam</span></span><br><span class=\"line\">/pub/software/samtools/samtools view -h ../02.mapping/S1.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   &gt; S1.splitters.bam</span><br><span class=\"line\">/pub/software/samtools/samtools view -h ../02.mapping/S2.sort.rmdup.bam | /pub/software/lumpy-sv/scripts/extractSplitReads_BwaMem -i stdin | /pub/software/samtools/samtools  sort -   &gt; S2.splitters.bam</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.lumpy</span></span><br><span class=\"line\">/pub/software/lumpy-sv/bin/lumpyexpress -B ../02.mapping/S1.sort.rmdup.bam,../02.mapping/S2.sort.rmdup.bam  -S S1.splitters.bam,S2.splitters.bam   -D S1.discordants.bam,S2.discordants.bam -o all.sv.lumpy.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step4.ind_genotype</span></span><br><span class=\"line\">vcftools --vcf all.sv.lumpy.vcf --indv S1 --recode --recode-INFO-all --out S1 &amp;&amp; svtyper -i S1.recode.vcf -B ../02.mapping/S1.sort.rmdup.bam  -o S1.genotype.vcf</span><br><span class=\"line\">vcftools --vcf all.sv.lumpy.vcf --indv S2 --recode --recode-INFO-all --out S2 &amp;&amp; svtyper -i S2.recode.vcf -B ../02.mapping/S2.sort.rmdup.bam  -o S2.genotype.vcf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CNV检测\"><a href=\"#CNV检测\" class=\"headerlink\" title=\"CNV检测\"></a>CNV检测</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.prepare_genome</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># split genome into single sequence</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"> ln -s  ../data/genome.fasta ./genome.fa</span><br><span class=\"line\"></span><br><span class=\"line\"> seqkit split -i ./genome.fa  -O split</span><br><span class=\"line\"></span><br><span class=\"line\"> ls ./split/genome.id_*.fa |sed &#x27;s/\\.\\/split\\/genome\\.id_//&#x27; |awk &#x27;&#123;print &quot;mv ./split/genome.id_&quot;$aa&quot;  ./split/&quot;$aa&#125;&#x27; &gt; mv_name.sh</span><br><span class=\"line\"></span><br><span class=\"line\"> sh mv_name.sh</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.cnvnator</span></span><br><span class=\"line\">export ROOTSYS=/pub/software/root</span><br><span class=\"line\">export PATH=/pub/software/root/bin:$PATH</span><br><span class=\"line\">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 链接文件到当前目录</span></span></span><br><span class=\"line\">ln -s ../02.mapping/S1.sort.rmdup.bam </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 提取比对结果</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -tree S1.sort.rmdup.bam</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#生成深度分布</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -genome genome.fa -root S1.root -his 500  -d split</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 进行统计计算</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root -stat 500</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 检查bin size是否合适</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root -eval 500  &gt; S1.eval.ratio </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># RD信号分割</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root -partition 500</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 进行CNV检测</span></span></span><br><span class=\"line\">/pub/software/CNVnator/cnvnator -root S1.root  -call 500 &gt; S1.cnv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SNP-INDEL注释\"><a href=\"#SNP-INDEL注释\" class=\"headerlink\" title=\"SNP INDEL注释\"></a>SNP INDEL注释</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.prepare_genome</span></span><br><span class=\"line\">ln -s ../data/genome.gtf </span><br><span class=\"line\">ln -s ../data/genome.fasta</span><br><span class=\"line\"></span><br><span class=\"line\">gtfToGenePred  -genePredExt genome.gtf genome_refGene.txt</span><br><span class=\"line\">/pub/software/annovar/retrieve_seq_from_fasta.pl --format refGene --seqfile genome.fasta genome_refGene.txt --out genome_refGeneMrna.fa</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">step2.ann_vcf</span></span><br><span class=\"line\">ln -s  ../03.SNP_indel/all.filtered.snp.vcf </span><br><span class=\"line\"></span><br><span class=\"line\">/pub/software/annovar/convert2annovar.pl -format vcf4old all.filtered.snp.vcf  &gt;all.snp.vcf.annovar.input</span><br><span class=\"line\"></span><br><span class=\"line\">/pub/software/annovar/annotate_variation.pl -geneanno --neargene 2000 -buildver genome -dbtype refGene -outfile all.anno -exonsort all.snp.vcf.annovar.input ./</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CNV和SV注释\"><a href=\"#CNV和SV注释\" class=\"headerlink\" title=\"CNV和SV注释\"></a>CNV和SV注释</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less -S ../04.SV/all.sv.lumpy.vcf|awk -F &quot;;&quot; &#x27;&#123; if($1!~/#/)&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$3&quot;\\t&quot;$4&#125; &#125;&#x27;|awk &#x27;&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$11&quot;\\t&quot;$3&quot;\\t&quot;$8&#125;&#x27;|sed &#x27;s/END=//&#x27; |sed &#x27;s/SVTYPE=//&#x27;| awk &#x27;$3&lt;$2&#x27; &gt; SV.bed</span><br><span class=\"line\">less -S ../04.SV/all.sv.lumpy.vcf|awk -F &quot;;&quot; &#x27;&#123; if($1!~/#/)&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$3&quot;\\t&quot;$4&#125; &#125;&#x27;|awk &#x27;&#123;print $1&quot;\\t&quot;$2&quot;\\t&quot;$11&quot;\\t&quot;$3&quot;\\t&quot;$8&#125;&#x27;|sed &#x27;s/END=//&#x27; |sed &#x27;s/SVTYPE=//&#x27;  &gt; SV.bed</span><br><span class=\"line\">awk &#x27;$5 !~ /BND/&#x27; SV.bed &gt;  SV_filter.bed</span><br><span class=\"line\">bedtools  intersect -wo  -a SV_filter.bed -b gene.gtf  &gt; SV_filter.Anno</span><br><span class=\"line\">less -S ../05.CNV/S1.cnv | awk &#x27;&#123;print $2 &quot;\\t&quot; $1&#125;&#x27;|sed &#x27;s/:/\\t/&#x27;|sed &#x27;s/-/\\t/&#x27; &gt; CNV.bed</span><br><span class=\"line\">bedtools  intersect -wo  -a  CNV.bed  -b gene.gtf &gt; CNV.Anno</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"群体结构\"><a href=\"#群体结构\" class=\"headerlink\" title=\"群体结构\"></a>群体结构</h1><h2 id=\"过滤\"><a href=\"#过滤\" class=\"headerlink\" title=\"过滤\"></a>过滤</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vcf=../data/all.vcf</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># filter missing and maf</span></span></span><br><span class=\"line\">plink --vcf  $vcf --geno 0.1 --maf 0.01 --out all.missing_maf --recode vcf-iid  --allow-extra-chr --set-missing-var-ids @:# --keep-allele-order</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># filter LD</span></span> </span><br><span class=\"line\">plink --vcf  all.missing_maf.vcf  --indep-pairwise 50 10 0.2 --out tmp.ld   --allow-extra-chr --set-missing-var-ids @:# </span><br><span class=\"line\">plink --vcf  all.missing_maf.vcf  --make-bed --extract tmp.ld.prune.in  --out all.LDfilter --recode vcf-iid  --keep-allele-order  --allow-extra-chr --set-missing-var-ids @:#  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建树\"><a href=\"#建树\" class=\"headerlink\" title=\"建树\"></a>建树</h2><h3 id=\"NJ\"><a href=\"#NJ\" class=\"headerlink\" title=\"NJ\"></a>NJ</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl  ../../script/vcf2phy.pl  ../../00.filter/all.LDfilter.vcf  &gt; sequences.dat</span><br><span class=\"line\"></span><br><span class=\"line\">echo -e &quot;sequences.dat\\nY&quot; &gt; dnadist.cfg</span><br><span class=\"line\"></span><br><span class=\"line\">dnadist &lt; dnadist.cfg  &gt;dnadist.log</span><br><span class=\"line\"></span><br><span class=\"line\">mv outfile infile.dist</span><br><span class=\"line\"></span><br><span class=\"line\">echo -e &quot;infile.dist\\nY&quot;  &gt; neighbor.cfg</span><br><span class=\"line\"></span><br><span class=\"line\">neighbor  &lt;  neighbor.cfg  &gt;nj.log</span><br><span class=\"line\"></span><br><span class=\"line\">less infile.dist | tr &#x27;\\n&#x27; &#x27;|&#x27;| sed &#x27;s/| / /g&#x27; | tr &#x27;|&#x27; &#x27;\\n&#x27; &gt;infile.dist.table</span><br><span class=\"line\">less outtree | tr &#x27;\\n&#x27; &#x27; &#x27;|sed &#x27;s/ //g&#x27; &gt; outtree.nwk</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"tree-snphylo\"><a href=\"#tree-snphylo\" class=\"headerlink\" title=\"tree_snphylo\"></a>tree_snphylo</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/pub/software/SNPhylo/snphylo.sh -v ../../00.filter/all.LDfilter.vcf -r -l 1 -m 0.01 -o GA0001 -b -B 2 -P tree_snphylo </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PCA\"><a href=\"#PCA\" class=\"headerlink\" title=\"PCA\"></a>PCA</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plink --vcf  ../00.filter/all.LDfilter.vcf --pca 10 --out  PCA_out   --allow-extra-chr --set-missing-var-ids @:# </span><br><span class=\"line\"></span><br><span class=\"line\">Rscript ../script/draw_PCA.R  PCA_out.eigenvec 1 2  ../data/sample.pop  PCA_out_figure</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"群体结构-1\"><a href=\"#群体结构-1\" class=\"headerlink\" title=\"群体结构\"></a>群体结构</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step0.vcf2bed</span></span><br><span class=\"line\">plink --vcf  ../00.filter/all.LDfilter.vcf  --make-bed --out all  --allow-extra-chr --keep-allele-order --set-missing-var-ids @:#</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.get_Admix_shell</span></span><br><span class=\"line\">seq 2 4 | awk &#x27;&#123;print &quot;admixture --cv -j2 all.bed &quot;$1&quot; 1&gt;admix.&quot;$1&quot;.log 2&gt;&amp;1&quot;&#125;&#x27; &gt; admixture.sh</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.run_admix</span></span><br><span class=\"line\">sh admixture.sh</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.draw_structure</span></span><br><span class=\"line\">mkdir result</span><br><span class=\"line\">cp  ./*.Q result/</span><br><span class=\"line\">Rscript  ../script/draw_admixture.R result all.nosex  structure </span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> admixture</span></span><br><span class=\"line\">admixture --cv -j2 all.bed 2 1&gt;admix.2.log 2&gt;&amp;1</span><br><span class=\"line\">admixture --cv -j2 all.bed 3 1&gt;admix.3.log 2&gt;&amp;1</span><br><span class=\"line\">admixture --cv -j2 all.bed 4 1&gt;admix.4.log 2&gt;&amp;1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遗传衰减\"><a href=\"#遗传衰减\" class=\"headerlink\" title=\"遗传衰减\"></a>遗传衰减</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.LD_calcu</span></span><br><span class=\"line\">/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop  ../data/pop.SC.table -MaxDist 500 -OutStat pop.SC.stat</span><br><span class=\"line\">/pub/software/PopLDdecay/bin/PopLDdecay -InVCF  ../data/all.vcf -SubPop ../data/pop.YZR.table -MaxDist 500 -OutStat pop.YZR.stat</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.draw_singlePlot</span></span><br><span class=\"line\">perl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.SC.stat.gz -output pop.SC.ld</span><br><span class=\"line\">perl /pub/software/PopLDdecay/bin/Plot_OnePop.pl -inFile pop.YZR.stat.gz -output pop.YZR.ld</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.draw_multiPlotare/PopLDdecay/bin/Plot_MultiPop.pl -inList ld_stat.list -output ld_stat.multi</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择分析\"><a href=\"#选择分析\" class=\"headerlink\" title=\"选择分析\"></a>选择分析</h2><h3 id=\"i-ROD\"><a href=\"#i-ROD\" class=\"headerlink\" title=\"i_ROD\"></a>i_ROD</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.pi</span></span><br><span class=\"line\">vcf=../../data/all.vcf</span><br><span class=\"line\">window=20000</span><br><span class=\"line\">step=2000</span><br><span class=\"line\">vcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.SC.table   --out ./Pi.pop1</span><br><span class=\"line\">vcftools  --vcf $vcf --window-pi $window --window-pi-step  $step  --keep ../../data/pop.YZR.table  --out ./Pi.pop2</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.ROD</span></span><br><span class=\"line\">pi1=Pi.pop1.windowed.pi</span><br><span class=\"line\">pi2=Pi.pop2.windowed.pi</span><br><span class=\"line\">perl ../../script/merge2pi_ROD.pl $pi1 $pi2  &gt;Pi.ROD </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"tajimaD\"><a href=\"#tajimaD\" class=\"headerlink\" title=\"tajimaD\"></a>tajimaD</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vcf=../../data/all.vcf</span><br><span class=\"line\">window=20000</span><br><span class=\"line\"></span><br><span class=\"line\">vcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.SC.table  --out TajimaD.pop1</span><br><span class=\"line\">vcftools --vcf $vcf --TajimaD  $window  --keep  ../../data/pop.YZR.table --out   TajimaD.pop2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Fst\"><a href=\"#Fst\" class=\"headerlink\" title=\"Fst\"></a>Fst</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vcf=../../data/all.vcf</span><br><span class=\"line\">window=20000</span><br><span class=\"line\">step=2000</span><br><span class=\"line\">vcftools  --vcf $vcf --fst-window-size $window --fst-window-step $step  --weir-fst-pop  ../../data/pop.SC.table --weir-fst-pop ../../data/pop.YZR.table --out  ./Fst.pop1.pop2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ROD-Fst\"><a href=\"#ROD-Fst\" class=\"headerlink\" title=\"ROD_Fst\"></a>ROD_Fst</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fst=../03.Fst/Fst.pop1.pop2.windowed.weir.fst</span><br><span class=\"line\">ROD=../01.pi_ROD/Pi.ROD</span><br><span class=\"line\">gff=../../data/genome.gff</span><br><span class=\"line\"></span><br><span class=\"line\">perl ../../script/top_Fst_ROD_S.pl  $fst $ROD 0.05 0.05  Fst_ROD.table Fst_ROD.stat</span><br><span class=\"line\"></span><br><span class=\"line\">awk &#x27;$NF==&quot;top&quot;&#x27; Fst_ROD.table  &gt; Fst_ROD.table.top</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">awk &#x27;$3==&quot;gene&quot;&#x27; $gff &gt; gene.gff</span><br><span class=\"line\"></span><br><span class=\"line\">bedtools  intersect -wo -F 0.1  -a  Fst_ROD.table.top -b gene.gff | awk -F &quot;\\t&quot;  &#x27;&#123;print $7&quot;\\t&quot;$10&quot;\\t&quot;$11&quot;\\t&quot;$13&quot;\\t&quot;$15&#125;&#x27; | sort -u  &gt; Fst_ROD.table.top.gene</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"GWAS\"><a href=\"#GWAS\" class=\"headerlink\" title=\"GWAS\"></a>GWAS</h1><h2 id=\"mpute\"><a href=\"#mpute\" class=\"headerlink\" title=\"mpute\"></a>mpute</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beagle -Xmx4g  -Djava.io.tmpdir=./TMP  gt=../data/all.vcf   out=all.impute impute=true window=10 nthreads=2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GWAS-1\"><a href=\"#GWAS-1\" class=\"headerlink\" title=\"GWAS\"></a>GWAS</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step1.prepare</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># prepare vcf</span></span></span><br><span class=\"line\">plink --vcf ../data/all.vcf --maf 0.05 --geno 0.1  --recode12  --output-missing-genotype 0 --transpose --out snp_filter   --set-missing-var-ids @:#  --allow-extra-chr</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># prepare phenotype</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">perl ../script/sort_pheno.pl snp_filter.tfam ../data/trait.table &gt; trait.sort.txt</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step2.kinship</span></span><br><span class=\"line\">/pub/software/emmax/emmax-kin-intel64 -v -d 10  -o ./pop.kinship  snp_filter</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.gwas</span></span><br><span class=\"line\">/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship   -o emmax.out 1&gt; emmax.log 2&gt;emmax.err</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> draw_manhattan</span></span><br><span class=\"line\">paste  snp_filter.map  emmax.out.ps | awk  &#x27;BEGIN&#123;print &quot;SNP\\tCHR\\tBP\\tP&quot;&#125;&#123;if($2==$5)&#123;print $2&quot;\\t&quot;$1&quot;\\t&quot;$4&quot;\\t&quot;$NF&#125;&#125;&#x27;  &gt; emmax.out.ps.manht_input</span><br><span class=\"line\">Rscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GWAS-Q\"><a href=\"#GWAS-Q\" class=\"headerlink\" title=\"GWAS-Q\"></a>GWAS-Q</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step3.gwas</span></span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.tped</span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.tfam</span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.nosex</span><br><span class=\"line\">ln -s ../01.GWAS/snp_filter.map</span><br><span class=\"line\"></span><br><span class=\"line\">ln -s ../01.GWAS/trait.sort.txt</span><br><span class=\"line\">ln -s ../../02.population_genetics/03.structure/all.3.Q</span><br><span class=\"line\"></span><br><span class=\"line\">paste snp_filter.nosex all.3.Q |awk &#x27;&#123;print $1&quot; &quot;$1&quot; 1 &quot;$3&quot; &quot;$4&#125;&#x27;  &gt; pop.Qmatrix</span><br><span class=\"line\"></span><br><span class=\"line\">/pub/software/emmax/emmax-intel64 -v -d 10 -t snp_filter  -p trait.sort.txt -k pop.kinship -c pop.Qmatrix   -o emmax.out 1&gt; emmax.log 2&gt;emmax.err</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> step4.draw_manhattan</span></span><br><span class=\"line\">paste  snp_filter.map  emmax.out.ps | awk  &#x27;BEGIN&#123;print &quot;SNP\\tCHR\\tBP\\tP&quot;&#125;&#123;if($2==$5)&#123;print $2&quot;\\t&quot;$1&quot;\\t&quot;$4&quot;\\t&quot;$NF&#125;&#125;&#x27;  &gt; emmax.out.ps.manht_input</span><br><span class=\"line\">Rscript ../script/manhattan.R emmax.out.ps.manht_input  emmax.out.ps.manht_figure_Q</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GWAS-realData\"><a href=\"#GWAS-realData\" class=\"headerlink\" title=\"GWAS_realData\"></a>GWAS_realData</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"selector-tag\">step1</span><span class=\"selector-class\">.prepare</span></span><br><span class=\"line\">## <span class=\"selector-tag\">prepare</span> <span class=\"selector-tag\">vcf</span></span><br><span class=\"line\"><span class=\"selector-tag\">plink</span> <span class=\"selector-tag\">--vcf</span>  ../<span class=\"selector-tag\">data_real</span>/<span class=\"selector-tag\">Sample215</span><span class=\"selector-class\">.M5M8H3</span><span class=\"selector-class\">.2allel</span><span class=\"selector-class\">.vcf</span>  <span class=\"selector-tag\">--maf</span> <span class=\"selector-tag\">0</span><span class=\"selector-class\">.05</span> <span class=\"selector-tag\">--geno</span> <span class=\"selector-tag\">0</span><span class=\"selector-class\">.1</span>  <span class=\"selector-tag\">--recode12</span>  <span class=\"selector-tag\">--output-missing-genotype</span> <span class=\"selector-tag\">0</span> <span class=\"selector-tag\">--transpose</span> <span class=\"selector-tag\">--out</span> <span class=\"selector-tag\">snp_filter</span>   <span class=\"selector-tag\">--set-missing-var-ids</span> @:#  <span class=\"selector-tag\">--allow-extra-chr</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"selector-tag\">prepare</span> <span class=\"selector-tag\">phenotype</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">perl</span> ../<span class=\"selector-tag\">script</span>/<span class=\"selector-tag\">sort_pheno</span><span class=\"selector-class\">.pl</span> <span class=\"selector-tag\">snp_filter</span><span class=\"selector-class\">.tfam</span>  ../<span class=\"selector-tag\">data_real</span>/<span class=\"selector-tag\">trait</span><span class=\"selector-class\">.C16_0</span><span class=\"selector-class\">.table</span>  &gt; <span class=\"selector-tag\">trait</span><span class=\"selector-class\">.sort</span><span class=\"selector-class\">.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"selector-tag\">step2</span><span class=\"selector-class\">.kinship</span></span><br><span class=\"line\">/<span class=\"selector-tag\">pub</span>/<span class=\"selector-tag\">software</span>/<span class=\"selector-tag\">emmax</span>/<span class=\"selector-tag\">emmax-kin-intel64</span> <span class=\"selector-tag\">-v</span> <span class=\"selector-tag\">-d</span> <span class=\"selector-tag\">10</span>  <span class=\"selector-tag\">-o</span> ./<span class=\"selector-tag\">pop</span><span class=\"selector-class\">.kinship</span>  <span class=\"selector-tag\">snp_filter</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"selector-tag\">step3</span><span class=\"selector-class\">.gwas</span></span><br><span class=\"line\">/<span class=\"selector-tag\">pub</span>/<span class=\"selector-tag\">software</span>/<span class=\"selector-tag\">emmax</span>/<span class=\"selector-tag\">emmax-intel64</span> <span class=\"selector-tag\">-v</span> <span class=\"selector-tag\">-d</span> <span class=\"selector-tag\">10</span> <span class=\"selector-tag\">-t</span> <span class=\"selector-tag\">snp_filter</span>  <span class=\"selector-tag\">-p</span> <span class=\"selector-tag\">trait</span><span class=\"selector-class\">.sort</span><span class=\"selector-class\">.txt</span> <span class=\"selector-tag\">-k</span> <span class=\"selector-tag\">pop</span><span class=\"selector-class\">.kinship</span>   <span class=\"selector-tag\">-o</span> <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span> <span class=\"selector-tag\">1</span>&gt; <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.log</span> <span class=\"selector-tag\">2</span>&gt;<span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.err</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"selector-tag\">step4</span><span class=\"selector-class\">.draw_manhattan</span></span><br><span class=\"line\"><span class=\"selector-tag\">paste</span>  <span class=\"selector-tag\">snp_filter</span><span class=\"selector-class\">.map</span>  <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span> | <span class=\"selector-tag\">awk</span>  &#x27;<span class=\"selector-tag\">BEGIN</span>&#123;<span class=\"selector-tag\">print</span> &quot;<span class=\"selector-tag\">SNP</span>\\<span class=\"selector-tag\">tCHR</span>\\<span class=\"selector-tag\">tBP</span>\\<span class=\"selector-tag\">tP</span>&quot;&#125;&#123;<span class=\"selector-tag\">if</span>($<span class=\"number\">2</span>==$<span class=\"number\">5</span>)&#123;<span class=\"selector-tag\">print</span> $<span class=\"selector-tag\">2</span>&quot;\\<span class=\"selector-tag\">t</span>&quot;$<span class=\"selector-tag\">1</span>&quot;\\<span class=\"selector-tag\">t</span>&quot;$<span class=\"selector-tag\">4</span>&quot;\\<span class=\"selector-tag\">t</span>&quot;$<span class=\"selector-tag\">NF</span>&#125;&#125;&#x27;  &gt; <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span><span class=\"selector-class\">.manht_input</span></span><br><span class=\"line\"><span class=\"selector-tag\">Rscript</span> ../<span class=\"selector-tag\">script</span>/<span class=\"selector-tag\">manhattan</span><span class=\"selector-class\">.R</span> <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span><span class=\"selector-class\">.manht_input</span>  <span class=\"selector-tag\">emmax</span><span class=\"selector-class\">.out</span><span class=\"selector-class\">.ps</span><span class=\"selector-class\">.manht_figure_readData</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"QTL-seq\"><a href=\"#QTL-seq\" class=\"headerlink\" title=\"QTL-seq\"></a>QTL-seq</h1><h2 id=\"change-VCF2Table\"><a href=\"#change-VCF2Table\" class=\"headerlink\" title=\"change_VCF2Table\"></a>change_VCF2Table</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ref=</span><br><span class=\"line\">vcf=</span><br><span class=\"line\">outfile=</span><br><span class=\"line\">gatk  VariantsToTable -R  $ref -V $vcf -F CHROM -F POS -F REF -F ALT -GF AD -GF DP -GF GQ -GF PL -O  $outfile</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"QTLSeq-Analysis\"><a href=\"#QTLSeq-Analysis\" class=\"headerlink\" title=\"QTLSeq_Analysis\"></a>QTLSeq_Analysis</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(QTLseqr)</span><br><span class=\"line\">library(<span class=\"string\">&quot;ggplot2&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HighBulk &lt;- <span class=\"string\">&quot;SRR834931&quot;</span> <span class=\"comment\">## 高值混池名称</span></span><br><span class=\"line\">LowBulk &lt;- <span class=\"string\">&quot;SRR834927&quot;</span>  <span class=\"comment\">## 低值混池名称</span></span><br><span class=\"line\">Chroms &lt;- paste0(<span class=\"built_in\">rep</span>(<span class=\"string\">&quot;Chr&quot;</span>, <span class=\"number\">12</span>), <span class=\"number\">1</span>:<span class=\"number\">12</span>) <span class=\"comment\">## 染色体列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SNP数据读取</span></span><br><span class=\"line\">df &lt;- importFromGATK(file = <span class=\"string\">&quot;../data/Yang_et_al_2013.table&quot;</span> ,</span><br><span class=\"line\">    highBulk = HighBulk, <span class=\"comment\"># 指定高值混池</span></span><br><span class=\"line\">    lowBulk = LowBulk, <span class=\"comment\"># 指定低至混池</span></span><br><span class=\"line\">    chromList = Chroms <span class=\"comment\"># 指定分析用染色体列表</span></span><br><span class=\"line\">    ) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制深度分布图 </span></span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = DP.HIGH + DP.LOW)) +</span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>,<span class=\"number\">800</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNP_depth.pdf&quot;</span>)</span><br><span class=\"line\">p1</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制ref等位基因频率分布图</span></span><br><span class=\"line\">p2 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = REF_FRQ))</span><br><span class=\"line\">  </span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;ref_allele_frequency.pdf&quot;</span>)</span><br><span class=\"line\">p2</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制高值混池SNP-index分布</span></span><br><span class=\"line\">p3 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = SNPindex.HIGH))</span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNPindex.HIGH.dis.pdf&quot;</span>)</span><br><span class=\"line\">p3</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 绘制低值混池SNP-index分布</span></span><br><span class=\"line\">p4 &lt;- ggplot(data = df) +</span><br><span class=\"line\">  geom_histogram(aes(x = SNPindex.LOW))</span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNPindex.LOW.dis.pdf&quot;</span>)</span><br><span class=\"line\">p4</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SNP过滤</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_filt &lt;- filterSNPs(</span><br><span class=\"line\">    SNPset = df,</span><br><span class=\"line\">    refAlleleFreq = <span class=\"number\">0.20</span>, <span class=\"comment\">## ref allele频率过滤，0.2表示0.2~0.8之间</span></span><br><span class=\"line\">    minTotalDepth = <span class=\"number\">100</span>, <span class=\"comment\">## 最小深度过滤</span></span><br><span class=\"line\">    maxTotalDepth = <span class=\"number\">400</span>, <span class=\"comment\">## 最大深度过滤</span></span><br><span class=\"line\">    minSampleDepth = <span class=\"number\">40</span>, <span class=\"comment\">## 单个样品最小深度</span></span><br><span class=\"line\">    minGQ = <span class=\"number\">99</span>, <span class=\"comment\">## genotype quality 过滤</span></span><br><span class=\"line\">    verbose = <span class=\"literal\">TRUE</span>  <span class=\"comment\">## 输出日志</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 进行deltaSNPindex 计算</span></span><br><span class=\"line\">df_filt &lt;- runQTLseqAnalysis(df_filt,</span><br><span class=\"line\">    windowSize = <span class=\"number\">1e6</span>, <span class=\"comment\">## 窗口大小</span></span><br><span class=\"line\">    popStruc = <span class=\"string\">&quot;F2&quot;</span>,  <span class=\"comment\">## 群体类型，F2 或者RIL</span></span><br><span class=\"line\">    bulkSize = <span class=\"built_in\">c</span>(<span class=\"number\">385</span>, <span class=\"number\">430</span>), <span class=\"comment\">## 混样个数，第一个高值组</span></span><br><span class=\"line\">    replications = <span class=\"number\">10000</span>, <span class=\"comment\">## bootstrap次数</span></span><br><span class=\"line\">    intervals = <span class=\"built_in\">c</span>(<span class=\"number\">95</span>, <span class=\"number\">99</span>) <span class=\"comment\">## 置信区间</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## SNP 沿染色体分布图</span></span><br><span class=\"line\">p5 &lt;- plotQTLStats(SNPset = df_filt, var = <span class=\"string\">&quot;nSNPs&quot;</span>)</span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;SNP_filter.window.pdf&quot;</span>, width = <span class=\"number\">20</span>, height = <span class=\"number\">4</span>)</span><br><span class=\"line\">p5</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## deltaSNPindex沿染色体分布</span></span><br><span class=\"line\">p6 &lt;- plotQTLStats(SNPset = df_filt, var = <span class=\"string\">&quot;deltaSNP&quot;</span>, plotIntervals = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\">pdf(file=<span class=\"string\">&quot;deltaSNPindex.pdf&quot;</span>, width = <span class=\"number\">20</span>, height = <span class=\"number\">4</span>)</span><br><span class=\"line\">p6</span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 提取显著性区域</span></span><br><span class=\"line\">QTL &lt;- getSigRegions(SNPset = df_filt, </span><br><span class=\"line\">    method = <span class=\"string\">&quot;QTLseq&quot;</span>, interval = <span class=\"number\">95</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 输出到文件</span></span><br><span class=\"line\">write.table(QTL[[<span class=\"number\">1</span>]],</span><br><span class=\"line\">    <span class=\"string\">&quot;QTLseq_result.SigRegions.table&quot;</span>,</span><br><span class=\"line\">    sep=<span class=\"string\">&quot;\\t&quot;</span>,<span class=\"built_in\">quote</span>=<span class=\"built_in\">F</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 提取QTLseq结果</span></span><br><span class=\"line\">results99 &lt;- getQTLTable(</span><br><span class=\"line\">  SNPset = df_filt,  </span><br><span class=\"line\">  method = <span class=\"string\">&quot;QTLseq&quot;</span>, </span><br><span class=\"line\">  interval = <span class=\"number\">99</span>,  <span class=\"comment\">## 结果阈值</span></span><br><span class=\"line\">  export = <span class=\"literal\">FALSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 输出到文件</span></span><br><span class=\"line\">write.table(results99,</span><br><span class=\"line\">    file=<span class=\"string\">&quot;QTLseq_result_deltaSNPindex_CI99.table&quot;</span> ,</span><br><span class=\"line\">    sep=<span class=\"string\">&quot;\\t&quot;</span>, <span class=\"built_in\">quote</span> = <span class=\"built_in\">F</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"ggtree学习笔记","abbrlink":"fb57811f","date":"2021-02-15T02:35:58.000Z","cover":"/img/cover/ggtree.png","_content":"\n# 写在前面\n\nY叔的`ggtree`$^{[1]}$毫无疑问是当前绘制美化系统发育树（下文简称`进化树`）的最佳工具，一直想学习，<!-- more -->但是都没有真真正正学习过，一是因为网上关于`gtree`的中文资源较少，另外一个原因是感觉到自己用不上，就没认真学习。春节在家，实在无聊，下定决心学一遍`ggtree`。下面的内容来自Y叔的博客$^{[2]}$，若有不当之处，恳请批评指正。\n\n# 关于进化树\n\n## 进化树怎么看\n\n进化树展示的是进化关系，简单说就是亲缘关系，通常是使用物种的遗传序列（如DNA序列、氨基酸序列等）来构建的。进化树看起来和层次聚类很像，这两者有木有区别呢？Y叔在`统计之都`上的文章$^{[3]}$是这样描述的：\n\n> 层次聚类的侧重点在于分类，把距离近的聚在一起。而进化树的构建可以说也是一个聚类过程，但侧重点在于推测进化关系和进化距离 (evolutionary distance)。\n\n{% asset_img 1.png %}\n\n上图展示的是典型的系统发育树。图中绿色、蓝色和红色的点都是`nodes`，也就是节点（个人理解），其中最外层绿色的点表示的是每个`sample`，这时绿色的点也叫`tips`；蓝色的点表示的是`父节点`，也就是从外往内两两`sample`的共有节点，可以理解成`祖先（ancestor）`，祖先之间还可以继续往上溯源，最终就汇集到红色的点，这个红色的点也就是`root`，需要注意的是有根树才具有`root`节点；横线叫做`分支(branches)`，这些横线表示的是进化变化（evolutionary changes），线的长短表示的是以时间或遗传变异为单位的进化变化。\n\n##  进化树数据格式\n\n进化树的数据格式有多种，常见的有`Newick`、`NEXUS`及`Phylip`。\n\n### Newick格式\n\n`Newick`格式是最常见的使用最广泛的进化树数据格式。\n\n{% asset_img 2.png %}\n\n上图是一个标准的进化树图，其对应的`Newick`格式为：\n\n```R\n((t2:0.04,t1:0.34):0.89,(t5:0.37,(t4:0.03,t3:0.67):0.9):0.59); \n```\n\n数据格式和图是一一对应的，假如我们看图的时候是从外到内，那`t3`和`t4`是最近的，在数据中，`t3`和`t4`也是在一个括号里面的，数据的最小单位是一对`()`，就像剥洋葱那样顺着括号一层一层往外剥的时候，就能得到上图的那种样式。冒号后面对应的是横线上的“距离”，父节点的“距离”是两个“子节点”共有的，因此，需要表示“父节点”的“距离”时，需要将“距离”放在“子节点“的括号外。\n\n### NEXUS格式\n\n`NEXUS`格式是`Newick`格式的拓展，以`blocks`为单位将进化树的元素分开。\n\n```R\n#NEXUS\n[R-package APE, Wed Nov  9 11:46:32 2016]\n\nBEGIN TAXA;\n    DIMENSIONS NTAX = 5;\n    TAXLABELS\n        t5\n        t4\n        t1\n        t2\n        t3\n    ;\nEND;\nBEGIN TREES;\n    TRANSLATE\n        1   t5,\n        2   t4,\n        3   t1,\n        4   t2,\n        5   t3\n    ;\n    TREE * UNTITLED = [&R] (1:0.89,((2:0.59,3:0.37):0.34,\n    (4:0.03,5:0.67):0.9):0.04);\nEND;\n```\n\n### 其他格式\n\n进化树的存储格式还有很多种，更多请参照Y叔的博客$^{[4]}$。\n\n# 进化树数据处理\n\n进化树数据可以使用`treeio`$^{[5]}$这个包进行合并等操作，然后可以将其他信息利用`tidytree`$^{[6]}$这个包将树文件转换成R里面常见的数据框格式，这种格式也可以再次转化成树文件，利用`ggtree`进行可视化。\n\n## `phylo`对象\n\n`phylo`格式是R包`ape`支持的格式，在R中的很多包都依赖于这种格式。`tidytree`中的函数`as_tibble`可以将`phylo`转换成数据框，此时的数据框是个`tbl_tree`对象。\n\n```R\nlibrary(ggtree)\nlibrary(ape)\n\nset.seed(2017)\ntree <- rtree(4)\ntree\n```\n\n此时得到的是`phylo`对象：\n\n```R\n## \n## Phylogenetic tree with 4 tips and 3 internal nodes.\n## \n## Tip labels:\n##   t4, t1, t3, t2\n## \n## Rooted; includes branch lengths.\n```\n\n现在将其转化成数据框：\n\n```R\nlibrary(tidytree)\nx <- as_tibble(tree)\nx\n```\n\n```\n## # A tibble: 7 x 4\n##   parent  node branch.length label\n##    <int> <int>         <dbl> <chr>\n## 1      5     1       0.435   t4   \n## 2      7     2       0.674   t1   \n## 3      7     3       0.00202 t3   \n## 4      6     4       0.0251  t2   \n## 5      5     5      NA       <NA> \n## 6      5     6       0.472   <NA> \n## 7      6     7       0.274   <NA>\n```\n\n看图更直观：\n\n{% asset_img 3.png %}\n\n可以清楚地看到进化树的全部信息，包括父节点、节点、分支长度及`tips`的标签等。\n\n使用`as.phylo(x)`就能将数据框转换成`phylo`:\n\n```R\nas.phylo(x)\n## \n## Phylogenetic tree with 4 tips and 3 internal nodes.\n## \n## Tip labels:\n##   t4, t1, t3, t2\n## \n## Rooted; includes branch lengths.\n```\n\n如果此时我们需要添加信息的话，在原始文件上添加信息是比较麻烦的，但是可以团购先构建数据框，然后将两个数据框`join`在一起就可以了：\n\n```R\nd <- tibble(label = paste0('t', 1:4),\n            trait = rnorm(4))\n\ny <- full_join(x, d, by = 'label')\ny\n```\n\n{% asset_img 4.png %}\n\n## `treedata`对象\n\n`tidytree`默认的格式是`treedata`，函数`as.treedata`可以将前面的数据框转换成`treedata`对象：\n\n```\nas.treedata(y)\n```\n\n```R\n## 'treedata' S4 object'.\n## \n## ...@ phylo: \n## Phylogenetic tree with 4 tips and 3 internal nodes.\n## \n## Tip labels:\n##   t4, t1, t3, t2\n## \n## Rooted; includes branch lengths.\n## \n## with the following features available:\n##  'trait'.\n```\n\n同样也可以通过`as_tibble`将`treedata`转换成数据框格式：\n\n```R\ny %>% as.treedata %>% as_tibble\n```\n\n```R\n## # A tibble: 7 x 5\n##   parent  node branch.length label  trait\n##    <int> <int>         <dbl> <chr>  <dbl>\n## 1      5     1       0.435   t4     0.943\n## 2      7     2       0.674   t1    -0.171\n## 3      7     3       0.00202 t3     0.570\n## 4      6     4       0.0251  t2    -0.283\n## 5      5     5      NA       <NA>  NA    \n## 6      5     6       0.472   <NA>  NA    \n## 7      6     7       0.274   <NA>  NA\n```\n\n## 树文件融合\n\n`treeio`同的函数`merge_tree()`可以对多个树文件进行合并，原理是以`node/branches`为`key进行数据合并，如：\n\n```R\nlibrary(treeio)\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nrst_file <- system.file(\"examples/rst\", package=\"ggtree\")\nmlc_file <- system.file(\"examples/mlc\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\ncodeml_tree <- read.codeml(rst_file, mlc_file)\n\nmerged_tree <- merge_tree(beast_tree, codeml_tree)\nmerged_tree\n```\n\n```R\n## 'treedata' S4 object that stored information of\n##  '/home/ygc/R/library/ggtree/examples/MCC_FluA_H3.tree',\n##  '/home/ygc/R/library/ggtree/examples/rst',\n##  '/home/ygc/R/library/ggtree/examples/mlc'.\n## \n## ...@ phylo: \n## Phylogenetic tree with 76 tips and 75 internal nodes.\n## \n## Tip labels:\n##   A/Hokkaido/30-1-a/2013, A/New_York/334/2004, A/New_York/463/2005, A/New_York/452/1999, A/New_York/238/2005, A/New_York/523/1998, ...\n## \n## Rooted; includes branch lengths.\n## \n## with the following features available:\n##  'height',   'height_0.95_HPD',  'height_median',\n##  'height_range', 'length',   'length_0.95_HPD',\n##  'length_median',    'length_range', 'posterior',    'rate',\n##  'rate_0.95_HPD',    'rate_median',  'rate_range',   'subs',\n##  'AA_subs',  't',    'N',    'S',    'dN_vs_dS', 'dN',   'dS',   'N_x_dN',\n##  'S_x_dS'.\n```\n\n合并后的树文件，除开`node`和`branches`外，其余的所有附加信息都变成了变量。\n\n{% asset_img 5.png %}\n\n既然是个数据框，那就可以对这些数据进行可视化：\n\n```R\nlibrary(dplyr)\ndf <- merged_tree %>% \n  as_tibble() %>%\n  select(dN_vs_dS, dN, dS, rate) %>%\n  subset(dN_vs_dS >=0 & dN_vs_dS <= 1.5) %>%\n  tidyr::gather(type, value, dN_vs_dS:dS)\ndf$type[df$type == 'dN_vs_dS'] <- 'dN/dS'\ndf$type <- factor(df$type, levels=c(\"dN/dS\", \"dN\", \"dS\"))\nggplot(df, aes(rate, value)) + geom_hex() + \n  facet_wrap(~type, scale='free_y') \n```\n\n{% asset_img 6.png %}\n\n还可以利用该函数比较不同软件的分析结果：\n\n```R\nphylo <- as.phylo(beast_tree)\nN <- Nnode2(phylo)\nd <- tibble(node = 1:N, fake_trait = rnorm(N), another_trait = runif(N))\nfake_tree <- treedata(phylo = phylo, data = d)\ntriple_tree <- merge_tree(merged_tree, fake_tree)\ntriple_tree\n```\n\n## 链接外部数据\n\n进化树能够展示的东西不仅仅是进化关系，还可以增添许多信息，如基因表达量啥的。`treeio`的函数`full_join()`能够通过`node`或`tips`进行数据融合：\n\n- 通过`node`：\n\n  ```R\n  library(ape)\n  data(woodmouse)\n  d <- dist.dna(woodmouse)\n  tr <- nj(d)\n  bp <- boot.phylo(tr, \n                   woodmouse, \n                   function(x) nj(dist.dna(x)))\n  \n  bp2 <- tibble(node=1:Nnode(tr) + # 计算父节点数\n                  Ntip(tr), # 计算tip数\n                bootstrap = bp)\n  full_join(tr, bp2, by=\"node\")\n  ```\n\n- 通过`tips`：\n\n  ```R\n  file <- system.file(\"extdata/BEAST\", \"beast_mcc.tree\", package=\"treeio\")\n  beast <- read.beast(file)\n  x <- tibble(label = as.phylo(beast)$tip.label, trait = rnorm(Ntip(beast)))\n  full_join(beast, x, by=\"label\")\n  ```\n\n## 如何找到想要的`node`\n\n```R\nlibrary(ggtree)\nlibrary(ggplot2)\n\nset.seed(1)\ntr = rtree(10)\n\np  + \n  geom_label(aes(x=branch, label=node))+\n  geom_hilight(node=12, fill=\"steelblue\", alpha=.6)\n```\n\n## 分组\n\n`treeio`中的函数 `groupOTU()` 和 `groupClade()` 可以用于分组。\n\n### `groupClade`\n\n```R\nnwk <- '(((((((A:4,B:4):6,C:5):8,D:6):3,E:21):10,((F:4,G:12):14,H:8):13):13,((I:5,J:2):30,(K:11,L:11):2):17):4,M:56);'\ntree <- read.tree(text=nwk)\n\ngroupClade(as_tibble(tree), c(17, 21))\n```\n\n```R\n## # A tibble: 25 x 5\n##    parent  node branch.length label group\n##     <int> <int>         <dbl> <chr> <fct>\n##  1     20     1             4 A     1    \n##  2     20     2             4 B     1    \n##  3     19     3             5 C     1    \n##  4     18     4             6 D     1    \n##  5     17     5            21 E     1    \n##  6     22     6             4 F     2    \n##  7     22     7            12 G     2    \n##  8     21     8             8 H     2    \n##  9     24     9             5 I     0    \n## 10     24    10             2 J     0    \n## # … with 15 more rows\n```\n\n以`node17`和`node21`为界将`clade`进行分组。这两个函数可以作用于`tbl_tree`、`phylo` 、 `treedata`及 `ggtree` 这些对象。\n\n### `groupOTU`\n\n```R\nset.seed(2017)\ntr <- rtree(4)\nx <- as_tibble(tr)\n## 输入的节点可以是节点ID，也可以是Label\ngroupOTU(x, c('t1', 't4'), group_name = \"fake_group\")\n```\n\n```R\n## # A tibble: 7 x 5\n##   parent  node branch.length label fake_group\n##    <int> <int>         <dbl> <chr> <fct>     \n## 1      5     1       0.435   t4    1         \n## 2      7     2       0.674   t1    1         \n## 3      7     3       0.00202 t3    0         \n## 4      6     4       0.0251  t2    0         \n## 5      5     5      NA       <NA>  1         \n## 6      5     6       0.472   <NA>  1         \n## 7      6     7       0.274   <NA>  1\n```\n\n更常见的分组方法是直接命名分组：\n\n```R\ncls <- list(c1=c(\"A\", \"B\", \"C\", \"D\", \"E\"),\n            c2=c(\"F\", \"G\", \"H\"),\n            c3=c(\"L\", \"K\", \"I\", \"J\"),\n            c4=\"M\")\n\nas_tibble(tree) %>% groupOTU(cls)\n```\n\n```R\n## # A tibble: 25 x 5\n##    parent  node branch.length label group\n##     <int> <int>         <dbl> <chr> <fct>\n##  1     20     1             4 A     c1   \n##  2     20     2             4 B     c1   \n##  3     19     3             5 C     c1   \n##  4     18     4             6 D     c1   \n##  5     17     5            21 E     c1   \n##  6     22     6             4 F     c2   \n##  7     22     7            12 G     c2   \n##  8     21     8             8 H     c2   \n##  9     24     9             5 I     c3   \n## 10     24    10             2 J     c3   \n## # … with 15 more rows\n```\n\n## 重新标准化分支\n\n不同的进化树可以进行合并，原始的分支长度可能单位不一样，这时候就可以用合并后的其他参数对分支长度进行标准化。\n\n```R\np1 <- ggtree(merged_tree) + theme_tree2()\np2 <- ggtree(rescale_tree(merged_tree, 'dN')) + theme_tree2()\np3 <- ggtree(rescale_tree(merged_tree, 'rate')) + theme_tree2()\n\ncowplot::plot_grid(p1, p2, p3, ncol=3, labels = LETTERS[1:3])\n```\n\n{% asset_img 7.png %}\n\n从上图可以看到的是，三个图的“横坐标”范围不一样，第一个图是原始的分支单位，第二个是以`dN`进行标准化的结果，第三个是以`rate`进行标准化的结果。\n\n## 子集操作\n\n### 从树中除去`tips`\n\n有些时候出于某些原因（如序列质量、组装质量、比对错误等），我们会将某些`tips`（样本）从树里面剔除，函数`drop.tip()`可以实现这一功能：\n\n```R\nf <- system.file(\"extdata/NHX\", \"phyldog.nhx\", package=\"treeio\")\nnhx <- read.nhx(f)\nto_drop <- c(\"Physonect_sp_@2066767\",\n             \"Lychnagalma_utricularia@2253871\",\n             \"Kephyes_ovata@2606431\")\np1 <- ggtree(nhx) + geom_tiplab(aes(color = label %in% to_drop)) +\n  scale_color_manual(values=c(\"black\", \"red\")) + xlim(0, 0.8)\n\nnhx_reduced <- drop.tip(as.phylo(nhx), to_drop) # 发现需要转换成phylo对象才行\np2 <- ggtree(nhx_reduced) + geom_tiplab() + xlim(0, 0.8)  \ncowplot::plot_grid(p1, p2, ncol=2, labels = c(\"A\", \"B\"))\n```\n\n{% asset_img 8.png %}\n\n### 根据`tips`取子集\n\n如果一个进化树很复杂的话，要看我们感兴趣的部分就很难，这时候就需要将我们感兴趣的部分提取出来。`treeio`中的函数`tree_subset()`能够完成这一功能，即使是提取出来的子集，结构还是和原来的一样，不会发生变化。\n\n```R\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\n\np1 = ggtree(beast_tree) + \n  geom_tiplab() +  \n  ggtitle('原始树') +\n  xlim(0, 40) + theme_tree2()\n\ntree2 = tree_subset(beast_tree, \"A/Swine/HK/168/2012\", levels_back=4)  \np2 <- ggtree(tree2, aes(color=group)) +\n  ggtitle('取子集') +\n  scale_color_manual(values = c(\"black\", \"red\")) +\n  geom_tiplab() +  xlim(0, 4) + theme_tree2() \n\np3 <- ggtree(tree2, aes(color=group)) +\n  geom_tiplab(hjust = -.1) + xlim(0, 5) + \n  geom_point(aes(fill = rate), shape = 21, size = 4) +\n  ggtitle('用rate这个变量控制颜色') +\n  scale_color_manual(values = c(\"black\", \"red\"), guide = FALSE) +\n  scale_fill_continuous(low = 'blue', high = 'red') +\n  theme_tree2() + theme(legend.position = 'right')\n\n\np4 <- ggtree(tree2, aes(color=group), \n             root.position = as.phylo(tree2)$root.edge) +\n  geom_tiplab() + xlim(18, 24) + \n  ggtitle('添加根节点但不显示') +\n  scale_color_manual(values = c(\"black\", \"red\")) +\n  theme_tree2()\n\np5 <- ggtree(tree2, aes(color=group), \n             root.position = as.phylo(tree2)$root.edge) +\n  geom_rootedge() + geom_tiplab() + xlim(0, 40) + \n  ggtitle('添加根节点且显示') +\n  scale_color_manual(values = c(\"black\", \"red\")) +\n  theme_tree2()\n\nplot_grid(p2, p3, p4, p5, ncol=2) %>%\n  plot_grid(p1, ., ncol=2)\n```\n\n{% asset_img 9.png %}\n\n### 根据内部节点编号取子集\n\n如果我们对特定的进化分支（clade）感兴趣，那也可以通过`tree_subset()`函数将感兴趣的分支进行放大展示，但是这个时候需要我们知道感兴趣的进化分支所对应的`node`编号才行。\n\n```R\nclade <- tree_subset(beast_tree, node=121, levels_back=0)\nclade2 <- tree_subset(beast_tree, node=121, levels_back=2)\np1 <- ggtree(clade) + \n  ggtitle('感兴趣的整个分支') +\n  geom_tiplab() + xlim(0, 5)\np2 <- ggtree(clade2, aes(color=group)) + \n  ggtitle('感兴趣的整个分支 + 回退两个节点') +\n  geom_tiplab() + \n  xlim(0, 8) + scale_color_manual(values=c(\"black\", \"red\"))\n\n\nlibrary(ape)\nlibrary(tidytree)\nlibrary(treeio)\ndata(chiroptera)\n\n# 如果不知道node的时候，就直接进行匹配\nnodes <- grep(\"Plecotus\", chiroptera$tip.label)\nchiroptera <- groupOTU(chiroptera, nodes)\n\np3 <- ggtree(chiroptera, aes(colour = group)) + \n  ggtitle('整个进化树中选择感兴趣的整个分支') +\n  scale_color_manual(values=c(\"black\", \"red\")) +\n  theme(legend.position = \"none\")\n\nclade <- MRCA(chiroptera, nodes) # 最近的父节点\nx <- tree_subset(chiroptera, clade, levels_back = 0)\np4 <- ggtree(x) + \n  ggtitle('感兴趣的特有分支') +\n  geom_tiplab() + xlim(0, 5)\n\nplot_grid(p1, p2, p3, p4,ncol=2)\n```\n\n{% asset_img 10.png %}\n\n## 导出数据\n\n`treeio`这个R包可以导出多种格式的文件，这个比较简单，详情参照：https://yulab-smu.top/treedata-book/chapter3.html\n\n# 进化树可视化\n\n## 基础方法\n\n`ggtree`对进化树进行可视化的方法有两种：\n\n- `ggplot()` + `geom_tree()` + `theme_tree()`\n- `ggtree()`\n\n第二种方法是第一种方法的“缩写版”。\n\n```R\nlibrary(treeio)\nlibrary(ggtree)\n\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\n\nggplot(tree, aes(x, y)) + geom_tree() + theme_tree()\nggtree(tree)\n```\n\n这两种方法得到的结果是一样的：\n\n{% asset_img 11.png %}\n\n`ggtree`支持`ggplot2`的图形语法，因此，也可以在`ggtree`中对颜色性状等进行修改：\n\n```R\nlibrary(ggplot2)\nlibrary(treeio)\nlibrary(ggtree)\n\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\n\nggplot(tree, aes(x, y)) + geom_tree() + theme_tree()\nggtree(tree)\n\np1 = ggtree(tree, color=\"firebrick\", size=2, linetype=\"dotted\") +\n  ggtitle('阶梯化')\np2 = ggtree(tree, color=\"firebrick\", size=2, linetype=\"dotted\", ladderize=FALSE) +\n  ggtitle('非阶梯化')\n\ncowplot::plot_grid(p1,p2)v\n```\n\n{% asset_img 12.png %}\n\n可以使用参数`branch.length`对egde进行标准化，如果参数为`none`，则是这样：\n\n```R\nggtree(tree, branch.length=\"none\")\n```\n\n{% asset_img 13.png %}\n\n## 输出样式\n\n`ggtree`支持多种输出样式：\n\n```R\nlibrary(ggtree)\nset.seed(2017-02-16)\ntree <- rtree(50)\np1 = ggtree(tree) +\n  ggtitle('默认')\np2 = ggtree(tree, layout=\"roundrect\")  +\n  ggtitle('roundrect')\np3 = ggtree(tree, layout=\"slanted\") +\n  ggtitle('slanted')\np4 = ggtree(tree, layout=\"ellipse\") +\n  ggtitle('ellipse')\np5 = ggtree(tree, layout=\"circular\") +\n  ggtitle('circular')\np6 = ggtree(tree, layout=\"fan\", open.angle=120) +\n  ggtitle('fan')\np7 = ggtree(tree, layout=\"equal_angle\") +\n  ggtitle('equal_angle')\np8 = ggtree(tree, layout=\"daylight\") +\n  ggtitle('daylight')\np9 = ggtree(tree, branch.length='none') +\n  ggtitle('none')\np10 = ggtree(tree, layout=\"ellipse\", branch.length=\"none\") +\n  ggtitle('ellipse对齐')\np11 = ggtree(tree, branch.length='none', layout='circular') +\n  ggtitle('circular对齐')\np12 = ggtree(tree, layout=\"daylight\", branch.length = 'none') +\n  ggtitle('daylight对齐')\n\ncowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, ncol = 4)\n```\n\n{% asset_img 14.png %}\n\n当只是展示树结构而没有分支长度标尺的时候，就用最下面这4种。\n\n还有其他的多种对齐方式：\n\n```R\nggtree(tree) + scale_x_reverse()\nggtree(tree) + coord_flip()\nggtree(tree) + layout_dendrogram()\nggplotify::as.ggplot(ggtree(x), angle=-30, scale=.9)\nggtree(tree, layout='slanted') + coord_flip()\nggtree(tree, layout='slanted', branch.length='none') + layout_dendrogram()\nggtree(tree, layout='circular') + xlim(-10, NA)\nggtree(tree) + layout_inward_circular()\nggtree(tree) + layout_inward_circular(xlim=15)\n```\n\n{% asset_img 15.png %}\n\n如果是时间范围数据的话，则需要调用参数`mrsd`（most recent sample data）：\n\n```R\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", \n                          package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\nggtree(beast_tree, mrsd=\"2013-01-01\") + theme_tree2()\n```\n\n{% asset_img 16.png %}\n\n## 展示相关元素\n\n### 展示进化距离\n\n函数`geom_treescale()`用于展示进化距离。\n\n```R\np1 = ggtree(tree) + geom_treescale() + ggtitle('默认')\np2 = ggtree(tree) + geom_treescale(x=0, y=45, width=1, color='red') +\n  ggtitle('设定位置、宽度、颜色')\np3 = ggtree(tree) + geom_treescale(fontsize=6, linesize=2, offset=1) +\n  ggtitle('设定字体大小、线条大小、缩进')\np4 = ggtree(tree) + theme_tree2() +\n  ggtitle('使用内置主题')\n\ncowplot::plot_grid(p1,p2,p3,p4, ncol = 2)\n```\n\n{% asset_img 17.png %}\n\n### 展示` nodes/tips`\n\n```R\np1 = ggtree(tree) + geom_point(aes(shape=isTip, color=isTip), size=3) +\n  ggtitle('使用geom_point()函数')\n\np2 <- ggtree(tree) + geom_nodepoint(color=\"#b5e521\", alpha=1/4, size=10) +\n  geom_tippoint(color=\"#FDAC4F\", shape=8, size=3) +\n  ggtitle('使用两个函数')\n\ncowplot::plot_grid(p1,p2, ncol = 2)\n```\n\n{% asset_img 18.png %}\n\n### 展示`tips`的标签\n\n```R\np1 = ggtree(tree) + geom_nodepoint(color=\"#b5e521\", alpha=1/4, size=10) +\n  geom_tippoint(color=\"#FDAC4F\", shape=8, size=3) + \n  geom_tiplab(size=3, color=\"purple\")\n\np2 = ggtree(tree, layout=\"circular\") + \n  geom_tiplab(aes(angle=angle), color='blue')\n\np3 = ggtree(tree, branch.length = 'none') + \n  geom_tiplab(as_ylab=TRUE, color='firebrick')\n\ncowplot::plot_grid(p1, p2,p3, ncol = 3)\n```\n\n{% asset_img 19.png %}\n\n### 展示根节点\n\n```R\n## with root edge = 1\ntree1 <- read.tree(text='((A:1,B:2):3,C:2):1;')\np1 = ggtree(tree1) + geom_tiplab() + geom_rootedge() +\n  ggtitle('有根节点信息')\n\n## without root edge\ntree2 <- read.tree(text='((A:1,B:2):3,C:2);')\np2 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +\n  ggtitle('无根节点信息，默认无')\n\n## setting root edge\ntree2$root.edge <- 2\np3 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +\n  ggtitle('无根节点信息，添加信息')\n\n## specify length of root edge for just plotting\n## this will ignore tree$root.edge\np4 = ggtree(tree2) + geom_tiplab() + geom_rootedge(rootedge = 3) +\n  ggtitle('无根节点信息，设置信息')\n\ncowplot::plot_grid(p1,p2,p3,p4, ncol = 2)\n```\n\n{% asset_img 20.png %}\n\n### 上色\n\n上色直接是很简单，就像`ggplot2`那样：\n\n```R\nggtree(beast_tree, aes(color=rate)) +\n  scale_color_continuous(low='darkgreen', high='red') +\n  theme(legend.position=\"right\")\n```\n\n{% asset_img 21.png %}\n\n```R\nanole.tree<-read.tree(\"http://www.phytools.org/eqg2015/data/anole.tre\")\nsvl <- read.csv(\"http://www.phytools.org/eqg2015/data/svl.csv\",\n                row.names=1)\nsvl <- as.matrix(svl)[,1]\nfit <- phytools::fastAnc(anole.tree,svl,vars=TRUE,CI=TRUE)\n\ntd <- data.frame(node = nodeid(anole.tree, names(svl)),\n                 trait = svl)\nnd <- data.frame(node = names(fit$ace), trait = fit$ace)\n\nd <- rbind(td, nd)\nd$node <- as.numeric(d$node)\ntree <- full_join(anole.tree, d, by = 'node')\n\np1 <- ggtree(tree, aes(color=trait), layout = 'circular', \n             ladderize = FALSE, continuous = TRUE, size=2) +\n  scale_color_gradientn(colours=c(\"red\", 'orange', 'green', 'cyan', 'blue')) +\n  geom_tiplab(hjust = -.1) + \n  xlim(0, 1.2) + \n  theme(legend.position = c(.05, .85)) \n\np2 <- ggtree(tree, layout='circular', ladderize = FALSE, size=2.8) + \n  geom_tree(aes(color=trait), continuous=T, size=2) +  \n  scale_color_gradientn(colours=c(\"red\", 'orange', 'green', 'cyan', 'blue')) +\n  geom_tiplab(aes(color=trait), hjust = -.1) + \n  xlim(0, 1.2) + \n  theme(legend.position = c(.05, .85)) \n\ncowplot::plot_grid(p1, p2, ncol=2, labels=c(\"分支默认边框\", \"分支黑色边框\"))    \n```\n\n{% asset_img 22.png %}\n\n### 对树进行重新标准化\n\n多个参数对进化树进行标准化，时间序列相关的参数用`msrd`，其余的参数可以用`branch.length`。\n\n```R\nlibrary(treeio)\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\nbeast_tree\n\np1 <- ggtree(beast_tree, mrsd='2013-01-01') + theme_tree2() +\n  labs(caption=\"时间序列\")\np2 <- ggtree(beast_tree, branch.length='rate') + theme_tree2() +\n  labs(caption=\"取代速率\")\n\nmlcfile <- system.file(\"extdata/PAML_Codeml\", \"mlc\", package=\"treeio\")\nmlc_tree <- read.codeml_mlc(mlcfile)\np3 <- ggtree(mlc_tree) + theme_tree2() +\n  labs(caption=\"单密码子核苷酸取代\")\np4 <- ggtree(mlc_tree, branch.length='dN_vs_dS') + theme_tree2() +\n  labs(caption=\"dN/dS\")\n\ncowplot::plot_grid(p1,p2,p3,p4, ncol = 2\n```\n\n{% asset_img 23.png %}\n\n也可以用`rescale_tree`对树进行标准化：\n\n```R\nbeast_tree2 <- rescale_tree(beast_tree, branch.length='rate')\nggtree(beast_tree2) + theme_tree2()\n```\n\n{% asset_img 24.png %}\n\n### 背景色\n\n```R\nset.seed(2019)\nx <- rtree(30)\np1 = ggtree(x, color=\"red\") + theme_tree(\"steelblue\")\np2 = ggtree(x, color=\"white\") + theme_tree(\"black\")\n\ncowplot::plot_grid(p1,p2, ncol = 1)\n```\n\n{% asset_img 25.png %}\n\n### 批量建树\n\n批量建树就相当于`ggplot2`中的分面：\n\n```R\n## trees <- lapply(c(10, 20, 40), rtree)\n## class(trees) <- \"multiPhylo\"\n## ggtree(trees) + facet_wrap(~.id, scale=\"free\") + geom_tiplab()\n\nr8s <- read.r8s(system.file(\"extdata/r8s\", \"H3_r8s_output.log\", package=\"treeio\"))\nggtree(r8s) + facet_wrap( ~.id, scale=\"free\") + theme_tree2()\n```\n\n{% asset_img 26.png %}\n\n# 进化树注释\n\n## 基本用法\n\n注释的信息很多，节点的分组、样品来源、基因表达量等都可以作为注释的信息。一个简单的例子：\n\n````R\nlibrary(ggtree)\ntreetext = \"(((ADH2:0.1[&&NHX:S=human], ADH1:0.11[&&NHX:S=human]):\n0.05 [&&NHX:S=primates:D=Y:B=100],ADHY:\n0.1[&&NHX:S=nematode],ADHX:0.12 [&&NHX:S=insect]):\n0.1[&&NHX:S=metazoa:D=N],(ADH4:0.09[&&NHX:S=yeast],\nADH3:0.13[&&NHX:S=yeast], ADH2:0.12[&&NHX:S=yeast],\nADH1:0.11[&&NHX:S=yeast]):0.1[&&NHX:S=Fungi])[&&NHX:D=N];\"\ntree <- read.nhx(textConnection(treetext))\nggtree(tree) + geom_tiplab() + \n  geom_label(aes(x=branch, label=S), fill='lightgreen') + \n  geom_label(aes(label=D), fill='steelblue') + \n  geom_text(aes(label=B), hjust=-.5)\n````\n\n{% asset_img 27.png %}\n\n{% asset_img 28.png %}\n\n## `clade`注释\n\n```R\nset.seed(2015-12-21)\ntree <- rtree(30)\np1 <- ggtree(tree) + xlim(NA, 6)\n\np2 = p1 + geom_cladelabel(node=45, label=\"test label\") +\n  geom_cladelabel(node=34, label=\"another clade\")\n\np3 = p1 + geom_cladelabel(node=45, label=\"test label\", align=TRUE,  offset = .2, color='red') +\n  geom_cladelabel(node=34, label=\"another clade\", align=TRUE, offset = .2, color='blue')\n\np4 = p1 + geom_cladelabel(node=45, label=\"test label\", align=T, angle=270, hjust='center', offset.text=.5, barsize=1.5) +\n  geom_cladelabel(node=34, label=\"another clade\", align=T, angle=45, fontsize=8)\n\np5 = p1 + geom_cladelabel(node=34, label=\"another clade\", align=T, geom='label', fill='lightblue')\n\ncowplot::plot_grid(p2,p3,p4,p5,ncol = 2)\n```\n\n{% asset_img 29.png %}\n\n同样也适用于无根输出样式，可以根据`node`的编号，也可以直接用`tips`的标签（这个是真的赞啊）：\n\n```R\np1 = ggtree(tree, layout=\"daylight\") + \n  geom_cladelabel(node=35, label=\"test label\", angle=0, \n                  fontsize=8, offset=.5, vjust=.5)  + \n  geom_cladelabel(node=55, label='another clade', \n                  angle=-95, hjust=.5, fontsize=8)\n\n\np2 = ggtree(tree) + xlim(NA, 6) + \n  geom_tiplab() + \n  geom_strip('t10', 't30', barsize=2, color='red', \n             label=\"associated taxa\", offset.text=.1) + \n  geom_strip('t1', 't18', barsize=2, color='blue', \n             label = \"another label\", offset.text=.1)\n\ncowplot::plot_grid(p1,p2,ncol = 2)\n```\n\n{% asset_img 30.png %}\n\n## 局部高亮\n\n局部高亮可以根据`node`编号进行高亮，也可以使用附加数据或树数据里面的数据进行高亮：\n\n```R\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\n\np1 = ggtree(tree) + \n  geom_hilight(node=21, fill=\"steelblue\", alpha=.6) +\n  geom_hilight(node=17, fill=\"darkgreen\", alpha=.6) \n\np2 = ggtree(tree, layout=\"circular\") + \n  geom_hilight(node=21, fill=\"steelblue\", alpha=.6) +\n  geom_hilight(node=23, fill=\"darkgreen\", alpha=.6)\n\n## type can be 'encircle' or 'rect'\nggtree(tree, layout=\"daylight\", branch.length = 'none') + \n  geom_hilight(node=10) + \n  geom_hilight(node=16, fill='darkgreen', type=\"rect\")\n\n\nggtree(tree) +\n  geom_balance(node=16, fill='steelblue', color='white', alpha=0.6, extend=1) +\n  geom_balance(node=19, fill='darkgreen', color='white', alpha=0.6, extend=1) \n\n## using external data\nd <- data.frame(node=c(17, 21), type=c(\"A\", \"B\"))\nggtree(tree) + geom_hilight(data=d, aes(node=node, fill=type))\n\n## using data stored in tree object\nx <- read.nhx(system.file(\"extdata/NHX/ADH.nhx\", package=\"treeio\"))\nggtree(x) + \n  geom_hilight(mapping=aes(subset = node %in% c(10, 12), fill = S)) +\n  scale_fill_manual(values=c(\"steelblue\", \"darkgreen\"))\n```\n\n{% asset_img 31.png %}\n\n## 高亮不同分组\n\n```R\nmytree <- read.tree(\"data/Tree 30.4.19.nwk\")\n\n# Define nodes for coloring later on\ntiplab <- mytree$tip.label\ncls <- tiplab[grep(\"^ch\", tiplab)] \nlabeltree <- groupOTU(mytree, cls)\n\np <- ggtree(labeltree, aes(color=group, linetype=group), layout=\"circular\") +\n    scale_color_manual(values = c(\"#efad29\", \"#63bbd4\")) +\n    geom_nodepoint(color=\"black\", size=0.1) +\n    geom_tiplab(size=2, color=\"black\")\n\np2 <- flip(p, 136, 110) %>% \n    flip(141, 145) %>% \n    rotate(141) %>% \n    rotate(142) %>% \n    rotate(160) %>% \n    rotate(164) %>% \n    rotate(131)\n\n### Group V and II coloring \np3 <- p2 + geom_hilight(node = 110, fill = \"#229f8a\", alpha = 0.2, extend = 0.43) +    \n    geom_hilight(node = 88, fill = \"#229f8a\", alpha = 0.2, extend = 0.445) +\n    geom_hilight(node = 156, fill = \"#229f8a\", alpha = 0.2, extend = 0.35) +\n    geom_hilight(node = 136, fill = \"#f9311f\", alpha = 0.2, extend = 0.512)\n\n### Putting on a label on the avian specific expansion \np4 <- p3 + geom_cladelabel(node = 113, label = \"Avian-specific expansion\", \n                        align = TRUE, angle = -35, offset.text = 0.05, \n                        hjust = \"center\", fontsize = 2,  offset = 0.2, barsize = 0.2)\n    \n### Adding the bootstrap values with subset used to remove all bootstraps < 50  \np5 <- p4 + geom_text2(aes(label=label, \n                        subset = !is.na(as.numeric(label)) & as.numeric(label) > 50), \n                    size = 2, color = \"black\",nudge_y = 0.7, nudge_x = -0.05)\n \n### Putting labels on the subgroups \np6 <- p5 + geom_cladelabel(node = 114, label = \"Subgroup A\", align = TRUE, \n                        angle = -55, offset.text = .03, hjust = \"center\", \n                        offset = 0.05, barsize = 0.2, fontsize = 2) +\n            geom_cladelabel(node = 121, label = \"Subgroup B\", align = TRUE, \n                        angle = -15, offset.text = .03, hjust = \"center\", \n                        offset = 0.05, barsize = 0.2, fontsize = 2) +\n            theme(legend.position=\"none\", \n                plot.margin=grid::unit(c(-15,-15,-15,-15), \"mm\"))\n\nprint(p6)\n```\n\n{% asset_img 62.png %}\n\n## 样品连接\n\n利用函数`geom_taxalink()`可以实现样品之间的连线，但是只支持有限的几种形式：\n\n```R\np1 <- ggtree(tree) + geom_tiplab() + \n  geom_taxalink(taxa1='A', taxa2='E') + \n  geom_taxalink(taxa1='F', taxa2='K', \n                color='red', linetype = 'dashed',\n                arrow=arrow(length=unit(0.02, \"npc\")))\n\np2 <- ggtree(tree, layout=\"circular\") + \n  geom_taxalink(taxa1='A', taxa2='E', \n                color=\"grey\",alpha=0.5, \n                offset=0.05,arrow=arrow(length=unit(0.01, \"npc\"))) + \n  geom_taxalink(taxa1='F', taxa2='K', \n                color='red', linetype = 'dashed', \n                alpha=0.5, offset=0.05,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_taxalink(taxa1=\"L\", taxa2=\"M\", \n                color=\"blue\", alpha=0.5, \n                offset=0.05,hratio=0.8, \n                arrow=arrow(length=unit(0.01, \"npc\"))) + \n  geom_tiplab()\n\n# when the tree was created using reverse x, \n# we can set outward to FALSE, which will generate the inward curve lines.\np3 <- ggtree(tree, layout=\"inward_circular\", xlim=150) +\n  geom_taxalink(taxa1='A', taxa2='E', \n                color=\"grey\", alpha=0.5, \n                offset=-0.2, \n                outward=FALSE,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_taxalink(taxa1='F', taxa2='K', \n                color='red', linetype = 'dashed', \n                alpha=0.5, offset=-0.2,\n                outward=FALSE,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_taxalink(taxa1=\"L\", taxa2=\"M\", \n                color=\"blue\", alpha=0.5, \n                offset=-0.2, \n                outward=FALSE,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_tiplab(hjust=1) \n\ndat <- data.frame(from=c(\"A\", \"F\", \"L\"), \n                  to=c(\"E\", \"K\", \"M\"), \n                  h=c(1, 1, 0.1), \n                  type=c(\"t1\", \"t2\", \"t3\"), \n                  s=c(2, 1, 2))\np4 <- ggtree(tree, layout=\"inward_circular\", xlim=c(150, 0)) +\n  geom_taxalink(data=dat, \n                mapping=aes(taxa1=from, \n                            taxa2=to, \n                            color=type, \n                            size=s), \n                ncp=10,\n                offset=0.15) + \n  geom_tiplab(hjust=1) +\n  scale_size_continuous(range=c(1,3))\ncowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4])\n```\n\n{% asset_img 32.png %}\n\n## Uncertainty of evolutionary inference\n\n```R\nfile <- system.file(\"extdata/MEGA7\", \"mtCDNA_timetree.nex\", package = \"treeio\")\nx <- read.mega(file)\np1 <- ggtree(x) + geom_range('reltime_0.95_CI', color='red', size=3, alpha=.3)\np2 <- ggtree(x) + geom_range('reltime_0.95_CI', color='red', size=3, alpha=.3, center='reltime')  \np3 <- p2 + scale_x_range() + theme_tree2()\n\ncowplot::plot_grid(p1,p2,p3,ncol = 3)\n```\n\n{% asset_img 33.png %}\n\n## 其他软件输出的结果\n\n```R\nrstfile <- system.file(\"extdata/PAML_Codeml\", \"rst\", \n                       package=\"treeio\")\nmlcfile <- system.file(\"extdata/PAML_Codeml\", \"mlc\", \n                       package=\"treeio\")\n\nml <- read.codeml(rstfile, mlcfile)\nggtree(ml, aes(color=dN_vs_dS), branch.length='dN_vs_dS') + \n  scale_color_continuous(name='dN/dS', limits=c(0, 1.5),\n                         oob=scales::squish,\n                         low='darkgreen', high='red') +\n  geom_text(aes(x=branch, label=AA_subs), \n            vjust=-.5, color='steelblue', size=2) +\n  theme_tree2(legend.position=c(.9, .3))\n```\n\n{% asset_img 34.png %}\n\n## 放大特定区域\n\n```R\nlibrary(ggtree)\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\np1 = ggtree(tree) + geom_tiplab()\np2 = viewClade(p, MRCA(p, \"I\", \"L\"))\n\ncowplot::plot_grid(p1,p2,ncol = 2, labels = c('原图','特定区域'))\n```\n\n{% asset_img 35.png %}\n\n## 标准化选中的clade\n\n```R\ntree2 <- groupClade(tree, c(17, 21))\np <- ggtree(tree2, aes(color=group)) + theme(legend.position='none') +\n  scale_color_manual(values=c(\"black\", \"firebrick\", \"steelblue\"))\nscaleClade(p, node=17, scale=.1) \n```\n\n{% asset_img 36.png %}\n\n## 隐藏/展示某个clade\n\n```R\np2 <- p %>% collapse(node=21) + \n  geom_point2(aes(subset=(node==21)), shape=21, size=5, fill='green')\np2 <- collapse(p2, node=23) + \n  geom_point2(aes(subset=(node==23)), shape=23, size=5, fill='red')\nprint(p2)\nexpand(p2, node=23) %>% expand(node=21)\n```\n\n{% asset_img 37.png %}\n\n## 利用三角形隐藏/展示某个clade\n\n```R\np2 <- p + geom_tiplab()\nnode <- 21\ncollapse(p2, node, 'max') %>% expand(node)\ncollapse(p2, node, 'min') %>% expand(node)\ncollapse(p2, node, 'mixed') %>% expand(node)\n\ncollapse(p, 21, 'mixed', fill='steelblue', alpha=.4) %>% \n  collapse(23, 'mixed', fill='firebrick', color='blue')\n  \nscaleClade(p, 23, .2) %>% collapse(23, 'min', fill=\"darkgreen\")  \n```\n\n{% asset_img 38.png %}\n\n## 分组Taxa\n\n```R\nlibrary(ggsci)\n\ndata(iris)\nrn <- paste0(iris[,5], \"_\", 1:150)\nrownames(iris) <- rn\nd_iris <- dist(iris[,-5], method=\"man\")\n\nc <- ape::bionj(d_iris)\ngrp <- list(setosa     = rn[1:50],\n            versicolor = rn[51:100],\n            virginica  = rn[101:150])\n\np_iris <- ggtree(tree_iris, layout = 'circular', branch.length='none')\ngroupOTU(p_iris, grp, 'group') + \n  aes(color=group) +\n  scale_color_aaas() +\n  theme(legend.position=\"right\")\n```\n\n{% asset_img 39.png %}\n\n另外一种方法：\n\n```R\ntree_iris <- groupOTU(tree_iris, grp, \"Species\")\nggtree(tree_iris, aes(color=Species), layout = 'circular', branch.length = 'none') + \n  theme(legend.position=\"right\")\n```\n\n## 旋转clade\n\n旋转`clade`有两种方法：\n\n```R\np1 <- p + geom_point2(aes(subset=node==16), color='darkgreen', size=5)\np2 <- rotate(p1, 17) %>% rotate(21) # 方法1\nflip(p2, 17, 21) # 方法2\n```\n\n{% asset_img 40.png %}\n\n## 外部数据mapping到树上\n\n```R\nlibrary(ggimage)\nlibrary(ggtree)\n\n# 文件下载地址\n# https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tree_boots.nwk\n# https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tip_data.csv\n\n\nx <- read.tree(\"tree_boots.nwk\")\ninfo <- read.csv(\"tip_data.csv\")\n\np <- ggtree(x) %<+% info + xlim(-.1, 4)\np2 <- p + geom_tiplab(offset = .6, hjust = .5) +\n  geom_tippoint(aes(shape = trophic_habit, color = trophic_habit, size = mass_in_kg)) + \n  theme(legend.position = \"right\") + scale_size_continuous(range = c(3, 10))\n\n#https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/inode_data.csv\nd2 <- read.csv(\"inode_data.csv\")\np2 %<+% d2 + geom_label(aes(label = vernacularName.y, fill = posterior)) + \n  scale_fill_gradientn(colors = RColorBrewer::brewer.pal(3, \"YlGnBu\"))\n```\n\n{% asset_img 41.png %}\n\n## 将SNP数据添加到树上\n\n```R\nlibrary(ggtree)\n## remote_folder <- paste0(\"https://raw.githubusercontent.com/katholt/\",\n##                         \"plotTree/master/tree_example_april2015/\")\nremote_folder <- \"data/tree_example_april2015/\" \n\n## read the phylogenetic tree\ntree <- read.tree(paste0(remote_folder, \"tree.nwk\"))\n\n## read the sampling information data set\ninfo <- read.csv(paste0(remote_folder,\"info.csv\"))\n\n## read and process the allele table\nsnps<-read.csv(paste0(remote_folder, \"alleles.csv\"), header = F,\n                row.names = 1, stringsAsFactor = F)\nsnps_strainCols <- snps[1,] \nsnps<-snps[-1,] # drop strain names\ncolnames(snps) <- snps_strainCols\n\ngapChar <- \"?\"\nsnp <- t(snps)\nlsnp <- apply(snp, 1, function(x) {\n        x != snp[1,] & x != gapChar & snp[1,] != gapChar\n    })\nlsnp <- as.data.frame(lsnp)\nlsnp$pos <- as.numeric(rownames(lsnp))\nlsnp <- tidyr::gather(lsnp, name, value, -pos)\nsnp_data <- lsnp[lsnp$value, c(\"name\", \"pos\")]\n\n## read the trait data\nbar_data <- read.csv(paste0(remote_folder, \"bar.csv\"))\n\n## visualize the tree \np <- ggtree(tree) \n\n## attach the sampling information data set \n## and add symbols colored by location\np <- p %<+% info + geom_tippoint(aes(color=location))\n\n## visualize SNP and Trait data using dot and bar charts,\n## and align them based on tree structure\np + geom_facet(panel = \"SNP\", data = snp_data, geom = geom_point, \n               mapping=aes(x = pos, color = location), shape = '|') +\n    geom_facet(panel = \"Trait\", data = bar_data, geom = ggstance::geom_barh, \n                aes(x = dummy_bar_value, color = location, fill = location), \n                stat = \"identity\", width = .6) +\n    theme_tree2(legend.position=c(.05, .85))\n```\n\n{% asset_img 42.png %}\n\n## 关联矩阵\n\n```R\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\n\ngenotype_file <- system.file(\"examples/Genotype.txt\", package=\"ggtree\")\ngenotype <- read.table(genotype_file, sep=\"\\t\", stringsAsFactor=F)\ncolnames(genotype) <- sub(\"\\\\.$\", \"\", colnames(genotype))\np <- ggtree(beast_tree, mrsd=\"2013-01-01\") + \n    geom_treescale(x=2008, y=1, offset=2) + \n    geom_tiplab(size=2)\ngheatmap(p, genotype, offset=5, width=0.5, font.size=3, \n        colnames_angle=-45, hjust=0) +\n    scale_fill_manual(breaks=c(\"HuH3N2\", \"pdm\", \"trig\"), \n        values=c(\"steelblue\", \"firebrick\", \"darkgreen\"), name=\"genotype\")\n\np <- ggtree(beast_tree, mrsd=\"2013-01-01\") + \n    geom_tiplab(size=2, align=TRUE, linesize=.5) + \n    theme_tree2()\ngheatmap(p, genotype, offset=8, width=0.6, \n        colnames=FALSE, legend_title=\"genotype\") +\n    scale_x_ggtree() + \n    scale_y_continuous(expand=c(0, 0.3))\n```\n\n{% asset_img 43.png %}\n\n## 关联多个矩阵\n\n```R\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\n\ntree <- read.tree(nwk)\ncirc <- ggtree(tree, layout = \"circular\")\n\ndf <- data.frame(first=c(\"a\", \"b\", \"a\", \"c\", \"d\", \"d\", \"a\", \"b\", \"e\", \"e\", \"f\", \"c\", \"f\"),\n                 second= c(\"z\", \"z\", \"z\", \"z\", \"y\", \"y\", \"y\", \"y\", \"x\", \"x\", \"x\", \"a\", \"a\"))\nrownames(df) <- tree$tip.label\n\ndf2 <- as.data.frame(matrix(rnorm(39), ncol=3))\nrownames(df2) <- tree$tip.label\ncolnames(df2) <- LETTERS[1:3]\n\n\np1 <- gheatmap(circ, df, offset=.8, width=.2,\n               colnames_angle=95, colnames_offset_y = .25) +\n    scale_fill_viridis_d(option=\"D\", name=\"discrete\\nvalue\")\n\n\nlibrary(ggnewscale)\np2 <- p1 + new_scale_fill()\ngheatmap(p2, df2, offset=15, width=.3,\n         colnames_angle=90, colnames_offset_y = .25) +\n    scale_fill_viridis_c(option=\"A\", name=\"continuous\\nvalue\")\n```\n\n{% asset_img 44.png %}\n\n## 多序列比对可视化\n\n```R\ntree <- read.tree(\"data/tree.nwk\")\np <- ggtree(tree) + geom_tiplab(size=3)\nmsaplot(p, \"data/sequence.fasta\", offset=3, width=2)\np <- ggtree(tree, layout='circular') + \n    geom_tiplab(offset=4, align=TRUE) + xlim(NA, 12)\nmsaplot(p, \"data/sequence.fasta\", window=c(120, 200))  \n```\n\n{% asset_img 45.png %}\n\n## 拼图\n\n```R\nlibrary(ggplot2)\nlibrary(ggtree)\n\nset.seed(2019-10-31)\ntr <- rtree(10)\n\nd1 <- data.frame(\n    # only some labels match\n    label = c(tr$tip.label[sample(5, 5)], \"A\"),\n    value = sample(1:6, 6))\n\nd2 <- data.frame(\n    label = rep(tr$tip.label, 5),\n    category = rep(LETTERS[1:5], each=10),\n    value = rnorm(50, 0, 3)) \n\ng <- ggtree(tr) + geom_tiplab(align=TRUE)\n\np1 <- ggplot(d1, aes(label, value)) + geom_col(aes(fill=label)) + \n    geom_text(aes(label=label, y= value+.1)) +\n    coord_flip() + theme_tree2() + theme(legend.position='none')\n \np2 <- ggplot(d2, aes(x=category, y=label)) + \n    geom_tile(aes(fill=value)) + scale_fill_viridis_c() + \n    theme_tree2() \n    \ncowplot::plot_grid(g, p2, p1, ncol=3) \n\nlibrary(aplot)\np2 %>% insert_left(g) %>% insert_right(p1, width=.5) \n```\n\n{% asset_img 46.png %}\n\n## 图片注释\n\n没能找到图片下载地址，看代码很容易理解：\n\n```R\nlibrary(ggimage)\nlibrary(ggtree)\n\nnwk <- \"((((bufonidae, dendrobatidae), ceratophryidae), (centrolenidae, leptodactylidae)), hylidae);\"\n\nx = read.tree(text = nwk)\nggtree(x) + xlim(NA, 7) + ylim(NA, 6.2) +\n  geom_tiplab(aes(image=paste0(\"img/frogs/\", label, '.jpg')), \n              geom=\"image\", offset=2, align=2, size=.2)  + \n  geom_tiplab(geom='label', offset=1, hjust=.5) + \n  geom_image(x=.8, y=5.5, image=\"img/frogs/frog.jpg\", size=.2)\n```\n\n{% asset_img 47.png %}\n\n## 图标（剪影）注释\n\n[PhyloPic](http://phylopic.org/)提供了1300余种生物剪影，`ggtree`能够调用这个数据库中的生物图标进行注释，相当于上面的图片。这种情况下绘图稍微有点慢，毕竟这个数据库是国外的。\n\n```R\nlibrary(ggtree)\nnewick <- \"((Pongo_abelii,(Gorilla_gorilla_gorilla,(Pan_paniscus,Pan_troglodytes)Pan,Homo_sapiens)Homininae)Hominidae,Nomascus_leucogenys)Hominoidea;\"\n\ntree <- read.tree(text=newick)\n\nd <- ggimage::phylopic_uid(tree$tip.label)\nd$body_mass = c(52, 114, 47, 45, 58, 6)\n\np <- ggtree(tree) %<+% d + \n  geom_tiplab(aes(image=uid, colour=body_mass), geom=\"phylopic\", offset=2.5) +\n  geom_tiplab(aes(label=label), offset = .2) + xlim(NA, 7) +\n  scale_color_viridis_c()\n```\n\n{% asset_img 48.png %}\n\n## 使用子图进行注释\n\n用子图进行注释是通过函数`geom_inset()`来完成的。\n\n### 条形图注释\n\n```R\nlibrary(phytools)\ndata(anoletree)\nx <- getStates(anoletree,\"tips\")\ntree <- anoletree\n\ncols <- setNames(palette()[1:length(unique(x))],sort(unique(x)))\nfitER <- ape::ace(x,tree,model=\"ER\",type=\"discrete\")\nancstats <- as.data.frame(fitER$lik.anc)\nancstats$node <- 1:tree$Nnode+Ntip(tree)\n\n## cols parameter indicate which columns store stats\nbars <- nodebar(ancstats, cols=1:6)\nbars <- lapply(bars, function(g) g+scale_fill_manual(values = cols))\n\ntree2 <- full_join(tree, data.frame(label = names(x), stat = x ), by = 'label')\np <- ggtree(tree2) + geom_tiplab() +\n    geom_tippoint(aes(color = stat)) + \n    scale_color_manual(values = cols) +\n    theme(legend.position = \"right\") + \n    xlim(NA, 8)\np + geom_inset(bars, width = .08, height = .05, x = \"branch\") \n```\n\n{% asset_img 49.png %}\n\n### 饼图注释\n\n```R\nlibrary(phytools)\nlibrary(treeio)\nlibrary(tidytree)\ndata(anoletree)\nx <- getStates(anoletree,\"tips\")\ntree <- anoletree\n\ncols <- setNames(palette()[1:length(unique(x))],sort(unique(x)))\nfitER <- ape::ace(x,tree,model=\"ER\",type=\"discrete\")\nancstats <- as.data.frame(fitER$lik.anc)\nancstats$node <- 1:tree$Nnode+Ntip(tree)\n\npies <- nodepie(ancstats, cols = 1:6)\npies <- lapply(pies, function(g) g+scale_fill_manual(values = cols))\n\ntree2 <- full_join(tree, data.frame(label = names(x), stat = x ), by = 'label')\np <- ggtree(tree2) + geom_tiplab() +\n  geom_tippoint(aes(color = stat)) + \n  scale_color_manual(values = cols) +\n  theme(legend.position = \"right\") + \n  xlim(NA, 8)\n\np + geom_inset(pies, width = .1, height = .1) \n```\n\n{% asset_img 50.png %}\n\n### 多种图像组合注释\n\n```\npies_and_bars <- pies\ni <- sample(length(pies), 20)\npies_and_bars[i] <- bars[i]\np + geom_inset(pies_and_bars, width=.08, height=.05)\n```\n\n{% asset_img 51.png %}\n\n## `Phylomoji`注释\n\n```R\nlibrary(ggplot2)\nlibrary(ggtree)\n# install.packages('emojifont')\n\ntt = '((snail,mushroom),(((sunflower,evergreen_tree),leaves),green_salad));'\ntree = read.tree(text = tt)\nd <- data.frame(label = c('snail','mushroom', 'sunflower',\n                          'evergreen_tree','leaves', 'green_salad'),\n                group = c('animal', 'fungi', 'flowering plant',\n                          'conifers', 'ferns', 'mosses'))\n\nggtree(tree, linetype = \"dashed\", size=1, color='firebrick') %<+% d + \n  xlim(0, 4.5) + ylim(0.5, 6.5) +\n  geom_tiplab(parse=\"emoji\", size=15, vjust=.25) +\n  geom_tiplab(aes(label = group), geom=\"label\", x=3.5, hjust=.5)\n```\n\n{% asset_img 52.png %}\n\n## `Emoji`注释circular/fan树\n\n```R\np <- ggtree(tree, layout = \"circular\", size=1) +  \n  geom_tiplab(parse=\"emoji\", size=10, vjust=.25)\nprint(p)\n\n## fan layout  \np2 <- open_tree(p, angle=200) \nprint(p2)\n\np2 %>% rotate_tree(-90)\n```\n\n{% asset_img 53.png %}\n\n## `Emoji`注释clades\n\n```R\nset.seed(123)\ntr <- rtree(30)\n\nggtree(tr) + xlim(NA, 5.2) +\n    geom_cladelabel(node=41, label=\"chicken\", parse=\"emoji\",\n                    fontsize=12, align=TRUE, colour=\"firebrick\") +\n    geom_cladelabel(node=53, label=\"duck\", parse=\"emoji\",\n                    fontsize=12, align=TRUE, colour=\"steelblue\") +\n    geom_cladelabel(node=48, label=\"family\", parse=\"emoji\",\n                    fontsize=12, align=TRUE, colour=\"darkkhaki\")\n```\n\n{% asset_img 54.png %}\n\n## `AppleColorEmoji`\n\n```\nlibrary(ggtree)\ntree_text <- \"(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);\"\nx <- read.tree(text=tree_text)\nlibrary(ggimage)\nlibrary(gridSVG)\np <-  ggtree(x, size=2) + geom_tiplab(size=20, parse='emoji') +\n    xlim(NA, 7) + ylim(NA, 8.5) +\n    geom_phylopic(image=\"79ad5f09-cf21-4c89-8e7d-0c82a00ce728\",\n                  color=\"firebrick\", alpha = .3, size=Inf)\n\np\nps = grid.export(\"emoji.svg\", addClass=T)\n```\n\n{% asset_img 55.png %}\n\n# `ggtree`可视化其他数据\n\n`ggtree`支持其他的数据类型，比如树状图（更多格式请移步Y叔博客）：\n\n```R\nhc <- hclust(dist(mtcars))\nhc\nclus <- cutree(hc, 4)\ng <- split(names(clus), clus)\n\np <- ggtree(hc, linetype='dashed')\nclades <- sapply(g, function(n) MRCA(p, n))\n\np <- groupClade(p, clades, group_name='subtree') + aes(color=subtree)\n\nd <- data.frame(label = names(clus), \n                cyl = mtcars[names(clus), \"cyl\"])\n\np %<+% d + \n  layout_dendrogram() + \n  geom_tippoint(size=5, shape=21, aes(fill=factor(cyl), x=x+.5), color='black') + \n  geom_tiplab(aes(label=cyl), size=3, hjust=.5, color='black') +\n  geom_tiplab(angle=90, hjust=1, offset=-10, show.legend=F) + \n  scale_color_brewer(palette='Set1', breaks=1:4) +\n  theme_dendrogram(plot.margin=margin(6,6,80,6)) +\n  theme(legend.position=c(.9, .6))\n```\n\n{% asset_img 56.png %}\n\n# `ggtree`拓展`ggtreeExtra`\n\n`ggtreeExtra`真的是惊艳到我了，只能献出我的膝盖啊！\n\n`ggtree`的函数`geom_facet()`只支持`rectangular`、 `roundrect`、 `ellipse` 及 `slanted` 这4种输出样式，并不支持在`circular`、`fan`及`radial`这几种输出样式的外环上添加图层，为了解决这个问题，Y叔团队开发了新的R包：`ggtreeExtra`！\n\n## 添加微生物组丰度\n\n`ggtree`直接支持`phyloseq`对象，这个对做微生物的来说，简直就是福音啊！\n\n```R\nlibrary(ggtreeExtra)\nlibrary(ggtree)\nlibrary(phyloseq)\nlibrary(dplyr)\n\ndata(\"GlobalPatterns\")\nGP <- GlobalPatterns\nGP <- prune_taxa(taxa_sums(GP) > 600, GP)\nsample_data(GP)$human <- get_variable(GP, \"SampleType\") %in%\n                              c(\"Feces\", \"Skin\")\nmergedGP <- merge_samples(GP, \"SampleType\")\nmergedGP <- rarefy_even_depth(mergedGP,rngseed=394582)\nmergedGP <- tax_glom(mergedGP,\"Order\")\n\nmelt_simple <- psmelt(mergedGP) %>%\n               filter(Abundance < 120) %>%\n               select(OTU, val=Abundance)\n\np <- ggtree(mergedGP, layout=\"fan\", open.angle=10) + \n     geom_tippoint(mapping=aes(color=Phylum), \n                   size=1.5,\n                   show.legend=FALSE)\np <- rotate_tree(p, -90)\n\np <- p +\n     geom_fruit(\n         data=melt_simple,\n         geom=geom_boxplot,\n         mapping = aes(\n                     y=OTU,\n                     x=val,\n                     group=label,\n                     fill=Phylum,\n                   ),\n         size=.2,\n         outlier.size=0.5,\n         outlier.stroke=0.08,\n         outlier.shape=21,\n         axis.params=list(\n                         axis       = \"x\",\n                         text.size  = 1.8,\n                         hjust      = 1,\n                         vjust      = 0.5,\n                         nbreak     = 3,\n                     ),\n         grid.params=list()\n     ) \n     \np <- p +\n     scale_fill_discrete(\n         name=\"Phyla\",\n         guide=guide_legend(keywidth=0.8, keyheight=0.8, ncol=1)\n     ) +\n     theme(\n         legend.title=element_text(size=9), # The title of legend \n         legend.text=element_text(size=7) # The label text of legend, the sizes should be adjust with dpi.\n     )\np\n```\n\n{% asset_img 57.png %}\n\n## 多维数据添加多个图层\n\n```R\nlibrary(ggtreeExtra)\nlibrary(ggtree)\nlibrary(treeio)\nlibrary(tidytree)\nlibrary(ggstar)\nlibrary(ggplot2)\nlibrary(ggnewscale)\n\ntree <- read.tree(\"data/HMP_tree/hmptree.nwk\")\n# the abundance and types of microbes\ndat1 <- read.csv(\"data/HMP_tree/tippoint_attr.csv\")\n# the abundance of microbes at different body sites.\ndat2 <- read.csv(\"data/HMP_tree/ringheatmap_attr.csv\")\n# the abundance of microbes at the body sites of greatest prevalence.\ndat3 <- read.csv(\"data/HMP_tree/barplot_attr.csv\")\n\n# adjust the order\ndat2$Sites <- factor(dat2$Sites, levels=c(\"Stool (prevalence)\", \"Cheek (prevalence)\",\n                                          \"Plaque (prevalence)\",\"Tongue (prevalence)\",\n                                          \"Nose (prevalence)\", \"Vagina (prevalence)\",\n                                          \"Skin (prevalence)\"))\ndat3$Sites <- factor(dat3$Sites, levels=c(\"Stool (prevalence)\", \"Cheek (prevalence)\",\n                                          \"Plaque (prevalence)\", \"Tongue (prevalence)\",\n                                          \"Nose (prevalence)\", \"Vagina (prevalence)\",\n                                          \"Skin (prevalence)\"))\n# extract the clade label information. Because some nodes of tree are annotated to genera,\n# which can be displayed with high light using ggtree.\nnodeids <- nodeid(tree, tree$node.label[nchar(tree$node.label)>4])\nnodedf <- data.frame(node=nodeids)\nnodelab <- gsub(\"[\\\\.0-9]\", \"\", tree$node.label[nchar(tree$node.label)>4])\n# The layers of clade and hightlight\nposlist <- c(1.6, 1.4, 1.6, 0.8, 0.1, 0.25, 1.6, 1.6, 1.2, 0.4,\n             1.2, 1.8, 0.3, 0.8, 0.4, 0.3, 0.4, 0.4, 0.4, 0.6,\n             0.3, 0.4, 0.3)\nlabdf <- data.frame(node=nodeids, label=nodelab, pos=poslist)\n\n# The circular layout tree.\np <- ggtree(tree, layout=\"fan\", size=0.15, open.angle=5) +\n     geom_hilight(data=nodedf, mapping=aes(node=node),\n                  extendto=6.8, alpha=0.3, fill=\"grey\", color=\"grey50\",\n                  size=0.05) +\n     geom_cladelab(data=labdf, \n                   mapping=aes(node=node, \n                               label=label,\n                               offset.text=pos),\n                   hjust=0.5,\n                   angle=\"auto\",\n                   barsize=NA,\n                   horizontal=FALSE, \n                   fontsize=1.4,\n                   fontface=\"italic\"\n                   )\n\np <- p %<+% dat1 + geom_star(\n                        mapping=aes(fill=Phylum, starshape=Type, size=Size),\n                        position=\"identity\",starstroke=0.1) +\n         scale_fill_manual(values=c(\"#FFC125\",\"#87CEFA\",\"#7B68EE\",\"#808080\",\"#800080\",\n                                    \"#9ACD32\",\"#D15FEE\",\"#FFC0CB\",\"#EE6A50\",\"#8DEEEE\",\n                                    \"#006400\",\"#800000\",\"#B0171F\",\"#191970\"),\n                           guide=guide_legend(keywidth = 0.5, keyheight = 0.5, order=1,\n                                              override.aes=list(starshape=15)),\n                           na.translate=FALSE)+\n         scale_starshape_manual(values=c(15, 1),\n                                guide=guide_legend(keywidth = 0.5, keyheight = 0.5, order=2),\n                                na.translate=FALSE)+\n         scale_size_continuous(range = c(1, 2.5),\n                               guide = guide_legend(keywidth = 0.5, keyheight = 0.5, order=3,\n                                                    override.aes=list(starshape=15)))\n                                                    \np <- p + new_scale_fill() +\n         geom_fruit(data=dat2, geom=geom_tile,\n                    mapping=aes(y=ID, x=Sites, alpha=Abundance, fill=Sites),\n                    color = \"grey50\", offset = 0.04,size = 0.02)+\n         scale_alpha_continuous(range=c(0, 1),\n                             guide=guide_legend(keywidth = 0.3, keyheight = 0.3, order=5)) +\n         geom_fruit(data=dat3, geom=geom_bar,\n                    mapping=aes(y=ID, x=HigherAbundance, fill=Sites),\n                    pwidth=0.38, \n                    orientation=\"y\", \n                    stat=\"identity\",\n         ) +\n         scale_fill_manual(values=c(\"#0000FF\",\"#FFA500\",\"#FF0000\",\"#800000\",\n                                    \"#006400\",\"#800080\",\"#696969\"),\n                           guide=guide_legend(keywidth = 0.3, keyheight = 0.3, order=4))+\n         geom_treescale(fontsize=2, linesize=0.3, x=4.9, y=0.1) +\n         theme(legend.position=c(0.93, 0.5),\n               legend.background=element_rect(fill=NA),\n               legend.title=element_text(size=6.5),\n               legend.text=element_text(size=4.5),\n               legend.spacing.y = unit(0.02, \"cm\"),\n             )\np\n```\n\n{% asset_img 58.png %}\n\n另外一种输出方式：\n\n```R\np + layout_rectangular() + \n    theme(legend.position=c(.05, .7))\n```\n\n{% asset_img 59.png %}\n\n# 群体遗学传例子\n\n```R\nlibrary(ggtree)\nlibrary(ggtreeExtra)\nlibrary(ggplot2)\nlibrary(ggnewscale)\nlibrary(dplyr)\nlibrary(tidytree)\nlibrary(ggstar)\n\ndat <- read.csv(\"data/microreact/Candida_auris/microreact-project-Candidaauris-data.csv\")\ntr <- read.tree(\"data/microreact/Candida_auris/microreact-project-Candidaauris-tree.nwk\")\n\ncountries <- c(\"Canada\", \"United States\",\n               \"Colombia\", \"Panama\",\n               \"Venezuela\", \"France\",\n               \"Germany\", \"Spain\",\n               \"UK\", \"India\",\n               \"Israel\", \"Pakistan\",\n               \"Saudi Arabia\", \"United Arab Emirates\",\n               \"Kenya\", \"South Africa\",\n               \"Japan\", \"South Korea\",\n               \"Australia\")\n# For the tip points\ndat1 <- dat %>% select(c(\"ID\", \"COUNTRY\", \"COUNTRY__colour\"))\ndat1$COUNTRY <- factor(dat1$COUNTRY, levels=countries)\nCOUNTRYcolors <- dat1[match(countries,dat$COUNTRY),\"COUNTRY__colour\"]\n\n# For the heatmap layer\ndat2 <- dat %>% select(c(\"ID\", \"FCZ\", \"AMB\", \"MCF\"))\ndat2 <- reshape2::melt(dat2,id=\"ID\", variable.name=\"Antifungal\", value.name=\"type\")\ndat2$type <- paste(dat2$Antifungal, dat2$type)\ndat2$type <- unlist(lapply(dat2$type,\n                           function(x)ifelse(grepl(\"Not_\", x), \"Susceptible\", x)))\ndat2$Antifungal <- factor(dat2$Antifungal, levels=c(\"FCZ\", \"AMB\", \"MCF\"))\ndat2$type <- factor(dat2$type,\n                    levels=c(\"FCZ Resistant\",\n                            \"AMB Resistant\",\n                            \"MCF Resistant\",\n                            \"Susceptible\"))\n\n# For the points layer\ndat3 <- dat %>% select(c(\"ID\", \"ERG11\", \"FKS1\")) %>%\n        reshape2::melt(id=\"ID\", variable.name=\"point\", value.name=\"mutation\")\ndat3$mutation <- paste(dat3$point, dat3$mutation)\ndat3$mutation <- unlist(lapply(dat3$mutation, function(x)ifelse(grepl(\"WT\",x), NA,x)))\ndat3$mutation <- factor(dat3$mutation, levels=c(\"ERG11 Y132F\", \"ERG11 K143R\",\n                                                \"ERG11 F126L\", \"FKS1 S639Y/P/F\"))\n\n# For the clade group\ndat4 <- dat %>% select(c(\"ID\", \"CLADE\"))\ndat4 <- aggregate(.~CLADE, dat4, FUN=paste, collapse=\",\")\nclades <- lapply(dat4$ID, function(x){unlist(strsplit(x,split=\",\"))})\nnames(clades) <- dat4$CLADE\n\ntr <- groupOTU(tr, clades, \"Clade\")\nClade <- NULL\np <- ggtree(tr=tr, layout=\"fan\", open.angle=15, size=0.2, aes(colour=Clade)) +\n     scale_colour_manual(\n         values=c(\"black\",\"#69B920\",\"#9C2E88\",\"#F74B00\",\"#60C3DB\"),\n         labels=c(\"\",\"I\", \"II\", \"III\", \"IV\"),\n         guide=guide_legend(keywidth=0.5,\n                            keyheight=0.5,\n                            order=1,\n                            override.aes=list(linetype=c(\"0\"=NA,\n                                                         \"Clade1\"=1,\n                                                         \"Clade2\"=1,\n                                                         \"Clade3\"=1,\n                                                         \"Clade4\"=1\n                                                        )\n                                             )\n                           )\n     ) + \n     new_scale_colour()\n\np1 <- p %<+% dat1 +\n     geom_tippoint(aes(colour=COUNTRY),\n                   alpha=0) +\n     geom_tiplab(aes(colour=COUNTRY),\n                   align=TRUE,\n                   linetype=3,\n                   size=1,\n                   linesize=0.2,\n                   show.legend=FALSE\n                   ) +\n     scale_colour_manual(\n         name=\"Country labels\",\n         values=COUNTRYcolors,\n         guide=guide_legend(keywidth=0.5,\n                            keyheight=0.5,\n                            order=2,\n                            override.aes=list(size=2,alpha=1))\n     )\n\np2 <- p1 +\n      geom_fruit(\n          data=dat2,\n          geom=geom_tile,\n          mapping=aes(x=Antifungal, y=ID, fill=type),\n          width=0.1,\n          color=\"white\",\n          pwidth=0.1,\n          offset=0.15\n      ) +\n      scale_fill_manual(\n           name=\"Antifungal susceptibility\",\n           values=c(\"#595959\", \"#B30000\", \"#020099\", \"#E6E6E6\"),\n           na.translate=FALSE,\n           guide=guide_legend(keywidth=0.5,\n                              keyheight=0.5,\n                              order=3\n                             )\n      ) +\n      new_scale_fill()\n\np3 <- p2 +\n      geom_fruit(\n          data=dat3,\n          geom=geom_star,\n          mapping=aes(x=mutation, y=ID, fill=mutation, starshape=point),\n          size=1,\n          starstroke=0,\n          pwidth=0.1,\n          inherit.aes = FALSE,\n          grid.params=list(\n                          linetype=3,\n                          size=0.2\n                      )\n\n      ) +\n      scale_fill_manual(\n          name=\"Point mutations\",\n          values=c(\"#329901\", \"#0600FF\", \"#FF0100\", \"#9900CC\"),\n          guide=guide_legend(keywidth=0.5, keyheight=0.5, order=4,\n                             override.aes=list(starshape=c(\"ERG11 Y132F\"=15,\n                                                           \"ERG11 K143R\"=15,\n                                                           \"ERG11 F126L\"=15,\n                                                           \"FKS1 S639Y/P/F\"=1),\n                                               size=2)\n                            ),\n          na.translate=FALSE,\n      ) +\n      scale_starshape_manual(\n          values=c(15, 1),\n          guide=\"none\"\n      ) +\n      theme(\n          legend.background=element_rect(fill=NA),\n          legend.title=element_text(size=7), # The size should be adjusted with different devout.\n          legend.text=element_text(size=5.5),\n          legend.spacing.y = unit(0.02, \"cm\")\n      )\np3\n```\n\n{% asset_img 60.png %}\n\n```R\nlibrary(ggtreeExtra)\nlibrary(ggtree)\nlibrary(ggplot2)\nlibrary(ggnewscale)\nlibrary(treeio)\nlibrary(tidytree)\nlibrary(dplyr)\nlibrary(ggstar)\n\ntr <- read.tree(\"data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-tree.nwk\")\n\nmetada <- read.csv(\"data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-data.csv\")\n\nmetadata <- metada %>%\n            select(c(\"id\", \"country\", \"country__colour\", \"year\", \"year__colour\", \"haplotype\"))\nmetadata$haplotype <- unlist(lapply(metadata$haplotype, function(x)ifelse(nchar(x)>0,x,NA)))\n\ncountrycolors <- metada %>%\n                 select(c(\"country\", \"country__colour\")) %>%\n                 distinct()\n\nyearcolors <- metada %>%\n              select(c(\"year\", \"year__colour\")) %>%\n              distinct()\nyearcolors <- yearcolors[order(yearcolors$year, decreasing=TRUE),]\n\nmetadata$country <- factor(metadata$country, levels=countrycolors$country)\nmetadata$year <- factor(metadata$year, levels=yearcolors$year)\n\np <- ggtree(tr, layout=\"fan\", open.angle=15, size=0.1)\n\np <- p %<+% metadata\n\np1 <-p +\n     geom_tippoint(\n         mapping=aes(colour=country),\n         size=1.5,\n         stroke=0,\n         alpha=0.4\n     ) +\n     scale_colour_manual(\n         name=\"Country\",\n         values=countrycolors$country__colour,\n         guide=guide_legend(keywidth=0.3,\n                            keyheight=0.3,\n                            ncol=2,\n                            override.aes=list(size=2,alpha=1),\n                            order=1)\n     ) +\n     theme(\n         legend.title=element_text(size=5),\n         legend.text=element_text(size=4),\n         legend.spacing.y = unit(0.02, \"cm\")\n     )\n\np2 <-p1 +\n     geom_fruit(\n         geom=geom_star,\n         mapping=aes(fill=haplotype),\n         starshape=26,\n         color=NA,\n         size=2,\n         starstroke=0,\n         offset=0,\n     ) +\n     scale_fill_manual(\n         name=\"Haplotype\",\n         values=c(\"red\"),\n         guide=guide_legend(\n                   keywidth=0.3,\n                   keyheight=0.3,\n                   order=3\n               ),\n         na.translate=FALSE\n     )\n\np3 <-p2 +\n     new_scale_fill() +\n     geom_fruit(\n         geom=geom_tile,\n         mapping=aes(fill=year),\n         width=0.002,\n         offset=0.1\n     ) +\n     scale_fill_manual(\n         name=\"Year\",\n         values=yearcolors$year__colour,\n         guide=guide_legend(keywidth=0.3, keyheight=0.3, ncol=2, order=2)\n     ) +\n     theme(\n           legend.title=element_text(size=6), # The size should be adjusted with the different devout.\n           legend.text=element_text(size=4.5),\n           legend.spacing.y = unit(0.02, \"cm\")\n           )\np3\n```\n\n{% asset_img 61.png %}\n\n# 参考文献\n\n>[1]. Yu G, Smith D K, Zhu H, et al. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data[J]. ***Methods in Ecology and Evolution***, 2017, 8(1): 28-36.\n>\n>[2]. https://yulab-smu.top/treedata-book/index.html\n>\n>[3]. https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/\n>\n>[4]. https://yulab-smu.top/treedata-book/chapter1.html\n>\n>[5]. Wang L G, Lam T T Y, Xu S, et al. Treeio: an R package for phylogenetic tree input and output with richly annotated and associated data[J]. Molecular biology and evolution, 2020, 37(2): 599-603.\n>\n>[6]. https://github.com/YuLab-SMU/tidytree\n\n\n\n交流请联系：\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com","source":"_posts/ggtree学习笔记.md","raw":"---\ntitle: ggtree学习笔记\ntags: R语言\ncategories: R语言\nabbrlink: fb57811f\ndate: 2021-02-15 10:35:58\ncover: /img/cover/ggtree.png\n---\n\n# 写在前面\n\nY叔的`ggtree`$^{[1]}$毫无疑问是当前绘制美化系统发育树（下文简称`进化树`）的最佳工具，一直想学习，<!-- more -->但是都没有真真正正学习过，一是因为网上关于`gtree`的中文资源较少，另外一个原因是感觉到自己用不上，就没认真学习。春节在家，实在无聊，下定决心学一遍`ggtree`。下面的内容来自Y叔的博客$^{[2]}$，若有不当之处，恳请批评指正。\n\n# 关于进化树\n\n## 进化树怎么看\n\n进化树展示的是进化关系，简单说就是亲缘关系，通常是使用物种的遗传序列（如DNA序列、氨基酸序列等）来构建的。进化树看起来和层次聚类很像，这两者有木有区别呢？Y叔在`统计之都`上的文章$^{[3]}$是这样描述的：\n\n> 层次聚类的侧重点在于分类，把距离近的聚在一起。而进化树的构建可以说也是一个聚类过程，但侧重点在于推测进化关系和进化距离 (evolutionary distance)。\n\n{% asset_img 1.png %}\n\n上图展示的是典型的系统发育树。图中绿色、蓝色和红色的点都是`nodes`，也就是节点（个人理解），其中最外层绿色的点表示的是每个`sample`，这时绿色的点也叫`tips`；蓝色的点表示的是`父节点`，也就是从外往内两两`sample`的共有节点，可以理解成`祖先（ancestor）`，祖先之间还可以继续往上溯源，最终就汇集到红色的点，这个红色的点也就是`root`，需要注意的是有根树才具有`root`节点；横线叫做`分支(branches)`，这些横线表示的是进化变化（evolutionary changes），线的长短表示的是以时间或遗传变异为单位的进化变化。\n\n##  进化树数据格式\n\n进化树的数据格式有多种，常见的有`Newick`、`NEXUS`及`Phylip`。\n\n### Newick格式\n\n`Newick`格式是最常见的使用最广泛的进化树数据格式。\n\n{% asset_img 2.png %}\n\n上图是一个标准的进化树图，其对应的`Newick`格式为：\n\n```R\n((t2:0.04,t1:0.34):0.89,(t5:0.37,(t4:0.03,t3:0.67):0.9):0.59); \n```\n\n数据格式和图是一一对应的，假如我们看图的时候是从外到内，那`t3`和`t4`是最近的，在数据中，`t3`和`t4`也是在一个括号里面的，数据的最小单位是一对`()`，就像剥洋葱那样顺着括号一层一层往外剥的时候，就能得到上图的那种样式。冒号后面对应的是横线上的“距离”，父节点的“距离”是两个“子节点”共有的，因此，需要表示“父节点”的“距离”时，需要将“距离”放在“子节点“的括号外。\n\n### NEXUS格式\n\n`NEXUS`格式是`Newick`格式的拓展，以`blocks`为单位将进化树的元素分开。\n\n```R\n#NEXUS\n[R-package APE, Wed Nov  9 11:46:32 2016]\n\nBEGIN TAXA;\n    DIMENSIONS NTAX = 5;\n    TAXLABELS\n        t5\n        t4\n        t1\n        t2\n        t3\n    ;\nEND;\nBEGIN TREES;\n    TRANSLATE\n        1   t5,\n        2   t4,\n        3   t1,\n        4   t2,\n        5   t3\n    ;\n    TREE * UNTITLED = [&R] (1:0.89,((2:0.59,3:0.37):0.34,\n    (4:0.03,5:0.67):0.9):0.04);\nEND;\n```\n\n### 其他格式\n\n进化树的存储格式还有很多种，更多请参照Y叔的博客$^{[4]}$。\n\n# 进化树数据处理\n\n进化树数据可以使用`treeio`$^{[5]}$这个包进行合并等操作，然后可以将其他信息利用`tidytree`$^{[6]}$这个包将树文件转换成R里面常见的数据框格式，这种格式也可以再次转化成树文件，利用`ggtree`进行可视化。\n\n## `phylo`对象\n\n`phylo`格式是R包`ape`支持的格式，在R中的很多包都依赖于这种格式。`tidytree`中的函数`as_tibble`可以将`phylo`转换成数据框，此时的数据框是个`tbl_tree`对象。\n\n```R\nlibrary(ggtree)\nlibrary(ape)\n\nset.seed(2017)\ntree <- rtree(4)\ntree\n```\n\n此时得到的是`phylo`对象：\n\n```R\n## \n## Phylogenetic tree with 4 tips and 3 internal nodes.\n## \n## Tip labels:\n##   t4, t1, t3, t2\n## \n## Rooted; includes branch lengths.\n```\n\n现在将其转化成数据框：\n\n```R\nlibrary(tidytree)\nx <- as_tibble(tree)\nx\n```\n\n```\n## # A tibble: 7 x 4\n##   parent  node branch.length label\n##    <int> <int>         <dbl> <chr>\n## 1      5     1       0.435   t4   \n## 2      7     2       0.674   t1   \n## 3      7     3       0.00202 t3   \n## 4      6     4       0.0251  t2   \n## 5      5     5      NA       <NA> \n## 6      5     6       0.472   <NA> \n## 7      6     7       0.274   <NA>\n```\n\n看图更直观：\n\n{% asset_img 3.png %}\n\n可以清楚地看到进化树的全部信息，包括父节点、节点、分支长度及`tips`的标签等。\n\n使用`as.phylo(x)`就能将数据框转换成`phylo`:\n\n```R\nas.phylo(x)\n## \n## Phylogenetic tree with 4 tips and 3 internal nodes.\n## \n## Tip labels:\n##   t4, t1, t3, t2\n## \n## Rooted; includes branch lengths.\n```\n\n如果此时我们需要添加信息的话，在原始文件上添加信息是比较麻烦的，但是可以团购先构建数据框，然后将两个数据框`join`在一起就可以了：\n\n```R\nd <- tibble(label = paste0('t', 1:4),\n            trait = rnorm(4))\n\ny <- full_join(x, d, by = 'label')\ny\n```\n\n{% asset_img 4.png %}\n\n## `treedata`对象\n\n`tidytree`默认的格式是`treedata`，函数`as.treedata`可以将前面的数据框转换成`treedata`对象：\n\n```\nas.treedata(y)\n```\n\n```R\n## 'treedata' S4 object'.\n## \n## ...@ phylo: \n## Phylogenetic tree with 4 tips and 3 internal nodes.\n## \n## Tip labels:\n##   t4, t1, t3, t2\n## \n## Rooted; includes branch lengths.\n## \n## with the following features available:\n##  'trait'.\n```\n\n同样也可以通过`as_tibble`将`treedata`转换成数据框格式：\n\n```R\ny %>% as.treedata %>% as_tibble\n```\n\n```R\n## # A tibble: 7 x 5\n##   parent  node branch.length label  trait\n##    <int> <int>         <dbl> <chr>  <dbl>\n## 1      5     1       0.435   t4     0.943\n## 2      7     2       0.674   t1    -0.171\n## 3      7     3       0.00202 t3     0.570\n## 4      6     4       0.0251  t2    -0.283\n## 5      5     5      NA       <NA>  NA    \n## 6      5     6       0.472   <NA>  NA    \n## 7      6     7       0.274   <NA>  NA\n```\n\n## 树文件融合\n\n`treeio`同的函数`merge_tree()`可以对多个树文件进行合并，原理是以`node/branches`为`key进行数据合并，如：\n\n```R\nlibrary(treeio)\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nrst_file <- system.file(\"examples/rst\", package=\"ggtree\")\nmlc_file <- system.file(\"examples/mlc\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\ncodeml_tree <- read.codeml(rst_file, mlc_file)\n\nmerged_tree <- merge_tree(beast_tree, codeml_tree)\nmerged_tree\n```\n\n```R\n## 'treedata' S4 object that stored information of\n##  '/home/ygc/R/library/ggtree/examples/MCC_FluA_H3.tree',\n##  '/home/ygc/R/library/ggtree/examples/rst',\n##  '/home/ygc/R/library/ggtree/examples/mlc'.\n## \n## ...@ phylo: \n## Phylogenetic tree with 76 tips and 75 internal nodes.\n## \n## Tip labels:\n##   A/Hokkaido/30-1-a/2013, A/New_York/334/2004, A/New_York/463/2005, A/New_York/452/1999, A/New_York/238/2005, A/New_York/523/1998, ...\n## \n## Rooted; includes branch lengths.\n## \n## with the following features available:\n##  'height',   'height_0.95_HPD',  'height_median',\n##  'height_range', 'length',   'length_0.95_HPD',\n##  'length_median',    'length_range', 'posterior',    'rate',\n##  'rate_0.95_HPD',    'rate_median',  'rate_range',   'subs',\n##  'AA_subs',  't',    'N',    'S',    'dN_vs_dS', 'dN',   'dS',   'N_x_dN',\n##  'S_x_dS'.\n```\n\n合并后的树文件，除开`node`和`branches`外，其余的所有附加信息都变成了变量。\n\n{% asset_img 5.png %}\n\n既然是个数据框，那就可以对这些数据进行可视化：\n\n```R\nlibrary(dplyr)\ndf <- merged_tree %>% \n  as_tibble() %>%\n  select(dN_vs_dS, dN, dS, rate) %>%\n  subset(dN_vs_dS >=0 & dN_vs_dS <= 1.5) %>%\n  tidyr::gather(type, value, dN_vs_dS:dS)\ndf$type[df$type == 'dN_vs_dS'] <- 'dN/dS'\ndf$type <- factor(df$type, levels=c(\"dN/dS\", \"dN\", \"dS\"))\nggplot(df, aes(rate, value)) + geom_hex() + \n  facet_wrap(~type, scale='free_y') \n```\n\n{% asset_img 6.png %}\n\n还可以利用该函数比较不同软件的分析结果：\n\n```R\nphylo <- as.phylo(beast_tree)\nN <- Nnode2(phylo)\nd <- tibble(node = 1:N, fake_trait = rnorm(N), another_trait = runif(N))\nfake_tree <- treedata(phylo = phylo, data = d)\ntriple_tree <- merge_tree(merged_tree, fake_tree)\ntriple_tree\n```\n\n## 链接外部数据\n\n进化树能够展示的东西不仅仅是进化关系，还可以增添许多信息，如基因表达量啥的。`treeio`的函数`full_join()`能够通过`node`或`tips`进行数据融合：\n\n- 通过`node`：\n\n  ```R\n  library(ape)\n  data(woodmouse)\n  d <- dist.dna(woodmouse)\n  tr <- nj(d)\n  bp <- boot.phylo(tr, \n                   woodmouse, \n                   function(x) nj(dist.dna(x)))\n  \n  bp2 <- tibble(node=1:Nnode(tr) + # 计算父节点数\n                  Ntip(tr), # 计算tip数\n                bootstrap = bp)\n  full_join(tr, bp2, by=\"node\")\n  ```\n\n- 通过`tips`：\n\n  ```R\n  file <- system.file(\"extdata/BEAST\", \"beast_mcc.tree\", package=\"treeio\")\n  beast <- read.beast(file)\n  x <- tibble(label = as.phylo(beast)$tip.label, trait = rnorm(Ntip(beast)))\n  full_join(beast, x, by=\"label\")\n  ```\n\n## 如何找到想要的`node`\n\n```R\nlibrary(ggtree)\nlibrary(ggplot2)\n\nset.seed(1)\ntr = rtree(10)\n\np  + \n  geom_label(aes(x=branch, label=node))+\n  geom_hilight(node=12, fill=\"steelblue\", alpha=.6)\n```\n\n## 分组\n\n`treeio`中的函数 `groupOTU()` 和 `groupClade()` 可以用于分组。\n\n### `groupClade`\n\n```R\nnwk <- '(((((((A:4,B:4):6,C:5):8,D:6):3,E:21):10,((F:4,G:12):14,H:8):13):13,((I:5,J:2):30,(K:11,L:11):2):17):4,M:56);'\ntree <- read.tree(text=nwk)\n\ngroupClade(as_tibble(tree), c(17, 21))\n```\n\n```R\n## # A tibble: 25 x 5\n##    parent  node branch.length label group\n##     <int> <int>         <dbl> <chr> <fct>\n##  1     20     1             4 A     1    \n##  2     20     2             4 B     1    \n##  3     19     3             5 C     1    \n##  4     18     4             6 D     1    \n##  5     17     5            21 E     1    \n##  6     22     6             4 F     2    \n##  7     22     7            12 G     2    \n##  8     21     8             8 H     2    \n##  9     24     9             5 I     0    \n## 10     24    10             2 J     0    \n## # … with 15 more rows\n```\n\n以`node17`和`node21`为界将`clade`进行分组。这两个函数可以作用于`tbl_tree`、`phylo` 、 `treedata`及 `ggtree` 这些对象。\n\n### `groupOTU`\n\n```R\nset.seed(2017)\ntr <- rtree(4)\nx <- as_tibble(tr)\n## 输入的节点可以是节点ID，也可以是Label\ngroupOTU(x, c('t1', 't4'), group_name = \"fake_group\")\n```\n\n```R\n## # A tibble: 7 x 5\n##   parent  node branch.length label fake_group\n##    <int> <int>         <dbl> <chr> <fct>     \n## 1      5     1       0.435   t4    1         \n## 2      7     2       0.674   t1    1         \n## 3      7     3       0.00202 t3    0         \n## 4      6     4       0.0251  t2    0         \n## 5      5     5      NA       <NA>  1         \n## 6      5     6       0.472   <NA>  1         \n## 7      6     7       0.274   <NA>  1\n```\n\n更常见的分组方法是直接命名分组：\n\n```R\ncls <- list(c1=c(\"A\", \"B\", \"C\", \"D\", \"E\"),\n            c2=c(\"F\", \"G\", \"H\"),\n            c3=c(\"L\", \"K\", \"I\", \"J\"),\n            c4=\"M\")\n\nas_tibble(tree) %>% groupOTU(cls)\n```\n\n```R\n## # A tibble: 25 x 5\n##    parent  node branch.length label group\n##     <int> <int>         <dbl> <chr> <fct>\n##  1     20     1             4 A     c1   \n##  2     20     2             4 B     c1   \n##  3     19     3             5 C     c1   \n##  4     18     4             6 D     c1   \n##  5     17     5            21 E     c1   \n##  6     22     6             4 F     c2   \n##  7     22     7            12 G     c2   \n##  8     21     8             8 H     c2   \n##  9     24     9             5 I     c3   \n## 10     24    10             2 J     c3   \n## # … with 15 more rows\n```\n\n## 重新标准化分支\n\n不同的进化树可以进行合并，原始的分支长度可能单位不一样，这时候就可以用合并后的其他参数对分支长度进行标准化。\n\n```R\np1 <- ggtree(merged_tree) + theme_tree2()\np2 <- ggtree(rescale_tree(merged_tree, 'dN')) + theme_tree2()\np3 <- ggtree(rescale_tree(merged_tree, 'rate')) + theme_tree2()\n\ncowplot::plot_grid(p1, p2, p3, ncol=3, labels = LETTERS[1:3])\n```\n\n{% asset_img 7.png %}\n\n从上图可以看到的是，三个图的“横坐标”范围不一样，第一个图是原始的分支单位，第二个是以`dN`进行标准化的结果，第三个是以`rate`进行标准化的结果。\n\n## 子集操作\n\n### 从树中除去`tips`\n\n有些时候出于某些原因（如序列质量、组装质量、比对错误等），我们会将某些`tips`（样本）从树里面剔除，函数`drop.tip()`可以实现这一功能：\n\n```R\nf <- system.file(\"extdata/NHX\", \"phyldog.nhx\", package=\"treeio\")\nnhx <- read.nhx(f)\nto_drop <- c(\"Physonect_sp_@2066767\",\n             \"Lychnagalma_utricularia@2253871\",\n             \"Kephyes_ovata@2606431\")\np1 <- ggtree(nhx) + geom_tiplab(aes(color = label %in% to_drop)) +\n  scale_color_manual(values=c(\"black\", \"red\")) + xlim(0, 0.8)\n\nnhx_reduced <- drop.tip(as.phylo(nhx), to_drop) # 发现需要转换成phylo对象才行\np2 <- ggtree(nhx_reduced) + geom_tiplab() + xlim(0, 0.8)  \ncowplot::plot_grid(p1, p2, ncol=2, labels = c(\"A\", \"B\"))\n```\n\n{% asset_img 8.png %}\n\n### 根据`tips`取子集\n\n如果一个进化树很复杂的话，要看我们感兴趣的部分就很难，这时候就需要将我们感兴趣的部分提取出来。`treeio`中的函数`tree_subset()`能够完成这一功能，即使是提取出来的子集，结构还是和原来的一样，不会发生变化。\n\n```R\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\n\np1 = ggtree(beast_tree) + \n  geom_tiplab() +  \n  ggtitle('原始树') +\n  xlim(0, 40) + theme_tree2()\n\ntree2 = tree_subset(beast_tree, \"A/Swine/HK/168/2012\", levels_back=4)  \np2 <- ggtree(tree2, aes(color=group)) +\n  ggtitle('取子集') +\n  scale_color_manual(values = c(\"black\", \"red\")) +\n  geom_tiplab() +  xlim(0, 4) + theme_tree2() \n\np3 <- ggtree(tree2, aes(color=group)) +\n  geom_tiplab(hjust = -.1) + xlim(0, 5) + \n  geom_point(aes(fill = rate), shape = 21, size = 4) +\n  ggtitle('用rate这个变量控制颜色') +\n  scale_color_manual(values = c(\"black\", \"red\"), guide = FALSE) +\n  scale_fill_continuous(low = 'blue', high = 'red') +\n  theme_tree2() + theme(legend.position = 'right')\n\n\np4 <- ggtree(tree2, aes(color=group), \n             root.position = as.phylo(tree2)$root.edge) +\n  geom_tiplab() + xlim(18, 24) + \n  ggtitle('添加根节点但不显示') +\n  scale_color_manual(values = c(\"black\", \"red\")) +\n  theme_tree2()\n\np5 <- ggtree(tree2, aes(color=group), \n             root.position = as.phylo(tree2)$root.edge) +\n  geom_rootedge() + geom_tiplab() + xlim(0, 40) + \n  ggtitle('添加根节点且显示') +\n  scale_color_manual(values = c(\"black\", \"red\")) +\n  theme_tree2()\n\nplot_grid(p2, p3, p4, p5, ncol=2) %>%\n  plot_grid(p1, ., ncol=2)\n```\n\n{% asset_img 9.png %}\n\n### 根据内部节点编号取子集\n\n如果我们对特定的进化分支（clade）感兴趣，那也可以通过`tree_subset()`函数将感兴趣的分支进行放大展示，但是这个时候需要我们知道感兴趣的进化分支所对应的`node`编号才行。\n\n```R\nclade <- tree_subset(beast_tree, node=121, levels_back=0)\nclade2 <- tree_subset(beast_tree, node=121, levels_back=2)\np1 <- ggtree(clade) + \n  ggtitle('感兴趣的整个分支') +\n  geom_tiplab() + xlim(0, 5)\np2 <- ggtree(clade2, aes(color=group)) + \n  ggtitle('感兴趣的整个分支 + 回退两个节点') +\n  geom_tiplab() + \n  xlim(0, 8) + scale_color_manual(values=c(\"black\", \"red\"))\n\n\nlibrary(ape)\nlibrary(tidytree)\nlibrary(treeio)\ndata(chiroptera)\n\n# 如果不知道node的时候，就直接进行匹配\nnodes <- grep(\"Plecotus\", chiroptera$tip.label)\nchiroptera <- groupOTU(chiroptera, nodes)\n\np3 <- ggtree(chiroptera, aes(colour = group)) + \n  ggtitle('整个进化树中选择感兴趣的整个分支') +\n  scale_color_manual(values=c(\"black\", \"red\")) +\n  theme(legend.position = \"none\")\n\nclade <- MRCA(chiroptera, nodes) # 最近的父节点\nx <- tree_subset(chiroptera, clade, levels_back = 0)\np4 <- ggtree(x) + \n  ggtitle('感兴趣的特有分支') +\n  geom_tiplab() + xlim(0, 5)\n\nplot_grid(p1, p2, p3, p4,ncol=2)\n```\n\n{% asset_img 10.png %}\n\n## 导出数据\n\n`treeio`这个R包可以导出多种格式的文件，这个比较简单，详情参照：https://yulab-smu.top/treedata-book/chapter3.html\n\n# 进化树可视化\n\n## 基础方法\n\n`ggtree`对进化树进行可视化的方法有两种：\n\n- `ggplot()` + `geom_tree()` + `theme_tree()`\n- `ggtree()`\n\n第二种方法是第一种方法的“缩写版”。\n\n```R\nlibrary(treeio)\nlibrary(ggtree)\n\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\n\nggplot(tree, aes(x, y)) + geom_tree() + theme_tree()\nggtree(tree)\n```\n\n这两种方法得到的结果是一样的：\n\n{% asset_img 11.png %}\n\n`ggtree`支持`ggplot2`的图形语法，因此，也可以在`ggtree`中对颜色性状等进行修改：\n\n```R\nlibrary(ggplot2)\nlibrary(treeio)\nlibrary(ggtree)\n\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\n\nggplot(tree, aes(x, y)) + geom_tree() + theme_tree()\nggtree(tree)\n\np1 = ggtree(tree, color=\"firebrick\", size=2, linetype=\"dotted\") +\n  ggtitle('阶梯化')\np2 = ggtree(tree, color=\"firebrick\", size=2, linetype=\"dotted\", ladderize=FALSE) +\n  ggtitle('非阶梯化')\n\ncowplot::plot_grid(p1,p2)v\n```\n\n{% asset_img 12.png %}\n\n可以使用参数`branch.length`对egde进行标准化，如果参数为`none`，则是这样：\n\n```R\nggtree(tree, branch.length=\"none\")\n```\n\n{% asset_img 13.png %}\n\n## 输出样式\n\n`ggtree`支持多种输出样式：\n\n```R\nlibrary(ggtree)\nset.seed(2017-02-16)\ntree <- rtree(50)\np1 = ggtree(tree) +\n  ggtitle('默认')\np2 = ggtree(tree, layout=\"roundrect\")  +\n  ggtitle('roundrect')\np3 = ggtree(tree, layout=\"slanted\") +\n  ggtitle('slanted')\np4 = ggtree(tree, layout=\"ellipse\") +\n  ggtitle('ellipse')\np5 = ggtree(tree, layout=\"circular\") +\n  ggtitle('circular')\np6 = ggtree(tree, layout=\"fan\", open.angle=120) +\n  ggtitle('fan')\np7 = ggtree(tree, layout=\"equal_angle\") +\n  ggtitle('equal_angle')\np8 = ggtree(tree, layout=\"daylight\") +\n  ggtitle('daylight')\np9 = ggtree(tree, branch.length='none') +\n  ggtitle('none')\np10 = ggtree(tree, layout=\"ellipse\", branch.length=\"none\") +\n  ggtitle('ellipse对齐')\np11 = ggtree(tree, branch.length='none', layout='circular') +\n  ggtitle('circular对齐')\np12 = ggtree(tree, layout=\"daylight\", branch.length = 'none') +\n  ggtitle('daylight对齐')\n\ncowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, ncol = 4)\n```\n\n{% asset_img 14.png %}\n\n当只是展示树结构而没有分支长度标尺的时候，就用最下面这4种。\n\n还有其他的多种对齐方式：\n\n```R\nggtree(tree) + scale_x_reverse()\nggtree(tree) + coord_flip()\nggtree(tree) + layout_dendrogram()\nggplotify::as.ggplot(ggtree(x), angle=-30, scale=.9)\nggtree(tree, layout='slanted') + coord_flip()\nggtree(tree, layout='slanted', branch.length='none') + layout_dendrogram()\nggtree(tree, layout='circular') + xlim(-10, NA)\nggtree(tree) + layout_inward_circular()\nggtree(tree) + layout_inward_circular(xlim=15)\n```\n\n{% asset_img 15.png %}\n\n如果是时间范围数据的话，则需要调用参数`mrsd`（most recent sample data）：\n\n```R\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", \n                          package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\nggtree(beast_tree, mrsd=\"2013-01-01\") + theme_tree2()\n```\n\n{% asset_img 16.png %}\n\n## 展示相关元素\n\n### 展示进化距离\n\n函数`geom_treescale()`用于展示进化距离。\n\n```R\np1 = ggtree(tree) + geom_treescale() + ggtitle('默认')\np2 = ggtree(tree) + geom_treescale(x=0, y=45, width=1, color='red') +\n  ggtitle('设定位置、宽度、颜色')\np3 = ggtree(tree) + geom_treescale(fontsize=6, linesize=2, offset=1) +\n  ggtitle('设定字体大小、线条大小、缩进')\np4 = ggtree(tree) + theme_tree2() +\n  ggtitle('使用内置主题')\n\ncowplot::plot_grid(p1,p2,p3,p4, ncol = 2)\n```\n\n{% asset_img 17.png %}\n\n### 展示` nodes/tips`\n\n```R\np1 = ggtree(tree) + geom_point(aes(shape=isTip, color=isTip), size=3) +\n  ggtitle('使用geom_point()函数')\n\np2 <- ggtree(tree) + geom_nodepoint(color=\"#b5e521\", alpha=1/4, size=10) +\n  geom_tippoint(color=\"#FDAC4F\", shape=8, size=3) +\n  ggtitle('使用两个函数')\n\ncowplot::plot_grid(p1,p2, ncol = 2)\n```\n\n{% asset_img 18.png %}\n\n### 展示`tips`的标签\n\n```R\np1 = ggtree(tree) + geom_nodepoint(color=\"#b5e521\", alpha=1/4, size=10) +\n  geom_tippoint(color=\"#FDAC4F\", shape=8, size=3) + \n  geom_tiplab(size=3, color=\"purple\")\n\np2 = ggtree(tree, layout=\"circular\") + \n  geom_tiplab(aes(angle=angle), color='blue')\n\np3 = ggtree(tree, branch.length = 'none') + \n  geom_tiplab(as_ylab=TRUE, color='firebrick')\n\ncowplot::plot_grid(p1, p2,p3, ncol = 3)\n```\n\n{% asset_img 19.png %}\n\n### 展示根节点\n\n```R\n## with root edge = 1\ntree1 <- read.tree(text='((A:1,B:2):3,C:2):1;')\np1 = ggtree(tree1) + geom_tiplab() + geom_rootedge() +\n  ggtitle('有根节点信息')\n\n## without root edge\ntree2 <- read.tree(text='((A:1,B:2):3,C:2);')\np2 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +\n  ggtitle('无根节点信息，默认无')\n\n## setting root edge\ntree2$root.edge <- 2\np3 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +\n  ggtitle('无根节点信息，添加信息')\n\n## specify length of root edge for just plotting\n## this will ignore tree$root.edge\np4 = ggtree(tree2) + geom_tiplab() + geom_rootedge(rootedge = 3) +\n  ggtitle('无根节点信息，设置信息')\n\ncowplot::plot_grid(p1,p2,p3,p4, ncol = 2)\n```\n\n{% asset_img 20.png %}\n\n### 上色\n\n上色直接是很简单，就像`ggplot2`那样：\n\n```R\nggtree(beast_tree, aes(color=rate)) +\n  scale_color_continuous(low='darkgreen', high='red') +\n  theme(legend.position=\"right\")\n```\n\n{% asset_img 21.png %}\n\n```R\nanole.tree<-read.tree(\"http://www.phytools.org/eqg2015/data/anole.tre\")\nsvl <- read.csv(\"http://www.phytools.org/eqg2015/data/svl.csv\",\n                row.names=1)\nsvl <- as.matrix(svl)[,1]\nfit <- phytools::fastAnc(anole.tree,svl,vars=TRUE,CI=TRUE)\n\ntd <- data.frame(node = nodeid(anole.tree, names(svl)),\n                 trait = svl)\nnd <- data.frame(node = names(fit$ace), trait = fit$ace)\n\nd <- rbind(td, nd)\nd$node <- as.numeric(d$node)\ntree <- full_join(anole.tree, d, by = 'node')\n\np1 <- ggtree(tree, aes(color=trait), layout = 'circular', \n             ladderize = FALSE, continuous = TRUE, size=2) +\n  scale_color_gradientn(colours=c(\"red\", 'orange', 'green', 'cyan', 'blue')) +\n  geom_tiplab(hjust = -.1) + \n  xlim(0, 1.2) + \n  theme(legend.position = c(.05, .85)) \n\np2 <- ggtree(tree, layout='circular', ladderize = FALSE, size=2.8) + \n  geom_tree(aes(color=trait), continuous=T, size=2) +  \n  scale_color_gradientn(colours=c(\"red\", 'orange', 'green', 'cyan', 'blue')) +\n  geom_tiplab(aes(color=trait), hjust = -.1) + \n  xlim(0, 1.2) + \n  theme(legend.position = c(.05, .85)) \n\ncowplot::plot_grid(p1, p2, ncol=2, labels=c(\"分支默认边框\", \"分支黑色边框\"))    \n```\n\n{% asset_img 22.png %}\n\n### 对树进行重新标准化\n\n多个参数对进化树进行标准化，时间序列相关的参数用`msrd`，其余的参数可以用`branch.length`。\n\n```R\nlibrary(treeio)\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\nbeast_tree\n\np1 <- ggtree(beast_tree, mrsd='2013-01-01') + theme_tree2() +\n  labs(caption=\"时间序列\")\np2 <- ggtree(beast_tree, branch.length='rate') + theme_tree2() +\n  labs(caption=\"取代速率\")\n\nmlcfile <- system.file(\"extdata/PAML_Codeml\", \"mlc\", package=\"treeio\")\nmlc_tree <- read.codeml_mlc(mlcfile)\np3 <- ggtree(mlc_tree) + theme_tree2() +\n  labs(caption=\"单密码子核苷酸取代\")\np4 <- ggtree(mlc_tree, branch.length='dN_vs_dS') + theme_tree2() +\n  labs(caption=\"dN/dS\")\n\ncowplot::plot_grid(p1,p2,p3,p4, ncol = 2\n```\n\n{% asset_img 23.png %}\n\n也可以用`rescale_tree`对树进行标准化：\n\n```R\nbeast_tree2 <- rescale_tree(beast_tree, branch.length='rate')\nggtree(beast_tree2) + theme_tree2()\n```\n\n{% asset_img 24.png %}\n\n### 背景色\n\n```R\nset.seed(2019)\nx <- rtree(30)\np1 = ggtree(x, color=\"red\") + theme_tree(\"steelblue\")\np2 = ggtree(x, color=\"white\") + theme_tree(\"black\")\n\ncowplot::plot_grid(p1,p2, ncol = 1)\n```\n\n{% asset_img 25.png %}\n\n### 批量建树\n\n批量建树就相当于`ggplot2`中的分面：\n\n```R\n## trees <- lapply(c(10, 20, 40), rtree)\n## class(trees) <- \"multiPhylo\"\n## ggtree(trees) + facet_wrap(~.id, scale=\"free\") + geom_tiplab()\n\nr8s <- read.r8s(system.file(\"extdata/r8s\", \"H3_r8s_output.log\", package=\"treeio\"))\nggtree(r8s) + facet_wrap( ~.id, scale=\"free\") + theme_tree2()\n```\n\n{% asset_img 26.png %}\n\n# 进化树注释\n\n## 基本用法\n\n注释的信息很多，节点的分组、样品来源、基因表达量等都可以作为注释的信息。一个简单的例子：\n\n````R\nlibrary(ggtree)\ntreetext = \"(((ADH2:0.1[&&NHX:S=human], ADH1:0.11[&&NHX:S=human]):\n0.05 [&&NHX:S=primates:D=Y:B=100],ADHY:\n0.1[&&NHX:S=nematode],ADHX:0.12 [&&NHX:S=insect]):\n0.1[&&NHX:S=metazoa:D=N],(ADH4:0.09[&&NHX:S=yeast],\nADH3:0.13[&&NHX:S=yeast], ADH2:0.12[&&NHX:S=yeast],\nADH1:0.11[&&NHX:S=yeast]):0.1[&&NHX:S=Fungi])[&&NHX:D=N];\"\ntree <- read.nhx(textConnection(treetext))\nggtree(tree) + geom_tiplab() + \n  geom_label(aes(x=branch, label=S), fill='lightgreen') + \n  geom_label(aes(label=D), fill='steelblue') + \n  geom_text(aes(label=B), hjust=-.5)\n````\n\n{% asset_img 27.png %}\n\n{% asset_img 28.png %}\n\n## `clade`注释\n\n```R\nset.seed(2015-12-21)\ntree <- rtree(30)\np1 <- ggtree(tree) + xlim(NA, 6)\n\np2 = p1 + geom_cladelabel(node=45, label=\"test label\") +\n  geom_cladelabel(node=34, label=\"another clade\")\n\np3 = p1 + geom_cladelabel(node=45, label=\"test label\", align=TRUE,  offset = .2, color='red') +\n  geom_cladelabel(node=34, label=\"another clade\", align=TRUE, offset = .2, color='blue')\n\np4 = p1 + geom_cladelabel(node=45, label=\"test label\", align=T, angle=270, hjust='center', offset.text=.5, barsize=1.5) +\n  geom_cladelabel(node=34, label=\"another clade\", align=T, angle=45, fontsize=8)\n\np5 = p1 + geom_cladelabel(node=34, label=\"another clade\", align=T, geom='label', fill='lightblue')\n\ncowplot::plot_grid(p2,p3,p4,p5,ncol = 2)\n```\n\n{% asset_img 29.png %}\n\n同样也适用于无根输出样式，可以根据`node`的编号，也可以直接用`tips`的标签（这个是真的赞啊）：\n\n```R\np1 = ggtree(tree, layout=\"daylight\") + \n  geom_cladelabel(node=35, label=\"test label\", angle=0, \n                  fontsize=8, offset=.5, vjust=.5)  + \n  geom_cladelabel(node=55, label='another clade', \n                  angle=-95, hjust=.5, fontsize=8)\n\n\np2 = ggtree(tree) + xlim(NA, 6) + \n  geom_tiplab() + \n  geom_strip('t10', 't30', barsize=2, color='red', \n             label=\"associated taxa\", offset.text=.1) + \n  geom_strip('t1', 't18', barsize=2, color='blue', \n             label = \"another label\", offset.text=.1)\n\ncowplot::plot_grid(p1,p2,ncol = 2)\n```\n\n{% asset_img 30.png %}\n\n## 局部高亮\n\n局部高亮可以根据`node`编号进行高亮，也可以使用附加数据或树数据里面的数据进行高亮：\n\n```R\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\n\np1 = ggtree(tree) + \n  geom_hilight(node=21, fill=\"steelblue\", alpha=.6) +\n  geom_hilight(node=17, fill=\"darkgreen\", alpha=.6) \n\np2 = ggtree(tree, layout=\"circular\") + \n  geom_hilight(node=21, fill=\"steelblue\", alpha=.6) +\n  geom_hilight(node=23, fill=\"darkgreen\", alpha=.6)\n\n## type can be 'encircle' or 'rect'\nggtree(tree, layout=\"daylight\", branch.length = 'none') + \n  geom_hilight(node=10) + \n  geom_hilight(node=16, fill='darkgreen', type=\"rect\")\n\n\nggtree(tree) +\n  geom_balance(node=16, fill='steelblue', color='white', alpha=0.6, extend=1) +\n  geom_balance(node=19, fill='darkgreen', color='white', alpha=0.6, extend=1) \n\n## using external data\nd <- data.frame(node=c(17, 21), type=c(\"A\", \"B\"))\nggtree(tree) + geom_hilight(data=d, aes(node=node, fill=type))\n\n## using data stored in tree object\nx <- read.nhx(system.file(\"extdata/NHX/ADH.nhx\", package=\"treeio\"))\nggtree(x) + \n  geom_hilight(mapping=aes(subset = node %in% c(10, 12), fill = S)) +\n  scale_fill_manual(values=c(\"steelblue\", \"darkgreen\"))\n```\n\n{% asset_img 31.png %}\n\n## 高亮不同分组\n\n```R\nmytree <- read.tree(\"data/Tree 30.4.19.nwk\")\n\n# Define nodes for coloring later on\ntiplab <- mytree$tip.label\ncls <- tiplab[grep(\"^ch\", tiplab)] \nlabeltree <- groupOTU(mytree, cls)\n\np <- ggtree(labeltree, aes(color=group, linetype=group), layout=\"circular\") +\n    scale_color_manual(values = c(\"#efad29\", \"#63bbd4\")) +\n    geom_nodepoint(color=\"black\", size=0.1) +\n    geom_tiplab(size=2, color=\"black\")\n\np2 <- flip(p, 136, 110) %>% \n    flip(141, 145) %>% \n    rotate(141) %>% \n    rotate(142) %>% \n    rotate(160) %>% \n    rotate(164) %>% \n    rotate(131)\n\n### Group V and II coloring \np3 <- p2 + geom_hilight(node = 110, fill = \"#229f8a\", alpha = 0.2, extend = 0.43) +    \n    geom_hilight(node = 88, fill = \"#229f8a\", alpha = 0.2, extend = 0.445) +\n    geom_hilight(node = 156, fill = \"#229f8a\", alpha = 0.2, extend = 0.35) +\n    geom_hilight(node = 136, fill = \"#f9311f\", alpha = 0.2, extend = 0.512)\n\n### Putting on a label on the avian specific expansion \np4 <- p3 + geom_cladelabel(node = 113, label = \"Avian-specific expansion\", \n                        align = TRUE, angle = -35, offset.text = 0.05, \n                        hjust = \"center\", fontsize = 2,  offset = 0.2, barsize = 0.2)\n    \n### Adding the bootstrap values with subset used to remove all bootstraps < 50  \np5 <- p4 + geom_text2(aes(label=label, \n                        subset = !is.na(as.numeric(label)) & as.numeric(label) > 50), \n                    size = 2, color = \"black\",nudge_y = 0.7, nudge_x = -0.05)\n \n### Putting labels on the subgroups \np6 <- p5 + geom_cladelabel(node = 114, label = \"Subgroup A\", align = TRUE, \n                        angle = -55, offset.text = .03, hjust = \"center\", \n                        offset = 0.05, barsize = 0.2, fontsize = 2) +\n            geom_cladelabel(node = 121, label = \"Subgroup B\", align = TRUE, \n                        angle = -15, offset.text = .03, hjust = \"center\", \n                        offset = 0.05, barsize = 0.2, fontsize = 2) +\n            theme(legend.position=\"none\", \n                plot.margin=grid::unit(c(-15,-15,-15,-15), \"mm\"))\n\nprint(p6)\n```\n\n{% asset_img 62.png %}\n\n## 样品连接\n\n利用函数`geom_taxalink()`可以实现样品之间的连线，但是只支持有限的几种形式：\n\n```R\np1 <- ggtree(tree) + geom_tiplab() + \n  geom_taxalink(taxa1='A', taxa2='E') + \n  geom_taxalink(taxa1='F', taxa2='K', \n                color='red', linetype = 'dashed',\n                arrow=arrow(length=unit(0.02, \"npc\")))\n\np2 <- ggtree(tree, layout=\"circular\") + \n  geom_taxalink(taxa1='A', taxa2='E', \n                color=\"grey\",alpha=0.5, \n                offset=0.05,arrow=arrow(length=unit(0.01, \"npc\"))) + \n  geom_taxalink(taxa1='F', taxa2='K', \n                color='red', linetype = 'dashed', \n                alpha=0.5, offset=0.05,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_taxalink(taxa1=\"L\", taxa2=\"M\", \n                color=\"blue\", alpha=0.5, \n                offset=0.05,hratio=0.8, \n                arrow=arrow(length=unit(0.01, \"npc\"))) + \n  geom_tiplab()\n\n# when the tree was created using reverse x, \n# we can set outward to FALSE, which will generate the inward curve lines.\np3 <- ggtree(tree, layout=\"inward_circular\", xlim=150) +\n  geom_taxalink(taxa1='A', taxa2='E', \n                color=\"grey\", alpha=0.5, \n                offset=-0.2, \n                outward=FALSE,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_taxalink(taxa1='F', taxa2='K', \n                color='red', linetype = 'dashed', \n                alpha=0.5, offset=-0.2,\n                outward=FALSE,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_taxalink(taxa1=\"L\", taxa2=\"M\", \n                color=\"blue\", alpha=0.5, \n                offset=-0.2, \n                outward=FALSE,\n                arrow=arrow(length=unit(0.01, \"npc\"))) +\n  geom_tiplab(hjust=1) \n\ndat <- data.frame(from=c(\"A\", \"F\", \"L\"), \n                  to=c(\"E\", \"K\", \"M\"), \n                  h=c(1, 1, 0.1), \n                  type=c(\"t1\", \"t2\", \"t3\"), \n                  s=c(2, 1, 2))\np4 <- ggtree(tree, layout=\"inward_circular\", xlim=c(150, 0)) +\n  geom_taxalink(data=dat, \n                mapping=aes(taxa1=from, \n                            taxa2=to, \n                            color=type, \n                            size=s), \n                ncp=10,\n                offset=0.15) + \n  geom_tiplab(hjust=1) +\n  scale_size_continuous(range=c(1,3))\ncowplot::plot_grid(p1, p2, p3, p4, ncol=2, labels=LETTERS[1:4])\n```\n\n{% asset_img 32.png %}\n\n## Uncertainty of evolutionary inference\n\n```R\nfile <- system.file(\"extdata/MEGA7\", \"mtCDNA_timetree.nex\", package = \"treeio\")\nx <- read.mega(file)\np1 <- ggtree(x) + geom_range('reltime_0.95_CI', color='red', size=3, alpha=.3)\np2 <- ggtree(x) + geom_range('reltime_0.95_CI', color='red', size=3, alpha=.3, center='reltime')  \np3 <- p2 + scale_x_range() + theme_tree2()\n\ncowplot::plot_grid(p1,p2,p3,ncol = 3)\n```\n\n{% asset_img 33.png %}\n\n## 其他软件输出的结果\n\n```R\nrstfile <- system.file(\"extdata/PAML_Codeml\", \"rst\", \n                       package=\"treeio\")\nmlcfile <- system.file(\"extdata/PAML_Codeml\", \"mlc\", \n                       package=\"treeio\")\n\nml <- read.codeml(rstfile, mlcfile)\nggtree(ml, aes(color=dN_vs_dS), branch.length='dN_vs_dS') + \n  scale_color_continuous(name='dN/dS', limits=c(0, 1.5),\n                         oob=scales::squish,\n                         low='darkgreen', high='red') +\n  geom_text(aes(x=branch, label=AA_subs), \n            vjust=-.5, color='steelblue', size=2) +\n  theme_tree2(legend.position=c(.9, .3))\n```\n\n{% asset_img 34.png %}\n\n## 放大特定区域\n\n```R\nlibrary(ggtree)\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\ntree <- read.tree(nwk)\np1 = ggtree(tree) + geom_tiplab()\np2 = viewClade(p, MRCA(p, \"I\", \"L\"))\n\ncowplot::plot_grid(p1,p2,ncol = 2, labels = c('原图','特定区域'))\n```\n\n{% asset_img 35.png %}\n\n## 标准化选中的clade\n\n```R\ntree2 <- groupClade(tree, c(17, 21))\np <- ggtree(tree2, aes(color=group)) + theme(legend.position='none') +\n  scale_color_manual(values=c(\"black\", \"firebrick\", \"steelblue\"))\nscaleClade(p, node=17, scale=.1) \n```\n\n{% asset_img 36.png %}\n\n## 隐藏/展示某个clade\n\n```R\np2 <- p %>% collapse(node=21) + \n  geom_point2(aes(subset=(node==21)), shape=21, size=5, fill='green')\np2 <- collapse(p2, node=23) + \n  geom_point2(aes(subset=(node==23)), shape=23, size=5, fill='red')\nprint(p2)\nexpand(p2, node=23) %>% expand(node=21)\n```\n\n{% asset_img 37.png %}\n\n## 利用三角形隐藏/展示某个clade\n\n```R\np2 <- p + geom_tiplab()\nnode <- 21\ncollapse(p2, node, 'max') %>% expand(node)\ncollapse(p2, node, 'min') %>% expand(node)\ncollapse(p2, node, 'mixed') %>% expand(node)\n\ncollapse(p, 21, 'mixed', fill='steelblue', alpha=.4) %>% \n  collapse(23, 'mixed', fill='firebrick', color='blue')\n  \nscaleClade(p, 23, .2) %>% collapse(23, 'min', fill=\"darkgreen\")  \n```\n\n{% asset_img 38.png %}\n\n## 分组Taxa\n\n```R\nlibrary(ggsci)\n\ndata(iris)\nrn <- paste0(iris[,5], \"_\", 1:150)\nrownames(iris) <- rn\nd_iris <- dist(iris[,-5], method=\"man\")\n\nc <- ape::bionj(d_iris)\ngrp <- list(setosa     = rn[1:50],\n            versicolor = rn[51:100],\n            virginica  = rn[101:150])\n\np_iris <- ggtree(tree_iris, layout = 'circular', branch.length='none')\ngroupOTU(p_iris, grp, 'group') + \n  aes(color=group) +\n  scale_color_aaas() +\n  theme(legend.position=\"right\")\n```\n\n{% asset_img 39.png %}\n\n另外一种方法：\n\n```R\ntree_iris <- groupOTU(tree_iris, grp, \"Species\")\nggtree(tree_iris, aes(color=Species), layout = 'circular', branch.length = 'none') + \n  theme(legend.position=\"right\")\n```\n\n## 旋转clade\n\n旋转`clade`有两种方法：\n\n```R\np1 <- p + geom_point2(aes(subset=node==16), color='darkgreen', size=5)\np2 <- rotate(p1, 17) %>% rotate(21) # 方法1\nflip(p2, 17, 21) # 方法2\n```\n\n{% asset_img 40.png %}\n\n## 外部数据mapping到树上\n\n```R\nlibrary(ggimage)\nlibrary(ggtree)\n\n# 文件下载地址\n# https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tree_boots.nwk\n# https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tip_data.csv\n\n\nx <- read.tree(\"tree_boots.nwk\")\ninfo <- read.csv(\"tip_data.csv\")\n\np <- ggtree(x) %<+% info + xlim(-.1, 4)\np2 <- p + geom_tiplab(offset = .6, hjust = .5) +\n  geom_tippoint(aes(shape = trophic_habit, color = trophic_habit, size = mass_in_kg)) + \n  theme(legend.position = \"right\") + scale_size_continuous(range = c(3, 10))\n\n#https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/inode_data.csv\nd2 <- read.csv(\"inode_data.csv\")\np2 %<+% d2 + geom_label(aes(label = vernacularName.y, fill = posterior)) + \n  scale_fill_gradientn(colors = RColorBrewer::brewer.pal(3, \"YlGnBu\"))\n```\n\n{% asset_img 41.png %}\n\n## 将SNP数据添加到树上\n\n```R\nlibrary(ggtree)\n## remote_folder <- paste0(\"https://raw.githubusercontent.com/katholt/\",\n##                         \"plotTree/master/tree_example_april2015/\")\nremote_folder <- \"data/tree_example_april2015/\" \n\n## read the phylogenetic tree\ntree <- read.tree(paste0(remote_folder, \"tree.nwk\"))\n\n## read the sampling information data set\ninfo <- read.csv(paste0(remote_folder,\"info.csv\"))\n\n## read and process the allele table\nsnps<-read.csv(paste0(remote_folder, \"alleles.csv\"), header = F,\n                row.names = 1, stringsAsFactor = F)\nsnps_strainCols <- snps[1,] \nsnps<-snps[-1,] # drop strain names\ncolnames(snps) <- snps_strainCols\n\ngapChar <- \"?\"\nsnp <- t(snps)\nlsnp <- apply(snp, 1, function(x) {\n        x != snp[1,] & x != gapChar & snp[1,] != gapChar\n    })\nlsnp <- as.data.frame(lsnp)\nlsnp$pos <- as.numeric(rownames(lsnp))\nlsnp <- tidyr::gather(lsnp, name, value, -pos)\nsnp_data <- lsnp[lsnp$value, c(\"name\", \"pos\")]\n\n## read the trait data\nbar_data <- read.csv(paste0(remote_folder, \"bar.csv\"))\n\n## visualize the tree \np <- ggtree(tree) \n\n## attach the sampling information data set \n## and add symbols colored by location\np <- p %<+% info + geom_tippoint(aes(color=location))\n\n## visualize SNP and Trait data using dot and bar charts,\n## and align them based on tree structure\np + geom_facet(panel = \"SNP\", data = snp_data, geom = geom_point, \n               mapping=aes(x = pos, color = location), shape = '|') +\n    geom_facet(panel = \"Trait\", data = bar_data, geom = ggstance::geom_barh, \n                aes(x = dummy_bar_value, color = location, fill = location), \n                stat = \"identity\", width = .6) +\n    theme_tree2(legend.position=c(.05, .85))\n```\n\n{% asset_img 42.png %}\n\n## 关联矩阵\n\n```R\nbeast_file <- system.file(\"examples/MCC_FluA_H3.tree\", package=\"ggtree\")\nbeast_tree <- read.beast(beast_file)\n\ngenotype_file <- system.file(\"examples/Genotype.txt\", package=\"ggtree\")\ngenotype <- read.table(genotype_file, sep=\"\\t\", stringsAsFactor=F)\ncolnames(genotype) <- sub(\"\\\\.$\", \"\", colnames(genotype))\np <- ggtree(beast_tree, mrsd=\"2013-01-01\") + \n    geom_treescale(x=2008, y=1, offset=2) + \n    geom_tiplab(size=2)\ngheatmap(p, genotype, offset=5, width=0.5, font.size=3, \n        colnames_angle=-45, hjust=0) +\n    scale_fill_manual(breaks=c(\"HuH3N2\", \"pdm\", \"trig\"), \n        values=c(\"steelblue\", \"firebrick\", \"darkgreen\"), name=\"genotype\")\n\np <- ggtree(beast_tree, mrsd=\"2013-01-01\") + \n    geom_tiplab(size=2, align=TRUE, linesize=.5) + \n    theme_tree2()\ngheatmap(p, genotype, offset=8, width=0.6, \n        colnames=FALSE, legend_title=\"genotype\") +\n    scale_x_ggtree() + \n    scale_y_continuous(expand=c(0, 0.3))\n```\n\n{% asset_img 43.png %}\n\n## 关联多个矩阵\n\n```R\nnwk <- system.file(\"extdata\", \"sample.nwk\", package=\"treeio\")\n\ntree <- read.tree(nwk)\ncirc <- ggtree(tree, layout = \"circular\")\n\ndf <- data.frame(first=c(\"a\", \"b\", \"a\", \"c\", \"d\", \"d\", \"a\", \"b\", \"e\", \"e\", \"f\", \"c\", \"f\"),\n                 second= c(\"z\", \"z\", \"z\", \"z\", \"y\", \"y\", \"y\", \"y\", \"x\", \"x\", \"x\", \"a\", \"a\"))\nrownames(df) <- tree$tip.label\n\ndf2 <- as.data.frame(matrix(rnorm(39), ncol=3))\nrownames(df2) <- tree$tip.label\ncolnames(df2) <- LETTERS[1:3]\n\n\np1 <- gheatmap(circ, df, offset=.8, width=.2,\n               colnames_angle=95, colnames_offset_y = .25) +\n    scale_fill_viridis_d(option=\"D\", name=\"discrete\\nvalue\")\n\n\nlibrary(ggnewscale)\np2 <- p1 + new_scale_fill()\ngheatmap(p2, df2, offset=15, width=.3,\n         colnames_angle=90, colnames_offset_y = .25) +\n    scale_fill_viridis_c(option=\"A\", name=\"continuous\\nvalue\")\n```\n\n{% asset_img 44.png %}\n\n## 多序列比对可视化\n\n```R\ntree <- read.tree(\"data/tree.nwk\")\np <- ggtree(tree) + geom_tiplab(size=3)\nmsaplot(p, \"data/sequence.fasta\", offset=3, width=2)\np <- ggtree(tree, layout='circular') + \n    geom_tiplab(offset=4, align=TRUE) + xlim(NA, 12)\nmsaplot(p, \"data/sequence.fasta\", window=c(120, 200))  \n```\n\n{% asset_img 45.png %}\n\n## 拼图\n\n```R\nlibrary(ggplot2)\nlibrary(ggtree)\n\nset.seed(2019-10-31)\ntr <- rtree(10)\n\nd1 <- data.frame(\n    # only some labels match\n    label = c(tr$tip.label[sample(5, 5)], \"A\"),\n    value = sample(1:6, 6))\n\nd2 <- data.frame(\n    label = rep(tr$tip.label, 5),\n    category = rep(LETTERS[1:5], each=10),\n    value = rnorm(50, 0, 3)) \n\ng <- ggtree(tr) + geom_tiplab(align=TRUE)\n\np1 <- ggplot(d1, aes(label, value)) + geom_col(aes(fill=label)) + \n    geom_text(aes(label=label, y= value+.1)) +\n    coord_flip() + theme_tree2() + theme(legend.position='none')\n \np2 <- ggplot(d2, aes(x=category, y=label)) + \n    geom_tile(aes(fill=value)) + scale_fill_viridis_c() + \n    theme_tree2() \n    \ncowplot::plot_grid(g, p2, p1, ncol=3) \n\nlibrary(aplot)\np2 %>% insert_left(g) %>% insert_right(p1, width=.5) \n```\n\n{% asset_img 46.png %}\n\n## 图片注释\n\n没能找到图片下载地址，看代码很容易理解：\n\n```R\nlibrary(ggimage)\nlibrary(ggtree)\n\nnwk <- \"((((bufonidae, dendrobatidae), ceratophryidae), (centrolenidae, leptodactylidae)), hylidae);\"\n\nx = read.tree(text = nwk)\nggtree(x) + xlim(NA, 7) + ylim(NA, 6.2) +\n  geom_tiplab(aes(image=paste0(\"img/frogs/\", label, '.jpg')), \n              geom=\"image\", offset=2, align=2, size=.2)  + \n  geom_tiplab(geom='label', offset=1, hjust=.5) + \n  geom_image(x=.8, y=5.5, image=\"img/frogs/frog.jpg\", size=.2)\n```\n\n{% asset_img 47.png %}\n\n## 图标（剪影）注释\n\n[PhyloPic](http://phylopic.org/)提供了1300余种生物剪影，`ggtree`能够调用这个数据库中的生物图标进行注释，相当于上面的图片。这种情况下绘图稍微有点慢，毕竟这个数据库是国外的。\n\n```R\nlibrary(ggtree)\nnewick <- \"((Pongo_abelii,(Gorilla_gorilla_gorilla,(Pan_paniscus,Pan_troglodytes)Pan,Homo_sapiens)Homininae)Hominidae,Nomascus_leucogenys)Hominoidea;\"\n\ntree <- read.tree(text=newick)\n\nd <- ggimage::phylopic_uid(tree$tip.label)\nd$body_mass = c(52, 114, 47, 45, 58, 6)\n\np <- ggtree(tree) %<+% d + \n  geom_tiplab(aes(image=uid, colour=body_mass), geom=\"phylopic\", offset=2.5) +\n  geom_tiplab(aes(label=label), offset = .2) + xlim(NA, 7) +\n  scale_color_viridis_c()\n```\n\n{% asset_img 48.png %}\n\n## 使用子图进行注释\n\n用子图进行注释是通过函数`geom_inset()`来完成的。\n\n### 条形图注释\n\n```R\nlibrary(phytools)\ndata(anoletree)\nx <- getStates(anoletree,\"tips\")\ntree <- anoletree\n\ncols <- setNames(palette()[1:length(unique(x))],sort(unique(x)))\nfitER <- ape::ace(x,tree,model=\"ER\",type=\"discrete\")\nancstats <- as.data.frame(fitER$lik.anc)\nancstats$node <- 1:tree$Nnode+Ntip(tree)\n\n## cols parameter indicate which columns store stats\nbars <- nodebar(ancstats, cols=1:6)\nbars <- lapply(bars, function(g) g+scale_fill_manual(values = cols))\n\ntree2 <- full_join(tree, data.frame(label = names(x), stat = x ), by = 'label')\np <- ggtree(tree2) + geom_tiplab() +\n    geom_tippoint(aes(color = stat)) + \n    scale_color_manual(values = cols) +\n    theme(legend.position = \"right\") + \n    xlim(NA, 8)\np + geom_inset(bars, width = .08, height = .05, x = \"branch\") \n```\n\n{% asset_img 49.png %}\n\n### 饼图注释\n\n```R\nlibrary(phytools)\nlibrary(treeio)\nlibrary(tidytree)\ndata(anoletree)\nx <- getStates(anoletree,\"tips\")\ntree <- anoletree\n\ncols <- setNames(palette()[1:length(unique(x))],sort(unique(x)))\nfitER <- ape::ace(x,tree,model=\"ER\",type=\"discrete\")\nancstats <- as.data.frame(fitER$lik.anc)\nancstats$node <- 1:tree$Nnode+Ntip(tree)\n\npies <- nodepie(ancstats, cols = 1:6)\npies <- lapply(pies, function(g) g+scale_fill_manual(values = cols))\n\ntree2 <- full_join(tree, data.frame(label = names(x), stat = x ), by = 'label')\np <- ggtree(tree2) + geom_tiplab() +\n  geom_tippoint(aes(color = stat)) + \n  scale_color_manual(values = cols) +\n  theme(legend.position = \"right\") + \n  xlim(NA, 8)\n\np + geom_inset(pies, width = .1, height = .1) \n```\n\n{% asset_img 50.png %}\n\n### 多种图像组合注释\n\n```\npies_and_bars <- pies\ni <- sample(length(pies), 20)\npies_and_bars[i] <- bars[i]\np + geom_inset(pies_and_bars, width=.08, height=.05)\n```\n\n{% asset_img 51.png %}\n\n## `Phylomoji`注释\n\n```R\nlibrary(ggplot2)\nlibrary(ggtree)\n# install.packages('emojifont')\n\ntt = '((snail,mushroom),(((sunflower,evergreen_tree),leaves),green_salad));'\ntree = read.tree(text = tt)\nd <- data.frame(label = c('snail','mushroom', 'sunflower',\n                          'evergreen_tree','leaves', 'green_salad'),\n                group = c('animal', 'fungi', 'flowering plant',\n                          'conifers', 'ferns', 'mosses'))\n\nggtree(tree, linetype = \"dashed\", size=1, color='firebrick') %<+% d + \n  xlim(0, 4.5) + ylim(0.5, 6.5) +\n  geom_tiplab(parse=\"emoji\", size=15, vjust=.25) +\n  geom_tiplab(aes(label = group), geom=\"label\", x=3.5, hjust=.5)\n```\n\n{% asset_img 52.png %}\n\n## `Emoji`注释circular/fan树\n\n```R\np <- ggtree(tree, layout = \"circular\", size=1) +  \n  geom_tiplab(parse=\"emoji\", size=10, vjust=.25)\nprint(p)\n\n## fan layout  \np2 <- open_tree(p, angle=200) \nprint(p2)\n\np2 %>% rotate_tree(-90)\n```\n\n{% asset_img 53.png %}\n\n## `Emoji`注释clades\n\n```R\nset.seed(123)\ntr <- rtree(30)\n\nggtree(tr) + xlim(NA, 5.2) +\n    geom_cladelabel(node=41, label=\"chicken\", parse=\"emoji\",\n                    fontsize=12, align=TRUE, colour=\"firebrick\") +\n    geom_cladelabel(node=53, label=\"duck\", parse=\"emoji\",\n                    fontsize=12, align=TRUE, colour=\"steelblue\") +\n    geom_cladelabel(node=48, label=\"family\", parse=\"emoji\",\n                    fontsize=12, align=TRUE, colour=\"darkkhaki\")\n```\n\n{% asset_img 54.png %}\n\n## `AppleColorEmoji`\n\n```\nlibrary(ggtree)\ntree_text <- \"(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);\"\nx <- read.tree(text=tree_text)\nlibrary(ggimage)\nlibrary(gridSVG)\np <-  ggtree(x, size=2) + geom_tiplab(size=20, parse='emoji') +\n    xlim(NA, 7) + ylim(NA, 8.5) +\n    geom_phylopic(image=\"79ad5f09-cf21-4c89-8e7d-0c82a00ce728\",\n                  color=\"firebrick\", alpha = .3, size=Inf)\n\np\nps = grid.export(\"emoji.svg\", addClass=T)\n```\n\n{% asset_img 55.png %}\n\n# `ggtree`可视化其他数据\n\n`ggtree`支持其他的数据类型，比如树状图（更多格式请移步Y叔博客）：\n\n```R\nhc <- hclust(dist(mtcars))\nhc\nclus <- cutree(hc, 4)\ng <- split(names(clus), clus)\n\np <- ggtree(hc, linetype='dashed')\nclades <- sapply(g, function(n) MRCA(p, n))\n\np <- groupClade(p, clades, group_name='subtree') + aes(color=subtree)\n\nd <- data.frame(label = names(clus), \n                cyl = mtcars[names(clus), \"cyl\"])\n\np %<+% d + \n  layout_dendrogram() + \n  geom_tippoint(size=5, shape=21, aes(fill=factor(cyl), x=x+.5), color='black') + \n  geom_tiplab(aes(label=cyl), size=3, hjust=.5, color='black') +\n  geom_tiplab(angle=90, hjust=1, offset=-10, show.legend=F) + \n  scale_color_brewer(palette='Set1', breaks=1:4) +\n  theme_dendrogram(plot.margin=margin(6,6,80,6)) +\n  theme(legend.position=c(.9, .6))\n```\n\n{% asset_img 56.png %}\n\n# `ggtree`拓展`ggtreeExtra`\n\n`ggtreeExtra`真的是惊艳到我了，只能献出我的膝盖啊！\n\n`ggtree`的函数`geom_facet()`只支持`rectangular`、 `roundrect`、 `ellipse` 及 `slanted` 这4种输出样式，并不支持在`circular`、`fan`及`radial`这几种输出样式的外环上添加图层，为了解决这个问题，Y叔团队开发了新的R包：`ggtreeExtra`！\n\n## 添加微生物组丰度\n\n`ggtree`直接支持`phyloseq`对象，这个对做微生物的来说，简直就是福音啊！\n\n```R\nlibrary(ggtreeExtra)\nlibrary(ggtree)\nlibrary(phyloseq)\nlibrary(dplyr)\n\ndata(\"GlobalPatterns\")\nGP <- GlobalPatterns\nGP <- prune_taxa(taxa_sums(GP) > 600, GP)\nsample_data(GP)$human <- get_variable(GP, \"SampleType\") %in%\n                              c(\"Feces\", \"Skin\")\nmergedGP <- merge_samples(GP, \"SampleType\")\nmergedGP <- rarefy_even_depth(mergedGP,rngseed=394582)\nmergedGP <- tax_glom(mergedGP,\"Order\")\n\nmelt_simple <- psmelt(mergedGP) %>%\n               filter(Abundance < 120) %>%\n               select(OTU, val=Abundance)\n\np <- ggtree(mergedGP, layout=\"fan\", open.angle=10) + \n     geom_tippoint(mapping=aes(color=Phylum), \n                   size=1.5,\n                   show.legend=FALSE)\np <- rotate_tree(p, -90)\n\np <- p +\n     geom_fruit(\n         data=melt_simple,\n         geom=geom_boxplot,\n         mapping = aes(\n                     y=OTU,\n                     x=val,\n                     group=label,\n                     fill=Phylum,\n                   ),\n         size=.2,\n         outlier.size=0.5,\n         outlier.stroke=0.08,\n         outlier.shape=21,\n         axis.params=list(\n                         axis       = \"x\",\n                         text.size  = 1.8,\n                         hjust      = 1,\n                         vjust      = 0.5,\n                         nbreak     = 3,\n                     ),\n         grid.params=list()\n     ) \n     \np <- p +\n     scale_fill_discrete(\n         name=\"Phyla\",\n         guide=guide_legend(keywidth=0.8, keyheight=0.8, ncol=1)\n     ) +\n     theme(\n         legend.title=element_text(size=9), # The title of legend \n         legend.text=element_text(size=7) # The label text of legend, the sizes should be adjust with dpi.\n     )\np\n```\n\n{% asset_img 57.png %}\n\n## 多维数据添加多个图层\n\n```R\nlibrary(ggtreeExtra)\nlibrary(ggtree)\nlibrary(treeio)\nlibrary(tidytree)\nlibrary(ggstar)\nlibrary(ggplot2)\nlibrary(ggnewscale)\n\ntree <- read.tree(\"data/HMP_tree/hmptree.nwk\")\n# the abundance and types of microbes\ndat1 <- read.csv(\"data/HMP_tree/tippoint_attr.csv\")\n# the abundance of microbes at different body sites.\ndat2 <- read.csv(\"data/HMP_tree/ringheatmap_attr.csv\")\n# the abundance of microbes at the body sites of greatest prevalence.\ndat3 <- read.csv(\"data/HMP_tree/barplot_attr.csv\")\n\n# adjust the order\ndat2$Sites <- factor(dat2$Sites, levels=c(\"Stool (prevalence)\", \"Cheek (prevalence)\",\n                                          \"Plaque (prevalence)\",\"Tongue (prevalence)\",\n                                          \"Nose (prevalence)\", \"Vagina (prevalence)\",\n                                          \"Skin (prevalence)\"))\ndat3$Sites <- factor(dat3$Sites, levels=c(\"Stool (prevalence)\", \"Cheek (prevalence)\",\n                                          \"Plaque (prevalence)\", \"Tongue (prevalence)\",\n                                          \"Nose (prevalence)\", \"Vagina (prevalence)\",\n                                          \"Skin (prevalence)\"))\n# extract the clade label information. Because some nodes of tree are annotated to genera,\n# which can be displayed with high light using ggtree.\nnodeids <- nodeid(tree, tree$node.label[nchar(tree$node.label)>4])\nnodedf <- data.frame(node=nodeids)\nnodelab <- gsub(\"[\\\\.0-9]\", \"\", tree$node.label[nchar(tree$node.label)>4])\n# The layers of clade and hightlight\nposlist <- c(1.6, 1.4, 1.6, 0.8, 0.1, 0.25, 1.6, 1.6, 1.2, 0.4,\n             1.2, 1.8, 0.3, 0.8, 0.4, 0.3, 0.4, 0.4, 0.4, 0.6,\n             0.3, 0.4, 0.3)\nlabdf <- data.frame(node=nodeids, label=nodelab, pos=poslist)\n\n# The circular layout tree.\np <- ggtree(tree, layout=\"fan\", size=0.15, open.angle=5) +\n     geom_hilight(data=nodedf, mapping=aes(node=node),\n                  extendto=6.8, alpha=0.3, fill=\"grey\", color=\"grey50\",\n                  size=0.05) +\n     geom_cladelab(data=labdf, \n                   mapping=aes(node=node, \n                               label=label,\n                               offset.text=pos),\n                   hjust=0.5,\n                   angle=\"auto\",\n                   barsize=NA,\n                   horizontal=FALSE, \n                   fontsize=1.4,\n                   fontface=\"italic\"\n                   )\n\np <- p %<+% dat1 + geom_star(\n                        mapping=aes(fill=Phylum, starshape=Type, size=Size),\n                        position=\"identity\",starstroke=0.1) +\n         scale_fill_manual(values=c(\"#FFC125\",\"#87CEFA\",\"#7B68EE\",\"#808080\",\"#800080\",\n                                    \"#9ACD32\",\"#D15FEE\",\"#FFC0CB\",\"#EE6A50\",\"#8DEEEE\",\n                                    \"#006400\",\"#800000\",\"#B0171F\",\"#191970\"),\n                           guide=guide_legend(keywidth = 0.5, keyheight = 0.5, order=1,\n                                              override.aes=list(starshape=15)),\n                           na.translate=FALSE)+\n         scale_starshape_manual(values=c(15, 1),\n                                guide=guide_legend(keywidth = 0.5, keyheight = 0.5, order=2),\n                                na.translate=FALSE)+\n         scale_size_continuous(range = c(1, 2.5),\n                               guide = guide_legend(keywidth = 0.5, keyheight = 0.5, order=3,\n                                                    override.aes=list(starshape=15)))\n                                                    \np <- p + new_scale_fill() +\n         geom_fruit(data=dat2, geom=geom_tile,\n                    mapping=aes(y=ID, x=Sites, alpha=Abundance, fill=Sites),\n                    color = \"grey50\", offset = 0.04,size = 0.02)+\n         scale_alpha_continuous(range=c(0, 1),\n                             guide=guide_legend(keywidth = 0.3, keyheight = 0.3, order=5)) +\n         geom_fruit(data=dat3, geom=geom_bar,\n                    mapping=aes(y=ID, x=HigherAbundance, fill=Sites),\n                    pwidth=0.38, \n                    orientation=\"y\", \n                    stat=\"identity\",\n         ) +\n         scale_fill_manual(values=c(\"#0000FF\",\"#FFA500\",\"#FF0000\",\"#800000\",\n                                    \"#006400\",\"#800080\",\"#696969\"),\n                           guide=guide_legend(keywidth = 0.3, keyheight = 0.3, order=4))+\n         geom_treescale(fontsize=2, linesize=0.3, x=4.9, y=0.1) +\n         theme(legend.position=c(0.93, 0.5),\n               legend.background=element_rect(fill=NA),\n               legend.title=element_text(size=6.5),\n               legend.text=element_text(size=4.5),\n               legend.spacing.y = unit(0.02, \"cm\"),\n             )\np\n```\n\n{% asset_img 58.png %}\n\n另外一种输出方式：\n\n```R\np + layout_rectangular() + \n    theme(legend.position=c(.05, .7))\n```\n\n{% asset_img 59.png %}\n\n# 群体遗学传例子\n\n```R\nlibrary(ggtree)\nlibrary(ggtreeExtra)\nlibrary(ggplot2)\nlibrary(ggnewscale)\nlibrary(dplyr)\nlibrary(tidytree)\nlibrary(ggstar)\n\ndat <- read.csv(\"data/microreact/Candida_auris/microreact-project-Candidaauris-data.csv\")\ntr <- read.tree(\"data/microreact/Candida_auris/microreact-project-Candidaauris-tree.nwk\")\n\ncountries <- c(\"Canada\", \"United States\",\n               \"Colombia\", \"Panama\",\n               \"Venezuela\", \"France\",\n               \"Germany\", \"Spain\",\n               \"UK\", \"India\",\n               \"Israel\", \"Pakistan\",\n               \"Saudi Arabia\", \"United Arab Emirates\",\n               \"Kenya\", \"South Africa\",\n               \"Japan\", \"South Korea\",\n               \"Australia\")\n# For the tip points\ndat1 <- dat %>% select(c(\"ID\", \"COUNTRY\", \"COUNTRY__colour\"))\ndat1$COUNTRY <- factor(dat1$COUNTRY, levels=countries)\nCOUNTRYcolors <- dat1[match(countries,dat$COUNTRY),\"COUNTRY__colour\"]\n\n# For the heatmap layer\ndat2 <- dat %>% select(c(\"ID\", \"FCZ\", \"AMB\", \"MCF\"))\ndat2 <- reshape2::melt(dat2,id=\"ID\", variable.name=\"Antifungal\", value.name=\"type\")\ndat2$type <- paste(dat2$Antifungal, dat2$type)\ndat2$type <- unlist(lapply(dat2$type,\n                           function(x)ifelse(grepl(\"Not_\", x), \"Susceptible\", x)))\ndat2$Antifungal <- factor(dat2$Antifungal, levels=c(\"FCZ\", \"AMB\", \"MCF\"))\ndat2$type <- factor(dat2$type,\n                    levels=c(\"FCZ Resistant\",\n                            \"AMB Resistant\",\n                            \"MCF Resistant\",\n                            \"Susceptible\"))\n\n# For the points layer\ndat3 <- dat %>% select(c(\"ID\", \"ERG11\", \"FKS1\")) %>%\n        reshape2::melt(id=\"ID\", variable.name=\"point\", value.name=\"mutation\")\ndat3$mutation <- paste(dat3$point, dat3$mutation)\ndat3$mutation <- unlist(lapply(dat3$mutation, function(x)ifelse(grepl(\"WT\",x), NA,x)))\ndat3$mutation <- factor(dat3$mutation, levels=c(\"ERG11 Y132F\", \"ERG11 K143R\",\n                                                \"ERG11 F126L\", \"FKS1 S639Y/P/F\"))\n\n# For the clade group\ndat4 <- dat %>% select(c(\"ID\", \"CLADE\"))\ndat4 <- aggregate(.~CLADE, dat4, FUN=paste, collapse=\",\")\nclades <- lapply(dat4$ID, function(x){unlist(strsplit(x,split=\",\"))})\nnames(clades) <- dat4$CLADE\n\ntr <- groupOTU(tr, clades, \"Clade\")\nClade <- NULL\np <- ggtree(tr=tr, layout=\"fan\", open.angle=15, size=0.2, aes(colour=Clade)) +\n     scale_colour_manual(\n         values=c(\"black\",\"#69B920\",\"#9C2E88\",\"#F74B00\",\"#60C3DB\"),\n         labels=c(\"\",\"I\", \"II\", \"III\", \"IV\"),\n         guide=guide_legend(keywidth=0.5,\n                            keyheight=0.5,\n                            order=1,\n                            override.aes=list(linetype=c(\"0\"=NA,\n                                                         \"Clade1\"=1,\n                                                         \"Clade2\"=1,\n                                                         \"Clade3\"=1,\n                                                         \"Clade4\"=1\n                                                        )\n                                             )\n                           )\n     ) + \n     new_scale_colour()\n\np1 <- p %<+% dat1 +\n     geom_tippoint(aes(colour=COUNTRY),\n                   alpha=0) +\n     geom_tiplab(aes(colour=COUNTRY),\n                   align=TRUE,\n                   linetype=3,\n                   size=1,\n                   linesize=0.2,\n                   show.legend=FALSE\n                   ) +\n     scale_colour_manual(\n         name=\"Country labels\",\n         values=COUNTRYcolors,\n         guide=guide_legend(keywidth=0.5,\n                            keyheight=0.5,\n                            order=2,\n                            override.aes=list(size=2,alpha=1))\n     )\n\np2 <- p1 +\n      geom_fruit(\n          data=dat2,\n          geom=geom_tile,\n          mapping=aes(x=Antifungal, y=ID, fill=type),\n          width=0.1,\n          color=\"white\",\n          pwidth=0.1,\n          offset=0.15\n      ) +\n      scale_fill_manual(\n           name=\"Antifungal susceptibility\",\n           values=c(\"#595959\", \"#B30000\", \"#020099\", \"#E6E6E6\"),\n           na.translate=FALSE,\n           guide=guide_legend(keywidth=0.5,\n                              keyheight=0.5,\n                              order=3\n                             )\n      ) +\n      new_scale_fill()\n\np3 <- p2 +\n      geom_fruit(\n          data=dat3,\n          geom=geom_star,\n          mapping=aes(x=mutation, y=ID, fill=mutation, starshape=point),\n          size=1,\n          starstroke=0,\n          pwidth=0.1,\n          inherit.aes = FALSE,\n          grid.params=list(\n                          linetype=3,\n                          size=0.2\n                      )\n\n      ) +\n      scale_fill_manual(\n          name=\"Point mutations\",\n          values=c(\"#329901\", \"#0600FF\", \"#FF0100\", \"#9900CC\"),\n          guide=guide_legend(keywidth=0.5, keyheight=0.5, order=4,\n                             override.aes=list(starshape=c(\"ERG11 Y132F\"=15,\n                                                           \"ERG11 K143R\"=15,\n                                                           \"ERG11 F126L\"=15,\n                                                           \"FKS1 S639Y/P/F\"=1),\n                                               size=2)\n                            ),\n          na.translate=FALSE,\n      ) +\n      scale_starshape_manual(\n          values=c(15, 1),\n          guide=\"none\"\n      ) +\n      theme(\n          legend.background=element_rect(fill=NA),\n          legend.title=element_text(size=7), # The size should be adjusted with different devout.\n          legend.text=element_text(size=5.5),\n          legend.spacing.y = unit(0.02, \"cm\")\n      )\np3\n```\n\n{% asset_img 60.png %}\n\n```R\nlibrary(ggtreeExtra)\nlibrary(ggtree)\nlibrary(ggplot2)\nlibrary(ggnewscale)\nlibrary(treeio)\nlibrary(tidytree)\nlibrary(dplyr)\nlibrary(ggstar)\n\ntr <- read.tree(\"data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-tree.nwk\")\n\nmetada <- read.csv(\"data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-data.csv\")\n\nmetadata <- metada %>%\n            select(c(\"id\", \"country\", \"country__colour\", \"year\", \"year__colour\", \"haplotype\"))\nmetadata$haplotype <- unlist(lapply(metadata$haplotype, function(x)ifelse(nchar(x)>0,x,NA)))\n\ncountrycolors <- metada %>%\n                 select(c(\"country\", \"country__colour\")) %>%\n                 distinct()\n\nyearcolors <- metada %>%\n              select(c(\"year\", \"year__colour\")) %>%\n              distinct()\nyearcolors <- yearcolors[order(yearcolors$year, decreasing=TRUE),]\n\nmetadata$country <- factor(metadata$country, levels=countrycolors$country)\nmetadata$year <- factor(metadata$year, levels=yearcolors$year)\n\np <- ggtree(tr, layout=\"fan\", open.angle=15, size=0.1)\n\np <- p %<+% metadata\n\np1 <-p +\n     geom_tippoint(\n         mapping=aes(colour=country),\n         size=1.5,\n         stroke=0,\n         alpha=0.4\n     ) +\n     scale_colour_manual(\n         name=\"Country\",\n         values=countrycolors$country__colour,\n         guide=guide_legend(keywidth=0.3,\n                            keyheight=0.3,\n                            ncol=2,\n                            override.aes=list(size=2,alpha=1),\n                            order=1)\n     ) +\n     theme(\n         legend.title=element_text(size=5),\n         legend.text=element_text(size=4),\n         legend.spacing.y = unit(0.02, \"cm\")\n     )\n\np2 <-p1 +\n     geom_fruit(\n         geom=geom_star,\n         mapping=aes(fill=haplotype),\n         starshape=26,\n         color=NA,\n         size=2,\n         starstroke=0,\n         offset=0,\n     ) +\n     scale_fill_manual(\n         name=\"Haplotype\",\n         values=c(\"red\"),\n         guide=guide_legend(\n                   keywidth=0.3,\n                   keyheight=0.3,\n                   order=3\n               ),\n         na.translate=FALSE\n     )\n\np3 <-p2 +\n     new_scale_fill() +\n     geom_fruit(\n         geom=geom_tile,\n         mapping=aes(fill=year),\n         width=0.002,\n         offset=0.1\n     ) +\n     scale_fill_manual(\n         name=\"Year\",\n         values=yearcolors$year__colour,\n         guide=guide_legend(keywidth=0.3, keyheight=0.3, ncol=2, order=2)\n     ) +\n     theme(\n           legend.title=element_text(size=6), # The size should be adjusted with the different devout.\n           legend.text=element_text(size=4.5),\n           legend.spacing.y = unit(0.02, \"cm\")\n           )\np3\n```\n\n{% asset_img 61.png %}\n\n# 参考文献\n\n>[1]. Yu G, Smith D K, Zhu H, et al. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data[J]. ***Methods in Ecology and Evolution***, 2017, 8(1): 28-36.\n>\n>[2]. https://yulab-smu.top/treedata-book/index.html\n>\n>[3]. https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/\n>\n>[4]. https://yulab-smu.top/treedata-book/chapter1.html\n>\n>[5]. Wang L G, Lam T T Y, Xu S, et al. Treeio: an R package for phylogenetic tree input and output with richly annotated and associated data[J]. Molecular biology and evolution, 2020, 37(2): 599-603.\n>\n>[6]. https://github.com/YuLab-SMU/tidytree\n\n\n\n交流请联系：\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com","slug":"ggtree学习笔记","published":1,"updated":"2021-11-23T06:44:29.066Z","_id":"ckwbphnms000048g034vs3ey2","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>Y叔的<code>ggtree</code>$^{[1]}$毫无疑问是当前绘制美化系统发育树（下文简称<code>进化树</code>）的最佳工具，一直想学习，<span id=\"more\"></span>但是都没有真真正正学习过，一是因为网上关于<code>gtree</code>的中文资源较少，另外一个原因是感觉到自己用不上，就没认真学习。春节在家，实在无聊，下定决心学一遍<code>ggtree</code>。下面的内容来自Y叔的博客$^{[2]}$，若有不当之处，恳请批评指正。</p>\n<h1 id=\"关于进化树\"><a href=\"#关于进化树\" class=\"headerlink\" title=\"关于进化树\"></a>关于进化树</h1><h2 id=\"进化树怎么看\"><a href=\"#进化树怎么看\" class=\"headerlink\" title=\"进化树怎么看\"></a>进化树怎么看</h2><p>进化树展示的是进化关系，简单说就是亲缘关系，通常是使用物种的遗传序列（如DNA序列、氨基酸序列等）来构建的。进化树看起来和层次聚类很像，这两者有木有区别呢？Y叔在<code>统计之都</code>上的文章$^{[3]}$是这样描述的：</p>\n<blockquote>\n<p>层次聚类的侧重点在于分类，把距离近的聚在一起。而进化树的构建可以说也是一个聚类过程，但侧重点在于推测进化关系和进化距离 (evolutionary distance)。</p>\n</blockquote>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n<p>上图展示的是典型的系统发育树。图中绿色、蓝色和红色的点都是<code>nodes</code>，也就是节点（个人理解），其中最外层绿色的点表示的是每个<code>sample</code>，这时绿色的点也叫<code>tips</code>；蓝色的点表示的是<code>父节点</code>，也就是从外往内两两<code>sample</code>的共有节点，可以理解成<code>祖先（ancestor）</code>，祖先之间还可以继续往上溯源，最终就汇集到红色的点，这个红色的点也就是<code>root</code>，需要注意的是有根树才具有<code>root</code>节点；横线叫做<code>分支(branches)</code>，这些横线表示的是进化变化（evolutionary changes），线的长短表示的是以时间或遗传变异为单位的进化变化。</p>\n<h2 id=\"进化树数据格式\"><a href=\"#进化树数据格式\" class=\"headerlink\" title=\"进化树数据格式\"></a>进化树数据格式</h2><p>进化树的数据格式有多种，常见的有<code>Newick</code>、<code>NEXUS</code>及<code>Phylip</code>。</p>\n<h3 id=\"Newick格式\"><a href=\"#Newick格式\" class=\"headerlink\" title=\"Newick格式\"></a>Newick格式</h3><p><code>Newick</code>格式是最常见的使用最广泛的进化树数据格式。</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png\" class=\"\">\n\n<p>上图是一个标准的进化树图，其对应的<code>Newick</code>格式为：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((t2:<span class=\"number\">0.04</span>,t1:<span class=\"number\">0.34</span>):<span class=\"number\">0.89</span>,(t5:<span class=\"number\">0.37</span>,(t4:<span class=\"number\">0.03</span>,t3:<span class=\"number\">0.67</span>):<span class=\"number\">0.9</span>):<span class=\"number\">0.59</span>); </span><br></pre></td></tr></table></figure>\n\n<p>数据格式和图是一一对应的，假如我们看图的时候是从外到内，那<code>t3</code>和<code>t4</code>是最近的，在数据中，<code>t3</code>和<code>t4</code>也是在一个括号里面的，数据的最小单位是一对<code>()</code>，就像剥洋葱那样顺着括号一层一层往外剥的时候，就能得到上图的那种样式。冒号后面对应的是横线上的“距离”，父节点的“距离”是两个“子节点”共有的，因此，需要表示“父节点”的“距离”时，需要将“距离”放在“子节点“的括号外。</p>\n<h3 id=\"NEXUS格式\"><a href=\"#NEXUS格式\" class=\"headerlink\" title=\"NEXUS格式\"></a>NEXUS格式</h3><p><code>NEXUS</code>格式是<code>Newick</code>格式的拓展，以<code>blocks</code>为单位将进化树的元素分开。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#NEXUS</span></span><br><span class=\"line\">[R-package APE, Wed Nov  <span class=\"number\">9</span> <span class=\"number\">11</span>:<span class=\"number\">46</span>:<span class=\"number\">32</span> <span class=\"number\">2016</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">BEGIN TAXA;</span><br><span class=\"line\">    DIMENSIONS NTAX = <span class=\"number\">5</span>;</span><br><span class=\"line\">    TAXLABELS</span><br><span class=\"line\">        t5</span><br><span class=\"line\">        t4</span><br><span class=\"line\">        t1</span><br><span class=\"line\">        t2</span><br><span class=\"line\">        t3</span><br><span class=\"line\">    ;</span><br><span class=\"line\">END;</span><br><span class=\"line\">BEGIN TREES;</span><br><span class=\"line\">    TRANSLATE</span><br><span class=\"line\">        <span class=\"number\">1</span>   t5,</span><br><span class=\"line\">        <span class=\"number\">2</span>   t4,</span><br><span class=\"line\">        <span class=\"number\">3</span>   t1,</span><br><span class=\"line\">        <span class=\"number\">4</span>   t2,</span><br><span class=\"line\">        <span class=\"number\">5</span>   t3</span><br><span class=\"line\">    ;</span><br><span class=\"line\">    TREE * UNTITLED = [&amp;R] (<span class=\"number\">1</span>:<span class=\"number\">0.89</span>,((<span class=\"number\">2</span>:<span class=\"number\">0.59</span>,<span class=\"number\">3</span>:<span class=\"number\">0.37</span>):<span class=\"number\">0.34</span>,</span><br><span class=\"line\">    (<span class=\"number\">4</span>:<span class=\"number\">0.03</span>,<span class=\"number\">5</span>:<span class=\"number\">0.67</span>):<span class=\"number\">0.9</span>):<span class=\"number\">0.04</span>);</span><br><span class=\"line\">END;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他格式\"><a href=\"#其他格式\" class=\"headerlink\" title=\"其他格式\"></a>其他格式</h3><p>进化树的存储格式还有很多种，更多请参照Y叔的博客$^{[4]}$。</p>\n<h1 id=\"进化树数据处理\"><a href=\"#进化树数据处理\" class=\"headerlink\" title=\"进化树数据处理\"></a>进化树数据处理</h1><p>进化树数据可以使用<code>treeio</code>$^{[5]}$这个包进行合并等操作，然后可以将其他信息利用<code>tidytree</code>$^{[6]}$这个包将树文件转换成R里面常见的数据框格式，这种格式也可以再次转化成树文件，利用<code>ggtree</code>进行可视化。</p>\n<h2 id=\"phylo对象\"><a href=\"#phylo对象\" class=\"headerlink\" title=\"phylo对象\"></a><code>phylo</code>对象</h2><p><code>phylo</code>格式是R包<code>ape</code>支持的格式，在R中的很多包都依赖于这种格式。<code>tidytree</code>中的函数<code>as_tibble</code>可以将<code>phylo</code>转换成数据框，此时的数据框是个<code>tbl_tree</code>对象。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ape)</span><br><span class=\"line\"></span><br><span class=\"line\">set.seed(<span class=\"number\">2017</span>)</span><br><span class=\"line\">tree &lt;- rtree(<span class=\"number\">4</span>)</span><br><span class=\"line\">tree</span><br></pre></td></tr></table></figure>\n\n<p>此时得到的是<code>phylo</code>对象：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 4 tips and 3 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   t4, t1, t3, t2</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br></pre></td></tr></table></figure>\n\n<p>现在将其转化成数据框：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(tidytree)</span><br><span class=\"line\">x &lt;- as_tibble(tree)</span><br><span class=\"line\">x</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 7 x 4</span><br><span class=\"line\">##   parent  node branch.length label</span><br><span class=\"line\">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;</span><br><span class=\"line\">## 1      5     1       0.435   t4   </span><br><span class=\"line\">## 2      7     2       0.674   t1   </span><br><span class=\"line\">## 3      7     3       0.00202 t3   </span><br><span class=\"line\">## 4      6     4       0.0251  t2   </span><br><span class=\"line\">## 5      5     5      NA       &lt;NA&gt; </span><br><span class=\"line\">## 6      5     6       0.472   &lt;NA&gt; </span><br><span class=\"line\">## 7      6     7       0.274   &lt;NA&gt;</span><br></pre></td></tr></table></figure>\n\n<p>看图更直观：</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png\" class=\"\">\n\n<p>可以清楚地看到进化树的全部信息，包括父节点、节点、分支长度及<code>tips</code>的标签等。</p>\n<p>使用<code>as.phylo(x)</code>就能将数据框转换成<code>phylo</code>:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">as.phylo(x)</span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 4 tips and 3 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   t4, t1, t3, t2</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br></pre></td></tr></table></figure>\n\n<p>如果此时我们需要添加信息的话，在原始文件上添加信息是比较麻烦的，但是可以团购先构建数据框，然后将两个数据框<code>join</code>在一起就可以了：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d &lt;- tibble(label = paste0(<span class=\"string\">&#x27;t&#x27;</span>, <span class=\"number\">1</span>:<span class=\"number\">4</span>),</span><br><span class=\"line\">            trait = rnorm(<span class=\"number\">4</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">y &lt;- full_join(x, d, by = <span class=\"string\">&#x27;label&#x27;</span>)</span><br><span class=\"line\">y</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png\" class=\"\">\n\n<h2 id=\"treedata对象\"><a href=\"#treedata对象\" class=\"headerlink\" title=\"treedata对象\"></a><code>treedata</code>对象</h2><p><code>tidytree</code>默认的格式是<code>treedata</code>，函数<code>as.treedata</code>可以将前面的数据框转换成<code>treedata</code>对象：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">as.treedata(y)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## &#x27;treedata&#x27; S4 object&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## ...@ phylo: </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 4 tips and 3 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   t4, t1, t3, t2</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## with the following features available:</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;trait&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<p>同样也可以通过<code>as_tibble</code>将<code>treedata</code>转换成数据框格式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y %&gt;% as.treedata %&gt;% as_tibble</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 7 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##   parent  node branch.length label  trait</span></span><br><span class=\"line\"><span class=\"comment\">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## 1      5     1       0.435   t4     0.943</span></span><br><span class=\"line\"><span class=\"comment\">## 2      7     2       0.674   t1    -0.171</span></span><br><span class=\"line\"><span class=\"comment\">## 3      7     3       0.00202 t3     0.570</span></span><br><span class=\"line\"><span class=\"comment\">## 4      6     4       0.0251  t2    -0.283</span></span><br><span class=\"line\"><span class=\"comment\">## 5      5     5      NA       &lt;NA&gt;  NA    </span></span><br><span class=\"line\"><span class=\"comment\">## 6      5     6       0.472   &lt;NA&gt;  NA    </span></span><br><span class=\"line\"><span class=\"comment\">## 7      6     7       0.274   &lt;NA&gt;  NA</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"树文件融合\"><a href=\"#树文件融合\" class=\"headerlink\" title=\"树文件融合\"></a>树文件融合</h2><p><code>treeio</code>同的函数<code>merge_tree()</code>可以对多个树文件进行合并，原理是以<code>node/branches</code>为`key进行数据合并，如：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(treeio)</span><br><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">rst_file &lt;- system.file(<span class=\"string\">&quot;examples/rst&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">mlc_file &lt;- system.file(<span class=\"string\">&quot;examples/mlc&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\">codeml_tree &lt;- read.codeml(rst_file, mlc_file)</span><br><span class=\"line\"></span><br><span class=\"line\">merged_tree &lt;- merge_tree(beast_tree, codeml_tree)</span><br><span class=\"line\">merged_tree</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## &#x27;treedata&#x27; S4 object that stored information of</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;/home/ygc/R/library/ggtree/examples/MCC_FluA_H3.tree&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;/home/ygc/R/library/ggtree/examples/rst&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;/home/ygc/R/library/ggtree/examples/mlc&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## ...@ phylo: </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 76 tips and 75 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   A/Hokkaido/30-1-a/2013, A/New_York/334/2004, A/New_York/463/2005, A/New_York/452/1999, A/New_York/238/2005, A/New_York/523/1998, ...</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## with the following features available:</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;height&#x27;,   &#x27;height_0.95_HPD&#x27;,  &#x27;height_median&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;height_range&#x27;, &#x27;length&#x27;,   &#x27;length_0.95_HPD&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;length_median&#x27;,    &#x27;length_range&#x27;, &#x27;posterior&#x27;,    &#x27;rate&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;rate_0.95_HPD&#x27;,    &#x27;rate_median&#x27;,  &#x27;rate_range&#x27;,   &#x27;subs&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;AA_subs&#x27;,  &#x27;t&#x27;,    &#x27;N&#x27;,    &#x27;S&#x27;,    &#x27;dN_vs_dS&#x27;, &#x27;dN&#x27;,   &#x27;dS&#x27;,   &#x27;N_x_dN&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;S_x_dS&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<p>合并后的树文件，除开<code>node</code>和<code>branches</code>外，其余的所有附加信息都变成了变量。</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.png\" class=\"\">\n\n<p>既然是个数据框，那就可以对这些数据进行可视化：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(dplyr)</span><br><span class=\"line\">df &lt;- merged_tree %&gt;% </span><br><span class=\"line\">  as_tibble() %&gt;%</span><br><span class=\"line\">  select(dN_vs_dS, dN, dS, rate) %&gt;%</span><br><span class=\"line\">  subset(dN_vs_dS &gt;=<span class=\"number\">0</span> &amp; dN_vs_dS &lt;= <span class=\"number\">1.5</span>) %&gt;%</span><br><span class=\"line\">  tidyr::gather(type, value, dN_vs_dS:dS)</span><br><span class=\"line\">df$type[df$type == <span class=\"string\">&#x27;dN_vs_dS&#x27;</span>] &lt;- <span class=\"string\">&#x27;dN/dS&#x27;</span></span><br><span class=\"line\">df$type &lt;- factor(df$type, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;dN/dS&quot;</span>, <span class=\"string\">&quot;dN&quot;</span>, <span class=\"string\">&quot;dS&quot;</span>))</span><br><span class=\"line\">ggplot(df, aes(rate, value)) + geom_hex() + </span><br><span class=\"line\">  facet_wrap(~type, scale=<span class=\"string\">&#x27;free_y&#x27;</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.png\" class=\"\">\n\n<p>还可以利用该函数比较不同软件的分析结果：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">phylo &lt;- as.phylo(beast_tree)</span><br><span class=\"line\">N &lt;- Nnode2(phylo)</span><br><span class=\"line\">d &lt;- tibble(node = <span class=\"number\">1</span>:N, fake_trait = rnorm(N), another_trait = runif(N))</span><br><span class=\"line\">fake_tree &lt;- treedata(phylo = phylo, data = d)</span><br><span class=\"line\">triple_tree &lt;- merge_tree(merged_tree, fake_tree)</span><br><span class=\"line\">triple_tree</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"链接外部数据\"><a href=\"#链接外部数据\" class=\"headerlink\" title=\"链接外部数据\"></a>链接外部数据</h2><p>进化树能够展示的东西不仅仅是进化关系，还可以增添许多信息，如基因表达量啥的。<code>treeio</code>的函数<code>full_join()</code>能够通过<code>node</code>或<code>tips</code>进行数据融合：</p>\n<ul>\n<li><p>通过<code>node</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ape)</span><br><span class=\"line\">data(woodmouse)</span><br><span class=\"line\">d &lt;- dist.dna(woodmouse)</span><br><span class=\"line\">tr &lt;- nj(d)</span><br><span class=\"line\">bp &lt;- boot.phylo(tr, </span><br><span class=\"line\">                 woodmouse, </span><br><span class=\"line\">                 <span class=\"keyword\">function</span>(x) nj(dist.dna(x)))</span><br><span class=\"line\"></span><br><span class=\"line\">bp2 &lt;- tibble(node=<span class=\"number\">1</span>:Nnode(tr) + <span class=\"comment\"># 计算父节点数</span></span><br><span class=\"line\">                Ntip(tr), <span class=\"comment\"># 计算tip数</span></span><br><span class=\"line\">              bootstrap = bp)</span><br><span class=\"line\">full_join(tr, bp2, by=<span class=\"string\">&quot;node&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>通过<code>tips</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &lt;- system.file(<span class=\"string\">&quot;extdata/BEAST&quot;</span>, <span class=\"string\">&quot;beast_mcc.tree&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">beast &lt;- read.beast(file)</span><br><span class=\"line\">x &lt;- tibble(label = as.phylo(beast)$tip.label, trait = rnorm(Ntip(beast)))</span><br><span class=\"line\">full_join(beast, x, by=<span class=\"string\">&quot;label&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"如何找到想要的node\"><a href=\"#如何找到想要的node\" class=\"headerlink\" title=\"如何找到想要的node\"></a>如何找到想要的<code>node</code></h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\"></span><br><span class=\"line\">set.seed(<span class=\"number\">1</span>)</span><br><span class=\"line\">tr = rtree(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p  + </span><br><span class=\"line\">  geom_label(aes(x=branch, label=node))+</span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">12</span>, fill=<span class=\"string\">&quot;steelblue&quot;</span>, alpha=<span class=\"number\">.6</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分组\"><a href=\"#分组\" class=\"headerlink\" title=\"分组\"></a>分组</h2><p><code>treeio</code>中的函数 <code>groupOTU()</code> 和 <code>groupClade()</code> 可以用于分组。</p>\n<h3 id=\"groupClade\"><a href=\"#groupClade\" class=\"headerlink\" title=\"groupClade\"></a><code>groupClade</code></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nwk &lt;- <span class=\"string\">&#x27;(((((((A:4,B:4):6,C:5):8,D:6):3,E:21):10,((F:4,G:12):14,H:8):13):13,((I:5,J:2):30,(K:11,L:11):2):17):4,M:56);&#x27;</span></span><br><span class=\"line\">tree &lt;- read.tree(text=nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">groupClade(as_tibble(tree), <span class=\"built_in\">c</span>(<span class=\"number\">17</span>, <span class=\"number\">21</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 25 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##    parent  node branch.length label group</span></span><br><span class=\"line\"><span class=\"comment\">##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;</span></span><br><span class=\"line\"><span class=\"comment\">##  1     20     1             4 A     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  2     20     2             4 B     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  3     19     3             5 C     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  4     18     4             6 D     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  5     17     5            21 E     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  6     22     6             4 F     2    </span></span><br><span class=\"line\"><span class=\"comment\">##  7     22     7            12 G     2    </span></span><br><span class=\"line\"><span class=\"comment\">##  8     21     8             8 H     2    </span></span><br><span class=\"line\"><span class=\"comment\">##  9     24     9             5 I     0    </span></span><br><span class=\"line\"><span class=\"comment\">## 10     24    10             2 J     0    </span></span><br><span class=\"line\"><span class=\"comment\">## # … with 15 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>以<code>node17</code>和<code>node21</code>为界将<code>clade</code>进行分组。这两个函数可以作用于<code>tbl_tree</code>、<code>phylo</code> 、 <code>treedata</code>及 <code>ggtree</code> 这些对象。</p>\n<h3 id=\"groupOTU\"><a href=\"#groupOTU\" class=\"headerlink\" title=\"groupOTU\"></a><code>groupOTU</code></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">2017</span>)</span><br><span class=\"line\">tr &lt;- rtree(<span class=\"number\">4</span>)</span><br><span class=\"line\">x &lt;- as_tibble(tr)</span><br><span class=\"line\"><span class=\"comment\">## 输入的节点可以是节点ID，也可以是Label</span></span><br><span class=\"line\">groupOTU(x, <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;t1&#x27;</span>, <span class=\"string\">&#x27;t4&#x27;</span>), group_name = <span class=\"string\">&quot;fake_group&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 7 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##   parent  node branch.length label fake_group</span></span><br><span class=\"line\"><span class=\"comment\">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;     </span></span><br><span class=\"line\"><span class=\"comment\">## 1      5     1       0.435   t4    1         </span></span><br><span class=\"line\"><span class=\"comment\">## 2      7     2       0.674   t1    1         </span></span><br><span class=\"line\"><span class=\"comment\">## 3      7     3       0.00202 t3    0         </span></span><br><span class=\"line\"><span class=\"comment\">## 4      6     4       0.0251  t2    0         </span></span><br><span class=\"line\"><span class=\"comment\">## 5      5     5      NA       &lt;NA&gt;  1         </span></span><br><span class=\"line\"><span class=\"comment\">## 6      5     6       0.472   &lt;NA&gt;  1         </span></span><br><span class=\"line\"><span class=\"comment\">## 7      6     7       0.274   &lt;NA&gt;  1</span></span><br></pre></td></tr></table></figure>\n\n<p>更常见的分组方法是直接命名分组：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cls &lt;- <span class=\"built_in\">list</span>(c1=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;D&quot;</span>, <span class=\"string\">&quot;E&quot;</span>),</span><br><span class=\"line\">            c2=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;F&quot;</span>, <span class=\"string\">&quot;G&quot;</span>, <span class=\"string\">&quot;H&quot;</span>),</span><br><span class=\"line\">            c3=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;L&quot;</span>, <span class=\"string\">&quot;K&quot;</span>, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;J&quot;</span>),</span><br><span class=\"line\">            c4=<span class=\"string\">&quot;M&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">as_tibble(tree) %&gt;% groupOTU(cls)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 25 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##    parent  node branch.length label group</span></span><br><span class=\"line\"><span class=\"comment\">##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;</span></span><br><span class=\"line\"><span class=\"comment\">##  1     20     1             4 A     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  2     20     2             4 B     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  3     19     3             5 C     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  4     18     4             6 D     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  5     17     5            21 E     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  6     22     6             4 F     c2   </span></span><br><span class=\"line\"><span class=\"comment\">##  7     22     7            12 G     c2   </span></span><br><span class=\"line\"><span class=\"comment\">##  8     21     8             8 H     c2   </span></span><br><span class=\"line\"><span class=\"comment\">##  9     24     9             5 I     c3   </span></span><br><span class=\"line\"><span class=\"comment\">## 10     24    10             2 J     c3   </span></span><br><span class=\"line\"><span class=\"comment\">## # … with 15 more rows</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新标准化分支\"><a href=\"#重新标准化分支\" class=\"headerlink\" title=\"重新标准化分支\"></a>重新标准化分支</h2><p>不同的进化树可以进行合并，原始的分支长度可能单位不一样，这时候就可以用合并后的其他参数对分支长度进行标准化。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 &lt;- ggtree(merged_tree) + theme_tree2()</span><br><span class=\"line\">p2 &lt;- ggtree(rescale_tree(merged_tree, <span class=\"string\">&#x27;dN&#x27;</span>)) + theme_tree2()</span><br><span class=\"line\">p3 &lt;- ggtree(rescale_tree(merged_tree, <span class=\"string\">&#x27;rate&#x27;</span>)) + theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1, p2, p3, ncol=<span class=\"number\">3</span>, labels = <span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/7.png\" class=\"\">\n\n<p>从上图可以看到的是，三个图的“横坐标”范围不一样，第一个图是原始的分支单位，第二个是以<code>dN</code>进行标准化的结果，第三个是以<code>rate</code>进行标准化的结果。</p>\n<h2 id=\"子集操作\"><a href=\"#子集操作\" class=\"headerlink\" title=\"子集操作\"></a>子集操作</h2><h3 id=\"从树中除去tips\"><a href=\"#从树中除去tips\" class=\"headerlink\" title=\"从树中除去tips\"></a>从树中除去<code>tips</code></h3><p>有些时候出于某些原因（如序列质量、组装质量、比对错误等），我们会将某些<code>tips</code>（样本）从树里面剔除，函数<code>drop.tip()</code>可以实现这一功能：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f &lt;- system.file(<span class=\"string\">&quot;extdata/NHX&quot;</span>, <span class=\"string\">&quot;phyldog.nhx&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">nhx &lt;- read.nhx(f)</span><br><span class=\"line\">to_drop &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&quot;Physonect_sp_@2066767&quot;</span>,</span><br><span class=\"line\">             <span class=\"string\">&quot;Lychnagalma_utricularia@2253871&quot;</span>,</span><br><span class=\"line\">             <span class=\"string\">&quot;Kephyes_ovata@2606431&quot;</span>)</span><br><span class=\"line\">p1 &lt;- ggtree(nhx) + geom_tiplab(aes(color = label %in% to_drop)) +</span><br><span class=\"line\">  scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) + xlim(<span class=\"number\">0</span>, <span class=\"number\">0.8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">nhx_reduced &lt;- drop.tip(as.phylo(nhx), to_drop) <span class=\"comment\"># 发现需要转换成phylo对象才行</span></span><br><span class=\"line\">p2 &lt;- ggtree(nhx_reduced) + geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">0.8</span>)  </span><br><span class=\"line\">cowplot::plot_grid(p1, p2, ncol=<span class=\"number\">2</span>, labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8.png\" class=\"\">\n\n<h3 id=\"根据tips取子集\"><a href=\"#根据tips取子集\" class=\"headerlink\" title=\"根据tips取子集\"></a>根据<code>tips</code>取子集</h3><p>如果一个进化树很复杂的话，要看我们感兴趣的部分就很难，这时候就需要将我们感兴趣的部分提取出来。<code>treeio</code>中的函数<code>tree_subset()</code>能够完成这一功能，即使是提取出来的子集，结构还是和原来的一样，不会发生变化。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = ggtree(beast_tree) + </span><br><span class=\"line\">  geom_tiplab() +  </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;原始树&#x27;</span>) +</span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">40</span>) + theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">tree2 = tree_subset(beast_tree, <span class=\"string\">&quot;A/Swine/HK/168/2012&quot;</span>, levels_back=<span class=\"number\">4</span>)  </span><br><span class=\"line\">p2 &lt;- ggtree(tree2, aes(color=group)) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;取子集&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  geom_tiplab() +  xlim(<span class=\"number\">0</span>, <span class=\"number\">4</span>) + theme_tree2() </span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;- ggtree(tree2, aes(color=group)) +</span><br><span class=\"line\">  geom_tiplab(hjust = -<span class=\"number\">.1</span>) + xlim(<span class=\"number\">0</span>, <span class=\"number\">5</span>) + </span><br><span class=\"line\">  geom_point(aes(fill = rate), shape = <span class=\"number\">21</span>, size = <span class=\"number\">4</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;用rate这个变量控制颜色&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>), guide = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_fill_continuous(low = <span class=\"string\">&#x27;blue&#x27;</span>, high = <span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  theme_tree2() + theme(legend.position = <span class=\"string\">&#x27;right&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p4 &lt;- ggtree(tree2, aes(color=group), </span><br><span class=\"line\">             root.position = as.phylo(tree2)$root.edge) +</span><br><span class=\"line\">  geom_tiplab() + xlim(<span class=\"number\">18</span>, <span class=\"number\">24</span>) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;添加根节点但不显示&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">p5 &lt;- ggtree(tree2, aes(color=group), </span><br><span class=\"line\">             root.position = as.phylo(tree2)$root.edge) +</span><br><span class=\"line\">  geom_rootedge() + geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">40</span>) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;添加根节点且显示&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">plot_grid(p2, p3, p4, p5, ncol=<span class=\"number\">2</span>) %&gt;%</span><br><span class=\"line\">  plot_grid(p1, ., ncol=<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.png\" class=\"\">\n\n<h3 id=\"根据内部节点编号取子集\"><a href=\"#根据内部节点编号取子集\" class=\"headerlink\" title=\"根据内部节点编号取子集\"></a>根据内部节点编号取子集</h3><p>如果我们对特定的进化分支（clade）感兴趣，那也可以通过<code>tree_subset()</code>函数将感兴趣的分支进行放大展示，但是这个时候需要我们知道感兴趣的进化分支所对应的<code>node</code>编号才行。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clade &lt;- tree_subset(beast_tree, node=<span class=\"number\">121</span>, levels_back=<span class=\"number\">0</span>)</span><br><span class=\"line\">clade2 &lt;- tree_subset(beast_tree, node=<span class=\"number\">121</span>, levels_back=<span class=\"number\">2</span>)</span><br><span class=\"line\">p1 &lt;- ggtree(clade) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;感兴趣的整个分支&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">p2 &lt;- ggtree(clade2, aes(color=group)) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;感兴趣的整个分支 + 回退两个节点&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab() + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">8</span>) + scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">library(ape)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">data(chiroptera)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果不知道node的时候，就直接进行匹配</span></span><br><span class=\"line\">nodes &lt;- grep(<span class=\"string\">&quot;Plecotus&quot;</span>, chiroptera$tip.label)</span><br><span class=\"line\">chiroptera &lt;- groupOTU(chiroptera, nodes)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;- ggtree(chiroptera, aes(colour = group)) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;整个进化树中选择感兴趣的整个分支&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&quot;none&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clade &lt;- MRCA(chiroptera, nodes) <span class=\"comment\"># 最近的父节点</span></span><br><span class=\"line\">x &lt;- tree_subset(chiroptera, clade, levels_back = <span class=\"number\">0</span>)</span><br><span class=\"line\">p4 &lt;- ggtree(x) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;感兴趣的特有分支&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plot_grid(p1, p2, p3, p4,ncol=<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.png\" class=\"\">\n\n<h2 id=\"导出数据\"><a href=\"#导出数据\" class=\"headerlink\" title=\"导出数据\"></a>导出数据</h2><p><code>treeio</code>这个R包可以导出多种格式的文件，这个比较简单，详情参照：<a href=\"https://yulab-smu.top/treedata-book/chapter3.html\">https://yulab-smu.top/treedata-book/chapter3.html</a></p>\n<h1 id=\"进化树可视化\"><a href=\"#进化树可视化\" class=\"headerlink\" title=\"进化树可视化\"></a>进化树可视化</h1><h2 id=\"基础方法\"><a href=\"#基础方法\" class=\"headerlink\" title=\"基础方法\"></a>基础方法</h2><p><code>ggtree</code>对进化树进行可视化的方法有两种：</p>\n<ul>\n<li><code>ggplot()</code> + <code>geom_tree()</code> + <code>theme_tree()</code></li>\n<li><code>ggtree()</code></li>\n</ul>\n<p>第二种方法是第一种方法的“缩写版”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()</span><br><span class=\"line\">ggtree(tree)</span><br></pre></td></tr></table></figure>\n\n<p>这两种方法得到的结果是一样的：</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/11.png\" class=\"\">\n\n<p><code>ggtree</code>支持<code>ggplot2</code>的图形语法，因此，也可以在<code>ggtree</code>中对颜色性状等进行修改：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()</span><br><span class=\"line\">ggtree(tree)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = ggtree(tree, color=<span class=\"string\">&quot;firebrick&quot;</span>, size=<span class=\"number\">2</span>, linetype=<span class=\"string\">&quot;dotted&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;阶梯化&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree, color=<span class=\"string\">&quot;firebrick&quot;</span>, size=<span class=\"number\">2</span>, linetype=<span class=\"string\">&quot;dotted&quot;</span>, ladderize=<span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;非阶梯化&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2)v</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/12.png\" class=\"\">\n\n<p>可以使用参数<code>branch.length</code>对egde进行标准化，如果参数为<code>none</code>，则是这样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggtree(tree, branch.length=<span class=\"string\">&quot;none&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13.png\" class=\"\">\n\n<h2 id=\"输出样式\"><a href=\"#输出样式\" class=\"headerlink\" title=\"输出样式\"></a>输出样式</h2><p><code>ggtree</code>支持多种输出样式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">set.seed(<span class=\"number\">2017</span>-<span class=\"number\">02</span>-<span class=\"number\">16</span>)</span><br><span class=\"line\">tree &lt;- rtree(<span class=\"number\">50</span>)</span><br><span class=\"line\">p1 = ggtree(tree) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;默认&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree, layout=<span class=\"string\">&quot;roundrect&quot;</span>)  +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;roundrect&#x27;</span>)</span><br><span class=\"line\">p3 = ggtree(tree, layout=<span class=\"string\">&quot;slanted&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;slanted&#x27;</span>)</span><br><span class=\"line\">p4 = ggtree(tree, layout=<span class=\"string\">&quot;ellipse&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;ellipse&#x27;</span>)</span><br><span class=\"line\">p5 = ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;circular&#x27;</span>)</span><br><span class=\"line\">p6 = ggtree(tree, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">120</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;fan&#x27;</span>)</span><br><span class=\"line\">p7 = ggtree(tree, layout=<span class=\"string\">&quot;equal_angle&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;equal_angle&#x27;</span>)</span><br><span class=\"line\">p8 = ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;daylight&#x27;</span>)</span><br><span class=\"line\">p9 = ggtree(tree, branch.length=<span class=\"string\">&#x27;none&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">p10 = ggtree(tree, layout=<span class=\"string\">&quot;ellipse&quot;</span>, branch.length=<span class=\"string\">&quot;none&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;ellipse对齐&#x27;</span>)</span><br><span class=\"line\">p11 = ggtree(tree, branch.length=<span class=\"string\">&#x27;none&#x27;</span>, layout=<span class=\"string\">&#x27;circular&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;circular对齐&#x27;</span>)</span><br><span class=\"line\">p12 = ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;daylight对齐&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, ncol = <span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/14.png\" class=\"\">\n\n<p>当只是展示树结构而没有分支长度标尺的时候，就用最下面这4种。</p>\n<p>还有其他的多种对齐方式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggtree(tree) + scale_x_reverse()</span><br><span class=\"line\">ggtree(tree) + coord_flip()</span><br><span class=\"line\">ggtree(tree) + layout_dendrogram()</span><br><span class=\"line\">ggplotify::as.ggplot(ggtree(x), angle=-<span class=\"number\">30</span>, scale=<span class=\"number\">.9</span>)</span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&#x27;slanted&#x27;</span>) + coord_flip()</span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&#x27;slanted&#x27;</span>, branch.length=<span class=\"string\">&#x27;none&#x27;</span>) + layout_dendrogram()</span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&#x27;circular&#x27;</span>) + xlim(-<span class=\"number\">10</span>, <span class=\"literal\">NA</span>)</span><br><span class=\"line\">ggtree(tree) + layout_inward_circular()</span><br><span class=\"line\">ggtree(tree) + layout_inward_circular(xlim=<span class=\"number\">15</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/15.png\" class=\"\">\n\n<p>如果是时间范围数据的话，则需要调用参数<code>mrsd</code>（most recent sample data）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, </span><br><span class=\"line\">                          package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\">ggtree(beast_tree, mrsd=<span class=\"string\">&quot;2013-01-01&quot;</span>) + theme_tree2()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16.png\" class=\"\">\n\n<h2 id=\"展示相关元素\"><a href=\"#展示相关元素\" class=\"headerlink\" title=\"展示相关元素\"></a>展示相关元素</h2><h3 id=\"展示进化距离\"><a href=\"#展示进化距离\" class=\"headerlink\" title=\"展示进化距离\"></a>展示进化距离</h3><p>函数<code>geom_treescale()</code>用于展示进化距离。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree) + geom_treescale() + ggtitle(<span class=\"string\">&#x27;默认&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree) + geom_treescale(x=<span class=\"number\">0</span>, y=<span class=\"number\">45</span>, width=<span class=\"number\">1</span>, color=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;设定位置、宽度、颜色&#x27;</span>)</span><br><span class=\"line\">p3 = ggtree(tree) + geom_treescale(fontsize=<span class=\"number\">6</span>, linesize=<span class=\"number\">2</span>, offset=<span class=\"number\">1</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;设定字体大小、线条大小、缩进&#x27;</span>)</span><br><span class=\"line\">p4 = ggtree(tree) + theme_tree2() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;使用内置主题&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4, ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/17.png\" class=\"\">\n\n<h3 id=\"展示-nodes-tips\"><a href=\"#展示-nodes-tips\" class=\"headerlink\" title=\"展示 nodes/tips\"></a>展示<code> nodes/tips</code></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree) + geom_point(aes(shape=isTip, color=isTip), size=<span class=\"number\">3</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;使用geom_point()函数&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- ggtree(tree) + geom_nodepoint(color=<span class=\"string\">&quot;#b5e521&quot;</span>, alpha=<span class=\"number\">1</span>/<span class=\"number\">4</span>, size=<span class=\"number\">10</span>) +</span><br><span class=\"line\">  geom_tippoint(color=<span class=\"string\">&quot;#FDAC4F&quot;</span>, shape=<span class=\"number\">8</span>, size=<span class=\"number\">3</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;使用两个函数&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2, ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18.png\" class=\"\">\n\n<h3 id=\"展示tips的标签\"><a href=\"#展示tips的标签\" class=\"headerlink\" title=\"展示tips的标签\"></a>展示<code>tips</code>的标签</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree) + geom_nodepoint(color=<span class=\"string\">&quot;#b5e521&quot;</span>, alpha=<span class=\"number\">1</span>/<span class=\"number\">4</span>, size=<span class=\"number\">10</span>) +</span><br><span class=\"line\">  geom_tippoint(color=<span class=\"string\">&quot;#FDAC4F&quot;</span>, shape=<span class=\"number\">8</span>, size=<span class=\"number\">3</span>) + </span><br><span class=\"line\">  geom_tiplab(size=<span class=\"number\">3</span>, color=<span class=\"string\">&quot;purple&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) + </span><br><span class=\"line\">  geom_tiplab(aes(angle=angle), color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggtree(tree, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) + </span><br><span class=\"line\">  geom_tiplab(as_ylab=<span class=\"literal\">TRUE</span>, color=<span class=\"string\">&#x27;firebrick&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1, p2,p3, ncol = <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19.png\" class=\"\">\n\n<h3 id=\"展示根节点\"><a href=\"#展示根节点\" class=\"headerlink\" title=\"展示根节点\"></a>展示根节点</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## with root edge = 1</span></span><br><span class=\"line\">tree1 &lt;- read.tree(text=<span class=\"string\">&#x27;((A:1,B:2):3,C:2):1;&#x27;</span>)</span><br><span class=\"line\">p1 = ggtree(tree1) + geom_tiplab() + geom_rootedge() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;有根节点信息&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## without root edge</span></span><br><span class=\"line\">tree2 &lt;- read.tree(text=<span class=\"string\">&#x27;((A:1,B:2):3,C:2);&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;无根节点信息，默认无&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## setting root edge</span></span><br><span class=\"line\">tree2$root.edge &lt;- 2</span><br><span class=\"line\">p3 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;无根节点信息，添加信息&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## specify length of root edge for just plotting</span></span><br><span class=\"line\"><span class=\"comment\">## this will ignore tree$root.edge</span></span><br><span class=\"line\">p4 = ggtree(tree2) + geom_tiplab() + geom_rootedge(rootedge = <span class=\"number\">3</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;无根节点信息，设置信息&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4, ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.png\" class=\"\">\n\n<h3 id=\"上色\"><a href=\"#上色\" class=\"headerlink\" title=\"上色\"></a>上色</h3><p>上色直接是很简单，就像<code>ggplot2</code>那样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggtree(beast_tree, aes(color=rate)) +</span><br><span class=\"line\">  scale_color_continuous(low=<span class=\"string\">&#x27;darkgreen&#x27;</span>, high=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  theme(legend.position=<span class=\"string\">&quot;right&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anole.tree&lt;-read.tree(<span class=\"string\">&quot;http://www.phytools.org/eqg2015/data/anole.tre&quot;</span>)</span><br><span class=\"line\">svl &lt;- read.csv(<span class=\"string\">&quot;http://www.phytools.org/eqg2015/data/svl.csv&quot;</span>,</span><br><span class=\"line\">                row.names=<span class=\"number\">1</span>)</span><br><span class=\"line\">svl &lt;- as.matrix(svl)[,<span class=\"number\">1</span>]</span><br><span class=\"line\">fit &lt;- phytools::fastAnc(anole.tree,svl,vars=<span class=\"literal\">TRUE</span>,CI=<span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">td &lt;- data.frame(node = nodeid(anole.tree, <span class=\"built_in\">names</span>(svl)),</span><br><span class=\"line\">                 trait = svl)</span><br><span class=\"line\">nd &lt;- data.frame(node = <span class=\"built_in\">names</span>(fit$ace), trait = fit$ace)</span><br><span class=\"line\"></span><br><span class=\"line\">d &lt;- rbind(td, nd)</span><br><span class=\"line\">d$node &lt;- <span class=\"built_in\">as.numeric</span>(d$node)</span><br><span class=\"line\">tree &lt;- full_join(anole.tree, d, by = <span class=\"string\">&#x27;node&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggtree(tree, aes(color=trait), layout = <span class=\"string\">&#x27;circular&#x27;</span>, </span><br><span class=\"line\">             ladderize = <span class=\"literal\">FALSE</span>, continuous = <span class=\"literal\">TRUE</span>, size=<span class=\"number\">2</span>) +</span><br><span class=\"line\">  scale_color_gradientn(colours=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;cyan&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>)) +</span><br><span class=\"line\">  geom_tiplab(hjust = -<span class=\"number\">.1</span>) + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">1.2</span>) + </span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.85</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- ggtree(tree, layout=<span class=\"string\">&#x27;circular&#x27;</span>, ladderize = <span class=\"literal\">FALSE</span>, size=<span class=\"number\">2.8</span>) + </span><br><span class=\"line\">  geom_tree(aes(color=trait), continuous=<span class=\"built_in\">T</span>, size=<span class=\"number\">2</span>) +  </span><br><span class=\"line\">  scale_color_gradientn(colours=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;cyan&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>)) +</span><br><span class=\"line\">  geom_tiplab(aes(color=trait), hjust = -<span class=\"number\">.1</span>) + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">1.2</span>) + </span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.85</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1, p2, ncol=<span class=\"number\">2</span>, labels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;分支默认边框&quot;</span>, <span class=\"string\">&quot;分支黑色边框&quot;</span>))    </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/22.png\" class=\"\">\n\n<h3 id=\"对树进行重新标准化\"><a href=\"#对树进行重新标准化\" class=\"headerlink\" title=\"对树进行重新标准化\"></a>对树进行重新标准化</h3><p>多个参数对进化树进行标准化，时间序列相关的参数用<code>msrd</code>，其余的参数可以用<code>branch.length</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(treeio)</span><br><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\">beast_tree</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggtree(beast_tree, mrsd=<span class=\"string\">&#x27;2013-01-01&#x27;</span>) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;时间序列&quot;</span>)</span><br><span class=\"line\">p2 &lt;- ggtree(beast_tree, branch.length=<span class=\"string\">&#x27;rate&#x27;</span>) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;取代速率&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mlcfile &lt;- system.file(<span class=\"string\">&quot;extdata/PAML_Codeml&quot;</span>, <span class=\"string\">&quot;mlc&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">mlc_tree &lt;- read.codeml_mlc(mlcfile)</span><br><span class=\"line\">p3 &lt;- ggtree(mlc_tree) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;单密码子核苷酸取代&quot;</span>)</span><br><span class=\"line\">p4 &lt;- ggtree(mlc_tree, branch.length=<span class=\"string\">&#x27;dN_vs_dS&#x27;</span>) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;dN/dS&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4, ncol = <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/23.png\" class=\"\">\n\n<p>也可以用<code>rescale_tree</code>对树进行标准化：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_tree2 &lt;- rescale_tree(beast_tree, branch.length=<span class=\"string\">&#x27;rate&#x27;</span>)</span><br><span class=\"line\">ggtree(beast_tree2) + theme_tree2()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24.png\" class=\"\">\n\n<h3 id=\"背景色\"><a href=\"#背景色\" class=\"headerlink\" title=\"背景色\"></a>背景色</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">2019</span>)</span><br><span class=\"line\">x &lt;- rtree(<span class=\"number\">30</span>)</span><br><span class=\"line\">p1 = ggtree(x, color=<span class=\"string\">&quot;red&quot;</span>) + theme_tree(<span class=\"string\">&quot;steelblue&quot;</span>)</span><br><span class=\"line\">p2 = ggtree(x, color=<span class=\"string\">&quot;white&quot;</span>) + theme_tree(<span class=\"string\">&quot;black&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2, ncol = <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/25.png\" class=\"\">\n\n<h3 id=\"批量建树\"><a href=\"#批量建树\" class=\"headerlink\" title=\"批量建树\"></a>批量建树</h3><p>批量建树就相当于<code>ggplot2</code>中的分面：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## trees &lt;- lapply(c(10, 20, 40), rtree)</span></span><br><span class=\"line\"><span class=\"comment\">## class(trees) &lt;- &quot;multiPhylo&quot;</span></span><br><span class=\"line\"><span class=\"comment\">## ggtree(trees) + facet_wrap(~.id, scale=&quot;free&quot;) + geom_tiplab()</span></span><br><span class=\"line\"></span><br><span class=\"line\">r8s &lt;- read.r8s(system.file(<span class=\"string\">&quot;extdata/r8s&quot;</span>, <span class=\"string\">&quot;H3_r8s_output.log&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>))</span><br><span class=\"line\">ggtree(r8s) + facet_wrap( ~.id, scale=<span class=\"string\">&quot;free&quot;</span>) + theme_tree2()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/26.png\" class=\"\">\n\n<h1 id=\"进化树注释\"><a href=\"#进化树注释\" class=\"headerlink\" title=\"进化树注释\"></a>进化树注释</h1><h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><p>注释的信息很多，节点的分组、样品来源、基因表达量等都可以作为注释的信息。一个简单的例子：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">treetext = <span class=\"string\">&quot;(((ADH2:0.1[&amp;&amp;NHX:S=human], ADH1:0.11[&amp;&amp;NHX:S=human]):</span></span><br><span class=\"line\"><span class=\"string\">0.05 [&amp;&amp;NHX:S=primates:D=Y:B=100],ADHY:</span></span><br><span class=\"line\"><span class=\"string\">0.1[&amp;&amp;NHX:S=nematode],ADHX:0.12 [&amp;&amp;NHX:S=insect]):</span></span><br><span class=\"line\"><span class=\"string\">0.1[&amp;&amp;NHX:S=metazoa:D=N],(ADH4:0.09[&amp;&amp;NHX:S=yeast],</span></span><br><span class=\"line\"><span class=\"string\">ADH3:0.13[&amp;&amp;NHX:S=yeast], ADH2:0.12[&amp;&amp;NHX:S=yeast],</span></span><br><span class=\"line\"><span class=\"string\">ADH1:0.11[&amp;&amp;NHX:S=yeast]):0.1[&amp;&amp;NHX:S=Fungi])[&amp;&amp;NHX:D=N];&quot;</span></span><br><span class=\"line\">tree &lt;- read.nhx(textConnection(treetext))</span><br><span class=\"line\">ggtree(tree) + geom_tiplab() + </span><br><span class=\"line\">  geom_label(aes(x=branch, label=S), fill=<span class=\"string\">&#x27;lightgreen&#x27;</span>) + </span><br><span class=\"line\">  geom_label(aes(label=D), fill=<span class=\"string\">&#x27;steelblue&#x27;</span>) + </span><br><span class=\"line\">  geom_text(aes(label=B), hjust=-<span class=\"number\">.5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/27.png\" class=\"\">\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28.png\" class=\"\">\n\n<h2 id=\"clade注释\"><a href=\"#clade注释\" class=\"headerlink\" title=\"clade注释\"></a><code>clade</code>注释</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">2015</span>-<span class=\"number\">12</span>-<span class=\"number\">21</span>)</span><br><span class=\"line\">tree &lt;- rtree(<span class=\"number\">30</span>)</span><br><span class=\"line\">p1 &lt;- ggtree(tree) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = p1 + geom_cladelabel(node=<span class=\"number\">45</span>, label=<span class=\"string\">&quot;test label&quot;</span>) +</span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = p1 + geom_cladelabel(node=<span class=\"number\">45</span>, label=<span class=\"string\">&quot;test label&quot;</span>, align=<span class=\"literal\">TRUE</span>,  offset = <span class=\"number\">.2</span>, color=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>, align=<span class=\"literal\">TRUE</span>, offset = <span class=\"number\">.2</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p4 = p1 + geom_cladelabel(node=<span class=\"number\">45</span>, label=<span class=\"string\">&quot;test label&quot;</span>, align=<span class=\"built_in\">T</span>, angle=<span class=\"number\">270</span>, hjust=<span class=\"string\">&#x27;center&#x27;</span>, offset.text=<span class=\"number\">.5</span>, barsize=<span class=\"number\">1.5</span>) +</span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>, align=<span class=\"built_in\">T</span>, angle=<span class=\"number\">45</span>, fontsize=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p5 = p1 + geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>, align=<span class=\"built_in\">T</span>, geom=<span class=\"string\">&#x27;label&#x27;</span>, fill=<span class=\"string\">&#x27;lightblue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p2,p3,p4,p5,ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/29.png\" class=\"\">\n\n<p>同样也适用于无根输出样式，可以根据<code>node</code>的编号，也可以直接用<code>tips</code>的标签（这个是真的赞啊）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>) + </span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">35</span>, label=<span class=\"string\">&quot;test label&quot;</span>, angle=<span class=\"number\">0</span>, </span><br><span class=\"line\">                  fontsize=<span class=\"number\">8</span>, offset=<span class=\"number\">.5</span>, vjust=<span class=\"number\">.5</span>)  + </span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">55</span>, label=<span class=\"string\">&#x27;another clade&#x27;</span>, </span><br><span class=\"line\">                  angle=-<span class=\"number\">95</span>, hjust=<span class=\"number\">.5</span>, fontsize=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggtree(tree) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">6</span>) + </span><br><span class=\"line\">  geom_tiplab() + </span><br><span class=\"line\">  geom_strip(<span class=\"string\">&#x27;t10&#x27;</span>, <span class=\"string\">&#x27;t30&#x27;</span>, barsize=<span class=\"number\">2</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, </span><br><span class=\"line\">             label=<span class=\"string\">&quot;associated taxa&quot;</span>, offset.text=<span class=\"number\">.1</span>) + </span><br><span class=\"line\">  geom_strip(<span class=\"string\">&#x27;t1&#x27;</span>, <span class=\"string\">&#x27;t18&#x27;</span>, barsize=<span class=\"number\">2</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>, </span><br><span class=\"line\">             label = <span class=\"string\">&quot;another label&quot;</span>, offset.text=<span class=\"number\">.1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/30.png\" class=\"\">\n\n<h2 id=\"局部高亮\"><a href=\"#局部高亮\" class=\"headerlink\" title=\"局部高亮\"></a>局部高亮</h2><p>局部高亮可以根据<code>node</code>编号进行高亮，也可以使用附加数据或树数据里面的数据进行高亮：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = ggtree(tree) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">21</span>, fill=<span class=\"string\">&quot;steelblue&quot;</span>, alpha=<span class=\"number\">.6</span>) +</span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">17</span>, fill=<span class=\"string\">&quot;darkgreen&quot;</span>, alpha=<span class=\"number\">.6</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">21</span>, fill=<span class=\"string\">&quot;steelblue&quot;</span>, alpha=<span class=\"number\">.6</span>) +</span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">23</span>, fill=<span class=\"string\">&quot;darkgreen&quot;</span>, alpha=<span class=\"number\">.6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## type can be &#x27;encircle&#x27; or &#x27;rect&#x27;</span></span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">10</span>) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">16</span>, fill=<span class=\"string\">&#x27;darkgreen&#x27;</span>, type=<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ggtree(tree) +</span><br><span class=\"line\">  geom_balance(node=<span class=\"number\">16</span>, fill=<span class=\"string\">&#x27;steelblue&#x27;</span>, color=<span class=\"string\">&#x27;white&#x27;</span>, alpha=<span class=\"number\">0.6</span>, extend=<span class=\"number\">1</span>) +</span><br><span class=\"line\">  geom_balance(node=<span class=\"number\">19</span>, fill=<span class=\"string\">&#x27;darkgreen&#x27;</span>, color=<span class=\"string\">&#x27;white&#x27;</span>, alpha=<span class=\"number\">0.6</span>, extend=<span class=\"number\">1</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## using external data</span></span><br><span class=\"line\">d &lt;- data.frame(node=<span class=\"built_in\">c</span>(<span class=\"number\">17</span>, <span class=\"number\">21</span>), type=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>))</span><br><span class=\"line\">ggtree(tree) + geom_hilight(data=d, aes(node=node, fill=type))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## using data stored in tree object</span></span><br><span class=\"line\">x &lt;- read.nhx(system.file(<span class=\"string\">&quot;extdata/NHX/ADH.nhx&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>))</span><br><span class=\"line\">ggtree(x) + </span><br><span class=\"line\">  geom_hilight(mapping=aes(subset = node %in% <span class=\"built_in\">c</span>(<span class=\"number\">10</span>, <span class=\"number\">12</span>), fill = S)) +</span><br><span class=\"line\">  scale_fill_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;steelblue&quot;</span>, <span class=\"string\">&quot;darkgreen&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/31.png\" class=\"\">\n\n<h2 id=\"高亮不同分组\"><a href=\"#高亮不同分组\" class=\"headerlink\" title=\"高亮不同分组\"></a>高亮不同分组</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mytree &lt;- read.tree(<span class=\"string\">&quot;data/Tree 30.4.19.nwk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define nodes for coloring later on</span></span><br><span class=\"line\">tiplab &lt;- mytree$tip.label</span><br><span class=\"line\">cls &lt;- tiplab[grep(<span class=\"string\">&quot;^ch&quot;</span>, tiplab)] </span><br><span class=\"line\">labeltree &lt;- groupOTU(mytree, cls)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(labeltree, aes(color=group, linetype=group), layout=<span class=\"string\">&quot;circular&quot;</span>) +</span><br><span class=\"line\">    scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;#efad29&quot;</span>, <span class=\"string\">&quot;#63bbd4&quot;</span>)) +</span><br><span class=\"line\">    geom_nodepoint(color=<span class=\"string\">&quot;black&quot;</span>, size=<span class=\"number\">0.1</span>) +</span><br><span class=\"line\">    geom_tiplab(size=<span class=\"number\">2</span>, color=<span class=\"string\">&quot;black&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- flip(p, <span class=\"number\">136</span>, <span class=\"number\">110</span>) %&gt;% </span><br><span class=\"line\">    flip(<span class=\"number\">141</span>, <span class=\"number\">145</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">141</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">142</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">160</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">164</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">131</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Group V and II coloring </span></span><br><span class=\"line\">p3 &lt;- p2 + geom_hilight(node = <span class=\"number\">110</span>, fill = <span class=\"string\">&quot;#229f8a&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.43</span>) +    </span><br><span class=\"line\">    geom_hilight(node = <span class=\"number\">88</span>, fill = <span class=\"string\">&quot;#229f8a&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.445</span>) +</span><br><span class=\"line\">    geom_hilight(node = <span class=\"number\">156</span>, fill = <span class=\"string\">&quot;#229f8a&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.35</span>) +</span><br><span class=\"line\">    geom_hilight(node = <span class=\"number\">136</span>, fill = <span class=\"string\">&quot;#f9311f&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.512</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Putting on a label on the avian specific expansion </span></span><br><span class=\"line\">p4 &lt;- p3 + geom_cladelabel(node = <span class=\"number\">113</span>, label = <span class=\"string\">&quot;Avian-specific expansion&quot;</span>, </span><br><span class=\"line\">                        align = <span class=\"literal\">TRUE</span>, angle = -<span class=\"number\">35</span>, offset.text = <span class=\"number\">0.05</span>, </span><br><span class=\"line\">                        hjust = <span class=\"string\">&quot;center&quot;</span>, fontsize = <span class=\"number\">2</span>,  offset = <span class=\"number\">0.2</span>, barsize = <span class=\"number\">0.2</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">### Adding the bootstrap values with subset used to remove all bootstraps &lt; 50  </span></span><br><span class=\"line\">p5 &lt;- p4 + geom_text2(aes(label=label, </span><br><span class=\"line\">                        subset = !<span class=\"built_in\">is.na</span>(<span class=\"built_in\">as.numeric</span>(label)) &amp; <span class=\"built_in\">as.numeric</span>(label) &gt; <span class=\"number\">50</span>), </span><br><span class=\"line\">                    size = <span class=\"number\">2</span>, color = <span class=\"string\">&quot;black&quot;</span>,nudge_y = <span class=\"number\">0.7</span>, nudge_x = -<span class=\"number\">0.05</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">### Putting labels on the subgroups </span></span><br><span class=\"line\">p6 &lt;- p5 + geom_cladelabel(node = <span class=\"number\">114</span>, label = <span class=\"string\">&quot;Subgroup A&quot;</span>, align = <span class=\"literal\">TRUE</span>, </span><br><span class=\"line\">                        angle = -<span class=\"number\">55</span>, offset.text = <span class=\"number\">.03</span>, hjust = <span class=\"string\">&quot;center&quot;</span>, </span><br><span class=\"line\">                        offset = <span class=\"number\">0.05</span>, barsize = <span class=\"number\">0.2</span>, fontsize = <span class=\"number\">2</span>) +</span><br><span class=\"line\">            geom_cladelabel(node = <span class=\"number\">121</span>, label = <span class=\"string\">&quot;Subgroup B&quot;</span>, align = <span class=\"literal\">TRUE</span>, </span><br><span class=\"line\">                        angle = -<span class=\"number\">15</span>, offset.text = <span class=\"number\">.03</span>, hjust = <span class=\"string\">&quot;center&quot;</span>, </span><br><span class=\"line\">                        offset = <span class=\"number\">0.05</span>, barsize = <span class=\"number\">0.2</span>, fontsize = <span class=\"number\">2</span>) +</span><br><span class=\"line\">            theme(legend.position=<span class=\"string\">&quot;none&quot;</span>, </span><br><span class=\"line\">                plot.margin=grid::unit(<span class=\"built_in\">c</span>(-<span class=\"number\">15</span>,-<span class=\"number\">15</span>,-<span class=\"number\">15</span>,-<span class=\"number\">15</span>), <span class=\"string\">&quot;mm&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">print(p6)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62.png\" class=\"\">\n\n<h2 id=\"样品连接\"><a href=\"#样品连接\" class=\"headerlink\" title=\"样品连接\"></a>样品连接</h2><p>利用函数<code>geom_taxalink()</code>可以实现样品之间的连线，但是只支持有限的几种形式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 &lt;- ggtree(tree) + geom_tiplab() + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;A&#x27;</span>, taxa2=<span class=\"string\">&#x27;E&#x27;</span>) + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;F&#x27;</span>, taxa2=<span class=\"string\">&#x27;K&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&#x27;red&#x27;</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;npc&quot;</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;A&#x27;</span>, taxa2=<span class=\"string\">&#x27;E&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;grey&quot;</span>,alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=<span class=\"number\">0.05</span>,arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;F&#x27;</span>, taxa2=<span class=\"string\">&#x27;K&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&#x27;red&#x27;</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, </span><br><span class=\"line\">                alpha=<span class=\"number\">0.5</span>, offset=<span class=\"number\">0.05</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&quot;L&quot;</span>, taxa2=<span class=\"string\">&quot;M&quot;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;blue&quot;</span>, alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=<span class=\"number\">0.05</span>,hratio=<span class=\"number\">0.8</span>, </span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) + </span><br><span class=\"line\">  geom_tiplab()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># when the tree was created using reverse x, </span></span><br><span class=\"line\"><span class=\"comment\"># we can set outward to FALSE, which will generate the inward curve lines.</span></span><br><span class=\"line\">p3 &lt;- ggtree(tree, layout=<span class=\"string\">&quot;inward_circular&quot;</span>, xlim=<span class=\"number\">150</span>) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;A&#x27;</span>, taxa2=<span class=\"string\">&#x27;E&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;grey&quot;</span>, alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=-<span class=\"number\">0.2</span>, </span><br><span class=\"line\">                outward=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;F&#x27;</span>, taxa2=<span class=\"string\">&#x27;K&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&#x27;red&#x27;</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, </span><br><span class=\"line\">                alpha=<span class=\"number\">0.5</span>, offset=-<span class=\"number\">0.2</span>,</span><br><span class=\"line\">                outward=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&quot;L&quot;</span>, taxa2=<span class=\"string\">&quot;M&quot;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;blue&quot;</span>, alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=-<span class=\"number\">0.2</span>, </span><br><span class=\"line\">                outward=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_tiplab(hjust=<span class=\"number\">1</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">dat &lt;- data.frame(from=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;F&quot;</span>, <span class=\"string\">&quot;L&quot;</span>), </span><br><span class=\"line\">                  to=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;K&quot;</span>, <span class=\"string\">&quot;M&quot;</span>), </span><br><span class=\"line\">                  h=<span class=\"built_in\">c</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0.1</span>), </span><br><span class=\"line\">                  type=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;t1&quot;</span>, <span class=\"string\">&quot;t2&quot;</span>, <span class=\"string\">&quot;t3&quot;</span>), </span><br><span class=\"line\">                  s=<span class=\"built_in\">c</span>(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\">p4 &lt;- ggtree(tree, layout=<span class=\"string\">&quot;inward_circular&quot;</span>, xlim=<span class=\"built_in\">c</span>(<span class=\"number\">150</span>, <span class=\"number\">0</span>)) +</span><br><span class=\"line\">  geom_taxalink(data=dat, </span><br><span class=\"line\">                mapping=aes(taxa1=from, </span><br><span class=\"line\">                            taxa2=to, </span><br><span class=\"line\">                            color=type, </span><br><span class=\"line\">                            size=s), </span><br><span class=\"line\">                ncp=<span class=\"number\">10</span>,</span><br><span class=\"line\">                offset=<span class=\"number\">0.15</span>) + </span><br><span class=\"line\">  geom_tiplab(hjust=<span class=\"number\">1</span>) +</span><br><span class=\"line\">  scale_size_continuous(<span class=\"built_in\">range</span>=<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">3</span>))</span><br><span class=\"line\">cowplot::plot_grid(p1, p2, p3, p4, ncol=<span class=\"number\">2</span>, labels=<span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">4</span>])</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/32.png\" class=\"\">\n\n<h2 id=\"Uncertainty-of-evolutionary-inference\"><a href=\"#Uncertainty-of-evolutionary-inference\" class=\"headerlink\" title=\"Uncertainty of evolutionary inference\"></a>Uncertainty of evolutionary inference</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &lt;- system.file(<span class=\"string\">&quot;extdata/MEGA7&quot;</span>, <span class=\"string\">&quot;mtCDNA_timetree.nex&quot;</span>, package = <span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">x &lt;- read.mega(file)</span><br><span class=\"line\">p1 &lt;- ggtree(x) + geom_range(<span class=\"string\">&#x27;reltime_0.95_CI&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, size=<span class=\"number\">3</span>, alpha=<span class=\"number\">.3</span>)</span><br><span class=\"line\">p2 &lt;- ggtree(x) + geom_range(<span class=\"string\">&#x27;reltime_0.95_CI&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, size=<span class=\"number\">3</span>, alpha=<span class=\"number\">.3</span>, center=<span class=\"string\">&#x27;reltime&#x27;</span>)  </span><br><span class=\"line\">p3 &lt;- p2 + scale_x_range() + theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,ncol = <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/33.png\" class=\"\">\n\n<h2 id=\"其他软件输出的结果\"><a href=\"#其他软件输出的结果\" class=\"headerlink\" title=\"其他软件输出的结果\"></a>其他软件输出的结果</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rstfile &lt;- system.file(<span class=\"string\">&quot;extdata/PAML_Codeml&quot;</span>, <span class=\"string\">&quot;rst&quot;</span>, </span><br><span class=\"line\">                       package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">mlcfile &lt;- system.file(<span class=\"string\">&quot;extdata/PAML_Codeml&quot;</span>, <span class=\"string\">&quot;mlc&quot;</span>, </span><br><span class=\"line\">                       package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ml &lt;- read.codeml(rstfile, mlcfile)</span><br><span class=\"line\">ggtree(ml, aes(color=dN_vs_dS), branch.length=<span class=\"string\">&#x27;dN_vs_dS&#x27;</span>) + </span><br><span class=\"line\">  scale_color_continuous(name=<span class=\"string\">&#x27;dN/dS&#x27;</span>, limits=<span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">1.5</span>),</span><br><span class=\"line\">                         oob=scales::squish,</span><br><span class=\"line\">                         low=<span class=\"string\">&#x27;darkgreen&#x27;</span>, high=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  geom_text(aes(x=branch, label=AA_subs), </span><br><span class=\"line\">            vjust=-<span class=\"number\">.5</span>, color=<span class=\"string\">&#x27;steelblue&#x27;</span>, size=<span class=\"number\">2</span>) +</span><br><span class=\"line\">  theme_tree2(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.9</span>, <span class=\"number\">.3</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/34.png\" class=\"\">\n\n<h2 id=\"放大特定区域\"><a href=\"#放大特定区域\" class=\"headerlink\" title=\"放大特定区域\"></a>放大特定区域</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\">p1 = ggtree(tree) + geom_tiplab()</span><br><span class=\"line\">p2 = viewClade(p, MRCA(p, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;L&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,ncol = <span class=\"number\">2</span>, labels = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;原图&#x27;</span>,<span class=\"string\">&#x27;特定区域&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/35.png\" class=\"\">\n\n<h2 id=\"标准化选中的clade\"><a href=\"#标准化选中的clade\" class=\"headerlink\" title=\"标准化选中的clade\"></a>标准化选中的clade</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree2 &lt;- groupClade(tree, <span class=\"built_in\">c</span>(<span class=\"number\">17</span>, <span class=\"number\">21</span>))</span><br><span class=\"line\">p &lt;- ggtree(tree2, aes(color=group)) + theme(legend.position=<span class=\"string\">&#x27;none&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;firebrick&quot;</span>, <span class=\"string\">&quot;steelblue&quot;</span>))</span><br><span class=\"line\">scaleClade(p, node=<span class=\"number\">17</span>, scale=<span class=\"number\">.1</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/36.png\" class=\"\">\n\n<h2 id=\"隐藏-展示某个clade\"><a href=\"#隐藏-展示某个clade\" class=\"headerlink\" title=\"隐藏/展示某个clade\"></a>隐藏/展示某个clade</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p2 &lt;- p %&gt;% collapse(node=<span class=\"number\">21</span>) + </span><br><span class=\"line\">  geom_point2(aes(subset=(node==<span class=\"number\">21</span>)), shape=<span class=\"number\">21</span>, size=<span class=\"number\">5</span>, fill=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\">p2 &lt;- collapse(p2, node=<span class=\"number\">23</span>) + </span><br><span class=\"line\">  geom_point2(aes(subset=(node==<span class=\"number\">23</span>)), shape=<span class=\"number\">23</span>, size=<span class=\"number\">5</span>, fill=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">print(p2)</span><br><span class=\"line\">expand(p2, node=<span class=\"number\">23</span>) %&gt;% expand(node=<span class=\"number\">21</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/37.png\" class=\"\">\n\n<h2 id=\"利用三角形隐藏-展示某个clade\"><a href=\"#利用三角形隐藏-展示某个clade\" class=\"headerlink\" title=\"利用三角形隐藏/展示某个clade\"></a>利用三角形隐藏/展示某个clade</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p2 &lt;- p + geom_tiplab()</span><br><span class=\"line\">node &lt;- 21</span><br><span class=\"line\">collapse(p2, node, <span class=\"string\">&#x27;max&#x27;</span>) %&gt;% expand(node)</span><br><span class=\"line\">collapse(p2, node, <span class=\"string\">&#x27;min&#x27;</span>) %&gt;% expand(node)</span><br><span class=\"line\">collapse(p2, node, <span class=\"string\">&#x27;mixed&#x27;</span>) %&gt;% expand(node)</span><br><span class=\"line\"></span><br><span class=\"line\">collapse(p, <span class=\"number\">21</span>, <span class=\"string\">&#x27;mixed&#x27;</span>, fill=<span class=\"string\">&#x27;steelblue&#x27;</span>, alpha=<span class=\"number\">.4</span>) %&gt;% </span><br><span class=\"line\">  collapse(<span class=\"number\">23</span>, <span class=\"string\">&#x27;mixed&#x27;</span>, fill=<span class=\"string\">&#x27;firebrick&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">scaleClade(p, <span class=\"number\">23</span>, <span class=\"number\">.2</span>) %&gt;% collapse(<span class=\"number\">23</span>, <span class=\"string\">&#x27;min&#x27;</span>, fill=<span class=\"string\">&quot;darkgreen&quot;</span>)  </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/38.png\" class=\"\">\n\n<h2 id=\"分组Taxa\"><a href=\"#分组Taxa\" class=\"headerlink\" title=\"分组Taxa\"></a>分组Taxa</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggsci)</span><br><span class=\"line\"></span><br><span class=\"line\">data(iris)</span><br><span class=\"line\">rn &lt;- paste0(iris[,<span class=\"number\">5</span>], <span class=\"string\">&quot;_&quot;</span>, <span class=\"number\">1</span>:<span class=\"number\">150</span>)</span><br><span class=\"line\">rownames(iris) &lt;- rn</span><br><span class=\"line\">d_iris &lt;- dist(iris[,-<span class=\"number\">5</span>], method=<span class=\"string\">&quot;man&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">c &lt;- ape::bionj(d_iris)</span><br><span class=\"line\">grp &lt;- <span class=\"built_in\">list</span>(setosa     = rn[<span class=\"number\">1</span>:<span class=\"number\">50</span>],</span><br><span class=\"line\">            versicolor = rn[<span class=\"number\">51</span>:<span class=\"number\">100</span>],</span><br><span class=\"line\">            virginica  = rn[<span class=\"number\">101</span>:<span class=\"number\">150</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">p_iris &lt;- ggtree(tree_iris, layout = <span class=\"string\">&#x27;circular&#x27;</span>, branch.length=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">groupOTU(p_iris, grp, <span class=\"string\">&#x27;group&#x27;</span>) + </span><br><span class=\"line\">  aes(color=group) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  theme(legend.position=<span class=\"string\">&quot;right&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/39.png\" class=\"\">\n\n<p>另外一种方法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree_iris &lt;- groupOTU(tree_iris, grp, <span class=\"string\">&quot;Species&quot;</span>)</span><br><span class=\"line\">ggtree(tree_iris, aes(color=Species), layout = <span class=\"string\">&#x27;circular&#x27;</span>, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) + </span><br><span class=\"line\">  theme(legend.position=<span class=\"string\">&quot;right&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"旋转clade\"><a href=\"#旋转clade\" class=\"headerlink\" title=\"旋转clade\"></a>旋转clade</h2><p>旋转<code>clade</code>有两种方法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 &lt;- p + geom_point2(aes(subset=node==<span class=\"number\">16</span>), color=<span class=\"string\">&#x27;darkgreen&#x27;</span>, size=<span class=\"number\">5</span>)</span><br><span class=\"line\">p2 &lt;- rotate(p1, <span class=\"number\">17</span>) %&gt;% rotate(<span class=\"number\">21</span>) <span class=\"comment\"># 方法1</span></span><br><span class=\"line\">flip(p2, <span class=\"number\">17</span>, <span class=\"number\">21</span>) <span class=\"comment\"># 方法2</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40.png\" class=\"\">\n\n<h2 id=\"外部数据mapping到树上\"><a href=\"#外部数据mapping到树上\" class=\"headerlink\" title=\"外部数据mapping到树上\"></a>外部数据mapping到树上</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggimage)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件下载地址</span></span><br><span class=\"line\"><span class=\"comment\"># https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tree_boots.nwk</span></span><br><span class=\"line\"><span class=\"comment\"># https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tip_data.csv</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">x &lt;- read.tree(<span class=\"string\">&quot;tree_boots.nwk&quot;</span>)</span><br><span class=\"line\">info &lt;- read.csv(<span class=\"string\">&quot;tip_data.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(x) %&lt;+% info + xlim(-<span class=\"number\">.1</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">p2 &lt;- p + geom_tiplab(offset = <span class=\"number\">.6</span>, hjust = <span class=\"number\">.5</span>) +</span><br><span class=\"line\">  geom_tippoint(aes(shape = trophic_habit, color = trophic_habit, size = mass_in_kg)) + </span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&quot;right&quot;</span>) + scale_size_continuous(<span class=\"built_in\">range</span> = <span class=\"built_in\">c</span>(<span class=\"number\">3</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/inode_data.csv</span></span><br><span class=\"line\">d2 &lt;- read.csv(<span class=\"string\">&quot;inode_data.csv&quot;</span>)</span><br><span class=\"line\">p2 %&lt;+% d2 + geom_label(aes(label = vernacularName.y, fill = posterior)) + </span><br><span class=\"line\">  scale_fill_gradientn(colors = RColorBrewer::brewer.pal(<span class=\"number\">3</span>, <span class=\"string\">&quot;YlGnBu&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/41.png\" class=\"\">\n\n<h2 id=\"将SNP数据添加到树上\"><a href=\"#将SNP数据添加到树上\" class=\"headerlink\" title=\"将SNP数据添加到树上\"></a>将SNP数据添加到树上</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\"><span class=\"comment\">## remote_folder &lt;- paste0(&quot;https://raw.githubusercontent.com/katholt/&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">##                         &quot;plotTree/master/tree_example_april2015/&quot;)</span></span><br><span class=\"line\">remote_folder &lt;- <span class=\"string\">&quot;data/tree_example_april2015/&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read the phylogenetic tree</span></span><br><span class=\"line\">tree &lt;- read.tree(paste0(remote_folder, <span class=\"string\">&quot;tree.nwk&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read the sampling information data set</span></span><br><span class=\"line\">info &lt;- read.csv(paste0(remote_folder,<span class=\"string\">&quot;info.csv&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read and process the allele table</span></span><br><span class=\"line\">snps&lt;-read.csv(paste0(remote_folder, <span class=\"string\">&quot;alleles.csv&quot;</span>), header = <span class=\"built_in\">F</span>,</span><br><span class=\"line\">                row.names = <span class=\"number\">1</span>, stringsAsFactor = <span class=\"built_in\">F</span>)</span><br><span class=\"line\">snps_strainCols &lt;- snps[<span class=\"number\">1</span>,] </span><br><span class=\"line\">snps&lt;-snps[-<span class=\"number\">1</span>,] <span class=\"comment\"># drop strain names</span></span><br><span class=\"line\">colnames(snps) &lt;- snps_strainCols</span><br><span class=\"line\"></span><br><span class=\"line\">gapChar &lt;- <span class=\"string\">&quot;?&quot;</span></span><br><span class=\"line\">snp &lt;- t(snps)</span><br><span class=\"line\">lsnp &lt;- apply(snp, <span class=\"number\">1</span>, <span class=\"keyword\">function</span>(x) &#123;</span><br><span class=\"line\">        x != snp[<span class=\"number\">1</span>,] &amp; x != gapChar &amp; snp[<span class=\"number\">1</span>,] != gapChar</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">lsnp &lt;- as.data.frame(lsnp)</span><br><span class=\"line\">lsnp$pos &lt;- <span class=\"built_in\">as.numeric</span>(rownames(lsnp))</span><br><span class=\"line\">lsnp &lt;- tidyr::gather(lsnp, name, value, -pos)</span><br><span class=\"line\">snp_data &lt;- lsnp[lsnp$value, <span class=\"built_in\">c</span>(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;pos&quot;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read the trait data</span></span><br><span class=\"line\">bar_data &lt;- read.csv(paste0(remote_folder, <span class=\"string\">&quot;bar.csv&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## visualize the tree </span></span><br><span class=\"line\">p &lt;- ggtree(tree) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## attach the sampling information data set </span></span><br><span class=\"line\"><span class=\"comment\">## and add symbols colored by location</span></span><br><span class=\"line\">p &lt;- p %&lt;+% info + geom_tippoint(aes(color=location))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## visualize SNP and Trait data using dot and bar charts,</span></span><br><span class=\"line\"><span class=\"comment\">## and align them based on tree structure</span></span><br><span class=\"line\">p + geom_facet(panel = <span class=\"string\">&quot;SNP&quot;</span>, data = snp_data, geom = geom_point, </span><br><span class=\"line\">               mapping=aes(x = pos, color = location), shape = <span class=\"string\">&#x27;|&#x27;</span>) +</span><br><span class=\"line\">    geom_facet(panel = <span class=\"string\">&quot;Trait&quot;</span>, data = bar_data, geom = ggstance::geom_barh, </span><br><span class=\"line\">                aes(x = dummy_bar_value, color = location, fill = location), </span><br><span class=\"line\">                stat = <span class=\"string\">&quot;identity&quot;</span>, width = <span class=\"number\">.6</span>) +</span><br><span class=\"line\">    theme_tree2(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.85</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/42.png\" class=\"\">\n\n<h2 id=\"关联矩阵\"><a href=\"#关联矩阵\" class=\"headerlink\" title=\"关联矩阵\"></a>关联矩阵</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\"></span><br><span class=\"line\">genotype_file &lt;- system.file(<span class=\"string\">&quot;examples/Genotype.txt&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">genotype &lt;- read.table(genotype_file, sep=<span class=\"string\">&quot;\\t&quot;</span>, stringsAsFactor=<span class=\"built_in\">F</span>)</span><br><span class=\"line\">colnames(genotype) &lt;- sub(<span class=\"string\">&quot;\\\\.$&quot;</span>, <span class=\"string\">&quot;&quot;</span>, colnames(genotype))</span><br><span class=\"line\">p &lt;- ggtree(beast_tree, mrsd=<span class=\"string\">&quot;2013-01-01&quot;</span>) + </span><br><span class=\"line\">    geom_treescale(x=<span class=\"number\">2008</span>, y=<span class=\"number\">1</span>, offset=<span class=\"number\">2</span>) + </span><br><span class=\"line\">    geom_tiplab(size=<span class=\"number\">2</span>)</span><br><span class=\"line\">gheatmap(p, genotype, offset=<span class=\"number\">5</span>, width=<span class=\"number\">0.5</span>, font.size=<span class=\"number\">3</span>, </span><br><span class=\"line\">        colnames_angle=-<span class=\"number\">45</span>, hjust=<span class=\"number\">0</span>) +</span><br><span class=\"line\">    scale_fill_manual(breaks=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;HuH3N2&quot;</span>, <span class=\"string\">&quot;pdm&quot;</span>, <span class=\"string\">&quot;trig&quot;</span>), </span><br><span class=\"line\">        values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;steelblue&quot;</span>, <span class=\"string\">&quot;firebrick&quot;</span>, <span class=\"string\">&quot;darkgreen&quot;</span>), name=<span class=\"string\">&quot;genotype&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(beast_tree, mrsd=<span class=\"string\">&quot;2013-01-01&quot;</span>) + </span><br><span class=\"line\">    geom_tiplab(size=<span class=\"number\">2</span>, align=<span class=\"literal\">TRUE</span>, linesize=<span class=\"number\">.5</span>) + </span><br><span class=\"line\">    theme_tree2()</span><br><span class=\"line\">gheatmap(p, genotype, offset=<span class=\"number\">8</span>, width=<span class=\"number\">0.6</span>, </span><br><span class=\"line\">        colnames=<span class=\"literal\">FALSE</span>, legend_title=<span class=\"string\">&quot;genotype&quot;</span>) +</span><br><span class=\"line\">    scale_x_ggtree() + </span><br><span class=\"line\">    scale_y_continuous(expand=<span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">0.3</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/43.png\" class=\"\">\n\n<h2 id=\"关联多个矩阵\"><a href=\"#关联多个矩阵\" class=\"headerlink\" title=\"关联多个矩阵\"></a>关联多个矩阵</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\">circ &lt;- ggtree(tree, layout = <span class=\"string\">&quot;circular&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df &lt;- data.frame(first=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;d&quot;</span>, <span class=\"string\">&quot;d&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;e&quot;</span>, <span class=\"string\">&quot;e&quot;</span>, <span class=\"string\">&quot;f&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;f&quot;</span>),</span><br><span class=\"line\">                 second= <span class=\"built_in\">c</span>(<span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;a&quot;</span>))</span><br><span class=\"line\">rownames(df) &lt;- tree$tip.label</span><br><span class=\"line\"></span><br><span class=\"line\">df2 &lt;- as.data.frame(matrix(rnorm(<span class=\"number\">39</span>), ncol=<span class=\"number\">3</span>))</span><br><span class=\"line\">rownames(df2) &lt;- tree$tip.label</span><br><span class=\"line\">colnames(df2) &lt;- <span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- gheatmap(circ, df, offset=<span class=\"number\">.8</span>, width=<span class=\"number\">.2</span>,</span><br><span class=\"line\">               colnames_angle=<span class=\"number\">95</span>, colnames_offset_y = <span class=\"number\">.25</span>) +</span><br><span class=\"line\">    scale_fill_viridis_d(option=<span class=\"string\">&quot;D&quot;</span>, name=<span class=\"string\">&quot;discrete\\nvalue&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\">p2 &lt;- p1 + new_scale_fill()</span><br><span class=\"line\">gheatmap(p2, df2, offset=<span class=\"number\">15</span>, width=<span class=\"number\">.3</span>,</span><br><span class=\"line\">         colnames_angle=<span class=\"number\">90</span>, colnames_offset_y = <span class=\"number\">.25</span>) +</span><br><span class=\"line\">    scale_fill_viridis_c(option=<span class=\"string\">&quot;A&quot;</span>, name=<span class=\"string\">&quot;continuous\\nvalue&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/44.png\" class=\"\">\n\n<h2 id=\"多序列比对可视化\"><a href=\"#多序列比对可视化\" class=\"headerlink\" title=\"多序列比对可视化\"></a>多序列比对可视化</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree &lt;- read.tree(<span class=\"string\">&quot;data/tree.nwk&quot;</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree) + geom_tiplab(size=<span class=\"number\">3</span>)</span><br><span class=\"line\">msaplot(p, <span class=\"string\">&quot;data/sequence.fasta&quot;</span>, offset=<span class=\"number\">3</span>, width=<span class=\"number\">2</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree, layout=<span class=\"string\">&#x27;circular&#x27;</span>) + </span><br><span class=\"line\">    geom_tiplab(offset=<span class=\"number\">4</span>, align=<span class=\"literal\">TRUE</span>) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">12</span>)</span><br><span class=\"line\">msaplot(p, <span class=\"string\">&quot;data/sequence.fasta&quot;</span>, window=<span class=\"built_in\">c</span>(<span class=\"number\">120</span>, <span class=\"number\">200</span>))  </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/45.png\" class=\"\">\n\n<h2 id=\"拼图\"><a href=\"#拼图\" class=\"headerlink\" title=\"拼图\"></a>拼图</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">set.seed(<span class=\"number\">2019</span>-<span class=\"number\">10</span>-<span class=\"number\">31</span>)</span><br><span class=\"line\">tr &lt;- rtree(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">d1 &lt;- data.frame(</span><br><span class=\"line\">    <span class=\"comment\"># only some labels match</span></span><br><span class=\"line\">    label = <span class=\"built_in\">c</span>(tr$tip.label[sample(<span class=\"number\">5</span>, <span class=\"number\">5</span>)], <span class=\"string\">&quot;A&quot;</span>),</span><br><span class=\"line\">    value = sample(<span class=\"number\">1</span>:<span class=\"number\">6</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">d2 &lt;- data.frame(</span><br><span class=\"line\">    label = <span class=\"built_in\">rep</span>(tr$tip.label, <span class=\"number\">5</span>),</span><br><span class=\"line\">    category = <span class=\"built_in\">rep</span>(<span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">5</span>], each=<span class=\"number\">10</span>),</span><br><span class=\"line\">    value = rnorm(<span class=\"number\">50</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">g &lt;- ggtree(tr) + geom_tiplab(align=<span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggplot(d1, aes(label, value)) + geom_col(aes(fill=label)) + </span><br><span class=\"line\">    geom_text(aes(label=label, y= value+<span class=\"number\">.1</span>)) +</span><br><span class=\"line\">    coord_flip() + theme_tree2() + theme(legend.position=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">p2 &lt;- ggplot(d2, aes(x=category, y=label)) + </span><br><span class=\"line\">    geom_tile(aes(fill=value)) + scale_fill_viridis_c() + </span><br><span class=\"line\">    theme_tree2() </span><br><span class=\"line\">    </span><br><span class=\"line\">cowplot::plot_grid(g, p2, p1, ncol=<span class=\"number\">3</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">library(aplot)</span><br><span class=\"line\">p2 %&gt;% insert_left(g) %&gt;% insert_right(p1, width=<span class=\"number\">.5</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/46.png\" class=\"\">\n\n<h2 id=\"图片注释\"><a href=\"#图片注释\" class=\"headerlink\" title=\"图片注释\"></a>图片注释</h2><p>没能找到图片下载地址，看代码很容易理解：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggimage)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">nwk &lt;- <span class=\"string\">&quot;((((bufonidae, dendrobatidae), ceratophryidae), (centrolenidae, leptodactylidae)), hylidae);&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = read.tree(text = nwk)</span><br><span class=\"line\">ggtree(x) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">7</span>) + ylim(<span class=\"literal\">NA</span>, <span class=\"number\">6.2</span>) +</span><br><span class=\"line\">  geom_tiplab(aes(image=paste0(<span class=\"string\">&quot;img/frogs/&quot;</span>, label, <span class=\"string\">&#x27;.jpg&#x27;</span>)), </span><br><span class=\"line\">              geom=<span class=\"string\">&quot;image&quot;</span>, offset=<span class=\"number\">2</span>, align=<span class=\"number\">2</span>, size=<span class=\"number\">.2</span>)  + </span><br><span class=\"line\">  geom_tiplab(geom=<span class=\"string\">&#x27;label&#x27;</span>, offset=<span class=\"number\">1</span>, hjust=<span class=\"number\">.5</span>) + </span><br><span class=\"line\">  geom_image(x=<span class=\"number\">.8</span>, y=<span class=\"number\">5.5</span>, image=<span class=\"string\">&quot;img/frogs/frog.jpg&quot;</span>, size=<span class=\"number\">.2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47.png\" class=\"\">\n\n<h2 id=\"图标（剪影）注释\"><a href=\"#图标（剪影）注释\" class=\"headerlink\" title=\"图标（剪影）注释\"></a>图标（剪影）注释</h2><p><a href=\"http://phylopic.org/\">PhyloPic</a>提供了1300余种生物剪影，<code>ggtree</code>能够调用这个数据库中的生物图标进行注释，相当于上面的图片。这种情况下绘图稍微有点慢，毕竟这个数据库是国外的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">newick &lt;- <span class=\"string\">&quot;((Pongo_abelii,(Gorilla_gorilla_gorilla,(Pan_paniscus,Pan_troglodytes)Pan,Homo_sapiens)Homininae)Hominidae,Nomascus_leucogenys)Hominoidea;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tree &lt;- read.tree(text=newick)</span><br><span class=\"line\"></span><br><span class=\"line\">d &lt;- ggimage::phylopic_uid(tree$tip.label)</span><br><span class=\"line\">d$body_mass = <span class=\"built_in\">c</span>(<span class=\"number\">52</span>, <span class=\"number\">114</span>, <span class=\"number\">47</span>, <span class=\"number\">45</span>, <span class=\"number\">58</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(tree) %&lt;+% d + </span><br><span class=\"line\">  geom_tiplab(aes(image=uid, colour=body_mass), geom=<span class=\"string\">&quot;phylopic&quot;</span>, offset=<span class=\"number\">2.5</span>) +</span><br><span class=\"line\">  geom_tiplab(aes(label=label), offset = <span class=\"number\">.2</span>) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">7</span>) +</span><br><span class=\"line\">  scale_color_viridis_c()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/48.png\" class=\"\">\n\n<h2 id=\"使用子图进行注释\"><a href=\"#使用子图进行注释\" class=\"headerlink\" title=\"使用子图进行注释\"></a>使用子图进行注释</h2><p>用子图进行注释是通过函数<code>geom_inset()</code>来完成的。</p>\n<h3 id=\"条形图注释\"><a href=\"#条形图注释\" class=\"headerlink\" title=\"条形图注释\"></a>条形图注释</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(phytools)</span><br><span class=\"line\">data(anoletree)</span><br><span class=\"line\">x &lt;- getStates(anoletree,<span class=\"string\">&quot;tips&quot;</span>)</span><br><span class=\"line\">tree &lt;- anoletree</span><br><span class=\"line\"></span><br><span class=\"line\">cols &lt;- setNames(palette()[<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(unique(x))],sort(unique(x)))</span><br><span class=\"line\">fitER &lt;- ape::ace(x,tree,model=<span class=\"string\">&quot;ER&quot;</span>,type=<span class=\"string\">&quot;discrete&quot;</span>)</span><br><span class=\"line\">ancstats &lt;- as.data.frame(fitER$lik.anc)</span><br><span class=\"line\">ancstats$node &lt;- 1:tree$Nnode+Ntip(tree)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## cols parameter indicate which columns store stats</span></span><br><span class=\"line\">bars &lt;- nodebar(ancstats, cols=<span class=\"number\">1</span>:<span class=\"number\">6</span>)</span><br><span class=\"line\">bars &lt;- lapply(bars, <span class=\"keyword\">function</span>(g) g+scale_fill_manual(values = cols))</span><br><span class=\"line\"></span><br><span class=\"line\">tree2 &lt;- full_join(tree, data.frame(label = <span class=\"built_in\">names</span>(x), stat = x ), by = <span class=\"string\">&#x27;label&#x27;</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree2) + geom_tiplab() +</span><br><span class=\"line\">    geom_tippoint(aes(color = stat)) + </span><br><span class=\"line\">    scale_color_manual(values = cols) +</span><br><span class=\"line\">    theme(legend.position = <span class=\"string\">&quot;right&quot;</span>) + </span><br><span class=\"line\">    xlim(<span class=\"literal\">NA</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\">p + geom_inset(bars, width = <span class=\"number\">.08</span>, height = <span class=\"number\">.05</span>, x = <span class=\"string\">&quot;branch&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/49.png\" class=\"\">\n\n<h3 id=\"饼图注释\"><a href=\"#饼图注释\" class=\"headerlink\" title=\"饼图注释\"></a>饼图注释</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(phytools)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">data(anoletree)</span><br><span class=\"line\">x &lt;- getStates(anoletree,<span class=\"string\">&quot;tips&quot;</span>)</span><br><span class=\"line\">tree &lt;- anoletree</span><br><span class=\"line\"></span><br><span class=\"line\">cols &lt;- setNames(palette()[<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(unique(x))],sort(unique(x)))</span><br><span class=\"line\">fitER &lt;- ape::ace(x,tree,model=<span class=\"string\">&quot;ER&quot;</span>,type=<span class=\"string\">&quot;discrete&quot;</span>)</span><br><span class=\"line\">ancstats &lt;- as.data.frame(fitER$lik.anc)</span><br><span class=\"line\">ancstats$node &lt;- 1:tree$Nnode+Ntip(tree)</span><br><span class=\"line\"></span><br><span class=\"line\">pies &lt;- nodepie(ancstats, cols = <span class=\"number\">1</span>:<span class=\"number\">6</span>)</span><br><span class=\"line\">pies &lt;- lapply(pies, <span class=\"keyword\">function</span>(g) g+scale_fill_manual(values = cols))</span><br><span class=\"line\"></span><br><span class=\"line\">tree2 &lt;- full_join(tree, data.frame(label = <span class=\"built_in\">names</span>(x), stat = x ), by = <span class=\"string\">&#x27;label&#x27;</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree2) + geom_tiplab() +</span><br><span class=\"line\">  geom_tippoint(aes(color = stat)) + </span><br><span class=\"line\">  scale_color_manual(values = cols) +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&quot;right&quot;</span>) + </span><br><span class=\"line\">  xlim(<span class=\"literal\">NA</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p + geom_inset(pies, width = <span class=\"number\">.1</span>, height = <span class=\"number\">.1</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/50.png\" class=\"\">\n\n<h3 id=\"多种图像组合注释\"><a href=\"#多种图像组合注释\" class=\"headerlink\" title=\"多种图像组合注释\"></a>多种图像组合注释</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pies_and_bars &lt;- pies</span><br><span class=\"line\">i &lt;- sample(length(pies), 20)</span><br><span class=\"line\">pies_and_bars[i] &lt;- bars[i]</span><br><span class=\"line\">p + geom_inset(pies_and_bars, width=.08, height=.05)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51.png\" class=\"\">\n\n<h2 id=\"Phylomoji注释\"><a href=\"#Phylomoji注释\" class=\"headerlink\" title=\"Phylomoji注释\"></a><code>Phylomoji</code>注释</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"><span class=\"comment\"># install.packages(&#x27;emojifont&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">tt = <span class=\"string\">&#x27;((snail,mushroom),(((sunflower,evergreen_tree),leaves),green_salad));&#x27;</span></span><br><span class=\"line\">tree = read.tree(text = tt)</span><br><span class=\"line\">d &lt;- data.frame(label = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;snail&#x27;</span>,<span class=\"string\">&#x27;mushroom&#x27;</span>, <span class=\"string\">&#x27;sunflower&#x27;</span>,</span><br><span class=\"line\">                          <span class=\"string\">&#x27;evergreen_tree&#x27;</span>,<span class=\"string\">&#x27;leaves&#x27;</span>, <span class=\"string\">&#x27;green_salad&#x27;</span>),</span><br><span class=\"line\">                group = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;animal&#x27;</span>, <span class=\"string\">&#x27;fungi&#x27;</span>, <span class=\"string\">&#x27;flowering plant&#x27;</span>,</span><br><span class=\"line\">                          <span class=\"string\">&#x27;conifers&#x27;</span>, <span class=\"string\">&#x27;ferns&#x27;</span>, <span class=\"string\">&#x27;mosses&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ggtree(tree, linetype = <span class=\"string\">&quot;dashed&quot;</span>, size=<span class=\"number\">1</span>, color=<span class=\"string\">&#x27;firebrick&#x27;</span>) %&lt;+% d + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">4.5</span>) + ylim(<span class=\"number\">0.5</span>, <span class=\"number\">6.5</span>) +</span><br><span class=\"line\">  geom_tiplab(parse=<span class=\"string\">&quot;emoji&quot;</span>, size=<span class=\"number\">15</span>, vjust=<span class=\"number\">.25</span>) +</span><br><span class=\"line\">  geom_tiplab(aes(label = group), geom=<span class=\"string\">&quot;label&quot;</span>, x=<span class=\"number\">3.5</span>, hjust=<span class=\"number\">.5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/52.png\" class=\"\">\n\n<h2 id=\"Emoji注释circular-fan树\"><a href=\"#Emoji注释circular-fan树\" class=\"headerlink\" title=\"Emoji注释circular/fan树\"></a><code>Emoji</code>注释circular/fan树</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p &lt;- ggtree(tree, layout = <span class=\"string\">&quot;circular&quot;</span>, size=<span class=\"number\">1</span>) +  </span><br><span class=\"line\">  geom_tiplab(parse=<span class=\"string\">&quot;emoji&quot;</span>, size=<span class=\"number\">10</span>, vjust=<span class=\"number\">.25</span>)</span><br><span class=\"line\">print(p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## fan layout  </span></span><br><span class=\"line\">p2 &lt;- open_tree(p, angle=<span class=\"number\">200</span>) </span><br><span class=\"line\">print(p2)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 %&gt;% rotate_tree(-<span class=\"number\">90</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/53.png\" class=\"\">\n\n<h2 id=\"Emoji注释clades\"><a href=\"#Emoji注释clades\" class=\"headerlink\" title=\"Emoji注释clades\"></a><code>Emoji</code>注释clades</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">123</span>)</span><br><span class=\"line\">tr &lt;- rtree(<span class=\"number\">30</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ggtree(tr) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">5.2</span>) +</span><br><span class=\"line\">    geom_cladelabel(node=<span class=\"number\">41</span>, label=<span class=\"string\">&quot;chicken&quot;</span>, parse=<span class=\"string\">&quot;emoji&quot;</span>,</span><br><span class=\"line\">                    fontsize=<span class=\"number\">12</span>, align=<span class=\"literal\">TRUE</span>, colour=<span class=\"string\">&quot;firebrick&quot;</span>) +</span><br><span class=\"line\">    geom_cladelabel(node=<span class=\"number\">53</span>, label=<span class=\"string\">&quot;duck&quot;</span>, parse=<span class=\"string\">&quot;emoji&quot;</span>,</span><br><span class=\"line\">                    fontsize=<span class=\"number\">12</span>, align=<span class=\"literal\">TRUE</span>, colour=<span class=\"string\">&quot;steelblue&quot;</span>) +</span><br><span class=\"line\">    geom_cladelabel(node=<span class=\"number\">48</span>, label=<span class=\"string\">&quot;family&quot;</span>, parse=<span class=\"string\">&quot;emoji&quot;</span>,</span><br><span class=\"line\">                    fontsize=<span class=\"number\">12</span>, align=<span class=\"literal\">TRUE</span>, colour=<span class=\"string\">&quot;darkkhaki&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/54.png\" class=\"\">\n\n<h2 id=\"AppleColorEmoji\"><a href=\"#AppleColorEmoji\" class=\"headerlink\" title=\"AppleColorEmoji\"></a><code>AppleColorEmoji</code></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">tree_text &lt;- &quot;(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);&quot;</span><br><span class=\"line\">x &lt;- read.tree(text=tree_text)</span><br><span class=\"line\">library(ggimage)</span><br><span class=\"line\">library(gridSVG)</span><br><span class=\"line\">p &lt;-  ggtree(x, size=2) + geom_tiplab(size=20, parse=&#x27;emoji&#x27;) +</span><br><span class=\"line\">    xlim(NA, 7) + ylim(NA, 8.5) +</span><br><span class=\"line\">    geom_phylopic(image=&quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728&quot;,</span><br><span class=\"line\">                  color=&quot;firebrick&quot;, alpha = .3, size=Inf)</span><br><span class=\"line\"></span><br><span class=\"line\">p</span><br><span class=\"line\">ps = grid.export(&quot;emoji.svg&quot;, addClass=T)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/55.png\" class=\"\">\n\n<h1 id=\"ggtree可视化其他数据\"><a href=\"#ggtree可视化其他数据\" class=\"headerlink\" title=\"ggtree可视化其他数据\"></a><code>ggtree</code>可视化其他数据</h1><p><code>ggtree</code>支持其他的数据类型，比如树状图（更多格式请移步Y叔博客）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hc &lt;- hclust(dist(mtcars))</span><br><span class=\"line\">hc</span><br><span class=\"line\">clus &lt;- cutree(hc, <span class=\"number\">4</span>)</span><br><span class=\"line\">g &lt;- split(<span class=\"built_in\">names</span>(clus), clus)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(hc, linetype=<span class=\"string\">&#x27;dashed&#x27;</span>)</span><br><span class=\"line\">clades &lt;- sapply(g, <span class=\"keyword\">function</span>(n) MRCA(p, n))</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- groupClade(p, clades, group_name=<span class=\"string\">&#x27;subtree&#x27;</span>) + aes(color=subtree)</span><br><span class=\"line\"></span><br><span class=\"line\">d &lt;- data.frame(label = <span class=\"built_in\">names</span>(clus), </span><br><span class=\"line\">                cyl = mtcars[<span class=\"built_in\">names</span>(clus), <span class=\"string\">&quot;cyl&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">p %&lt;+% d + </span><br><span class=\"line\">  layout_dendrogram() + </span><br><span class=\"line\">  geom_tippoint(size=<span class=\"number\">5</span>, shape=<span class=\"number\">21</span>, aes(fill=factor(cyl), x=x+<span class=\"number\">.5</span>), color=<span class=\"string\">&#x27;black&#x27;</span>) + </span><br><span class=\"line\">  geom_tiplab(aes(label=cyl), size=<span class=\"number\">3</span>, hjust=<span class=\"number\">.5</span>, color=<span class=\"string\">&#x27;black&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab(angle=<span class=\"number\">90</span>, hjust=<span class=\"number\">1</span>, offset=-<span class=\"number\">10</span>, show.legend=<span class=\"built_in\">F</span>) + </span><br><span class=\"line\">  scale_color_brewer(palette=<span class=\"string\">&#x27;Set1&#x27;</span>, breaks=<span class=\"number\">1</span>:<span class=\"number\">4</span>) +</span><br><span class=\"line\">  theme_dendrogram(plot.margin=margin(<span class=\"number\">6</span>,<span class=\"number\">6</span>,<span class=\"number\">80</span>,<span class=\"number\">6</span>)) +</span><br><span class=\"line\">  theme(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.9</span>, <span class=\"number\">.6</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/56.png\" class=\"\">\n\n<h1 id=\"ggtree拓展ggtreeExtra\"><a href=\"#ggtree拓展ggtreeExtra\" class=\"headerlink\" title=\"ggtree拓展ggtreeExtra\"></a><code>ggtree</code>拓展<code>ggtreeExtra</code></h1><p><code>ggtreeExtra</code>真的是惊艳到我了，只能献出我的膝盖啊！</p>\n<p><code>ggtree</code>的函数<code>geom_facet()</code>只支持<code>rectangular</code>、 <code>roundrect</code>、 <code>ellipse</code> 及 <code>slanted</code> 这4种输出样式，并不支持在<code>circular</code>、<code>fan</code>及<code>radial</code>这几种输出样式的外环上添加图层，为了解决这个问题，Y叔团队开发了新的R包：<code>ggtreeExtra</code>！</p>\n<h2 id=\"添加微生物组丰度\"><a href=\"#添加微生物组丰度\" class=\"headerlink\" title=\"添加微生物组丰度\"></a>添加微生物组丰度</h2><p><code>ggtree</code>直接支持<code>phyloseq</code>对象，这个对做微生物的来说，简直就是福音啊！</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(phyloseq)</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\"></span><br><span class=\"line\">data(<span class=\"string\">&quot;GlobalPatterns&quot;</span>)</span><br><span class=\"line\">GP &lt;- GlobalPatterns</span><br><span class=\"line\">GP &lt;- prune_taxa(taxa_sums(GP) &gt; <span class=\"number\">600</span>, GP)</span><br><span class=\"line\">sample_data(GP)$human &lt;- get_variable(GP, <span class=\"string\">&quot;SampleType&quot;</span>) %in%</span><br><span class=\"line\">                              <span class=\"built_in\">c</span>(<span class=\"string\">&quot;Feces&quot;</span>, <span class=\"string\">&quot;Skin&quot;</span>)</span><br><span class=\"line\">mergedGP &lt;- merge_samples(GP, <span class=\"string\">&quot;SampleType&quot;</span>)</span><br><span class=\"line\">mergedGP &lt;- rarefy_even_depth(mergedGP,rngseed=<span class=\"number\">394582</span>)</span><br><span class=\"line\">mergedGP &lt;- tax_glom(mergedGP,<span class=\"string\">&quot;Order&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">melt_simple &lt;- psmelt(mergedGP) %&gt;%</span><br><span class=\"line\">               filter(Abundance &lt; <span class=\"number\">120</span>) %&gt;%</span><br><span class=\"line\">               select(OTU, val=Abundance)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(mergedGP, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">10</span>) + </span><br><span class=\"line\">     geom_tippoint(mapping=aes(color=Phylum), </span><br><span class=\"line\">                   size=<span class=\"number\">1.5</span>,</span><br><span class=\"line\">                   show.legend=<span class=\"literal\">FALSE</span>)</span><br><span class=\"line\">p &lt;- rotate_tree(p, -<span class=\"number\">90</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- p +</span><br><span class=\"line\">     geom_fruit(</span><br><span class=\"line\">         data=melt_simple,</span><br><span class=\"line\">         geom=geom_boxplot,</span><br><span class=\"line\">         mapping = aes(</span><br><span class=\"line\">                     y=OTU,</span><br><span class=\"line\">                     x=val,</span><br><span class=\"line\">                     group=label,</span><br><span class=\"line\">                     fill=Phylum,</span><br><span class=\"line\">                   ),</span><br><span class=\"line\">         size=<span class=\"number\">.2</span>,</span><br><span class=\"line\">         outlier.size=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">         outlier.stroke=<span class=\"number\">0.08</span>,</span><br><span class=\"line\">         outlier.shape=<span class=\"number\">21</span>,</span><br><span class=\"line\">         axis.params=<span class=\"built_in\">list</span>(</span><br><span class=\"line\">                         axis       = <span class=\"string\">&quot;x&quot;</span>,</span><br><span class=\"line\">                         text.size  = <span class=\"number\">1.8</span>,</span><br><span class=\"line\">                         hjust      = <span class=\"number\">1</span>,</span><br><span class=\"line\">                         vjust      = <span class=\"number\">0.5</span>,</span><br><span class=\"line\">                         nbreak     = <span class=\"number\">3</span>,</span><br><span class=\"line\">                     ),</span><br><span class=\"line\">         grid.params=<span class=\"built_in\">list</span>()</span><br><span class=\"line\">     ) </span><br><span class=\"line\">     </span><br><span class=\"line\">p &lt;- p +</span><br><span class=\"line\">     scale_fill_discrete(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Phyla&quot;</span>,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.8</span>, keyheight=<span class=\"number\">0.8</span>, ncol=<span class=\"number\">1</span>)</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     theme(</span><br><span class=\"line\">         legend.title=element_text(size=<span class=\"number\">9</span>), <span class=\"comment\"># The title of legend </span></span><br><span class=\"line\">         legend.text=element_text(size=<span class=\"number\">7</span>) <span class=\"comment\"># The label text of legend, the sizes should be adjust with dpi.</span></span><br><span class=\"line\">     )</span><br><span class=\"line\">p</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57.png\" class=\"\">\n\n<h2 id=\"多维数据添加多个图层\"><a href=\"#多维数据添加多个图层\" class=\"headerlink\" title=\"多维数据添加多个图层\"></a>多维数据添加多个图层</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(ggstar)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\"></span><br><span class=\"line\">tree &lt;- read.tree(<span class=\"string\">&quot;data/HMP_tree/hmptree.nwk&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># the abundance and types of microbes</span></span><br><span class=\"line\">dat1 &lt;- read.csv(<span class=\"string\">&quot;data/HMP_tree/tippoint_attr.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># the abundance of microbes at different body sites.</span></span><br><span class=\"line\">dat2 &lt;- read.csv(<span class=\"string\">&quot;data/HMP_tree/ringheatmap_attr.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># the abundance of microbes at the body sites of greatest prevalence.</span></span><br><span class=\"line\">dat3 &lt;- read.csv(<span class=\"string\">&quot;data/HMP_tree/barplot_attr.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adjust the order</span></span><br><span class=\"line\">dat2$Sites &lt;- factor(dat2$Sites, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;Stool (prevalence)&quot;</span>, <span class=\"string\">&quot;Cheek (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Plaque (prevalence)&quot;</span>,<span class=\"string\">&quot;Tongue (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Nose (prevalence)&quot;</span>, <span class=\"string\">&quot;Vagina (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Skin (prevalence)&quot;</span>))</span><br><span class=\"line\">dat3$Sites &lt;- factor(dat3$Sites, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;Stool (prevalence)&quot;</span>, <span class=\"string\">&quot;Cheek (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Plaque (prevalence)&quot;</span>, <span class=\"string\">&quot;Tongue (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Nose (prevalence)&quot;</span>, <span class=\"string\">&quot;Vagina (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Skin (prevalence)&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\"># extract the clade label information. Because some nodes of tree are annotated to genera,</span></span><br><span class=\"line\"><span class=\"comment\"># which can be displayed with high light using ggtree.</span></span><br><span class=\"line\">nodeids &lt;- nodeid(tree, tree$node.label[nchar(tree$node.label)&gt;<span class=\"number\">4</span>])</span><br><span class=\"line\">nodedf &lt;- data.frame(node=nodeids)</span><br><span class=\"line\">nodelab &lt;- gsub(<span class=\"string\">&quot;[\\\\.0-9]&quot;</span>, <span class=\"string\">&quot;&quot;</span>, tree$node.label[nchar(tree$node.label)&gt;<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"comment\"># The layers of clade and hightlight</span></span><br><span class=\"line\">poslist &lt;- <span class=\"built_in\">c</span>(<span class=\"number\">1.6</span>, <span class=\"number\">1.4</span>, <span class=\"number\">1.6</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.25</span>, <span class=\"number\">1.6</span>, <span class=\"number\">1.6</span>, <span class=\"number\">1.2</span>, <span class=\"number\">0.4</span>,</span><br><span class=\"line\">             <span class=\"number\">1.2</span>, <span class=\"number\">1.8</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.6</span>,</span><br><span class=\"line\">             <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.3</span>)</span><br><span class=\"line\">labdf &lt;- data.frame(node=nodeids, label=nodelab, pos=poslist)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The circular layout tree.</span></span><br><span class=\"line\">p &lt;- ggtree(tree, layout=<span class=\"string\">&quot;fan&quot;</span>, size=<span class=\"number\">0.15</span>, open.angle=<span class=\"number\">5</span>) +</span><br><span class=\"line\">     geom_hilight(data=nodedf, mapping=aes(node=node),</span><br><span class=\"line\">                  extendto=<span class=\"number\">6.8</span>, alpha=<span class=\"number\">0.3</span>, fill=<span class=\"string\">&quot;grey&quot;</span>, color=<span class=\"string\">&quot;grey50&quot;</span>,</span><br><span class=\"line\">                  size=<span class=\"number\">0.05</span>) +</span><br><span class=\"line\">     geom_cladelab(data=labdf, </span><br><span class=\"line\">                   mapping=aes(node=node, </span><br><span class=\"line\">                               label=label,</span><br><span class=\"line\">                               offset.text=pos),</span><br><span class=\"line\">                   hjust=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                   angle=<span class=\"string\">&quot;auto&quot;</span>,</span><br><span class=\"line\">                   barsize=<span class=\"literal\">NA</span>,</span><br><span class=\"line\">                   horizontal=<span class=\"literal\">FALSE</span>, </span><br><span class=\"line\">                   fontsize=<span class=\"number\">1.4</span>,</span><br><span class=\"line\">                   fontface=<span class=\"string\">&quot;italic&quot;</span></span><br><span class=\"line\">                   )</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- p %&lt;+% dat1 + geom_star(</span><br><span class=\"line\">                        mapping=aes(fill=Phylum, starshape=Type, size=Size),</span><br><span class=\"line\">                        position=<span class=\"string\">&quot;identity&quot;</span>,starstroke=<span class=\"number\">0.1</span>) +</span><br><span class=\"line\">         scale_fill_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#FFC125&quot;</span>,<span class=\"string\">&quot;#87CEFA&quot;</span>,<span class=\"string\">&quot;#7B68EE&quot;</span>,<span class=\"string\">&quot;#808080&quot;</span>,<span class=\"string\">&quot;#800080&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;#9ACD32&quot;</span>,<span class=\"string\">&quot;#D15FEE&quot;</span>,<span class=\"string\">&quot;#FFC0CB&quot;</span>,<span class=\"string\">&quot;#EE6A50&quot;</span>,<span class=\"string\">&quot;#8DEEEE&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;#006400&quot;</span>,<span class=\"string\">&quot;#800000&quot;</span>,<span class=\"string\">&quot;#B0171F&quot;</span>,<span class=\"string\">&quot;#191970&quot;</span>),</span><br><span class=\"line\">                           guide=guide_legend(keywidth = <span class=\"number\">0.5</span>, keyheight = <span class=\"number\">0.5</span>, order=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                              override.aes=<span class=\"built_in\">list</span>(starshape=<span class=\"number\">15</span>)),</span><br><span class=\"line\">                           na.translate=<span class=\"literal\">FALSE</span>)+</span><br><span class=\"line\">         scale_starshape_manual(values=<span class=\"built_in\">c</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">                                guide=guide_legend(keywidth = <span class=\"number\">0.5</span>, keyheight = <span class=\"number\">0.5</span>, order=<span class=\"number\">2</span>),</span><br><span class=\"line\">                                na.translate=<span class=\"literal\">FALSE</span>)+</span><br><span class=\"line\">         scale_size_continuous(<span class=\"built_in\">range</span> = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>, <span class=\"number\">2.5</span>),</span><br><span class=\"line\">                               guide = guide_legend(keywidth = <span class=\"number\">0.5</span>, keyheight = <span class=\"number\">0.5</span>, order=<span class=\"number\">3</span>,</span><br><span class=\"line\">                                                    override.aes=<span class=\"built_in\">list</span>(starshape=<span class=\"number\">15</span>)))</span><br><span class=\"line\">                                                    </span><br><span class=\"line\">p &lt;- p + new_scale_fill() +</span><br><span class=\"line\">         geom_fruit(data=dat2, geom=geom_tile,</span><br><span class=\"line\">                    mapping=aes(y=ID, x=Sites, alpha=Abundance, fill=Sites),</span><br><span class=\"line\">                    color = <span class=\"string\">&quot;grey50&quot;</span>, offset = <span class=\"number\">0.04</span>,size = <span class=\"number\">0.02</span>)+</span><br><span class=\"line\">         scale_alpha_continuous(<span class=\"built_in\">range</span>=<span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">                             guide=guide_legend(keywidth = <span class=\"number\">0.3</span>, keyheight = <span class=\"number\">0.3</span>, order=<span class=\"number\">5</span>)) +</span><br><span class=\"line\">         geom_fruit(data=dat3, geom=geom_bar,</span><br><span class=\"line\">                    mapping=aes(y=ID, x=HigherAbundance, fill=Sites),</span><br><span class=\"line\">                    pwidth=<span class=\"number\">0.38</span>, </span><br><span class=\"line\">                    orientation=<span class=\"string\">&quot;y&quot;</span>, </span><br><span class=\"line\">                    stat=<span class=\"string\">&quot;identity&quot;</span>,</span><br><span class=\"line\">         ) +</span><br><span class=\"line\">         scale_fill_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#0000FF&quot;</span>,<span class=\"string\">&quot;#FFA500&quot;</span>,<span class=\"string\">&quot;#FF0000&quot;</span>,<span class=\"string\">&quot;#800000&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;#006400&quot;</span>,<span class=\"string\">&quot;#800080&quot;</span>,<span class=\"string\">&quot;#696969&quot;</span>),</span><br><span class=\"line\">                           guide=guide_legend(keywidth = <span class=\"number\">0.3</span>, keyheight = <span class=\"number\">0.3</span>, order=<span class=\"number\">4</span>))+</span><br><span class=\"line\">         geom_treescale(fontsize=<span class=\"number\">2</span>, linesize=<span class=\"number\">0.3</span>, x=<span class=\"number\">4.9</span>, y=<span class=\"number\">0.1</span>) +</span><br><span class=\"line\">         theme(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">0.93</span>, <span class=\"number\">0.5</span>),</span><br><span class=\"line\">               legend.background=element_rect(fill=<span class=\"literal\">NA</span>),</span><br><span class=\"line\">               legend.title=element_text(size=<span class=\"number\">6.5</span>),</span><br><span class=\"line\">               legend.text=element_text(size=<span class=\"number\">4.5</span>),</span><br><span class=\"line\">               legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>),</span><br><span class=\"line\">             )</span><br><span class=\"line\">p</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58.png\" class=\"\">\n\n<p>另外一种输出方式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p + layout_rectangular() + </span><br><span class=\"line\">    theme(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.7</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/59.png\" class=\"\">\n\n<h1 id=\"群体遗学传例子\"><a href=\"#群体遗学传例子\" class=\"headerlink\" title=\"群体遗学传例子\"></a>群体遗学传例子</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(ggstar)</span><br><span class=\"line\"></span><br><span class=\"line\">dat &lt;- read.csv(<span class=\"string\">&quot;data/microreact/Candida_auris/microreact-project-Candidaauris-data.csv&quot;</span>)</span><br><span class=\"line\">tr &lt;- read.tree(<span class=\"string\">&quot;data/microreact/Candida_auris/microreact-project-Candidaauris-tree.nwk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">countries &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&quot;Canada&quot;</span>, <span class=\"string\">&quot;United States&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Colombia&quot;</span>, <span class=\"string\">&quot;Panama&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Venezuela&quot;</span>, <span class=\"string\">&quot;France&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Germany&quot;</span>, <span class=\"string\">&quot;Spain&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;UK&quot;</span>, <span class=\"string\">&quot;India&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Israel&quot;</span>, <span class=\"string\">&quot;Pakistan&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Saudi Arabia&quot;</span>, <span class=\"string\">&quot;United Arab Emirates&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Kenya&quot;</span>, <span class=\"string\">&quot;South Africa&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Japan&quot;</span>, <span class=\"string\">&quot;South Korea&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Australia&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># For the tip points</span></span><br><span class=\"line\">dat1 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;COUNTRY&quot;</span>, <span class=\"string\">&quot;COUNTRY__colour&quot;</span>))</span><br><span class=\"line\">dat1$COUNTRY &lt;- factor(dat1$COUNTRY, levels=countries)</span><br><span class=\"line\">COUNTRYcolors &lt;- dat1[match(countries,dat$COUNTRY),<span class=\"string\">&quot;COUNTRY__colour&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For the heatmap layer</span></span><br><span class=\"line\">dat2 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;FCZ&quot;</span>, <span class=\"string\">&quot;AMB&quot;</span>, <span class=\"string\">&quot;MCF&quot;</span>))</span><br><span class=\"line\">dat2 &lt;- reshape2::melt(dat2,id=<span class=\"string\">&quot;ID&quot;</span>, variable.name=<span class=\"string\">&quot;Antifungal&quot;</span>, value.name=<span class=\"string\">&quot;type&quot;</span>)</span><br><span class=\"line\">dat2$type &lt;- paste(dat2$Antifungal, dat2$type)</span><br><span class=\"line\">dat2$type &lt;- unlist(lapply(dat2$type,</span><br><span class=\"line\">                           <span class=\"keyword\">function</span>(x)ifelse(grepl(<span class=\"string\">&quot;Not_&quot;</span>, x), <span class=\"string\">&quot;Susceptible&quot;</span>, x)))</span><br><span class=\"line\">dat2$Antifungal &lt;- factor(dat2$Antifungal, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;FCZ&quot;</span>, <span class=\"string\">&quot;AMB&quot;</span>, <span class=\"string\">&quot;MCF&quot;</span>))</span><br><span class=\"line\">dat2$type &lt;- factor(dat2$type,</span><br><span class=\"line\">                    levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;FCZ Resistant&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;AMB Resistant&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;MCF Resistant&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;Susceptible&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For the points layer</span></span><br><span class=\"line\">dat3 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;ERG11&quot;</span>, <span class=\"string\">&quot;FKS1&quot;</span>)) %&gt;%</span><br><span class=\"line\">        reshape2::melt(id=<span class=\"string\">&quot;ID&quot;</span>, variable.name=<span class=\"string\">&quot;point&quot;</span>, value.name=<span class=\"string\">&quot;mutation&quot;</span>)</span><br><span class=\"line\">dat3$mutation &lt;- paste(dat3$point, dat3$mutation)</span><br><span class=\"line\">dat3$mutation &lt;- unlist(lapply(dat3$mutation, <span class=\"keyword\">function</span>(x)ifelse(grepl(<span class=\"string\">&quot;WT&quot;</span>,x), <span class=\"literal\">NA</span>,x)))</span><br><span class=\"line\">dat3$mutation &lt;- factor(dat3$mutation, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ERG11 Y132F&quot;</span>, <span class=\"string\">&quot;ERG11 K143R&quot;</span>,</span><br><span class=\"line\">                                                <span class=\"string\">&quot;ERG11 F126L&quot;</span>, <span class=\"string\">&quot;FKS1 S639Y/P/F&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For the clade group</span></span><br><span class=\"line\">dat4 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;CLADE&quot;</span>))</span><br><span class=\"line\">dat4 &lt;- aggregate(.~CLADE, dat4, FUN=paste, collapse=<span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\">clades &lt;- lapply(dat4$ID, <span class=\"keyword\">function</span>(x)&#123;unlist(strsplit(x,split=<span class=\"string\">&quot;,&quot;</span>))&#125;)</span><br><span class=\"line\"><span class=\"built_in\">names</span>(clades) &lt;- dat4$CLADE</span><br><span class=\"line\"></span><br><span class=\"line\">tr &lt;- groupOTU(tr, clades, <span class=\"string\">&quot;Clade&quot;</span>)</span><br><span class=\"line\">Clade &lt;- <span class=\"literal\">NULL</span></span><br><span class=\"line\">p &lt;- ggtree(tr=tr, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">15</span>, size=<span class=\"number\">0.2</span>, aes(colour=Clade)) +</span><br><span class=\"line\">     scale_colour_manual(</span><br><span class=\"line\">         values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>,<span class=\"string\">&quot;#69B920&quot;</span>,<span class=\"string\">&quot;#9C2E88&quot;</span>,<span class=\"string\">&quot;#F74B00&quot;</span>,<span class=\"string\">&quot;#60C3DB&quot;</span>),</span><br><span class=\"line\">         labels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;&quot;</span>,<span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;II&quot;</span>, <span class=\"string\">&quot;III&quot;</span>, <span class=\"string\">&quot;IV&quot;</span>),</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            keyheight=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            order=<span class=\"number\">1</span>,</span><br><span class=\"line\">                            override.aes=<span class=\"built_in\">list</span>(linetype=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;0&quot;</span>=<span class=\"literal\">NA</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade1&quot;</span>=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade2&quot;</span>=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade3&quot;</span>=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade4&quot;</span>=<span class=\"number\">1</span></span><br><span class=\"line\">                                                        )</span><br><span class=\"line\">                                             )</span><br><span class=\"line\">                           )</span><br><span class=\"line\">     ) + </span><br><span class=\"line\">     new_scale_colour()</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- p %&lt;+% dat1 +</span><br><span class=\"line\">     geom_tippoint(aes(colour=COUNTRY),</span><br><span class=\"line\">                   alpha=<span class=\"number\">0</span>) +</span><br><span class=\"line\">     geom_tiplab(aes(colour=COUNTRY),</span><br><span class=\"line\">                   align=<span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">                   linetype=<span class=\"number\">3</span>,</span><br><span class=\"line\">                   size=<span class=\"number\">1</span>,</span><br><span class=\"line\">                   linesize=<span class=\"number\">0.2</span>,</span><br><span class=\"line\">                   show.legend=<span class=\"literal\">FALSE</span></span><br><span class=\"line\">                   ) +</span><br><span class=\"line\">     scale_colour_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Country labels&quot;</span>,</span><br><span class=\"line\">         values=COUNTRYcolors,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            keyheight=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            order=<span class=\"number\">2</span>,</span><br><span class=\"line\">                            override.aes=<span class=\"built_in\">list</span>(size=<span class=\"number\">2</span>,alpha=<span class=\"number\">1</span>))</span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- p1 +</span><br><span class=\"line\">      geom_fruit(</span><br><span class=\"line\">          data=dat2,</span><br><span class=\"line\">          geom=geom_tile,</span><br><span class=\"line\">          mapping=aes(x=Antifungal, y=ID, fill=type),</span><br><span class=\"line\">          width=<span class=\"number\">0.1</span>,</span><br><span class=\"line\">          color=<span class=\"string\">&quot;white&quot;</span>,</span><br><span class=\"line\">          pwidth=<span class=\"number\">0.1</span>,</span><br><span class=\"line\">          offset=<span class=\"number\">0.15</span></span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      scale_fill_manual(</span><br><span class=\"line\">           name=<span class=\"string\">&quot;Antifungal susceptibility&quot;</span>,</span><br><span class=\"line\">           values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#595959&quot;</span>, <span class=\"string\">&quot;#B30000&quot;</span>, <span class=\"string\">&quot;#020099&quot;</span>, <span class=\"string\">&quot;#E6E6E6&quot;</span>),</span><br><span class=\"line\">           na.translate=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">           guide=guide_legend(keywidth=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                              keyheight=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                              order=<span class=\"number\">3</span></span><br><span class=\"line\">                             )</span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      new_scale_fill()</span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;- p2 +</span><br><span class=\"line\">      geom_fruit(</span><br><span class=\"line\">          data=dat3,</span><br><span class=\"line\">          geom=geom_star,</span><br><span class=\"line\">          mapping=aes(x=mutation, y=ID, fill=mutation, starshape=point),</span><br><span class=\"line\">          size=<span class=\"number\">1</span>,</span><br><span class=\"line\">          starstroke=<span class=\"number\">0</span>,</span><br><span class=\"line\">          pwidth=<span class=\"number\">0.1</span>,</span><br><span class=\"line\">          inherit.aes = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">          grid.params=<span class=\"built_in\">list</span>(</span><br><span class=\"line\">                          linetype=<span class=\"number\">3</span>,</span><br><span class=\"line\">                          size=<span class=\"number\">0.2</span></span><br><span class=\"line\">                      )</span><br><span class=\"line\"></span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      scale_fill_manual(</span><br><span class=\"line\">          name=<span class=\"string\">&quot;Point mutations&quot;</span>,</span><br><span class=\"line\">          values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#329901&quot;</span>, <span class=\"string\">&quot;#0600FF&quot;</span>, <span class=\"string\">&quot;#FF0100&quot;</span>, <span class=\"string\">&quot;#9900CC&quot;</span>),</span><br><span class=\"line\">          guide=guide_legend(keywidth=<span class=\"number\">0.5</span>, keyheight=<span class=\"number\">0.5</span>, order=<span class=\"number\">4</span>,</span><br><span class=\"line\">                             override.aes=<span class=\"built_in\">list</span>(starshape=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ERG11 Y132F&quot;</span>=<span class=\"number\">15</span>,</span><br><span class=\"line\">                                                           <span class=\"string\">&quot;ERG11 K143R&quot;</span>=<span class=\"number\">15</span>,</span><br><span class=\"line\">                                                           <span class=\"string\">&quot;ERG11 F126L&quot;</span>=<span class=\"number\">15</span>,</span><br><span class=\"line\">                                                           <span class=\"string\">&quot;FKS1 S639Y/P/F&quot;</span>=<span class=\"number\">1</span>),</span><br><span class=\"line\">                                               size=<span class=\"number\">2</span>)</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">          na.translate=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      scale_starshape_manual(</span><br><span class=\"line\">          values=<span class=\"built_in\">c</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">          guide=<span class=\"string\">&quot;none&quot;</span></span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      theme(</span><br><span class=\"line\">          legend.background=element_rect(fill=<span class=\"literal\">NA</span>),</span><br><span class=\"line\">          legend.title=element_text(size=<span class=\"number\">7</span>), <span class=\"comment\"># The size should be adjusted with different devout.</span></span><br><span class=\"line\">          legend.text=element_text(size=<span class=\"number\">5.5</span>),</span><br><span class=\"line\">          legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>)</span><br><span class=\"line\">      )</span><br><span class=\"line\">p3</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(ggstar)</span><br><span class=\"line\"></span><br><span class=\"line\">tr &lt;- read.tree(<span class=\"string\">&quot;data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-tree.nwk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">metada &lt;- read.csv(<span class=\"string\">&quot;data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-data.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">metadata &lt;- metada %&gt;%</span><br><span class=\"line\">            select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;country&quot;</span>, <span class=\"string\">&quot;country__colour&quot;</span>, <span class=\"string\">&quot;year&quot;</span>, <span class=\"string\">&quot;year__colour&quot;</span>, <span class=\"string\">&quot;haplotype&quot;</span>))</span><br><span class=\"line\">metadata$haplotype &lt;- unlist(lapply(metadata$haplotype, <span class=\"keyword\">function</span>(x)ifelse(nchar(x)&gt;<span class=\"number\">0</span>,x,<span class=\"literal\">NA</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">countrycolors &lt;- metada %&gt;%</span><br><span class=\"line\">                 select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;country&quot;</span>, <span class=\"string\">&quot;country__colour&quot;</span>)) %&gt;%</span><br><span class=\"line\">                 distinct()</span><br><span class=\"line\"></span><br><span class=\"line\">yearcolors &lt;- metada %&gt;%</span><br><span class=\"line\">              select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;year&quot;</span>, <span class=\"string\">&quot;year__colour&quot;</span>)) %&gt;%</span><br><span class=\"line\">              distinct()</span><br><span class=\"line\">yearcolors &lt;- yearcolors[order(yearcolors$year, decreasing=<span class=\"literal\">TRUE</span>),]</span><br><span class=\"line\"></span><br><span class=\"line\">metadata$country &lt;- factor(metadata$country, levels=countrycolors$country)</span><br><span class=\"line\">metadata$year &lt;- factor(metadata$year, levels=yearcolors$year)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(tr, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">15</span>, size=<span class=\"number\">0.1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- p %&lt;+% metadata</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;-p +</span><br><span class=\"line\">     geom_tippoint(</span><br><span class=\"line\">         mapping=aes(colour=country),</span><br><span class=\"line\">         size=<span class=\"number\">1.5</span>,</span><br><span class=\"line\">         stroke=<span class=\"number\">0</span>,</span><br><span class=\"line\">         alpha=<span class=\"number\">0.4</span></span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     scale_colour_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Country&quot;</span>,</span><br><span class=\"line\">         values=countrycolors$country__colour,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                            keyheight=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                            ncol=<span class=\"number\">2</span>,</span><br><span class=\"line\">                            override.aes=<span class=\"built_in\">list</span>(size=<span class=\"number\">2</span>,alpha=<span class=\"number\">1</span>),</span><br><span class=\"line\">                            order=<span class=\"number\">1</span>)</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     theme(</span><br><span class=\"line\">         legend.title=element_text(size=<span class=\"number\">5</span>),</span><br><span class=\"line\">         legend.text=element_text(size=<span class=\"number\">4</span>),</span><br><span class=\"line\">         legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>)</span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;-p1 +</span><br><span class=\"line\">     geom_fruit(</span><br><span class=\"line\">         geom=geom_star,</span><br><span class=\"line\">         mapping=aes(fill=haplotype),</span><br><span class=\"line\">         starshape=<span class=\"number\">26</span>,</span><br><span class=\"line\">         color=<span class=\"literal\">NA</span>,</span><br><span class=\"line\">         size=<span class=\"number\">2</span>,</span><br><span class=\"line\">         starstroke=<span class=\"number\">0</span>,</span><br><span class=\"line\">         offset=<span class=\"number\">0</span>,</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     scale_fill_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Haplotype&quot;</span>,</span><br><span class=\"line\">         values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>),</span><br><span class=\"line\">         guide=guide_legend(</span><br><span class=\"line\">                   keywidth=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                   keyheight=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                   order=<span class=\"number\">3</span></span><br><span class=\"line\">               ),</span><br><span class=\"line\">         na.translate=<span class=\"literal\">FALSE</span></span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;-p2 +</span><br><span class=\"line\">     new_scale_fill() +</span><br><span class=\"line\">     geom_fruit(</span><br><span class=\"line\">         geom=geom_tile,</span><br><span class=\"line\">         mapping=aes(fill=year),</span><br><span class=\"line\">         width=<span class=\"number\">0.002</span>,</span><br><span class=\"line\">         offset=<span class=\"number\">0.1</span></span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     scale_fill_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Year&quot;</span>,</span><br><span class=\"line\">         values=yearcolors$year__colour,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.3</span>, keyheight=<span class=\"number\">0.3</span>, ncol=<span class=\"number\">2</span>, order=<span class=\"number\">2</span>)</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     theme(</span><br><span class=\"line\">           legend.title=element_text(size=<span class=\"number\">6</span>), <span class=\"comment\"># The size should be adjusted with the different devout.</span></span><br><span class=\"line\">           legend.text=element_text(size=<span class=\"number\">4.5</span>),</span><br><span class=\"line\">           legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>)</span><br><span class=\"line\">           )</span><br><span class=\"line\">p3</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61.png\" class=\"\">\n\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1]. Yu G, Smith D K, Zhu H, et al. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data[J]. <em><strong>Methods in Ecology and Evolution</strong></em>, 2017, 8(1): 28-36.</p>\n<p>[2]. <a href=\"https://yulab-smu.top/treedata-book/index.html\">https://yulab-smu.top/treedata-book/index.html</a></p>\n<p>[3]. <a href=\"https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/\">https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/</a></p>\n<p>[4]. <a href=\"https://yulab-smu.top/treedata-book/chapter1.html\">https://yulab-smu.top/treedata-book/chapter1.html</a></p>\n<p>[5]. Wang L G, Lam T T Y, Xu S, et al. Treeio: an R package for phylogenetic tree input and output with richly annotated and associated data[J]. Molecular biology and evolution, 2020, 37(2): 599-603.</p>\n<p>[6]. <a href=\"https://github.com/YuLab-SMU/tidytree\">https://github.com/YuLab-SMU/tidytree</a></p>\n</blockquote>\n<p>交流请联系：</p>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#x40;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#111;&#109;\">&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#x40;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>Y叔的<code>ggtree</code>$^{[1]}$毫无疑问是当前绘制美化系统发育树（下文简称<code>进化树</code>）的最佳工具，一直想学习，","more":"但是都没有真真正正学习过，一是因为网上关于<code>gtree</code>的中文资源较少，另外一个原因是感觉到自己用不上，就没认真学习。春节在家，实在无聊，下定决心学一遍<code>ggtree</code>。下面的内容来自Y叔的博客$^{[2]}$，若有不当之处，恳请批评指正。</p>\n<h1 id=\"关于进化树\"><a href=\"#关于进化树\" class=\"headerlink\" title=\"关于进化树\"></a>关于进化树</h1><h2 id=\"进化树怎么看\"><a href=\"#进化树怎么看\" class=\"headerlink\" title=\"进化树怎么看\"></a>进化树怎么看</h2><p>进化树展示的是进化关系，简单说就是亲缘关系，通常是使用物种的遗传序列（如DNA序列、氨基酸序列等）来构建的。进化树看起来和层次聚类很像，这两者有木有区别呢？Y叔在<code>统计之都</code>上的文章$^{[3]}$是这样描述的：</p>\n<blockquote>\n<p>层次聚类的侧重点在于分类，把距离近的聚在一起。而进化树的构建可以说也是一个聚类过程，但侧重点在于推测进化关系和进化距离 (evolutionary distance)。</p>\n</blockquote>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n<p>上图展示的是典型的系统发育树。图中绿色、蓝色和红色的点都是<code>nodes</code>，也就是节点（个人理解），其中最外层绿色的点表示的是每个<code>sample</code>，这时绿色的点也叫<code>tips</code>；蓝色的点表示的是<code>父节点</code>，也就是从外往内两两<code>sample</code>的共有节点，可以理解成<code>祖先（ancestor）</code>，祖先之间还可以继续往上溯源，最终就汇集到红色的点，这个红色的点也就是<code>root</code>，需要注意的是有根树才具有<code>root</code>节点；横线叫做<code>分支(branches)</code>，这些横线表示的是进化变化（evolutionary changes），线的长短表示的是以时间或遗传变异为单位的进化变化。</p>\n<h2 id=\"进化树数据格式\"><a href=\"#进化树数据格式\" class=\"headerlink\" title=\"进化树数据格式\"></a>进化树数据格式</h2><p>进化树的数据格式有多种，常见的有<code>Newick</code>、<code>NEXUS</code>及<code>Phylip</code>。</p>\n<h3 id=\"Newick格式\"><a href=\"#Newick格式\" class=\"headerlink\" title=\"Newick格式\"></a>Newick格式</h3><p><code>Newick</code>格式是最常见的使用最广泛的进化树数据格式。</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png\" class=\"\">\n\n<p>上图是一个标准的进化树图，其对应的<code>Newick</code>格式为：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((t2:<span class=\"number\">0.04</span>,t1:<span class=\"number\">0.34</span>):<span class=\"number\">0.89</span>,(t5:<span class=\"number\">0.37</span>,(t4:<span class=\"number\">0.03</span>,t3:<span class=\"number\">0.67</span>):<span class=\"number\">0.9</span>):<span class=\"number\">0.59</span>); </span><br></pre></td></tr></table></figure>\n\n<p>数据格式和图是一一对应的，假如我们看图的时候是从外到内，那<code>t3</code>和<code>t4</code>是最近的，在数据中，<code>t3</code>和<code>t4</code>也是在一个括号里面的，数据的最小单位是一对<code>()</code>，就像剥洋葱那样顺着括号一层一层往外剥的时候，就能得到上图的那种样式。冒号后面对应的是横线上的“距离”，父节点的“距离”是两个“子节点”共有的，因此，需要表示“父节点”的“距离”时，需要将“距离”放在“子节点“的括号外。</p>\n<h3 id=\"NEXUS格式\"><a href=\"#NEXUS格式\" class=\"headerlink\" title=\"NEXUS格式\"></a>NEXUS格式</h3><p><code>NEXUS</code>格式是<code>Newick</code>格式的拓展，以<code>blocks</code>为单位将进化树的元素分开。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#NEXUS</span></span><br><span class=\"line\">[R-package APE, Wed Nov  <span class=\"number\">9</span> <span class=\"number\">11</span>:<span class=\"number\">46</span>:<span class=\"number\">32</span> <span class=\"number\">2016</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">BEGIN TAXA;</span><br><span class=\"line\">    DIMENSIONS NTAX = <span class=\"number\">5</span>;</span><br><span class=\"line\">    TAXLABELS</span><br><span class=\"line\">        t5</span><br><span class=\"line\">        t4</span><br><span class=\"line\">        t1</span><br><span class=\"line\">        t2</span><br><span class=\"line\">        t3</span><br><span class=\"line\">    ;</span><br><span class=\"line\">END;</span><br><span class=\"line\">BEGIN TREES;</span><br><span class=\"line\">    TRANSLATE</span><br><span class=\"line\">        <span class=\"number\">1</span>   t5,</span><br><span class=\"line\">        <span class=\"number\">2</span>   t4,</span><br><span class=\"line\">        <span class=\"number\">3</span>   t1,</span><br><span class=\"line\">        <span class=\"number\">4</span>   t2,</span><br><span class=\"line\">        <span class=\"number\">5</span>   t3</span><br><span class=\"line\">    ;</span><br><span class=\"line\">    TREE * UNTITLED = [&amp;R] (<span class=\"number\">1</span>:<span class=\"number\">0.89</span>,((<span class=\"number\">2</span>:<span class=\"number\">0.59</span>,<span class=\"number\">3</span>:<span class=\"number\">0.37</span>):<span class=\"number\">0.34</span>,</span><br><span class=\"line\">    (<span class=\"number\">4</span>:<span class=\"number\">0.03</span>,<span class=\"number\">5</span>:<span class=\"number\">0.67</span>):<span class=\"number\">0.9</span>):<span class=\"number\">0.04</span>);</span><br><span class=\"line\">END;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他格式\"><a href=\"#其他格式\" class=\"headerlink\" title=\"其他格式\"></a>其他格式</h3><p>进化树的存储格式还有很多种，更多请参照Y叔的博客$^{[4]}$。</p>\n<h1 id=\"进化树数据处理\"><a href=\"#进化树数据处理\" class=\"headerlink\" title=\"进化树数据处理\"></a>进化树数据处理</h1><p>进化树数据可以使用<code>treeio</code>$^{[5]}$这个包进行合并等操作，然后可以将其他信息利用<code>tidytree</code>$^{[6]}$这个包将树文件转换成R里面常见的数据框格式，这种格式也可以再次转化成树文件，利用<code>ggtree</code>进行可视化。</p>\n<h2 id=\"phylo对象\"><a href=\"#phylo对象\" class=\"headerlink\" title=\"phylo对象\"></a><code>phylo</code>对象</h2><p><code>phylo</code>格式是R包<code>ape</code>支持的格式，在R中的很多包都依赖于这种格式。<code>tidytree</code>中的函数<code>as_tibble</code>可以将<code>phylo</code>转换成数据框，此时的数据框是个<code>tbl_tree</code>对象。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ape)</span><br><span class=\"line\"></span><br><span class=\"line\">set.seed(<span class=\"number\">2017</span>)</span><br><span class=\"line\">tree &lt;- rtree(<span class=\"number\">4</span>)</span><br><span class=\"line\">tree</span><br></pre></td></tr></table></figure>\n\n<p>此时得到的是<code>phylo</code>对象：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 4 tips and 3 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   t4, t1, t3, t2</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br></pre></td></tr></table></figure>\n\n<p>现在将其转化成数据框：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(tidytree)</span><br><span class=\"line\">x &lt;- as_tibble(tree)</span><br><span class=\"line\">x</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## # A tibble: 7 x 4</span><br><span class=\"line\">##   parent  node branch.length label</span><br><span class=\"line\">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;</span><br><span class=\"line\">## 1      5     1       0.435   t4   </span><br><span class=\"line\">## 2      7     2       0.674   t1   </span><br><span class=\"line\">## 3      7     3       0.00202 t3   </span><br><span class=\"line\">## 4      6     4       0.0251  t2   </span><br><span class=\"line\">## 5      5     5      NA       &lt;NA&gt; </span><br><span class=\"line\">## 6      5     6       0.472   &lt;NA&gt; </span><br><span class=\"line\">## 7      6     7       0.274   &lt;NA&gt;</span><br></pre></td></tr></table></figure>\n\n<p>看图更直观：</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png\" class=\"\">\n\n<p>可以清楚地看到进化树的全部信息，包括父节点、节点、分支长度及<code>tips</code>的标签等。</p>\n<p>使用<code>as.phylo(x)</code>就能将数据框转换成<code>phylo</code>:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">as.phylo(x)</span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 4 tips and 3 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   t4, t1, t3, t2</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br></pre></td></tr></table></figure>\n\n<p>如果此时我们需要添加信息的话，在原始文件上添加信息是比较麻烦的，但是可以团购先构建数据框，然后将两个数据框<code>join</code>在一起就可以了：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">d &lt;- tibble(label = paste0(<span class=\"string\">&#x27;t&#x27;</span>, <span class=\"number\">1</span>:<span class=\"number\">4</span>),</span><br><span class=\"line\">            trait = rnorm(<span class=\"number\">4</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">y &lt;- full_join(x, d, by = <span class=\"string\">&#x27;label&#x27;</span>)</span><br><span class=\"line\">y</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png\" class=\"\">\n\n<h2 id=\"treedata对象\"><a href=\"#treedata对象\" class=\"headerlink\" title=\"treedata对象\"></a><code>treedata</code>对象</h2><p><code>tidytree</code>默认的格式是<code>treedata</code>，函数<code>as.treedata</code>可以将前面的数据框转换成<code>treedata</code>对象：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">as.treedata(y)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## &#x27;treedata&#x27; S4 object&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## ...@ phylo: </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 4 tips and 3 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   t4, t1, t3, t2</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## with the following features available:</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;trait&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<p>同样也可以通过<code>as_tibble</code>将<code>treedata</code>转换成数据框格式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y %&gt;% as.treedata %&gt;% as_tibble</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 7 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##   parent  node branch.length label  trait</span></span><br><span class=\"line\"><span class=\"comment\">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## 1      5     1       0.435   t4     0.943</span></span><br><span class=\"line\"><span class=\"comment\">## 2      7     2       0.674   t1    -0.171</span></span><br><span class=\"line\"><span class=\"comment\">## 3      7     3       0.00202 t3     0.570</span></span><br><span class=\"line\"><span class=\"comment\">## 4      6     4       0.0251  t2    -0.283</span></span><br><span class=\"line\"><span class=\"comment\">## 5      5     5      NA       &lt;NA&gt;  NA    </span></span><br><span class=\"line\"><span class=\"comment\">## 6      5     6       0.472   &lt;NA&gt;  NA    </span></span><br><span class=\"line\"><span class=\"comment\">## 7      6     7       0.274   &lt;NA&gt;  NA</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"树文件融合\"><a href=\"#树文件融合\" class=\"headerlink\" title=\"树文件融合\"></a>树文件融合</h2><p><code>treeio</code>同的函数<code>merge_tree()</code>可以对多个树文件进行合并，原理是以<code>node/branches</code>为`key进行数据合并，如：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(treeio)</span><br><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">rst_file &lt;- system.file(<span class=\"string\">&quot;examples/rst&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">mlc_file &lt;- system.file(<span class=\"string\">&quot;examples/mlc&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\">codeml_tree &lt;- read.codeml(rst_file, mlc_file)</span><br><span class=\"line\"></span><br><span class=\"line\">merged_tree &lt;- merge_tree(beast_tree, codeml_tree)</span><br><span class=\"line\">merged_tree</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## &#x27;treedata&#x27; S4 object that stored information of</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;/home/ygc/R/library/ggtree/examples/MCC_FluA_H3.tree&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;/home/ygc/R/library/ggtree/examples/rst&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;/home/ygc/R/library/ggtree/examples/mlc&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## ...@ phylo: </span></span><br><span class=\"line\"><span class=\"comment\">## Phylogenetic tree with 76 tips and 75 internal nodes.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Tip labels:</span></span><br><span class=\"line\"><span class=\"comment\">##   A/Hokkaido/30-1-a/2013, A/New_York/334/2004, A/New_York/463/2005, A/New_York/452/1999, A/New_York/238/2005, A/New_York/523/1998, ...</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## Rooted; includes branch lengths.</span></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\"><span class=\"comment\">## with the following features available:</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;height&#x27;,   &#x27;height_0.95_HPD&#x27;,  &#x27;height_median&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;height_range&#x27;, &#x27;length&#x27;,   &#x27;length_0.95_HPD&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;length_median&#x27;,    &#x27;length_range&#x27;, &#x27;posterior&#x27;,    &#x27;rate&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;rate_0.95_HPD&#x27;,    &#x27;rate_median&#x27;,  &#x27;rate_range&#x27;,   &#x27;subs&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;AA_subs&#x27;,  &#x27;t&#x27;,    &#x27;N&#x27;,    &#x27;S&#x27;,    &#x27;dN_vs_dS&#x27;, &#x27;dN&#x27;,   &#x27;dS&#x27;,   &#x27;N_x_dN&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">##  &#x27;S_x_dS&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<p>合并后的树文件，除开<code>node</code>和<code>branches</code>外，其余的所有附加信息都变成了变量。</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.png\" class=\"\">\n\n<p>既然是个数据框，那就可以对这些数据进行可视化：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(dplyr)</span><br><span class=\"line\">df &lt;- merged_tree %&gt;% </span><br><span class=\"line\">  as_tibble() %&gt;%</span><br><span class=\"line\">  select(dN_vs_dS, dN, dS, rate) %&gt;%</span><br><span class=\"line\">  subset(dN_vs_dS &gt;=<span class=\"number\">0</span> &amp; dN_vs_dS &lt;= <span class=\"number\">1.5</span>) %&gt;%</span><br><span class=\"line\">  tidyr::gather(type, value, dN_vs_dS:dS)</span><br><span class=\"line\">df$type[df$type == <span class=\"string\">&#x27;dN_vs_dS&#x27;</span>] &lt;- <span class=\"string\">&#x27;dN/dS&#x27;</span></span><br><span class=\"line\">df$type &lt;- factor(df$type, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;dN/dS&quot;</span>, <span class=\"string\">&quot;dN&quot;</span>, <span class=\"string\">&quot;dS&quot;</span>))</span><br><span class=\"line\">ggplot(df, aes(rate, value)) + geom_hex() + </span><br><span class=\"line\">  facet_wrap(~type, scale=<span class=\"string\">&#x27;free_y&#x27;</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.png\" class=\"\">\n\n<p>还可以利用该函数比较不同软件的分析结果：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">phylo &lt;- as.phylo(beast_tree)</span><br><span class=\"line\">N &lt;- Nnode2(phylo)</span><br><span class=\"line\">d &lt;- tibble(node = <span class=\"number\">1</span>:N, fake_trait = rnorm(N), another_trait = runif(N))</span><br><span class=\"line\">fake_tree &lt;- treedata(phylo = phylo, data = d)</span><br><span class=\"line\">triple_tree &lt;- merge_tree(merged_tree, fake_tree)</span><br><span class=\"line\">triple_tree</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"链接外部数据\"><a href=\"#链接外部数据\" class=\"headerlink\" title=\"链接外部数据\"></a>链接外部数据</h2><p>进化树能够展示的东西不仅仅是进化关系，还可以增添许多信息，如基因表达量啥的。<code>treeio</code>的函数<code>full_join()</code>能够通过<code>node</code>或<code>tips</code>进行数据融合：</p>\n<ul>\n<li><p>通过<code>node</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ape)</span><br><span class=\"line\">data(woodmouse)</span><br><span class=\"line\">d &lt;- dist.dna(woodmouse)</span><br><span class=\"line\">tr &lt;- nj(d)</span><br><span class=\"line\">bp &lt;- boot.phylo(tr, </span><br><span class=\"line\">                 woodmouse, </span><br><span class=\"line\">                 <span class=\"keyword\">function</span>(x) nj(dist.dna(x)))</span><br><span class=\"line\"></span><br><span class=\"line\">bp2 &lt;- tibble(node=<span class=\"number\">1</span>:Nnode(tr) + <span class=\"comment\"># 计算父节点数</span></span><br><span class=\"line\">                Ntip(tr), <span class=\"comment\"># 计算tip数</span></span><br><span class=\"line\">              bootstrap = bp)</span><br><span class=\"line\">full_join(tr, bp2, by=<span class=\"string\">&quot;node&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>通过<code>tips</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &lt;- system.file(<span class=\"string\">&quot;extdata/BEAST&quot;</span>, <span class=\"string\">&quot;beast_mcc.tree&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">beast &lt;- read.beast(file)</span><br><span class=\"line\">x &lt;- tibble(label = as.phylo(beast)$tip.label, trait = rnorm(Ntip(beast)))</span><br><span class=\"line\">full_join(beast, x, by=<span class=\"string\">&quot;label&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"如何找到想要的node\"><a href=\"#如何找到想要的node\" class=\"headerlink\" title=\"如何找到想要的node\"></a>如何找到想要的<code>node</code></h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\"></span><br><span class=\"line\">set.seed(<span class=\"number\">1</span>)</span><br><span class=\"line\">tr = rtree(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p  + </span><br><span class=\"line\">  geom_label(aes(x=branch, label=node))+</span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">12</span>, fill=<span class=\"string\">&quot;steelblue&quot;</span>, alpha=<span class=\"number\">.6</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分组\"><a href=\"#分组\" class=\"headerlink\" title=\"分组\"></a>分组</h2><p><code>treeio</code>中的函数 <code>groupOTU()</code> 和 <code>groupClade()</code> 可以用于分组。</p>\n<h3 id=\"groupClade\"><a href=\"#groupClade\" class=\"headerlink\" title=\"groupClade\"></a><code>groupClade</code></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nwk &lt;- <span class=\"string\">&#x27;(((((((A:4,B:4):6,C:5):8,D:6):3,E:21):10,((F:4,G:12):14,H:8):13):13,((I:5,J:2):30,(K:11,L:11):2):17):4,M:56);&#x27;</span></span><br><span class=\"line\">tree &lt;- read.tree(text=nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">groupClade(as_tibble(tree), <span class=\"built_in\">c</span>(<span class=\"number\">17</span>, <span class=\"number\">21</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 25 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##    parent  node branch.length label group</span></span><br><span class=\"line\"><span class=\"comment\">##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;</span></span><br><span class=\"line\"><span class=\"comment\">##  1     20     1             4 A     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  2     20     2             4 B     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  3     19     3             5 C     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  4     18     4             6 D     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  5     17     5            21 E     1    </span></span><br><span class=\"line\"><span class=\"comment\">##  6     22     6             4 F     2    </span></span><br><span class=\"line\"><span class=\"comment\">##  7     22     7            12 G     2    </span></span><br><span class=\"line\"><span class=\"comment\">##  8     21     8             8 H     2    </span></span><br><span class=\"line\"><span class=\"comment\">##  9     24     9             5 I     0    </span></span><br><span class=\"line\"><span class=\"comment\">## 10     24    10             2 J     0    </span></span><br><span class=\"line\"><span class=\"comment\">## # … with 15 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>以<code>node17</code>和<code>node21</code>为界将<code>clade</code>进行分组。这两个函数可以作用于<code>tbl_tree</code>、<code>phylo</code> 、 <code>treedata</code>及 <code>ggtree</code> 这些对象。</p>\n<h3 id=\"groupOTU\"><a href=\"#groupOTU\" class=\"headerlink\" title=\"groupOTU\"></a><code>groupOTU</code></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">2017</span>)</span><br><span class=\"line\">tr &lt;- rtree(<span class=\"number\">4</span>)</span><br><span class=\"line\">x &lt;- as_tibble(tr)</span><br><span class=\"line\"><span class=\"comment\">## 输入的节点可以是节点ID，也可以是Label</span></span><br><span class=\"line\">groupOTU(x, <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;t1&#x27;</span>, <span class=\"string\">&#x27;t4&#x27;</span>), group_name = <span class=\"string\">&quot;fake_group&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 7 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##   parent  node branch.length label fake_group</span></span><br><span class=\"line\"><span class=\"comment\">##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;     </span></span><br><span class=\"line\"><span class=\"comment\">## 1      5     1       0.435   t4    1         </span></span><br><span class=\"line\"><span class=\"comment\">## 2      7     2       0.674   t1    1         </span></span><br><span class=\"line\"><span class=\"comment\">## 3      7     3       0.00202 t3    0         </span></span><br><span class=\"line\"><span class=\"comment\">## 4      6     4       0.0251  t2    0         </span></span><br><span class=\"line\"><span class=\"comment\">## 5      5     5      NA       &lt;NA&gt;  1         </span></span><br><span class=\"line\"><span class=\"comment\">## 6      5     6       0.472   &lt;NA&gt;  1         </span></span><br><span class=\"line\"><span class=\"comment\">## 7      6     7       0.274   &lt;NA&gt;  1</span></span><br></pre></td></tr></table></figure>\n\n<p>更常见的分组方法是直接命名分组：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cls &lt;- <span class=\"built_in\">list</span>(c1=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;D&quot;</span>, <span class=\"string\">&quot;E&quot;</span>),</span><br><span class=\"line\">            c2=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;F&quot;</span>, <span class=\"string\">&quot;G&quot;</span>, <span class=\"string\">&quot;H&quot;</span>),</span><br><span class=\"line\">            c3=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;L&quot;</span>, <span class=\"string\">&quot;K&quot;</span>, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;J&quot;</span>),</span><br><span class=\"line\">            c4=<span class=\"string\">&quot;M&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">as_tibble(tree) %&gt;% groupOTU(cls)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## # A tibble: 25 x 5</span></span><br><span class=\"line\"><span class=\"comment\">##    parent  node branch.length label group</span></span><br><span class=\"line\"><span class=\"comment\">##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt;</span></span><br><span class=\"line\"><span class=\"comment\">##  1     20     1             4 A     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  2     20     2             4 B     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  3     19     3             5 C     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  4     18     4             6 D     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  5     17     5            21 E     c1   </span></span><br><span class=\"line\"><span class=\"comment\">##  6     22     6             4 F     c2   </span></span><br><span class=\"line\"><span class=\"comment\">##  7     22     7            12 G     c2   </span></span><br><span class=\"line\"><span class=\"comment\">##  8     21     8             8 H     c2   </span></span><br><span class=\"line\"><span class=\"comment\">##  9     24     9             5 I     c3   </span></span><br><span class=\"line\"><span class=\"comment\">## 10     24    10             2 J     c3   </span></span><br><span class=\"line\"><span class=\"comment\">## # … with 15 more rows</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新标准化分支\"><a href=\"#重新标准化分支\" class=\"headerlink\" title=\"重新标准化分支\"></a>重新标准化分支</h2><p>不同的进化树可以进行合并，原始的分支长度可能单位不一样，这时候就可以用合并后的其他参数对分支长度进行标准化。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 &lt;- ggtree(merged_tree) + theme_tree2()</span><br><span class=\"line\">p2 &lt;- ggtree(rescale_tree(merged_tree, <span class=\"string\">&#x27;dN&#x27;</span>)) + theme_tree2()</span><br><span class=\"line\">p3 &lt;- ggtree(rescale_tree(merged_tree, <span class=\"string\">&#x27;rate&#x27;</span>)) + theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1, p2, p3, ncol=<span class=\"number\">3</span>, labels = <span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/7.png\" class=\"\">\n\n<p>从上图可以看到的是，三个图的“横坐标”范围不一样，第一个图是原始的分支单位，第二个是以<code>dN</code>进行标准化的结果，第三个是以<code>rate</code>进行标准化的结果。</p>\n<h2 id=\"子集操作\"><a href=\"#子集操作\" class=\"headerlink\" title=\"子集操作\"></a>子集操作</h2><h3 id=\"从树中除去tips\"><a href=\"#从树中除去tips\" class=\"headerlink\" title=\"从树中除去tips\"></a>从树中除去<code>tips</code></h3><p>有些时候出于某些原因（如序列质量、组装质量、比对错误等），我们会将某些<code>tips</code>（样本）从树里面剔除，函数<code>drop.tip()</code>可以实现这一功能：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f &lt;- system.file(<span class=\"string\">&quot;extdata/NHX&quot;</span>, <span class=\"string\">&quot;phyldog.nhx&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">nhx &lt;- read.nhx(f)</span><br><span class=\"line\">to_drop &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&quot;Physonect_sp_@2066767&quot;</span>,</span><br><span class=\"line\">             <span class=\"string\">&quot;Lychnagalma_utricularia@2253871&quot;</span>,</span><br><span class=\"line\">             <span class=\"string\">&quot;Kephyes_ovata@2606431&quot;</span>)</span><br><span class=\"line\">p1 &lt;- ggtree(nhx) + geom_tiplab(aes(color = label %in% to_drop)) +</span><br><span class=\"line\">  scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) + xlim(<span class=\"number\">0</span>, <span class=\"number\">0.8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">nhx_reduced &lt;- drop.tip(as.phylo(nhx), to_drop) <span class=\"comment\"># 发现需要转换成phylo对象才行</span></span><br><span class=\"line\">p2 &lt;- ggtree(nhx_reduced) + geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">0.8</span>)  </span><br><span class=\"line\">cowplot::plot_grid(p1, p2, ncol=<span class=\"number\">2</span>, labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8.png\" class=\"\">\n\n<h3 id=\"根据tips取子集\"><a href=\"#根据tips取子集\" class=\"headerlink\" title=\"根据tips取子集\"></a>根据<code>tips</code>取子集</h3><p>如果一个进化树很复杂的话，要看我们感兴趣的部分就很难，这时候就需要将我们感兴趣的部分提取出来。<code>treeio</code>中的函数<code>tree_subset()</code>能够完成这一功能，即使是提取出来的子集，结构还是和原来的一样，不会发生变化。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = ggtree(beast_tree) + </span><br><span class=\"line\">  geom_tiplab() +  </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;原始树&#x27;</span>) +</span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">40</span>) + theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">tree2 = tree_subset(beast_tree, <span class=\"string\">&quot;A/Swine/HK/168/2012&quot;</span>, levels_back=<span class=\"number\">4</span>)  </span><br><span class=\"line\">p2 &lt;- ggtree(tree2, aes(color=group)) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;取子集&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  geom_tiplab() +  xlim(<span class=\"number\">0</span>, <span class=\"number\">4</span>) + theme_tree2() </span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;- ggtree(tree2, aes(color=group)) +</span><br><span class=\"line\">  geom_tiplab(hjust = -<span class=\"number\">.1</span>) + xlim(<span class=\"number\">0</span>, <span class=\"number\">5</span>) + </span><br><span class=\"line\">  geom_point(aes(fill = rate), shape = <span class=\"number\">21</span>, size = <span class=\"number\">4</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;用rate这个变量控制颜色&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>), guide = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_fill_continuous(low = <span class=\"string\">&#x27;blue&#x27;</span>, high = <span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  theme_tree2() + theme(legend.position = <span class=\"string\">&#x27;right&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p4 &lt;- ggtree(tree2, aes(color=group), </span><br><span class=\"line\">             root.position = as.phylo(tree2)$root.edge) +</span><br><span class=\"line\">  geom_tiplab() + xlim(<span class=\"number\">18</span>, <span class=\"number\">24</span>) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;添加根节点但不显示&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">p5 &lt;- ggtree(tree2, aes(color=group), </span><br><span class=\"line\">             root.position = as.phylo(tree2)$root.edge) +</span><br><span class=\"line\">  geom_rootedge() + geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">40</span>) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;添加根节点且显示&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">plot_grid(p2, p3, p4, p5, ncol=<span class=\"number\">2</span>) %&gt;%</span><br><span class=\"line\">  plot_grid(p1, ., ncol=<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.png\" class=\"\">\n\n<h3 id=\"根据内部节点编号取子集\"><a href=\"#根据内部节点编号取子集\" class=\"headerlink\" title=\"根据内部节点编号取子集\"></a>根据内部节点编号取子集</h3><p>如果我们对特定的进化分支（clade）感兴趣，那也可以通过<code>tree_subset()</code>函数将感兴趣的分支进行放大展示，但是这个时候需要我们知道感兴趣的进化分支所对应的<code>node</code>编号才行。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clade &lt;- tree_subset(beast_tree, node=<span class=\"number\">121</span>, levels_back=<span class=\"number\">0</span>)</span><br><span class=\"line\">clade2 &lt;- tree_subset(beast_tree, node=<span class=\"number\">121</span>, levels_back=<span class=\"number\">2</span>)</span><br><span class=\"line\">p1 &lt;- ggtree(clade) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;感兴趣的整个分支&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">p2 &lt;- ggtree(clade2, aes(color=group)) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;感兴趣的整个分支 + 回退两个节点&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab() + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">8</span>) + scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">library(ape)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">data(chiroptera)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果不知道node的时候，就直接进行匹配</span></span><br><span class=\"line\">nodes &lt;- grep(<span class=\"string\">&quot;Plecotus&quot;</span>, chiroptera$tip.label)</span><br><span class=\"line\">chiroptera &lt;- groupOTU(chiroptera, nodes)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;- ggtree(chiroptera, aes(colour = group)) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;整个进化树中选择感兴趣的整个分支&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&quot;none&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clade &lt;- MRCA(chiroptera, nodes) <span class=\"comment\"># 最近的父节点</span></span><br><span class=\"line\">x &lt;- tree_subset(chiroptera, clade, levels_back = <span class=\"number\">0</span>)</span><br><span class=\"line\">p4 &lt;- ggtree(x) + </span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;感兴趣的特有分支&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab() + xlim(<span class=\"number\">0</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plot_grid(p1, p2, p3, p4,ncol=<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.png\" class=\"\">\n\n<h2 id=\"导出数据\"><a href=\"#导出数据\" class=\"headerlink\" title=\"导出数据\"></a>导出数据</h2><p><code>treeio</code>这个R包可以导出多种格式的文件，这个比较简单，详情参照：<a href=\"https://yulab-smu.top/treedata-book/chapter3.html\">https://yulab-smu.top/treedata-book/chapter3.html</a></p>\n<h1 id=\"进化树可视化\"><a href=\"#进化树可视化\" class=\"headerlink\" title=\"进化树可视化\"></a>进化树可视化</h1><h2 id=\"基础方法\"><a href=\"#基础方法\" class=\"headerlink\" title=\"基础方法\"></a>基础方法</h2><p><code>ggtree</code>对进化树进行可视化的方法有两种：</p>\n<ul>\n<li><code>ggplot()</code> + <code>geom_tree()</code> + <code>theme_tree()</code></li>\n<li><code>ggtree()</code></li>\n</ul>\n<p>第二种方法是第一种方法的“缩写版”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()</span><br><span class=\"line\">ggtree(tree)</span><br></pre></td></tr></table></figure>\n\n<p>这两种方法得到的结果是一样的：</p>\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/11.png\" class=\"\">\n\n<p><code>ggtree</code>支持<code>ggplot2</code>的图形语法，因此，也可以在<code>ggtree</code>中对颜色性状等进行修改：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(tree, aes(x, y)) + geom_tree() + theme_tree()</span><br><span class=\"line\">ggtree(tree)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = ggtree(tree, color=<span class=\"string\">&quot;firebrick&quot;</span>, size=<span class=\"number\">2</span>, linetype=<span class=\"string\">&quot;dotted&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;阶梯化&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree, color=<span class=\"string\">&quot;firebrick&quot;</span>, size=<span class=\"number\">2</span>, linetype=<span class=\"string\">&quot;dotted&quot;</span>, ladderize=<span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;非阶梯化&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2)v</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/12.png\" class=\"\">\n\n<p>可以使用参数<code>branch.length</code>对egde进行标准化，如果参数为<code>none</code>，则是这样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggtree(tree, branch.length=<span class=\"string\">&quot;none&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13.png\" class=\"\">\n\n<h2 id=\"输出样式\"><a href=\"#输出样式\" class=\"headerlink\" title=\"输出样式\"></a>输出样式</h2><p><code>ggtree</code>支持多种输出样式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">set.seed(<span class=\"number\">2017</span>-<span class=\"number\">02</span>-<span class=\"number\">16</span>)</span><br><span class=\"line\">tree &lt;- rtree(<span class=\"number\">50</span>)</span><br><span class=\"line\">p1 = ggtree(tree) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;默认&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree, layout=<span class=\"string\">&quot;roundrect&quot;</span>)  +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;roundrect&#x27;</span>)</span><br><span class=\"line\">p3 = ggtree(tree, layout=<span class=\"string\">&quot;slanted&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;slanted&#x27;</span>)</span><br><span class=\"line\">p4 = ggtree(tree, layout=<span class=\"string\">&quot;ellipse&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;ellipse&#x27;</span>)</span><br><span class=\"line\">p5 = ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;circular&#x27;</span>)</span><br><span class=\"line\">p6 = ggtree(tree, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">120</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;fan&#x27;</span>)</span><br><span class=\"line\">p7 = ggtree(tree, layout=<span class=\"string\">&quot;equal_angle&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;equal_angle&#x27;</span>)</span><br><span class=\"line\">p8 = ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;daylight&#x27;</span>)</span><br><span class=\"line\">p9 = ggtree(tree, branch.length=<span class=\"string\">&#x27;none&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">p10 = ggtree(tree, layout=<span class=\"string\">&quot;ellipse&quot;</span>, branch.length=<span class=\"string\">&quot;none&quot;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;ellipse对齐&#x27;</span>)</span><br><span class=\"line\">p11 = ggtree(tree, branch.length=<span class=\"string\">&#x27;none&#x27;</span>, layout=<span class=\"string\">&#x27;circular&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;circular对齐&#x27;</span>)</span><br><span class=\"line\">p12 = ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;daylight对齐&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12, ncol = <span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/14.png\" class=\"\">\n\n<p>当只是展示树结构而没有分支长度标尺的时候，就用最下面这4种。</p>\n<p>还有其他的多种对齐方式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggtree(tree) + scale_x_reverse()</span><br><span class=\"line\">ggtree(tree) + coord_flip()</span><br><span class=\"line\">ggtree(tree) + layout_dendrogram()</span><br><span class=\"line\">ggplotify::as.ggplot(ggtree(x), angle=-<span class=\"number\">30</span>, scale=<span class=\"number\">.9</span>)</span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&#x27;slanted&#x27;</span>) + coord_flip()</span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&#x27;slanted&#x27;</span>, branch.length=<span class=\"string\">&#x27;none&#x27;</span>) + layout_dendrogram()</span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&#x27;circular&#x27;</span>) + xlim(-<span class=\"number\">10</span>, <span class=\"literal\">NA</span>)</span><br><span class=\"line\">ggtree(tree) + layout_inward_circular()</span><br><span class=\"line\">ggtree(tree) + layout_inward_circular(xlim=<span class=\"number\">15</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/15.png\" class=\"\">\n\n<p>如果是时间范围数据的话，则需要调用参数<code>mrsd</code>（most recent sample data）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, </span><br><span class=\"line\">                          package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\">ggtree(beast_tree, mrsd=<span class=\"string\">&quot;2013-01-01&quot;</span>) + theme_tree2()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16.png\" class=\"\">\n\n<h2 id=\"展示相关元素\"><a href=\"#展示相关元素\" class=\"headerlink\" title=\"展示相关元素\"></a>展示相关元素</h2><h3 id=\"展示进化距离\"><a href=\"#展示进化距离\" class=\"headerlink\" title=\"展示进化距离\"></a>展示进化距离</h3><p>函数<code>geom_treescale()</code>用于展示进化距离。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree) + geom_treescale() + ggtitle(<span class=\"string\">&#x27;默认&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree) + geom_treescale(x=<span class=\"number\">0</span>, y=<span class=\"number\">45</span>, width=<span class=\"number\">1</span>, color=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;设定位置、宽度、颜色&#x27;</span>)</span><br><span class=\"line\">p3 = ggtree(tree) + geom_treescale(fontsize=<span class=\"number\">6</span>, linesize=<span class=\"number\">2</span>, offset=<span class=\"number\">1</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;设定字体大小、线条大小、缩进&#x27;</span>)</span><br><span class=\"line\">p4 = ggtree(tree) + theme_tree2() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;使用内置主题&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4, ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/17.png\" class=\"\">\n\n<h3 id=\"展示-nodes-tips\"><a href=\"#展示-nodes-tips\" class=\"headerlink\" title=\"展示 nodes/tips\"></a>展示<code> nodes/tips</code></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree) + geom_point(aes(shape=isTip, color=isTip), size=<span class=\"number\">3</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;使用geom_point()函数&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- ggtree(tree) + geom_nodepoint(color=<span class=\"string\">&quot;#b5e521&quot;</span>, alpha=<span class=\"number\">1</span>/<span class=\"number\">4</span>, size=<span class=\"number\">10</span>) +</span><br><span class=\"line\">  geom_tippoint(color=<span class=\"string\">&quot;#FDAC4F&quot;</span>, shape=<span class=\"number\">8</span>, size=<span class=\"number\">3</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;使用两个函数&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2, ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18.png\" class=\"\">\n\n<h3 id=\"展示tips的标签\"><a href=\"#展示tips的标签\" class=\"headerlink\" title=\"展示tips的标签\"></a>展示<code>tips</code>的标签</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree) + geom_nodepoint(color=<span class=\"string\">&quot;#b5e521&quot;</span>, alpha=<span class=\"number\">1</span>/<span class=\"number\">4</span>, size=<span class=\"number\">10</span>) +</span><br><span class=\"line\">  geom_tippoint(color=<span class=\"string\">&quot;#FDAC4F&quot;</span>, shape=<span class=\"number\">8</span>, size=<span class=\"number\">3</span>) + </span><br><span class=\"line\">  geom_tiplab(size=<span class=\"number\">3</span>, color=<span class=\"string\">&quot;purple&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) + </span><br><span class=\"line\">  geom_tiplab(aes(angle=angle), color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggtree(tree, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) + </span><br><span class=\"line\">  geom_tiplab(as_ylab=<span class=\"literal\">TRUE</span>, color=<span class=\"string\">&#x27;firebrick&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1, p2,p3, ncol = <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19.png\" class=\"\">\n\n<h3 id=\"展示根节点\"><a href=\"#展示根节点\" class=\"headerlink\" title=\"展示根节点\"></a>展示根节点</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## with root edge = 1</span></span><br><span class=\"line\">tree1 &lt;- read.tree(text=<span class=\"string\">&#x27;((A:1,B:2):3,C:2):1;&#x27;</span>)</span><br><span class=\"line\">p1 = ggtree(tree1) + geom_tiplab() + geom_rootedge() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;有根节点信息&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## without root edge</span></span><br><span class=\"line\">tree2 &lt;- read.tree(text=<span class=\"string\">&#x27;((A:1,B:2):3,C:2);&#x27;</span>)</span><br><span class=\"line\">p2 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;无根节点信息，默认无&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## setting root edge</span></span><br><span class=\"line\">tree2$root.edge &lt;- 2</span><br><span class=\"line\">p3 = ggtree(tree2) + geom_tiplab() + geom_rootedge() +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;无根节点信息，添加信息&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## specify length of root edge for just plotting</span></span><br><span class=\"line\"><span class=\"comment\">## this will ignore tree$root.edge</span></span><br><span class=\"line\">p4 = ggtree(tree2) + geom_tiplab() + geom_rootedge(rootedge = <span class=\"number\">3</span>) +</span><br><span class=\"line\">  ggtitle(<span class=\"string\">&#x27;无根节点信息，设置信息&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4, ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.png\" class=\"\">\n\n<h3 id=\"上色\"><a href=\"#上色\" class=\"headerlink\" title=\"上色\"></a>上色</h3><p>上色直接是很简单，就像<code>ggplot2</code>那样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggtree(beast_tree, aes(color=rate)) +</span><br><span class=\"line\">  scale_color_continuous(low=<span class=\"string\">&#x27;darkgreen&#x27;</span>, high=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  theme(legend.position=<span class=\"string\">&quot;right&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anole.tree&lt;-read.tree(<span class=\"string\">&quot;http://www.phytools.org/eqg2015/data/anole.tre&quot;</span>)</span><br><span class=\"line\">svl &lt;- read.csv(<span class=\"string\">&quot;http://www.phytools.org/eqg2015/data/svl.csv&quot;</span>,</span><br><span class=\"line\">                row.names=<span class=\"number\">1</span>)</span><br><span class=\"line\">svl &lt;- as.matrix(svl)[,<span class=\"number\">1</span>]</span><br><span class=\"line\">fit &lt;- phytools::fastAnc(anole.tree,svl,vars=<span class=\"literal\">TRUE</span>,CI=<span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">td &lt;- data.frame(node = nodeid(anole.tree, <span class=\"built_in\">names</span>(svl)),</span><br><span class=\"line\">                 trait = svl)</span><br><span class=\"line\">nd &lt;- data.frame(node = <span class=\"built_in\">names</span>(fit$ace), trait = fit$ace)</span><br><span class=\"line\"></span><br><span class=\"line\">d &lt;- rbind(td, nd)</span><br><span class=\"line\">d$node &lt;- <span class=\"built_in\">as.numeric</span>(d$node)</span><br><span class=\"line\">tree &lt;- full_join(anole.tree, d, by = <span class=\"string\">&#x27;node&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggtree(tree, aes(color=trait), layout = <span class=\"string\">&#x27;circular&#x27;</span>, </span><br><span class=\"line\">             ladderize = <span class=\"literal\">FALSE</span>, continuous = <span class=\"literal\">TRUE</span>, size=<span class=\"number\">2</span>) +</span><br><span class=\"line\">  scale_color_gradientn(colours=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;cyan&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>)) +</span><br><span class=\"line\">  geom_tiplab(hjust = -<span class=\"number\">.1</span>) + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">1.2</span>) + </span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.85</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- ggtree(tree, layout=<span class=\"string\">&#x27;circular&#x27;</span>, ladderize = <span class=\"literal\">FALSE</span>, size=<span class=\"number\">2.8</span>) + </span><br><span class=\"line\">  geom_tree(aes(color=trait), continuous=<span class=\"built_in\">T</span>, size=<span class=\"number\">2</span>) +  </span><br><span class=\"line\">  scale_color_gradientn(colours=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;cyan&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>)) +</span><br><span class=\"line\">  geom_tiplab(aes(color=trait), hjust = -<span class=\"number\">.1</span>) + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">1.2</span>) + </span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.85</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1, p2, ncol=<span class=\"number\">2</span>, labels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;分支默认边框&quot;</span>, <span class=\"string\">&quot;分支黑色边框&quot;</span>))    </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/22.png\" class=\"\">\n\n<h3 id=\"对树进行重新标准化\"><a href=\"#对树进行重新标准化\" class=\"headerlink\" title=\"对树进行重新标准化\"></a>对树进行重新标准化</h3><p>多个参数对进化树进行标准化，时间序列相关的参数用<code>msrd</code>，其余的参数可以用<code>branch.length</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(treeio)</span><br><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\">beast_tree</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggtree(beast_tree, mrsd=<span class=\"string\">&#x27;2013-01-01&#x27;</span>) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;时间序列&quot;</span>)</span><br><span class=\"line\">p2 &lt;- ggtree(beast_tree, branch.length=<span class=\"string\">&#x27;rate&#x27;</span>) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;取代速率&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mlcfile &lt;- system.file(<span class=\"string\">&quot;extdata/PAML_Codeml&quot;</span>, <span class=\"string\">&quot;mlc&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">mlc_tree &lt;- read.codeml_mlc(mlcfile)</span><br><span class=\"line\">p3 &lt;- ggtree(mlc_tree) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;单密码子核苷酸取代&quot;</span>)</span><br><span class=\"line\">p4 &lt;- ggtree(mlc_tree, branch.length=<span class=\"string\">&#x27;dN_vs_dS&#x27;</span>) + theme_tree2() +</span><br><span class=\"line\">  labs(caption=<span class=\"string\">&quot;dN/dS&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,p4, ncol = <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/23.png\" class=\"\">\n\n<p>也可以用<code>rescale_tree</code>对树进行标准化：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_tree2 &lt;- rescale_tree(beast_tree, branch.length=<span class=\"string\">&#x27;rate&#x27;</span>)</span><br><span class=\"line\">ggtree(beast_tree2) + theme_tree2()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24.png\" class=\"\">\n\n<h3 id=\"背景色\"><a href=\"#背景色\" class=\"headerlink\" title=\"背景色\"></a>背景色</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">2019</span>)</span><br><span class=\"line\">x &lt;- rtree(<span class=\"number\">30</span>)</span><br><span class=\"line\">p1 = ggtree(x, color=<span class=\"string\">&quot;red&quot;</span>) + theme_tree(<span class=\"string\">&quot;steelblue&quot;</span>)</span><br><span class=\"line\">p2 = ggtree(x, color=<span class=\"string\">&quot;white&quot;</span>) + theme_tree(<span class=\"string\">&quot;black&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2, ncol = <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/25.png\" class=\"\">\n\n<h3 id=\"批量建树\"><a href=\"#批量建树\" class=\"headerlink\" title=\"批量建树\"></a>批量建树</h3><p>批量建树就相当于<code>ggplot2</code>中的分面：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## trees &lt;- lapply(c(10, 20, 40), rtree)</span></span><br><span class=\"line\"><span class=\"comment\">## class(trees) &lt;- &quot;multiPhylo&quot;</span></span><br><span class=\"line\"><span class=\"comment\">## ggtree(trees) + facet_wrap(~.id, scale=&quot;free&quot;) + geom_tiplab()</span></span><br><span class=\"line\"></span><br><span class=\"line\">r8s &lt;- read.r8s(system.file(<span class=\"string\">&quot;extdata/r8s&quot;</span>, <span class=\"string\">&quot;H3_r8s_output.log&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>))</span><br><span class=\"line\">ggtree(r8s) + facet_wrap( ~.id, scale=<span class=\"string\">&quot;free&quot;</span>) + theme_tree2()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/26.png\" class=\"\">\n\n<h1 id=\"进化树注释\"><a href=\"#进化树注释\" class=\"headerlink\" title=\"进化树注释\"></a>进化树注释</h1><h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><p>注释的信息很多，节点的分组、样品来源、基因表达量等都可以作为注释的信息。一个简单的例子：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">treetext = <span class=\"string\">&quot;(((ADH2:0.1[&amp;&amp;NHX:S=human], ADH1:0.11[&amp;&amp;NHX:S=human]):</span></span><br><span class=\"line\"><span class=\"string\">0.05 [&amp;&amp;NHX:S=primates:D=Y:B=100],ADHY:</span></span><br><span class=\"line\"><span class=\"string\">0.1[&amp;&amp;NHX:S=nematode],ADHX:0.12 [&amp;&amp;NHX:S=insect]):</span></span><br><span class=\"line\"><span class=\"string\">0.1[&amp;&amp;NHX:S=metazoa:D=N],(ADH4:0.09[&amp;&amp;NHX:S=yeast],</span></span><br><span class=\"line\"><span class=\"string\">ADH3:0.13[&amp;&amp;NHX:S=yeast], ADH2:0.12[&amp;&amp;NHX:S=yeast],</span></span><br><span class=\"line\"><span class=\"string\">ADH1:0.11[&amp;&amp;NHX:S=yeast]):0.1[&amp;&amp;NHX:S=Fungi])[&amp;&amp;NHX:D=N];&quot;</span></span><br><span class=\"line\">tree &lt;- read.nhx(textConnection(treetext))</span><br><span class=\"line\">ggtree(tree) + geom_tiplab() + </span><br><span class=\"line\">  geom_label(aes(x=branch, label=S), fill=<span class=\"string\">&#x27;lightgreen&#x27;</span>) + </span><br><span class=\"line\">  geom_label(aes(label=D), fill=<span class=\"string\">&#x27;steelblue&#x27;</span>) + </span><br><span class=\"line\">  geom_text(aes(label=B), hjust=-<span class=\"number\">.5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/27.png\" class=\"\">\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28.png\" class=\"\">\n\n<h2 id=\"clade注释\"><a href=\"#clade注释\" class=\"headerlink\" title=\"clade注释\"></a><code>clade</code>注释</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">2015</span>-<span class=\"number\">12</span>-<span class=\"number\">21</span>)</span><br><span class=\"line\">tree &lt;- rtree(<span class=\"number\">30</span>)</span><br><span class=\"line\">p1 &lt;- ggtree(tree) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = p1 + geom_cladelabel(node=<span class=\"number\">45</span>, label=<span class=\"string\">&quot;test label&quot;</span>) +</span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = p1 + geom_cladelabel(node=<span class=\"number\">45</span>, label=<span class=\"string\">&quot;test label&quot;</span>, align=<span class=\"literal\">TRUE</span>,  offset = <span class=\"number\">.2</span>, color=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>, align=<span class=\"literal\">TRUE</span>, offset = <span class=\"number\">.2</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p4 = p1 + geom_cladelabel(node=<span class=\"number\">45</span>, label=<span class=\"string\">&quot;test label&quot;</span>, align=<span class=\"built_in\">T</span>, angle=<span class=\"number\">270</span>, hjust=<span class=\"string\">&#x27;center&#x27;</span>, offset.text=<span class=\"number\">.5</span>, barsize=<span class=\"number\">1.5</span>) +</span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>, align=<span class=\"built_in\">T</span>, angle=<span class=\"number\">45</span>, fontsize=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p5 = p1 + geom_cladelabel(node=<span class=\"number\">34</span>, label=<span class=\"string\">&quot;another clade&quot;</span>, align=<span class=\"built_in\">T</span>, geom=<span class=\"string\">&#x27;label&#x27;</span>, fill=<span class=\"string\">&#x27;lightblue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p2,p3,p4,p5,ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/29.png\" class=\"\">\n\n<p>同样也适用于无根输出样式，可以根据<code>node</code>的编号，也可以直接用<code>tips</code>的标签（这个是真的赞啊）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>) + </span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">35</span>, label=<span class=\"string\">&quot;test label&quot;</span>, angle=<span class=\"number\">0</span>, </span><br><span class=\"line\">                  fontsize=<span class=\"number\">8</span>, offset=<span class=\"number\">.5</span>, vjust=<span class=\"number\">.5</span>)  + </span><br><span class=\"line\">  geom_cladelabel(node=<span class=\"number\">55</span>, label=<span class=\"string\">&#x27;another clade&#x27;</span>, </span><br><span class=\"line\">                  angle=-<span class=\"number\">95</span>, hjust=<span class=\"number\">.5</span>, fontsize=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggtree(tree) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">6</span>) + </span><br><span class=\"line\">  geom_tiplab() + </span><br><span class=\"line\">  geom_strip(<span class=\"string\">&#x27;t10&#x27;</span>, <span class=\"string\">&#x27;t30&#x27;</span>, barsize=<span class=\"number\">2</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, </span><br><span class=\"line\">             label=<span class=\"string\">&quot;associated taxa&quot;</span>, offset.text=<span class=\"number\">.1</span>) + </span><br><span class=\"line\">  geom_strip(<span class=\"string\">&#x27;t1&#x27;</span>, <span class=\"string\">&#x27;t18&#x27;</span>, barsize=<span class=\"number\">2</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>, </span><br><span class=\"line\">             label = <span class=\"string\">&quot;another label&quot;</span>, offset.text=<span class=\"number\">.1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,ncol = <span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/30.png\" class=\"\">\n\n<h2 id=\"局部高亮\"><a href=\"#局部高亮\" class=\"headerlink\" title=\"局部高亮\"></a>局部高亮</h2><p>局部高亮可以根据<code>node</code>编号进行高亮，也可以使用附加数据或树数据里面的数据进行高亮：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = ggtree(tree) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">21</span>, fill=<span class=\"string\">&quot;steelblue&quot;</span>, alpha=<span class=\"number\">.6</span>) +</span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">17</span>, fill=<span class=\"string\">&quot;darkgreen&quot;</span>, alpha=<span class=\"number\">.6</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">21</span>, fill=<span class=\"string\">&quot;steelblue&quot;</span>, alpha=<span class=\"number\">.6</span>) +</span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">23</span>, fill=<span class=\"string\">&quot;darkgreen&quot;</span>, alpha=<span class=\"number\">.6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## type can be &#x27;encircle&#x27; or &#x27;rect&#x27;</span></span><br><span class=\"line\">ggtree(tree, layout=<span class=\"string\">&quot;daylight&quot;</span>, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">10</span>) + </span><br><span class=\"line\">  geom_hilight(node=<span class=\"number\">16</span>, fill=<span class=\"string\">&#x27;darkgreen&#x27;</span>, type=<span class=\"string\">&quot;rect&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ggtree(tree) +</span><br><span class=\"line\">  geom_balance(node=<span class=\"number\">16</span>, fill=<span class=\"string\">&#x27;steelblue&#x27;</span>, color=<span class=\"string\">&#x27;white&#x27;</span>, alpha=<span class=\"number\">0.6</span>, extend=<span class=\"number\">1</span>) +</span><br><span class=\"line\">  geom_balance(node=<span class=\"number\">19</span>, fill=<span class=\"string\">&#x27;darkgreen&#x27;</span>, color=<span class=\"string\">&#x27;white&#x27;</span>, alpha=<span class=\"number\">0.6</span>, extend=<span class=\"number\">1</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## using external data</span></span><br><span class=\"line\">d &lt;- data.frame(node=<span class=\"built_in\">c</span>(<span class=\"number\">17</span>, <span class=\"number\">21</span>), type=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>))</span><br><span class=\"line\">ggtree(tree) + geom_hilight(data=d, aes(node=node, fill=type))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## using data stored in tree object</span></span><br><span class=\"line\">x &lt;- read.nhx(system.file(<span class=\"string\">&quot;extdata/NHX/ADH.nhx&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>))</span><br><span class=\"line\">ggtree(x) + </span><br><span class=\"line\">  geom_hilight(mapping=aes(subset = node %in% <span class=\"built_in\">c</span>(<span class=\"number\">10</span>, <span class=\"number\">12</span>), fill = S)) +</span><br><span class=\"line\">  scale_fill_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;steelblue&quot;</span>, <span class=\"string\">&quot;darkgreen&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/31.png\" class=\"\">\n\n<h2 id=\"高亮不同分组\"><a href=\"#高亮不同分组\" class=\"headerlink\" title=\"高亮不同分组\"></a>高亮不同分组</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mytree &lt;- read.tree(<span class=\"string\">&quot;data/Tree 30.4.19.nwk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define nodes for coloring later on</span></span><br><span class=\"line\">tiplab &lt;- mytree$tip.label</span><br><span class=\"line\">cls &lt;- tiplab[grep(<span class=\"string\">&quot;^ch&quot;</span>, tiplab)] </span><br><span class=\"line\">labeltree &lt;- groupOTU(mytree, cls)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(labeltree, aes(color=group, linetype=group), layout=<span class=\"string\">&quot;circular&quot;</span>) +</span><br><span class=\"line\">    scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;#efad29&quot;</span>, <span class=\"string\">&quot;#63bbd4&quot;</span>)) +</span><br><span class=\"line\">    geom_nodepoint(color=<span class=\"string\">&quot;black&quot;</span>, size=<span class=\"number\">0.1</span>) +</span><br><span class=\"line\">    geom_tiplab(size=<span class=\"number\">2</span>, color=<span class=\"string\">&quot;black&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- flip(p, <span class=\"number\">136</span>, <span class=\"number\">110</span>) %&gt;% </span><br><span class=\"line\">    flip(<span class=\"number\">141</span>, <span class=\"number\">145</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">141</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">142</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">160</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">164</span>) %&gt;% </span><br><span class=\"line\">    rotate(<span class=\"number\">131</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Group V and II coloring </span></span><br><span class=\"line\">p3 &lt;- p2 + geom_hilight(node = <span class=\"number\">110</span>, fill = <span class=\"string\">&quot;#229f8a&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.43</span>) +    </span><br><span class=\"line\">    geom_hilight(node = <span class=\"number\">88</span>, fill = <span class=\"string\">&quot;#229f8a&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.445</span>) +</span><br><span class=\"line\">    geom_hilight(node = <span class=\"number\">156</span>, fill = <span class=\"string\">&quot;#229f8a&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.35</span>) +</span><br><span class=\"line\">    geom_hilight(node = <span class=\"number\">136</span>, fill = <span class=\"string\">&quot;#f9311f&quot;</span>, alpha = <span class=\"number\">0.2</span>, extend = <span class=\"number\">0.512</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### Putting on a label on the avian specific expansion </span></span><br><span class=\"line\">p4 &lt;- p3 + geom_cladelabel(node = <span class=\"number\">113</span>, label = <span class=\"string\">&quot;Avian-specific expansion&quot;</span>, </span><br><span class=\"line\">                        align = <span class=\"literal\">TRUE</span>, angle = -<span class=\"number\">35</span>, offset.text = <span class=\"number\">0.05</span>, </span><br><span class=\"line\">                        hjust = <span class=\"string\">&quot;center&quot;</span>, fontsize = <span class=\"number\">2</span>,  offset = <span class=\"number\">0.2</span>, barsize = <span class=\"number\">0.2</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">### Adding the bootstrap values with subset used to remove all bootstraps &lt; 50  </span></span><br><span class=\"line\">p5 &lt;- p4 + geom_text2(aes(label=label, </span><br><span class=\"line\">                        subset = !<span class=\"built_in\">is.na</span>(<span class=\"built_in\">as.numeric</span>(label)) &amp; <span class=\"built_in\">as.numeric</span>(label) &gt; <span class=\"number\">50</span>), </span><br><span class=\"line\">                    size = <span class=\"number\">2</span>, color = <span class=\"string\">&quot;black&quot;</span>,nudge_y = <span class=\"number\">0.7</span>, nudge_x = -<span class=\"number\">0.05</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">### Putting labels on the subgroups </span></span><br><span class=\"line\">p6 &lt;- p5 + geom_cladelabel(node = <span class=\"number\">114</span>, label = <span class=\"string\">&quot;Subgroup A&quot;</span>, align = <span class=\"literal\">TRUE</span>, </span><br><span class=\"line\">                        angle = -<span class=\"number\">55</span>, offset.text = <span class=\"number\">.03</span>, hjust = <span class=\"string\">&quot;center&quot;</span>, </span><br><span class=\"line\">                        offset = <span class=\"number\">0.05</span>, barsize = <span class=\"number\">0.2</span>, fontsize = <span class=\"number\">2</span>) +</span><br><span class=\"line\">            geom_cladelabel(node = <span class=\"number\">121</span>, label = <span class=\"string\">&quot;Subgroup B&quot;</span>, align = <span class=\"literal\">TRUE</span>, </span><br><span class=\"line\">                        angle = -<span class=\"number\">15</span>, offset.text = <span class=\"number\">.03</span>, hjust = <span class=\"string\">&quot;center&quot;</span>, </span><br><span class=\"line\">                        offset = <span class=\"number\">0.05</span>, barsize = <span class=\"number\">0.2</span>, fontsize = <span class=\"number\">2</span>) +</span><br><span class=\"line\">            theme(legend.position=<span class=\"string\">&quot;none&quot;</span>, </span><br><span class=\"line\">                plot.margin=grid::unit(<span class=\"built_in\">c</span>(-<span class=\"number\">15</span>,-<span class=\"number\">15</span>,-<span class=\"number\">15</span>,-<span class=\"number\">15</span>), <span class=\"string\">&quot;mm&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">print(p6)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/62.png\" class=\"\">\n\n<h2 id=\"样品连接\"><a href=\"#样品连接\" class=\"headerlink\" title=\"样品连接\"></a>样品连接</h2><p>利用函数<code>geom_taxalink()</code>可以实现样品之间的连线，但是只支持有限的几种形式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 &lt;- ggtree(tree) + geom_tiplab() + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;A&#x27;</span>, taxa2=<span class=\"string\">&#x27;E&#x27;</span>) + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;F&#x27;</span>, taxa2=<span class=\"string\">&#x27;K&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&#x27;red&#x27;</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;npc&quot;</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- ggtree(tree, layout=<span class=\"string\">&quot;circular&quot;</span>) + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;A&#x27;</span>, taxa2=<span class=\"string\">&#x27;E&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;grey&quot;</span>,alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=<span class=\"number\">0.05</span>,arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) + </span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;F&#x27;</span>, taxa2=<span class=\"string\">&#x27;K&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&#x27;red&#x27;</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, </span><br><span class=\"line\">                alpha=<span class=\"number\">0.5</span>, offset=<span class=\"number\">0.05</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&quot;L&quot;</span>, taxa2=<span class=\"string\">&quot;M&quot;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;blue&quot;</span>, alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=<span class=\"number\">0.05</span>,hratio=<span class=\"number\">0.8</span>, </span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) + </span><br><span class=\"line\">  geom_tiplab()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># when the tree was created using reverse x, </span></span><br><span class=\"line\"><span class=\"comment\"># we can set outward to FALSE, which will generate the inward curve lines.</span></span><br><span class=\"line\">p3 &lt;- ggtree(tree, layout=<span class=\"string\">&quot;inward_circular&quot;</span>, xlim=<span class=\"number\">150</span>) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;A&#x27;</span>, taxa2=<span class=\"string\">&#x27;E&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;grey&quot;</span>, alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=-<span class=\"number\">0.2</span>, </span><br><span class=\"line\">                outward=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&#x27;F&#x27;</span>, taxa2=<span class=\"string\">&#x27;K&#x27;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&#x27;red&#x27;</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, </span><br><span class=\"line\">                alpha=<span class=\"number\">0.5</span>, offset=-<span class=\"number\">0.2</span>,</span><br><span class=\"line\">                outward=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_taxalink(taxa1=<span class=\"string\">&quot;L&quot;</span>, taxa2=<span class=\"string\">&quot;M&quot;</span>, </span><br><span class=\"line\">                color=<span class=\"string\">&quot;blue&quot;</span>, alpha=<span class=\"number\">0.5</span>, </span><br><span class=\"line\">                offset=-<span class=\"number\">0.2</span>, </span><br><span class=\"line\">                outward=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                arrow=arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.01</span>, <span class=\"string\">&quot;npc&quot;</span>))) +</span><br><span class=\"line\">  geom_tiplab(hjust=<span class=\"number\">1</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">dat &lt;- data.frame(from=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;F&quot;</span>, <span class=\"string\">&quot;L&quot;</span>), </span><br><span class=\"line\">                  to=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;K&quot;</span>, <span class=\"string\">&quot;M&quot;</span>), </span><br><span class=\"line\">                  h=<span class=\"built_in\">c</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0.1</span>), </span><br><span class=\"line\">                  type=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;t1&quot;</span>, <span class=\"string\">&quot;t2&quot;</span>, <span class=\"string\">&quot;t3&quot;</span>), </span><br><span class=\"line\">                  s=<span class=\"built_in\">c</span>(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\">p4 &lt;- ggtree(tree, layout=<span class=\"string\">&quot;inward_circular&quot;</span>, xlim=<span class=\"built_in\">c</span>(<span class=\"number\">150</span>, <span class=\"number\">0</span>)) +</span><br><span class=\"line\">  geom_taxalink(data=dat, </span><br><span class=\"line\">                mapping=aes(taxa1=from, </span><br><span class=\"line\">                            taxa2=to, </span><br><span class=\"line\">                            color=type, </span><br><span class=\"line\">                            size=s), </span><br><span class=\"line\">                ncp=<span class=\"number\">10</span>,</span><br><span class=\"line\">                offset=<span class=\"number\">0.15</span>) + </span><br><span class=\"line\">  geom_tiplab(hjust=<span class=\"number\">1</span>) +</span><br><span class=\"line\">  scale_size_continuous(<span class=\"built_in\">range</span>=<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">3</span>))</span><br><span class=\"line\">cowplot::plot_grid(p1, p2, p3, p4, ncol=<span class=\"number\">2</span>, labels=<span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">4</span>])</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/32.png\" class=\"\">\n\n<h2 id=\"Uncertainty-of-evolutionary-inference\"><a href=\"#Uncertainty-of-evolutionary-inference\" class=\"headerlink\" title=\"Uncertainty of evolutionary inference\"></a>Uncertainty of evolutionary inference</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &lt;- system.file(<span class=\"string\">&quot;extdata/MEGA7&quot;</span>, <span class=\"string\">&quot;mtCDNA_timetree.nex&quot;</span>, package = <span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">x &lt;- read.mega(file)</span><br><span class=\"line\">p1 &lt;- ggtree(x) + geom_range(<span class=\"string\">&#x27;reltime_0.95_CI&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, size=<span class=\"number\">3</span>, alpha=<span class=\"number\">.3</span>)</span><br><span class=\"line\">p2 &lt;- ggtree(x) + geom_range(<span class=\"string\">&#x27;reltime_0.95_CI&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, size=<span class=\"number\">3</span>, alpha=<span class=\"number\">.3</span>, center=<span class=\"string\">&#x27;reltime&#x27;</span>)  </span><br><span class=\"line\">p3 &lt;- p2 + scale_x_range() + theme_tree2()</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,p3,ncol = <span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/33.png\" class=\"\">\n\n<h2 id=\"其他软件输出的结果\"><a href=\"#其他软件输出的结果\" class=\"headerlink\" title=\"其他软件输出的结果\"></a>其他软件输出的结果</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rstfile &lt;- system.file(<span class=\"string\">&quot;extdata/PAML_Codeml&quot;</span>, <span class=\"string\">&quot;rst&quot;</span>, </span><br><span class=\"line\">                       package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">mlcfile &lt;- system.file(<span class=\"string\">&quot;extdata/PAML_Codeml&quot;</span>, <span class=\"string\">&quot;mlc&quot;</span>, </span><br><span class=\"line\">                       package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ml &lt;- read.codeml(rstfile, mlcfile)</span><br><span class=\"line\">ggtree(ml, aes(color=dN_vs_dS), branch.length=<span class=\"string\">&#x27;dN_vs_dS&#x27;</span>) + </span><br><span class=\"line\">  scale_color_continuous(name=<span class=\"string\">&#x27;dN/dS&#x27;</span>, limits=<span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">1.5</span>),</span><br><span class=\"line\">                         oob=scales::squish,</span><br><span class=\"line\">                         low=<span class=\"string\">&#x27;darkgreen&#x27;</span>, high=<span class=\"string\">&#x27;red&#x27;</span>) +</span><br><span class=\"line\">  geom_text(aes(x=branch, label=AA_subs), </span><br><span class=\"line\">            vjust=-<span class=\"number\">.5</span>, color=<span class=\"string\">&#x27;steelblue&#x27;</span>, size=<span class=\"number\">2</span>) +</span><br><span class=\"line\">  theme_tree2(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.9</span>, <span class=\"number\">.3</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/34.png\" class=\"\">\n\n<h2 id=\"放大特定区域\"><a href=\"#放大特定区域\" class=\"headerlink\" title=\"放大特定区域\"></a>放大特定区域</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\">p1 = ggtree(tree) + geom_tiplab()</span><br><span class=\"line\">p2 = viewClade(p, MRCA(p, <span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;L&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">cowplot::plot_grid(p1,p2,ncol = <span class=\"number\">2</span>, labels = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;原图&#x27;</span>,<span class=\"string\">&#x27;特定区域&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/35.png\" class=\"\">\n\n<h2 id=\"标准化选中的clade\"><a href=\"#标准化选中的clade\" class=\"headerlink\" title=\"标准化选中的clade\"></a>标准化选中的clade</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree2 &lt;- groupClade(tree, <span class=\"built_in\">c</span>(<span class=\"number\">17</span>, <span class=\"number\">21</span>))</span><br><span class=\"line\">p &lt;- ggtree(tree2, aes(color=group)) + theme(legend.position=<span class=\"string\">&#x27;none&#x27;</span>) +</span><br><span class=\"line\">  scale_color_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&quot;firebrick&quot;</span>, <span class=\"string\">&quot;steelblue&quot;</span>))</span><br><span class=\"line\">scaleClade(p, node=<span class=\"number\">17</span>, scale=<span class=\"number\">.1</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/36.png\" class=\"\">\n\n<h2 id=\"隐藏-展示某个clade\"><a href=\"#隐藏-展示某个clade\" class=\"headerlink\" title=\"隐藏/展示某个clade\"></a>隐藏/展示某个clade</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p2 &lt;- p %&gt;% collapse(node=<span class=\"number\">21</span>) + </span><br><span class=\"line\">  geom_point2(aes(subset=(node==<span class=\"number\">21</span>)), shape=<span class=\"number\">21</span>, size=<span class=\"number\">5</span>, fill=<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\">p2 &lt;- collapse(p2, node=<span class=\"number\">23</span>) + </span><br><span class=\"line\">  geom_point2(aes(subset=(node==<span class=\"number\">23</span>)), shape=<span class=\"number\">23</span>, size=<span class=\"number\">5</span>, fill=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">print(p2)</span><br><span class=\"line\">expand(p2, node=<span class=\"number\">23</span>) %&gt;% expand(node=<span class=\"number\">21</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/37.png\" class=\"\">\n\n<h2 id=\"利用三角形隐藏-展示某个clade\"><a href=\"#利用三角形隐藏-展示某个clade\" class=\"headerlink\" title=\"利用三角形隐藏/展示某个clade\"></a>利用三角形隐藏/展示某个clade</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p2 &lt;- p + geom_tiplab()</span><br><span class=\"line\">node &lt;- 21</span><br><span class=\"line\">collapse(p2, node, <span class=\"string\">&#x27;max&#x27;</span>) %&gt;% expand(node)</span><br><span class=\"line\">collapse(p2, node, <span class=\"string\">&#x27;min&#x27;</span>) %&gt;% expand(node)</span><br><span class=\"line\">collapse(p2, node, <span class=\"string\">&#x27;mixed&#x27;</span>) %&gt;% expand(node)</span><br><span class=\"line\"></span><br><span class=\"line\">collapse(p, <span class=\"number\">21</span>, <span class=\"string\">&#x27;mixed&#x27;</span>, fill=<span class=\"string\">&#x27;steelblue&#x27;</span>, alpha=<span class=\"number\">.4</span>) %&gt;% </span><br><span class=\"line\">  collapse(<span class=\"number\">23</span>, <span class=\"string\">&#x27;mixed&#x27;</span>, fill=<span class=\"string\">&#x27;firebrick&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">scaleClade(p, <span class=\"number\">23</span>, <span class=\"number\">.2</span>) %&gt;% collapse(<span class=\"number\">23</span>, <span class=\"string\">&#x27;min&#x27;</span>, fill=<span class=\"string\">&quot;darkgreen&quot;</span>)  </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/38.png\" class=\"\">\n\n<h2 id=\"分组Taxa\"><a href=\"#分组Taxa\" class=\"headerlink\" title=\"分组Taxa\"></a>分组Taxa</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggsci)</span><br><span class=\"line\"></span><br><span class=\"line\">data(iris)</span><br><span class=\"line\">rn &lt;- paste0(iris[,<span class=\"number\">5</span>], <span class=\"string\">&quot;_&quot;</span>, <span class=\"number\">1</span>:<span class=\"number\">150</span>)</span><br><span class=\"line\">rownames(iris) &lt;- rn</span><br><span class=\"line\">d_iris &lt;- dist(iris[,-<span class=\"number\">5</span>], method=<span class=\"string\">&quot;man&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">c &lt;- ape::bionj(d_iris)</span><br><span class=\"line\">grp &lt;- <span class=\"built_in\">list</span>(setosa     = rn[<span class=\"number\">1</span>:<span class=\"number\">50</span>],</span><br><span class=\"line\">            versicolor = rn[<span class=\"number\">51</span>:<span class=\"number\">100</span>],</span><br><span class=\"line\">            virginica  = rn[<span class=\"number\">101</span>:<span class=\"number\">150</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">p_iris &lt;- ggtree(tree_iris, layout = <span class=\"string\">&#x27;circular&#x27;</span>, branch.length=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">groupOTU(p_iris, grp, <span class=\"string\">&#x27;group&#x27;</span>) + </span><br><span class=\"line\">  aes(color=group) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  theme(legend.position=<span class=\"string\">&quot;right&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/39.png\" class=\"\">\n\n<p>另外一种方法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree_iris &lt;- groupOTU(tree_iris, grp, <span class=\"string\">&quot;Species&quot;</span>)</span><br><span class=\"line\">ggtree(tree_iris, aes(color=Species), layout = <span class=\"string\">&#x27;circular&#x27;</span>, branch.length = <span class=\"string\">&#x27;none&#x27;</span>) + </span><br><span class=\"line\">  theme(legend.position=<span class=\"string\">&quot;right&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"旋转clade\"><a href=\"#旋转clade\" class=\"headerlink\" title=\"旋转clade\"></a>旋转clade</h2><p>旋转<code>clade</code>有两种方法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 &lt;- p + geom_point2(aes(subset=node==<span class=\"number\">16</span>), color=<span class=\"string\">&#x27;darkgreen&#x27;</span>, size=<span class=\"number\">5</span>)</span><br><span class=\"line\">p2 &lt;- rotate(p1, <span class=\"number\">17</span>) %&gt;% rotate(<span class=\"number\">21</span>) <span class=\"comment\"># 方法1</span></span><br><span class=\"line\">flip(p2, <span class=\"number\">17</span>, <span class=\"number\">21</span>) <span class=\"comment\"># 方法2</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/40.png\" class=\"\">\n\n<h2 id=\"外部数据mapping到树上\"><a href=\"#外部数据mapping到树上\" class=\"headerlink\" title=\"外部数据mapping到树上\"></a>外部数据mapping到树上</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggimage)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件下载地址</span></span><br><span class=\"line\"><span class=\"comment\"># https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tree_boots.nwk</span></span><br><span class=\"line\"><span class=\"comment\"># https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/tip_data.csv</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">x &lt;- read.tree(<span class=\"string\">&quot;tree_boots.nwk&quot;</span>)</span><br><span class=\"line\">info &lt;- read.csv(<span class=\"string\">&quot;tip_data.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(x) %&lt;+% info + xlim(-<span class=\"number\">.1</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">p2 &lt;- p + geom_tiplab(offset = <span class=\"number\">.6</span>, hjust = <span class=\"number\">.5</span>) +</span><br><span class=\"line\">  geom_tippoint(aes(shape = trophic_habit, color = trophic_habit, size = mass_in_kg)) + </span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&quot;right&quot;</span>) + scale_size_continuous(<span class=\"built_in\">range</span> = <span class=\"built_in\">c</span>(<span class=\"number\">3</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#https://raw.githubusercontent.com/YuLab-SMU/treedata-book/master/data/inode_data.csv</span></span><br><span class=\"line\">d2 &lt;- read.csv(<span class=\"string\">&quot;inode_data.csv&quot;</span>)</span><br><span class=\"line\">p2 %&lt;+% d2 + geom_label(aes(label = vernacularName.y, fill = posterior)) + </span><br><span class=\"line\">  scale_fill_gradientn(colors = RColorBrewer::brewer.pal(<span class=\"number\">3</span>, <span class=\"string\">&quot;YlGnBu&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/41.png\" class=\"\">\n\n<h2 id=\"将SNP数据添加到树上\"><a href=\"#将SNP数据添加到树上\" class=\"headerlink\" title=\"将SNP数据添加到树上\"></a>将SNP数据添加到树上</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\"><span class=\"comment\">## remote_folder &lt;- paste0(&quot;https://raw.githubusercontent.com/katholt/&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">##                         &quot;plotTree/master/tree_example_april2015/&quot;)</span></span><br><span class=\"line\">remote_folder &lt;- <span class=\"string\">&quot;data/tree_example_april2015/&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read the phylogenetic tree</span></span><br><span class=\"line\">tree &lt;- read.tree(paste0(remote_folder, <span class=\"string\">&quot;tree.nwk&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read the sampling information data set</span></span><br><span class=\"line\">info &lt;- read.csv(paste0(remote_folder,<span class=\"string\">&quot;info.csv&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read and process the allele table</span></span><br><span class=\"line\">snps&lt;-read.csv(paste0(remote_folder, <span class=\"string\">&quot;alleles.csv&quot;</span>), header = <span class=\"built_in\">F</span>,</span><br><span class=\"line\">                row.names = <span class=\"number\">1</span>, stringsAsFactor = <span class=\"built_in\">F</span>)</span><br><span class=\"line\">snps_strainCols &lt;- snps[<span class=\"number\">1</span>,] </span><br><span class=\"line\">snps&lt;-snps[-<span class=\"number\">1</span>,] <span class=\"comment\"># drop strain names</span></span><br><span class=\"line\">colnames(snps) &lt;- snps_strainCols</span><br><span class=\"line\"></span><br><span class=\"line\">gapChar &lt;- <span class=\"string\">&quot;?&quot;</span></span><br><span class=\"line\">snp &lt;- t(snps)</span><br><span class=\"line\">lsnp &lt;- apply(snp, <span class=\"number\">1</span>, <span class=\"keyword\">function</span>(x) &#123;</span><br><span class=\"line\">        x != snp[<span class=\"number\">1</span>,] &amp; x != gapChar &amp; snp[<span class=\"number\">1</span>,] != gapChar</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">lsnp &lt;- as.data.frame(lsnp)</span><br><span class=\"line\">lsnp$pos &lt;- <span class=\"built_in\">as.numeric</span>(rownames(lsnp))</span><br><span class=\"line\">lsnp &lt;- tidyr::gather(lsnp, name, value, -pos)</span><br><span class=\"line\">snp_data &lt;- lsnp[lsnp$value, <span class=\"built_in\">c</span>(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;pos&quot;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## read the trait data</span></span><br><span class=\"line\">bar_data &lt;- read.csv(paste0(remote_folder, <span class=\"string\">&quot;bar.csv&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## visualize the tree </span></span><br><span class=\"line\">p &lt;- ggtree(tree) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## attach the sampling information data set </span></span><br><span class=\"line\"><span class=\"comment\">## and add symbols colored by location</span></span><br><span class=\"line\">p &lt;- p %&lt;+% info + geom_tippoint(aes(color=location))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## visualize SNP and Trait data using dot and bar charts,</span></span><br><span class=\"line\"><span class=\"comment\">## and align them based on tree structure</span></span><br><span class=\"line\">p + geom_facet(panel = <span class=\"string\">&quot;SNP&quot;</span>, data = snp_data, geom = geom_point, </span><br><span class=\"line\">               mapping=aes(x = pos, color = location), shape = <span class=\"string\">&#x27;|&#x27;</span>) +</span><br><span class=\"line\">    geom_facet(panel = <span class=\"string\">&quot;Trait&quot;</span>, data = bar_data, geom = ggstance::geom_barh, </span><br><span class=\"line\">                aes(x = dummy_bar_value, color = location, fill = location), </span><br><span class=\"line\">                stat = <span class=\"string\">&quot;identity&quot;</span>, width = <span class=\"number\">.6</span>) +</span><br><span class=\"line\">    theme_tree2(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.85</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/42.png\" class=\"\">\n\n<h2 id=\"关联矩阵\"><a href=\"#关联矩阵\" class=\"headerlink\" title=\"关联矩阵\"></a>关联矩阵</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beast_file &lt;- system.file(<span class=\"string\">&quot;examples/MCC_FluA_H3.tree&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">beast_tree &lt;- read.beast(beast_file)</span><br><span class=\"line\"></span><br><span class=\"line\">genotype_file &lt;- system.file(<span class=\"string\">&quot;examples/Genotype.txt&quot;</span>, package=<span class=\"string\">&quot;ggtree&quot;</span>)</span><br><span class=\"line\">genotype &lt;- read.table(genotype_file, sep=<span class=\"string\">&quot;\\t&quot;</span>, stringsAsFactor=<span class=\"built_in\">F</span>)</span><br><span class=\"line\">colnames(genotype) &lt;- sub(<span class=\"string\">&quot;\\\\.$&quot;</span>, <span class=\"string\">&quot;&quot;</span>, colnames(genotype))</span><br><span class=\"line\">p &lt;- ggtree(beast_tree, mrsd=<span class=\"string\">&quot;2013-01-01&quot;</span>) + </span><br><span class=\"line\">    geom_treescale(x=<span class=\"number\">2008</span>, y=<span class=\"number\">1</span>, offset=<span class=\"number\">2</span>) + </span><br><span class=\"line\">    geom_tiplab(size=<span class=\"number\">2</span>)</span><br><span class=\"line\">gheatmap(p, genotype, offset=<span class=\"number\">5</span>, width=<span class=\"number\">0.5</span>, font.size=<span class=\"number\">3</span>, </span><br><span class=\"line\">        colnames_angle=-<span class=\"number\">45</span>, hjust=<span class=\"number\">0</span>) +</span><br><span class=\"line\">    scale_fill_manual(breaks=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;HuH3N2&quot;</span>, <span class=\"string\">&quot;pdm&quot;</span>, <span class=\"string\">&quot;trig&quot;</span>), </span><br><span class=\"line\">        values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;steelblue&quot;</span>, <span class=\"string\">&quot;firebrick&quot;</span>, <span class=\"string\">&quot;darkgreen&quot;</span>), name=<span class=\"string\">&quot;genotype&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(beast_tree, mrsd=<span class=\"string\">&quot;2013-01-01&quot;</span>) + </span><br><span class=\"line\">    geom_tiplab(size=<span class=\"number\">2</span>, align=<span class=\"literal\">TRUE</span>, linesize=<span class=\"number\">.5</span>) + </span><br><span class=\"line\">    theme_tree2()</span><br><span class=\"line\">gheatmap(p, genotype, offset=<span class=\"number\">8</span>, width=<span class=\"number\">0.6</span>, </span><br><span class=\"line\">        colnames=<span class=\"literal\">FALSE</span>, legend_title=<span class=\"string\">&quot;genotype&quot;</span>) +</span><br><span class=\"line\">    scale_x_ggtree() + </span><br><span class=\"line\">    scale_y_continuous(expand=<span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">0.3</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/43.png\" class=\"\">\n\n<h2 id=\"关联多个矩阵\"><a href=\"#关联多个矩阵\" class=\"headerlink\" title=\"关联多个矩阵\"></a>关联多个矩阵</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nwk &lt;- system.file(<span class=\"string\">&quot;extdata&quot;</span>, <span class=\"string\">&quot;sample.nwk&quot;</span>, package=<span class=\"string\">&quot;treeio&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tree &lt;- read.tree(nwk)</span><br><span class=\"line\">circ &lt;- ggtree(tree, layout = <span class=\"string\">&quot;circular&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df &lt;- data.frame(first=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;d&quot;</span>, <span class=\"string\">&quot;d&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>, <span class=\"string\">&quot;e&quot;</span>, <span class=\"string\">&quot;e&quot;</span>, <span class=\"string\">&quot;f&quot;</span>, <span class=\"string\">&quot;c&quot;</span>, <span class=\"string\">&quot;f&quot;</span>),</span><br><span class=\"line\">                 second= <span class=\"built_in\">c</span>(<span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;z&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;y&quot;</span>, <span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;x&quot;</span>, <span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;a&quot;</span>))</span><br><span class=\"line\">rownames(df) &lt;- tree$tip.label</span><br><span class=\"line\"></span><br><span class=\"line\">df2 &lt;- as.data.frame(matrix(rnorm(<span class=\"number\">39</span>), ncol=<span class=\"number\">3</span>))</span><br><span class=\"line\">rownames(df2) &lt;- tree$tip.label</span><br><span class=\"line\">colnames(df2) &lt;- <span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- gheatmap(circ, df, offset=<span class=\"number\">.8</span>, width=<span class=\"number\">.2</span>,</span><br><span class=\"line\">               colnames_angle=<span class=\"number\">95</span>, colnames_offset_y = <span class=\"number\">.25</span>) +</span><br><span class=\"line\">    scale_fill_viridis_d(option=<span class=\"string\">&quot;D&quot;</span>, name=<span class=\"string\">&quot;discrete\\nvalue&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\">p2 &lt;- p1 + new_scale_fill()</span><br><span class=\"line\">gheatmap(p2, df2, offset=<span class=\"number\">15</span>, width=<span class=\"number\">.3</span>,</span><br><span class=\"line\">         colnames_angle=<span class=\"number\">90</span>, colnames_offset_y = <span class=\"number\">.25</span>) +</span><br><span class=\"line\">    scale_fill_viridis_c(option=<span class=\"string\">&quot;A&quot;</span>, name=<span class=\"string\">&quot;continuous\\nvalue&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/44.png\" class=\"\">\n\n<h2 id=\"多序列比对可视化\"><a href=\"#多序列比对可视化\" class=\"headerlink\" title=\"多序列比对可视化\"></a>多序列比对可视化</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree &lt;- read.tree(<span class=\"string\">&quot;data/tree.nwk&quot;</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree) + geom_tiplab(size=<span class=\"number\">3</span>)</span><br><span class=\"line\">msaplot(p, <span class=\"string\">&quot;data/sequence.fasta&quot;</span>, offset=<span class=\"number\">3</span>, width=<span class=\"number\">2</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree, layout=<span class=\"string\">&#x27;circular&#x27;</span>) + </span><br><span class=\"line\">    geom_tiplab(offset=<span class=\"number\">4</span>, align=<span class=\"literal\">TRUE</span>) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">12</span>)</span><br><span class=\"line\">msaplot(p, <span class=\"string\">&quot;data/sequence.fasta&quot;</span>, window=<span class=\"built_in\">c</span>(<span class=\"number\">120</span>, <span class=\"number\">200</span>))  </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/45.png\" class=\"\">\n\n<h2 id=\"拼图\"><a href=\"#拼图\" class=\"headerlink\" title=\"拼图\"></a>拼图</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">set.seed(<span class=\"number\">2019</span>-<span class=\"number\">10</span>-<span class=\"number\">31</span>)</span><br><span class=\"line\">tr &lt;- rtree(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">d1 &lt;- data.frame(</span><br><span class=\"line\">    <span class=\"comment\"># only some labels match</span></span><br><span class=\"line\">    label = <span class=\"built_in\">c</span>(tr$tip.label[sample(<span class=\"number\">5</span>, <span class=\"number\">5</span>)], <span class=\"string\">&quot;A&quot;</span>),</span><br><span class=\"line\">    value = sample(<span class=\"number\">1</span>:<span class=\"number\">6</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">d2 &lt;- data.frame(</span><br><span class=\"line\">    label = <span class=\"built_in\">rep</span>(tr$tip.label, <span class=\"number\">5</span>),</span><br><span class=\"line\">    category = <span class=\"built_in\">rep</span>(<span class=\"built_in\">LETTERS</span>[<span class=\"number\">1</span>:<span class=\"number\">5</span>], each=<span class=\"number\">10</span>),</span><br><span class=\"line\">    value = rnorm(<span class=\"number\">50</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">g &lt;- ggtree(tr) + geom_tiplab(align=<span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- ggplot(d1, aes(label, value)) + geom_col(aes(fill=label)) + </span><br><span class=\"line\">    geom_text(aes(label=label, y= value+<span class=\"number\">.1</span>)) +</span><br><span class=\"line\">    coord_flip() + theme_tree2() + theme(legend.position=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">p2 &lt;- ggplot(d2, aes(x=category, y=label)) + </span><br><span class=\"line\">    geom_tile(aes(fill=value)) + scale_fill_viridis_c() + </span><br><span class=\"line\">    theme_tree2() </span><br><span class=\"line\">    </span><br><span class=\"line\">cowplot::plot_grid(g, p2, p1, ncol=<span class=\"number\">3</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">library(aplot)</span><br><span class=\"line\">p2 %&gt;% insert_left(g) %&gt;% insert_right(p1, width=<span class=\"number\">.5</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/46.png\" class=\"\">\n\n<h2 id=\"图片注释\"><a href=\"#图片注释\" class=\"headerlink\" title=\"图片注释\"></a>图片注释</h2><p>没能找到图片下载地址，看代码很容易理解：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggimage)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"></span><br><span class=\"line\">nwk &lt;- <span class=\"string\">&quot;((((bufonidae, dendrobatidae), ceratophryidae), (centrolenidae, leptodactylidae)), hylidae);&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = read.tree(text = nwk)</span><br><span class=\"line\">ggtree(x) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">7</span>) + ylim(<span class=\"literal\">NA</span>, <span class=\"number\">6.2</span>) +</span><br><span class=\"line\">  geom_tiplab(aes(image=paste0(<span class=\"string\">&quot;img/frogs/&quot;</span>, label, <span class=\"string\">&#x27;.jpg&#x27;</span>)), </span><br><span class=\"line\">              geom=<span class=\"string\">&quot;image&quot;</span>, offset=<span class=\"number\">2</span>, align=<span class=\"number\">2</span>, size=<span class=\"number\">.2</span>)  + </span><br><span class=\"line\">  geom_tiplab(geom=<span class=\"string\">&#x27;label&#x27;</span>, offset=<span class=\"number\">1</span>, hjust=<span class=\"number\">.5</span>) + </span><br><span class=\"line\">  geom_image(x=<span class=\"number\">.8</span>, y=<span class=\"number\">5.5</span>, image=<span class=\"string\">&quot;img/frogs/frog.jpg&quot;</span>, size=<span class=\"number\">.2</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/47.png\" class=\"\">\n\n<h2 id=\"图标（剪影）注释\"><a href=\"#图标（剪影）注释\" class=\"headerlink\" title=\"图标（剪影）注释\"></a>图标（剪影）注释</h2><p><a href=\"http://phylopic.org/\">PhyloPic</a>提供了1300余种生物剪影，<code>ggtree</code>能够调用这个数据库中的生物图标进行注释，相当于上面的图片。这种情况下绘图稍微有点慢，毕竟这个数据库是国外的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">newick &lt;- <span class=\"string\">&quot;((Pongo_abelii,(Gorilla_gorilla_gorilla,(Pan_paniscus,Pan_troglodytes)Pan,Homo_sapiens)Homininae)Hominidae,Nomascus_leucogenys)Hominoidea;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tree &lt;- read.tree(text=newick)</span><br><span class=\"line\"></span><br><span class=\"line\">d &lt;- ggimage::phylopic_uid(tree$tip.label)</span><br><span class=\"line\">d$body_mass = <span class=\"built_in\">c</span>(<span class=\"number\">52</span>, <span class=\"number\">114</span>, <span class=\"number\">47</span>, <span class=\"number\">45</span>, <span class=\"number\">58</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(tree) %&lt;+% d + </span><br><span class=\"line\">  geom_tiplab(aes(image=uid, colour=body_mass), geom=<span class=\"string\">&quot;phylopic&quot;</span>, offset=<span class=\"number\">2.5</span>) +</span><br><span class=\"line\">  geom_tiplab(aes(label=label), offset = <span class=\"number\">.2</span>) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">7</span>) +</span><br><span class=\"line\">  scale_color_viridis_c()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/48.png\" class=\"\">\n\n<h2 id=\"使用子图进行注释\"><a href=\"#使用子图进行注释\" class=\"headerlink\" title=\"使用子图进行注释\"></a>使用子图进行注释</h2><p>用子图进行注释是通过函数<code>geom_inset()</code>来完成的。</p>\n<h3 id=\"条形图注释\"><a href=\"#条形图注释\" class=\"headerlink\" title=\"条形图注释\"></a>条形图注释</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(phytools)</span><br><span class=\"line\">data(anoletree)</span><br><span class=\"line\">x &lt;- getStates(anoletree,<span class=\"string\">&quot;tips&quot;</span>)</span><br><span class=\"line\">tree &lt;- anoletree</span><br><span class=\"line\"></span><br><span class=\"line\">cols &lt;- setNames(palette()[<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(unique(x))],sort(unique(x)))</span><br><span class=\"line\">fitER &lt;- ape::ace(x,tree,model=<span class=\"string\">&quot;ER&quot;</span>,type=<span class=\"string\">&quot;discrete&quot;</span>)</span><br><span class=\"line\">ancstats &lt;- as.data.frame(fitER$lik.anc)</span><br><span class=\"line\">ancstats$node &lt;- 1:tree$Nnode+Ntip(tree)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## cols parameter indicate which columns store stats</span></span><br><span class=\"line\">bars &lt;- nodebar(ancstats, cols=<span class=\"number\">1</span>:<span class=\"number\">6</span>)</span><br><span class=\"line\">bars &lt;- lapply(bars, <span class=\"keyword\">function</span>(g) g+scale_fill_manual(values = cols))</span><br><span class=\"line\"></span><br><span class=\"line\">tree2 &lt;- full_join(tree, data.frame(label = <span class=\"built_in\">names</span>(x), stat = x ), by = <span class=\"string\">&#x27;label&#x27;</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree2) + geom_tiplab() +</span><br><span class=\"line\">    geom_tippoint(aes(color = stat)) + </span><br><span class=\"line\">    scale_color_manual(values = cols) +</span><br><span class=\"line\">    theme(legend.position = <span class=\"string\">&quot;right&quot;</span>) + </span><br><span class=\"line\">    xlim(<span class=\"literal\">NA</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\">p + geom_inset(bars, width = <span class=\"number\">.08</span>, height = <span class=\"number\">.05</span>, x = <span class=\"string\">&quot;branch&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/49.png\" class=\"\">\n\n<h3 id=\"饼图注释\"><a href=\"#饼图注释\" class=\"headerlink\" title=\"饼图注释\"></a>饼图注释</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(phytools)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">data(anoletree)</span><br><span class=\"line\">x &lt;- getStates(anoletree,<span class=\"string\">&quot;tips&quot;</span>)</span><br><span class=\"line\">tree &lt;- anoletree</span><br><span class=\"line\"></span><br><span class=\"line\">cols &lt;- setNames(palette()[<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(unique(x))],sort(unique(x)))</span><br><span class=\"line\">fitER &lt;- ape::ace(x,tree,model=<span class=\"string\">&quot;ER&quot;</span>,type=<span class=\"string\">&quot;discrete&quot;</span>)</span><br><span class=\"line\">ancstats &lt;- as.data.frame(fitER$lik.anc)</span><br><span class=\"line\">ancstats$node &lt;- 1:tree$Nnode+Ntip(tree)</span><br><span class=\"line\"></span><br><span class=\"line\">pies &lt;- nodepie(ancstats, cols = <span class=\"number\">1</span>:<span class=\"number\">6</span>)</span><br><span class=\"line\">pies &lt;- lapply(pies, <span class=\"keyword\">function</span>(g) g+scale_fill_manual(values = cols))</span><br><span class=\"line\"></span><br><span class=\"line\">tree2 &lt;- full_join(tree, data.frame(label = <span class=\"built_in\">names</span>(x), stat = x ), by = <span class=\"string\">&#x27;label&#x27;</span>)</span><br><span class=\"line\">p &lt;- ggtree(tree2) + geom_tiplab() +</span><br><span class=\"line\">  geom_tippoint(aes(color = stat)) + </span><br><span class=\"line\">  scale_color_manual(values = cols) +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&quot;right&quot;</span>) + </span><br><span class=\"line\">  xlim(<span class=\"literal\">NA</span>, <span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p + geom_inset(pies, width = <span class=\"number\">.1</span>, height = <span class=\"number\">.1</span>) </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/50.png\" class=\"\">\n\n<h3 id=\"多种图像组合注释\"><a href=\"#多种图像组合注释\" class=\"headerlink\" title=\"多种图像组合注释\"></a>多种图像组合注释</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pies_and_bars &lt;- pies</span><br><span class=\"line\">i &lt;- sample(length(pies), 20)</span><br><span class=\"line\">pies_and_bars[i] &lt;- bars[i]</span><br><span class=\"line\">p + geom_inset(pies_and_bars, width=.08, height=.05)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/51.png\" class=\"\">\n\n<h2 id=\"Phylomoji注释\"><a href=\"#Phylomoji注释\" class=\"headerlink\" title=\"Phylomoji注释\"></a><code>Phylomoji</code>注释</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\"><span class=\"comment\"># install.packages(&#x27;emojifont&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">tt = <span class=\"string\">&#x27;((snail,mushroom),(((sunflower,evergreen_tree),leaves),green_salad));&#x27;</span></span><br><span class=\"line\">tree = read.tree(text = tt)</span><br><span class=\"line\">d &lt;- data.frame(label = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;snail&#x27;</span>,<span class=\"string\">&#x27;mushroom&#x27;</span>, <span class=\"string\">&#x27;sunflower&#x27;</span>,</span><br><span class=\"line\">                          <span class=\"string\">&#x27;evergreen_tree&#x27;</span>,<span class=\"string\">&#x27;leaves&#x27;</span>, <span class=\"string\">&#x27;green_salad&#x27;</span>),</span><br><span class=\"line\">                group = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;animal&#x27;</span>, <span class=\"string\">&#x27;fungi&#x27;</span>, <span class=\"string\">&#x27;flowering plant&#x27;</span>,</span><br><span class=\"line\">                          <span class=\"string\">&#x27;conifers&#x27;</span>, <span class=\"string\">&#x27;ferns&#x27;</span>, <span class=\"string\">&#x27;mosses&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ggtree(tree, linetype = <span class=\"string\">&quot;dashed&quot;</span>, size=<span class=\"number\">1</span>, color=<span class=\"string\">&#x27;firebrick&#x27;</span>) %&lt;+% d + </span><br><span class=\"line\">  xlim(<span class=\"number\">0</span>, <span class=\"number\">4.5</span>) + ylim(<span class=\"number\">0.5</span>, <span class=\"number\">6.5</span>) +</span><br><span class=\"line\">  geom_tiplab(parse=<span class=\"string\">&quot;emoji&quot;</span>, size=<span class=\"number\">15</span>, vjust=<span class=\"number\">.25</span>) +</span><br><span class=\"line\">  geom_tiplab(aes(label = group), geom=<span class=\"string\">&quot;label&quot;</span>, x=<span class=\"number\">3.5</span>, hjust=<span class=\"number\">.5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/52.png\" class=\"\">\n\n<h2 id=\"Emoji注释circular-fan树\"><a href=\"#Emoji注释circular-fan树\" class=\"headerlink\" title=\"Emoji注释circular/fan树\"></a><code>Emoji</code>注释circular/fan树</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p &lt;- ggtree(tree, layout = <span class=\"string\">&quot;circular&quot;</span>, size=<span class=\"number\">1</span>) +  </span><br><span class=\"line\">  geom_tiplab(parse=<span class=\"string\">&quot;emoji&quot;</span>, size=<span class=\"number\">10</span>, vjust=<span class=\"number\">.25</span>)</span><br><span class=\"line\">print(p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## fan layout  </span></span><br><span class=\"line\">p2 &lt;- open_tree(p, angle=<span class=\"number\">200</span>) </span><br><span class=\"line\">print(p2)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 %&gt;% rotate_tree(-<span class=\"number\">90</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/53.png\" class=\"\">\n\n<h2 id=\"Emoji注释clades\"><a href=\"#Emoji注释clades\" class=\"headerlink\" title=\"Emoji注释clades\"></a><code>Emoji</code>注释clades</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed(<span class=\"number\">123</span>)</span><br><span class=\"line\">tr &lt;- rtree(<span class=\"number\">30</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ggtree(tr) + xlim(<span class=\"literal\">NA</span>, <span class=\"number\">5.2</span>) +</span><br><span class=\"line\">    geom_cladelabel(node=<span class=\"number\">41</span>, label=<span class=\"string\">&quot;chicken&quot;</span>, parse=<span class=\"string\">&quot;emoji&quot;</span>,</span><br><span class=\"line\">                    fontsize=<span class=\"number\">12</span>, align=<span class=\"literal\">TRUE</span>, colour=<span class=\"string\">&quot;firebrick&quot;</span>) +</span><br><span class=\"line\">    geom_cladelabel(node=<span class=\"number\">53</span>, label=<span class=\"string\">&quot;duck&quot;</span>, parse=<span class=\"string\">&quot;emoji&quot;</span>,</span><br><span class=\"line\">                    fontsize=<span class=\"number\">12</span>, align=<span class=\"literal\">TRUE</span>, colour=<span class=\"string\">&quot;steelblue&quot;</span>) +</span><br><span class=\"line\">    geom_cladelabel(node=<span class=\"number\">48</span>, label=<span class=\"string\">&quot;family&quot;</span>, parse=<span class=\"string\">&quot;emoji&quot;</span>,</span><br><span class=\"line\">                    fontsize=<span class=\"number\">12</span>, align=<span class=\"literal\">TRUE</span>, colour=<span class=\"string\">&quot;darkkhaki&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/54.png\" class=\"\">\n\n<h2 id=\"AppleColorEmoji\"><a href=\"#AppleColorEmoji\" class=\"headerlink\" title=\"AppleColorEmoji\"></a><code>AppleColorEmoji</code></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">tree_text &lt;- &quot;(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);&quot;</span><br><span class=\"line\">x &lt;- read.tree(text=tree_text)</span><br><span class=\"line\">library(ggimage)</span><br><span class=\"line\">library(gridSVG)</span><br><span class=\"line\">p &lt;-  ggtree(x, size=2) + geom_tiplab(size=20, parse=&#x27;emoji&#x27;) +</span><br><span class=\"line\">    xlim(NA, 7) + ylim(NA, 8.5) +</span><br><span class=\"line\">    geom_phylopic(image=&quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728&quot;,</span><br><span class=\"line\">                  color=&quot;firebrick&quot;, alpha = .3, size=Inf)</span><br><span class=\"line\"></span><br><span class=\"line\">p</span><br><span class=\"line\">ps = grid.export(&quot;emoji.svg&quot;, addClass=T)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/55.png\" class=\"\">\n\n<h1 id=\"ggtree可视化其他数据\"><a href=\"#ggtree可视化其他数据\" class=\"headerlink\" title=\"ggtree可视化其他数据\"></a><code>ggtree</code>可视化其他数据</h1><p><code>ggtree</code>支持其他的数据类型，比如树状图（更多格式请移步Y叔博客）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hc &lt;- hclust(dist(mtcars))</span><br><span class=\"line\">hc</span><br><span class=\"line\">clus &lt;- cutree(hc, <span class=\"number\">4</span>)</span><br><span class=\"line\">g &lt;- split(<span class=\"built_in\">names</span>(clus), clus)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(hc, linetype=<span class=\"string\">&#x27;dashed&#x27;</span>)</span><br><span class=\"line\">clades &lt;- sapply(g, <span class=\"keyword\">function</span>(n) MRCA(p, n))</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- groupClade(p, clades, group_name=<span class=\"string\">&#x27;subtree&#x27;</span>) + aes(color=subtree)</span><br><span class=\"line\"></span><br><span class=\"line\">d &lt;- data.frame(label = <span class=\"built_in\">names</span>(clus), </span><br><span class=\"line\">                cyl = mtcars[<span class=\"built_in\">names</span>(clus), <span class=\"string\">&quot;cyl&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">p %&lt;+% d + </span><br><span class=\"line\">  layout_dendrogram() + </span><br><span class=\"line\">  geom_tippoint(size=<span class=\"number\">5</span>, shape=<span class=\"number\">21</span>, aes(fill=factor(cyl), x=x+<span class=\"number\">.5</span>), color=<span class=\"string\">&#x27;black&#x27;</span>) + </span><br><span class=\"line\">  geom_tiplab(aes(label=cyl), size=<span class=\"number\">3</span>, hjust=<span class=\"number\">.5</span>, color=<span class=\"string\">&#x27;black&#x27;</span>) +</span><br><span class=\"line\">  geom_tiplab(angle=<span class=\"number\">90</span>, hjust=<span class=\"number\">1</span>, offset=-<span class=\"number\">10</span>, show.legend=<span class=\"built_in\">F</span>) + </span><br><span class=\"line\">  scale_color_brewer(palette=<span class=\"string\">&#x27;Set1&#x27;</span>, breaks=<span class=\"number\">1</span>:<span class=\"number\">4</span>) +</span><br><span class=\"line\">  theme_dendrogram(plot.margin=margin(<span class=\"number\">6</span>,<span class=\"number\">6</span>,<span class=\"number\">80</span>,<span class=\"number\">6</span>)) +</span><br><span class=\"line\">  theme(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.9</span>, <span class=\"number\">.6</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/56.png\" class=\"\">\n\n<h1 id=\"ggtree拓展ggtreeExtra\"><a href=\"#ggtree拓展ggtreeExtra\" class=\"headerlink\" title=\"ggtree拓展ggtreeExtra\"></a><code>ggtree</code>拓展<code>ggtreeExtra</code></h1><p><code>ggtreeExtra</code>真的是惊艳到我了，只能献出我的膝盖啊！</p>\n<p><code>ggtree</code>的函数<code>geom_facet()</code>只支持<code>rectangular</code>、 <code>roundrect</code>、 <code>ellipse</code> 及 <code>slanted</code> 这4种输出样式，并不支持在<code>circular</code>、<code>fan</code>及<code>radial</code>这几种输出样式的外环上添加图层，为了解决这个问题，Y叔团队开发了新的R包：<code>ggtreeExtra</code>！</p>\n<h2 id=\"添加微生物组丰度\"><a href=\"#添加微生物组丰度\" class=\"headerlink\" title=\"添加微生物组丰度\"></a>添加微生物组丰度</h2><p><code>ggtree</code>直接支持<code>phyloseq</code>对象，这个对做微生物的来说，简直就是福音啊！</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(phyloseq)</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\"></span><br><span class=\"line\">data(<span class=\"string\">&quot;GlobalPatterns&quot;</span>)</span><br><span class=\"line\">GP &lt;- GlobalPatterns</span><br><span class=\"line\">GP &lt;- prune_taxa(taxa_sums(GP) &gt; <span class=\"number\">600</span>, GP)</span><br><span class=\"line\">sample_data(GP)$human &lt;- get_variable(GP, <span class=\"string\">&quot;SampleType&quot;</span>) %in%</span><br><span class=\"line\">                              <span class=\"built_in\">c</span>(<span class=\"string\">&quot;Feces&quot;</span>, <span class=\"string\">&quot;Skin&quot;</span>)</span><br><span class=\"line\">mergedGP &lt;- merge_samples(GP, <span class=\"string\">&quot;SampleType&quot;</span>)</span><br><span class=\"line\">mergedGP &lt;- rarefy_even_depth(mergedGP,rngseed=<span class=\"number\">394582</span>)</span><br><span class=\"line\">mergedGP &lt;- tax_glom(mergedGP,<span class=\"string\">&quot;Order&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">melt_simple &lt;- psmelt(mergedGP) %&gt;%</span><br><span class=\"line\">               filter(Abundance &lt; <span class=\"number\">120</span>) %&gt;%</span><br><span class=\"line\">               select(OTU, val=Abundance)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(mergedGP, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">10</span>) + </span><br><span class=\"line\">     geom_tippoint(mapping=aes(color=Phylum), </span><br><span class=\"line\">                   size=<span class=\"number\">1.5</span>,</span><br><span class=\"line\">                   show.legend=<span class=\"literal\">FALSE</span>)</span><br><span class=\"line\">p &lt;- rotate_tree(p, -<span class=\"number\">90</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- p +</span><br><span class=\"line\">     geom_fruit(</span><br><span class=\"line\">         data=melt_simple,</span><br><span class=\"line\">         geom=geom_boxplot,</span><br><span class=\"line\">         mapping = aes(</span><br><span class=\"line\">                     y=OTU,</span><br><span class=\"line\">                     x=val,</span><br><span class=\"line\">                     group=label,</span><br><span class=\"line\">                     fill=Phylum,</span><br><span class=\"line\">                   ),</span><br><span class=\"line\">         size=<span class=\"number\">.2</span>,</span><br><span class=\"line\">         outlier.size=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">         outlier.stroke=<span class=\"number\">0.08</span>,</span><br><span class=\"line\">         outlier.shape=<span class=\"number\">21</span>,</span><br><span class=\"line\">         axis.params=<span class=\"built_in\">list</span>(</span><br><span class=\"line\">                         axis       = <span class=\"string\">&quot;x&quot;</span>,</span><br><span class=\"line\">                         text.size  = <span class=\"number\">1.8</span>,</span><br><span class=\"line\">                         hjust      = <span class=\"number\">1</span>,</span><br><span class=\"line\">                         vjust      = <span class=\"number\">0.5</span>,</span><br><span class=\"line\">                         nbreak     = <span class=\"number\">3</span>,</span><br><span class=\"line\">                     ),</span><br><span class=\"line\">         grid.params=<span class=\"built_in\">list</span>()</span><br><span class=\"line\">     ) </span><br><span class=\"line\">     </span><br><span class=\"line\">p &lt;- p +</span><br><span class=\"line\">     scale_fill_discrete(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Phyla&quot;</span>,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.8</span>, keyheight=<span class=\"number\">0.8</span>, ncol=<span class=\"number\">1</span>)</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     theme(</span><br><span class=\"line\">         legend.title=element_text(size=<span class=\"number\">9</span>), <span class=\"comment\"># The title of legend </span></span><br><span class=\"line\">         legend.text=element_text(size=<span class=\"number\">7</span>) <span class=\"comment\"># The label text of legend, the sizes should be adjust with dpi.</span></span><br><span class=\"line\">     )</span><br><span class=\"line\">p</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/57.png\" class=\"\">\n\n<h2 id=\"多维数据添加多个图层\"><a href=\"#多维数据添加多个图层\" class=\"headerlink\" title=\"多维数据添加多个图层\"></a>多维数据添加多个图层</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(ggstar)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\"></span><br><span class=\"line\">tree &lt;- read.tree(<span class=\"string\">&quot;data/HMP_tree/hmptree.nwk&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># the abundance and types of microbes</span></span><br><span class=\"line\">dat1 &lt;- read.csv(<span class=\"string\">&quot;data/HMP_tree/tippoint_attr.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># the abundance of microbes at different body sites.</span></span><br><span class=\"line\">dat2 &lt;- read.csv(<span class=\"string\">&quot;data/HMP_tree/ringheatmap_attr.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># the abundance of microbes at the body sites of greatest prevalence.</span></span><br><span class=\"line\">dat3 &lt;- read.csv(<span class=\"string\">&quot;data/HMP_tree/barplot_attr.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adjust the order</span></span><br><span class=\"line\">dat2$Sites &lt;- factor(dat2$Sites, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;Stool (prevalence)&quot;</span>, <span class=\"string\">&quot;Cheek (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Plaque (prevalence)&quot;</span>,<span class=\"string\">&quot;Tongue (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Nose (prevalence)&quot;</span>, <span class=\"string\">&quot;Vagina (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Skin (prevalence)&quot;</span>))</span><br><span class=\"line\">dat3$Sites &lt;- factor(dat3$Sites, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;Stool (prevalence)&quot;</span>, <span class=\"string\">&quot;Cheek (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Plaque (prevalence)&quot;</span>, <span class=\"string\">&quot;Tongue (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Nose (prevalence)&quot;</span>, <span class=\"string\">&quot;Vagina (prevalence)&quot;</span>,</span><br><span class=\"line\">                                          <span class=\"string\">&quot;Skin (prevalence)&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\"># extract the clade label information. Because some nodes of tree are annotated to genera,</span></span><br><span class=\"line\"><span class=\"comment\"># which can be displayed with high light using ggtree.</span></span><br><span class=\"line\">nodeids &lt;- nodeid(tree, tree$node.label[nchar(tree$node.label)&gt;<span class=\"number\">4</span>])</span><br><span class=\"line\">nodedf &lt;- data.frame(node=nodeids)</span><br><span class=\"line\">nodelab &lt;- gsub(<span class=\"string\">&quot;[\\\\.0-9]&quot;</span>, <span class=\"string\">&quot;&quot;</span>, tree$node.label[nchar(tree$node.label)&gt;<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"comment\"># The layers of clade and hightlight</span></span><br><span class=\"line\">poslist &lt;- <span class=\"built_in\">c</span>(<span class=\"number\">1.6</span>, <span class=\"number\">1.4</span>, <span class=\"number\">1.6</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.25</span>, <span class=\"number\">1.6</span>, <span class=\"number\">1.6</span>, <span class=\"number\">1.2</span>, <span class=\"number\">0.4</span>,</span><br><span class=\"line\">             <span class=\"number\">1.2</span>, <span class=\"number\">1.8</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.6</span>,</span><br><span class=\"line\">             <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>, <span class=\"number\">0.3</span>)</span><br><span class=\"line\">labdf &lt;- data.frame(node=nodeids, label=nodelab, pos=poslist)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The circular layout tree.</span></span><br><span class=\"line\">p &lt;- ggtree(tree, layout=<span class=\"string\">&quot;fan&quot;</span>, size=<span class=\"number\">0.15</span>, open.angle=<span class=\"number\">5</span>) +</span><br><span class=\"line\">     geom_hilight(data=nodedf, mapping=aes(node=node),</span><br><span class=\"line\">                  extendto=<span class=\"number\">6.8</span>, alpha=<span class=\"number\">0.3</span>, fill=<span class=\"string\">&quot;grey&quot;</span>, color=<span class=\"string\">&quot;grey50&quot;</span>,</span><br><span class=\"line\">                  size=<span class=\"number\">0.05</span>) +</span><br><span class=\"line\">     geom_cladelab(data=labdf, </span><br><span class=\"line\">                   mapping=aes(node=node, </span><br><span class=\"line\">                               label=label,</span><br><span class=\"line\">                               offset.text=pos),</span><br><span class=\"line\">                   hjust=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                   angle=<span class=\"string\">&quot;auto&quot;</span>,</span><br><span class=\"line\">                   barsize=<span class=\"literal\">NA</span>,</span><br><span class=\"line\">                   horizontal=<span class=\"literal\">FALSE</span>, </span><br><span class=\"line\">                   fontsize=<span class=\"number\">1.4</span>,</span><br><span class=\"line\">                   fontface=<span class=\"string\">&quot;italic&quot;</span></span><br><span class=\"line\">                   )</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- p %&lt;+% dat1 + geom_star(</span><br><span class=\"line\">                        mapping=aes(fill=Phylum, starshape=Type, size=Size),</span><br><span class=\"line\">                        position=<span class=\"string\">&quot;identity&quot;</span>,starstroke=<span class=\"number\">0.1</span>) +</span><br><span class=\"line\">         scale_fill_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#FFC125&quot;</span>,<span class=\"string\">&quot;#87CEFA&quot;</span>,<span class=\"string\">&quot;#7B68EE&quot;</span>,<span class=\"string\">&quot;#808080&quot;</span>,<span class=\"string\">&quot;#800080&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;#9ACD32&quot;</span>,<span class=\"string\">&quot;#D15FEE&quot;</span>,<span class=\"string\">&quot;#FFC0CB&quot;</span>,<span class=\"string\">&quot;#EE6A50&quot;</span>,<span class=\"string\">&quot;#8DEEEE&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;#006400&quot;</span>,<span class=\"string\">&quot;#800000&quot;</span>,<span class=\"string\">&quot;#B0171F&quot;</span>,<span class=\"string\">&quot;#191970&quot;</span>),</span><br><span class=\"line\">                           guide=guide_legend(keywidth = <span class=\"number\">0.5</span>, keyheight = <span class=\"number\">0.5</span>, order=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                              override.aes=<span class=\"built_in\">list</span>(starshape=<span class=\"number\">15</span>)),</span><br><span class=\"line\">                           na.translate=<span class=\"literal\">FALSE</span>)+</span><br><span class=\"line\">         scale_starshape_manual(values=<span class=\"built_in\">c</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">                                guide=guide_legend(keywidth = <span class=\"number\">0.5</span>, keyheight = <span class=\"number\">0.5</span>, order=<span class=\"number\">2</span>),</span><br><span class=\"line\">                                na.translate=<span class=\"literal\">FALSE</span>)+</span><br><span class=\"line\">         scale_size_continuous(<span class=\"built_in\">range</span> = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>, <span class=\"number\">2.5</span>),</span><br><span class=\"line\">                               guide = guide_legend(keywidth = <span class=\"number\">0.5</span>, keyheight = <span class=\"number\">0.5</span>, order=<span class=\"number\">3</span>,</span><br><span class=\"line\">                                                    override.aes=<span class=\"built_in\">list</span>(starshape=<span class=\"number\">15</span>)))</span><br><span class=\"line\">                                                    </span><br><span class=\"line\">p &lt;- p + new_scale_fill() +</span><br><span class=\"line\">         geom_fruit(data=dat2, geom=geom_tile,</span><br><span class=\"line\">                    mapping=aes(y=ID, x=Sites, alpha=Abundance, fill=Sites),</span><br><span class=\"line\">                    color = <span class=\"string\">&quot;grey50&quot;</span>, offset = <span class=\"number\">0.04</span>,size = <span class=\"number\">0.02</span>)+</span><br><span class=\"line\">         scale_alpha_continuous(<span class=\"built_in\">range</span>=<span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">                             guide=guide_legend(keywidth = <span class=\"number\">0.3</span>, keyheight = <span class=\"number\">0.3</span>, order=<span class=\"number\">5</span>)) +</span><br><span class=\"line\">         geom_fruit(data=dat3, geom=geom_bar,</span><br><span class=\"line\">                    mapping=aes(y=ID, x=HigherAbundance, fill=Sites),</span><br><span class=\"line\">                    pwidth=<span class=\"number\">0.38</span>, </span><br><span class=\"line\">                    orientation=<span class=\"string\">&quot;y&quot;</span>, </span><br><span class=\"line\">                    stat=<span class=\"string\">&quot;identity&quot;</span>,</span><br><span class=\"line\">         ) +</span><br><span class=\"line\">         scale_fill_manual(values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#0000FF&quot;</span>,<span class=\"string\">&quot;#FFA500&quot;</span>,<span class=\"string\">&quot;#FF0000&quot;</span>,<span class=\"string\">&quot;#800000&quot;</span>,</span><br><span class=\"line\">                                    <span class=\"string\">&quot;#006400&quot;</span>,<span class=\"string\">&quot;#800080&quot;</span>,<span class=\"string\">&quot;#696969&quot;</span>),</span><br><span class=\"line\">                           guide=guide_legend(keywidth = <span class=\"number\">0.3</span>, keyheight = <span class=\"number\">0.3</span>, order=<span class=\"number\">4</span>))+</span><br><span class=\"line\">         geom_treescale(fontsize=<span class=\"number\">2</span>, linesize=<span class=\"number\">0.3</span>, x=<span class=\"number\">4.9</span>, y=<span class=\"number\">0.1</span>) +</span><br><span class=\"line\">         theme(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">0.93</span>, <span class=\"number\">0.5</span>),</span><br><span class=\"line\">               legend.background=element_rect(fill=<span class=\"literal\">NA</span>),</span><br><span class=\"line\">               legend.title=element_text(size=<span class=\"number\">6.5</span>),</span><br><span class=\"line\">               legend.text=element_text(size=<span class=\"number\">4.5</span>),</span><br><span class=\"line\">               legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>),</span><br><span class=\"line\">             )</span><br><span class=\"line\">p</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/58.png\" class=\"\">\n\n<p>另外一种输出方式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p + layout_rectangular() + </span><br><span class=\"line\">    theme(legend.position=<span class=\"built_in\">c</span>(<span class=\"number\">.05</span>, <span class=\"number\">.7</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/59.png\" class=\"\">\n\n<h1 id=\"群体遗学传例子\"><a href=\"#群体遗学传例子\" class=\"headerlink\" title=\"群体遗学传例子\"></a>群体遗学传例子</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(ggstar)</span><br><span class=\"line\"></span><br><span class=\"line\">dat &lt;- read.csv(<span class=\"string\">&quot;data/microreact/Candida_auris/microreact-project-Candidaauris-data.csv&quot;</span>)</span><br><span class=\"line\">tr &lt;- read.tree(<span class=\"string\">&quot;data/microreact/Candida_auris/microreact-project-Candidaauris-tree.nwk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">countries &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&quot;Canada&quot;</span>, <span class=\"string\">&quot;United States&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Colombia&quot;</span>, <span class=\"string\">&quot;Panama&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Venezuela&quot;</span>, <span class=\"string\">&quot;France&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Germany&quot;</span>, <span class=\"string\">&quot;Spain&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;UK&quot;</span>, <span class=\"string\">&quot;India&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Israel&quot;</span>, <span class=\"string\">&quot;Pakistan&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Saudi Arabia&quot;</span>, <span class=\"string\">&quot;United Arab Emirates&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Kenya&quot;</span>, <span class=\"string\">&quot;South Africa&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Japan&quot;</span>, <span class=\"string\">&quot;South Korea&quot;</span>,</span><br><span class=\"line\">               <span class=\"string\">&quot;Australia&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># For the tip points</span></span><br><span class=\"line\">dat1 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;COUNTRY&quot;</span>, <span class=\"string\">&quot;COUNTRY__colour&quot;</span>))</span><br><span class=\"line\">dat1$COUNTRY &lt;- factor(dat1$COUNTRY, levels=countries)</span><br><span class=\"line\">COUNTRYcolors &lt;- dat1[match(countries,dat$COUNTRY),<span class=\"string\">&quot;COUNTRY__colour&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For the heatmap layer</span></span><br><span class=\"line\">dat2 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;FCZ&quot;</span>, <span class=\"string\">&quot;AMB&quot;</span>, <span class=\"string\">&quot;MCF&quot;</span>))</span><br><span class=\"line\">dat2 &lt;- reshape2::melt(dat2,id=<span class=\"string\">&quot;ID&quot;</span>, variable.name=<span class=\"string\">&quot;Antifungal&quot;</span>, value.name=<span class=\"string\">&quot;type&quot;</span>)</span><br><span class=\"line\">dat2$type &lt;- paste(dat2$Antifungal, dat2$type)</span><br><span class=\"line\">dat2$type &lt;- unlist(lapply(dat2$type,</span><br><span class=\"line\">                           <span class=\"keyword\">function</span>(x)ifelse(grepl(<span class=\"string\">&quot;Not_&quot;</span>, x), <span class=\"string\">&quot;Susceptible&quot;</span>, x)))</span><br><span class=\"line\">dat2$Antifungal &lt;- factor(dat2$Antifungal, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;FCZ&quot;</span>, <span class=\"string\">&quot;AMB&quot;</span>, <span class=\"string\">&quot;MCF&quot;</span>))</span><br><span class=\"line\">dat2$type &lt;- factor(dat2$type,</span><br><span class=\"line\">                    levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;FCZ Resistant&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;AMB Resistant&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;MCF Resistant&quot;</span>,</span><br><span class=\"line\">                            <span class=\"string\">&quot;Susceptible&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For the points layer</span></span><br><span class=\"line\">dat3 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;ERG11&quot;</span>, <span class=\"string\">&quot;FKS1&quot;</span>)) %&gt;%</span><br><span class=\"line\">        reshape2::melt(id=<span class=\"string\">&quot;ID&quot;</span>, variable.name=<span class=\"string\">&quot;point&quot;</span>, value.name=<span class=\"string\">&quot;mutation&quot;</span>)</span><br><span class=\"line\">dat3$mutation &lt;- paste(dat3$point, dat3$mutation)</span><br><span class=\"line\">dat3$mutation &lt;- unlist(lapply(dat3$mutation, <span class=\"keyword\">function</span>(x)ifelse(grepl(<span class=\"string\">&quot;WT&quot;</span>,x), <span class=\"literal\">NA</span>,x)))</span><br><span class=\"line\">dat3$mutation &lt;- factor(dat3$mutation, levels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ERG11 Y132F&quot;</span>, <span class=\"string\">&quot;ERG11 K143R&quot;</span>,</span><br><span class=\"line\">                                                <span class=\"string\">&quot;ERG11 F126L&quot;</span>, <span class=\"string\">&quot;FKS1 S639Y/P/F&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For the clade group</span></span><br><span class=\"line\">dat4 &lt;- dat %&gt;% select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ID&quot;</span>, <span class=\"string\">&quot;CLADE&quot;</span>))</span><br><span class=\"line\">dat4 &lt;- aggregate(.~CLADE, dat4, FUN=paste, collapse=<span class=\"string\">&quot;,&quot;</span>)</span><br><span class=\"line\">clades &lt;- lapply(dat4$ID, <span class=\"keyword\">function</span>(x)&#123;unlist(strsplit(x,split=<span class=\"string\">&quot;,&quot;</span>))&#125;)</span><br><span class=\"line\"><span class=\"built_in\">names</span>(clades) &lt;- dat4$CLADE</span><br><span class=\"line\"></span><br><span class=\"line\">tr &lt;- groupOTU(tr, clades, <span class=\"string\">&quot;Clade&quot;</span>)</span><br><span class=\"line\">Clade &lt;- <span class=\"literal\">NULL</span></span><br><span class=\"line\">p &lt;- ggtree(tr=tr, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">15</span>, size=<span class=\"number\">0.2</span>, aes(colour=Clade)) +</span><br><span class=\"line\">     scale_colour_manual(</span><br><span class=\"line\">         values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;black&quot;</span>,<span class=\"string\">&quot;#69B920&quot;</span>,<span class=\"string\">&quot;#9C2E88&quot;</span>,<span class=\"string\">&quot;#F74B00&quot;</span>,<span class=\"string\">&quot;#60C3DB&quot;</span>),</span><br><span class=\"line\">         labels=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;&quot;</span>,<span class=\"string\">&quot;I&quot;</span>, <span class=\"string\">&quot;II&quot;</span>, <span class=\"string\">&quot;III&quot;</span>, <span class=\"string\">&quot;IV&quot;</span>),</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            keyheight=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            order=<span class=\"number\">1</span>,</span><br><span class=\"line\">                            override.aes=<span class=\"built_in\">list</span>(linetype=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;0&quot;</span>=<span class=\"literal\">NA</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade1&quot;</span>=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade2&quot;</span>=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade3&quot;</span>=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                         <span class=\"string\">&quot;Clade4&quot;</span>=<span class=\"number\">1</span></span><br><span class=\"line\">                                                        )</span><br><span class=\"line\">                                             )</span><br><span class=\"line\">                           )</span><br><span class=\"line\">     ) + </span><br><span class=\"line\">     new_scale_colour()</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;- p %&lt;+% dat1 +</span><br><span class=\"line\">     geom_tippoint(aes(colour=COUNTRY),</span><br><span class=\"line\">                   alpha=<span class=\"number\">0</span>) +</span><br><span class=\"line\">     geom_tiplab(aes(colour=COUNTRY),</span><br><span class=\"line\">                   align=<span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">                   linetype=<span class=\"number\">3</span>,</span><br><span class=\"line\">                   size=<span class=\"number\">1</span>,</span><br><span class=\"line\">                   linesize=<span class=\"number\">0.2</span>,</span><br><span class=\"line\">                   show.legend=<span class=\"literal\">FALSE</span></span><br><span class=\"line\">                   ) +</span><br><span class=\"line\">     scale_colour_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Country labels&quot;</span>,</span><br><span class=\"line\">         values=COUNTRYcolors,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            keyheight=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                            order=<span class=\"number\">2</span>,</span><br><span class=\"line\">                            override.aes=<span class=\"built_in\">list</span>(size=<span class=\"number\">2</span>,alpha=<span class=\"number\">1</span>))</span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;- p1 +</span><br><span class=\"line\">      geom_fruit(</span><br><span class=\"line\">          data=dat2,</span><br><span class=\"line\">          geom=geom_tile,</span><br><span class=\"line\">          mapping=aes(x=Antifungal, y=ID, fill=type),</span><br><span class=\"line\">          width=<span class=\"number\">0.1</span>,</span><br><span class=\"line\">          color=<span class=\"string\">&quot;white&quot;</span>,</span><br><span class=\"line\">          pwidth=<span class=\"number\">0.1</span>,</span><br><span class=\"line\">          offset=<span class=\"number\">0.15</span></span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      scale_fill_manual(</span><br><span class=\"line\">           name=<span class=\"string\">&quot;Antifungal susceptibility&quot;</span>,</span><br><span class=\"line\">           values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#595959&quot;</span>, <span class=\"string\">&quot;#B30000&quot;</span>, <span class=\"string\">&quot;#020099&quot;</span>, <span class=\"string\">&quot;#E6E6E6&quot;</span>),</span><br><span class=\"line\">           na.translate=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">           guide=guide_legend(keywidth=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                              keyheight=<span class=\"number\">0.5</span>,</span><br><span class=\"line\">                              order=<span class=\"number\">3</span></span><br><span class=\"line\">                             )</span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      new_scale_fill()</span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;- p2 +</span><br><span class=\"line\">      geom_fruit(</span><br><span class=\"line\">          data=dat3,</span><br><span class=\"line\">          geom=geom_star,</span><br><span class=\"line\">          mapping=aes(x=mutation, y=ID, fill=mutation, starshape=point),</span><br><span class=\"line\">          size=<span class=\"number\">1</span>,</span><br><span class=\"line\">          starstroke=<span class=\"number\">0</span>,</span><br><span class=\"line\">          pwidth=<span class=\"number\">0.1</span>,</span><br><span class=\"line\">          inherit.aes = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">          grid.params=<span class=\"built_in\">list</span>(</span><br><span class=\"line\">                          linetype=<span class=\"number\">3</span>,</span><br><span class=\"line\">                          size=<span class=\"number\">0.2</span></span><br><span class=\"line\">                      )</span><br><span class=\"line\"></span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      scale_fill_manual(</span><br><span class=\"line\">          name=<span class=\"string\">&quot;Point mutations&quot;</span>,</span><br><span class=\"line\">          values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;#329901&quot;</span>, <span class=\"string\">&quot;#0600FF&quot;</span>, <span class=\"string\">&quot;#FF0100&quot;</span>, <span class=\"string\">&quot;#9900CC&quot;</span>),</span><br><span class=\"line\">          guide=guide_legend(keywidth=<span class=\"number\">0.5</span>, keyheight=<span class=\"number\">0.5</span>, order=<span class=\"number\">4</span>,</span><br><span class=\"line\">                             override.aes=<span class=\"built_in\">list</span>(starshape=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;ERG11 Y132F&quot;</span>=<span class=\"number\">15</span>,</span><br><span class=\"line\">                                                           <span class=\"string\">&quot;ERG11 K143R&quot;</span>=<span class=\"number\">15</span>,</span><br><span class=\"line\">                                                           <span class=\"string\">&quot;ERG11 F126L&quot;</span>=<span class=\"number\">15</span>,</span><br><span class=\"line\">                                                           <span class=\"string\">&quot;FKS1 S639Y/P/F&quot;</span>=<span class=\"number\">1</span>),</span><br><span class=\"line\">                                               size=<span class=\"number\">2</span>)</span><br><span class=\"line\">                            ),</span><br><span class=\"line\">          na.translate=<span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      scale_starshape_manual(</span><br><span class=\"line\">          values=<span class=\"built_in\">c</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">          guide=<span class=\"string\">&quot;none&quot;</span></span><br><span class=\"line\">      ) +</span><br><span class=\"line\">      theme(</span><br><span class=\"line\">          legend.background=element_rect(fill=<span class=\"literal\">NA</span>),</span><br><span class=\"line\">          legend.title=element_text(size=<span class=\"number\">7</span>), <span class=\"comment\"># The size should be adjusted with different devout.</span></span><br><span class=\"line\">          legend.text=element_text(size=<span class=\"number\">5.5</span>),</span><br><span class=\"line\">          legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>)</span><br><span class=\"line\">      )</span><br><span class=\"line\">p3</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/60.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggtreeExtra)</span><br><span class=\"line\">library(ggtree)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\">library(treeio)</span><br><span class=\"line\">library(tidytree)</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(ggstar)</span><br><span class=\"line\"></span><br><span class=\"line\">tr &lt;- read.tree(<span class=\"string\">&quot;data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-tree.nwk&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">metada &lt;- read.csv(<span class=\"string\">&quot;data/microreact/Salmonella_Typhi/microreact-project-NJIDqgsS-data.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">metadata &lt;- metada %&gt;%</span><br><span class=\"line\">            select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;country&quot;</span>, <span class=\"string\">&quot;country__colour&quot;</span>, <span class=\"string\">&quot;year&quot;</span>, <span class=\"string\">&quot;year__colour&quot;</span>, <span class=\"string\">&quot;haplotype&quot;</span>))</span><br><span class=\"line\">metadata$haplotype &lt;- unlist(lapply(metadata$haplotype, <span class=\"keyword\">function</span>(x)ifelse(nchar(x)&gt;<span class=\"number\">0</span>,x,<span class=\"literal\">NA</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">countrycolors &lt;- metada %&gt;%</span><br><span class=\"line\">                 select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;country&quot;</span>, <span class=\"string\">&quot;country__colour&quot;</span>)) %&gt;%</span><br><span class=\"line\">                 distinct()</span><br><span class=\"line\"></span><br><span class=\"line\">yearcolors &lt;- metada %&gt;%</span><br><span class=\"line\">              select(<span class=\"built_in\">c</span>(<span class=\"string\">&quot;year&quot;</span>, <span class=\"string\">&quot;year__colour&quot;</span>)) %&gt;%</span><br><span class=\"line\">              distinct()</span><br><span class=\"line\">yearcolors &lt;- yearcolors[order(yearcolors$year, decreasing=<span class=\"literal\">TRUE</span>),]</span><br><span class=\"line\"></span><br><span class=\"line\">metadata$country &lt;- factor(metadata$country, levels=countrycolors$country)</span><br><span class=\"line\">metadata$year &lt;- factor(metadata$year, levels=yearcolors$year)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- ggtree(tr, layout=<span class=\"string\">&quot;fan&quot;</span>, open.angle=<span class=\"number\">15</span>, size=<span class=\"number\">0.1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p &lt;- p %&lt;+% metadata</span><br><span class=\"line\"></span><br><span class=\"line\">p1 &lt;-p +</span><br><span class=\"line\">     geom_tippoint(</span><br><span class=\"line\">         mapping=aes(colour=country),</span><br><span class=\"line\">         size=<span class=\"number\">1.5</span>,</span><br><span class=\"line\">         stroke=<span class=\"number\">0</span>,</span><br><span class=\"line\">         alpha=<span class=\"number\">0.4</span></span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     scale_colour_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Country&quot;</span>,</span><br><span class=\"line\">         values=countrycolors$country__colour,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                            keyheight=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                            ncol=<span class=\"number\">2</span>,</span><br><span class=\"line\">                            override.aes=<span class=\"built_in\">list</span>(size=<span class=\"number\">2</span>,alpha=<span class=\"number\">1</span>),</span><br><span class=\"line\">                            order=<span class=\"number\">1</span>)</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     theme(</span><br><span class=\"line\">         legend.title=element_text(size=<span class=\"number\">5</span>),</span><br><span class=\"line\">         legend.text=element_text(size=<span class=\"number\">4</span>),</span><br><span class=\"line\">         legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>)</span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\">p2 &lt;-p1 +</span><br><span class=\"line\">     geom_fruit(</span><br><span class=\"line\">         geom=geom_star,</span><br><span class=\"line\">         mapping=aes(fill=haplotype),</span><br><span class=\"line\">         starshape=<span class=\"number\">26</span>,</span><br><span class=\"line\">         color=<span class=\"literal\">NA</span>,</span><br><span class=\"line\">         size=<span class=\"number\">2</span>,</span><br><span class=\"line\">         starstroke=<span class=\"number\">0</span>,</span><br><span class=\"line\">         offset=<span class=\"number\">0</span>,</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     scale_fill_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Haplotype&quot;</span>,</span><br><span class=\"line\">         values=<span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>),</span><br><span class=\"line\">         guide=guide_legend(</span><br><span class=\"line\">                   keywidth=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                   keyheight=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                   order=<span class=\"number\">3</span></span><br><span class=\"line\">               ),</span><br><span class=\"line\">         na.translate=<span class=\"literal\">FALSE</span></span><br><span class=\"line\">     )</span><br><span class=\"line\"></span><br><span class=\"line\">p3 &lt;-p2 +</span><br><span class=\"line\">     new_scale_fill() +</span><br><span class=\"line\">     geom_fruit(</span><br><span class=\"line\">         geom=geom_tile,</span><br><span class=\"line\">         mapping=aes(fill=year),</span><br><span class=\"line\">         width=<span class=\"number\">0.002</span>,</span><br><span class=\"line\">         offset=<span class=\"number\">0.1</span></span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     scale_fill_manual(</span><br><span class=\"line\">         name=<span class=\"string\">&quot;Year&quot;</span>,</span><br><span class=\"line\">         values=yearcolors$year__colour,</span><br><span class=\"line\">         guide=guide_legend(keywidth=<span class=\"number\">0.3</span>, keyheight=<span class=\"number\">0.3</span>, ncol=<span class=\"number\">2</span>, order=<span class=\"number\">2</span>)</span><br><span class=\"line\">     ) +</span><br><span class=\"line\">     theme(</span><br><span class=\"line\">           legend.title=element_text(size=<span class=\"number\">6</span>), <span class=\"comment\"># The size should be adjusted with the different devout.</span></span><br><span class=\"line\">           legend.text=element_text(size=<span class=\"number\">4.5</span>),</span><br><span class=\"line\">           legend.spacing.y = unit(<span class=\"number\">0.02</span>, <span class=\"string\">&quot;cm&quot;</span>)</span><br><span class=\"line\">           )</span><br><span class=\"line\">p3</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/15/ggtree%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/61.png\" class=\"\">\n\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1]. Yu G, Smith D K, Zhu H, et al. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data[J]. <em><strong>Methods in Ecology and Evolution</strong></em>, 2017, 8(1): 28-36.</p>\n<p>[2]. <a href=\"https://yulab-smu.top/treedata-book/index.html\">https://yulab-smu.top/treedata-book/index.html</a></p>\n<p>[3]. <a href=\"https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/\">https://cosx.org/2015/11/to-achieve-the-visualization-and-annotation-of-evolutionary-tree-using-ggtree/</a></p>\n<p>[4]. <a href=\"https://yulab-smu.top/treedata-book/chapter1.html\">https://yulab-smu.top/treedata-book/chapter1.html</a></p>\n<p>[5]. Wang L G, Lam T T Y, Xu S, et al. Treeio: an R package for phylogenetic tree input and output with richly annotated and associated data[J]. Molecular biology and evolution, 2020, 37(2): 599-603.</p>\n<p>[6]. <a href=\"https://github.com/YuLab-SMU/tidytree\">https://github.com/YuLab-SMU/tidytree</a></p>\n</blockquote>\n<p>交流请联系：</p>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#x40;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#111;&#109;\">&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#x40;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>\n</blockquote>"},{"title":"NCBI-blast-本地比对","cover":"/img/cover/blast.jpg","toc":true,"toc_number":4,"mathjax":true,"katex":true,"date":"2021-11-23T06:41:53.000Z","updated":"2021-11-23T06:42:16.913Z","keywords":null,"description":null,"top_img":null,"comments":1,"copyright":null,"copyright_author":null,"copyright_author_href":null,"copyright_url":null,"copyright_info":null,"aplayer":null,"highlight_shrink":null,"aside":null,"_content":"\n从这里开始写正文\n\n\n\n\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/NCBI-blast-本地比对.md","raw":"---\ntitle: NCBI-blast-本地比对\ncover: /img/cover/blast.jpg\ntoc: true\ntoc_number: 4\nmathjax: true\nkatex: true\ndate: 2021-11-23 14:41:53\nupdated:\ntags:\ncategories:\nkeywords:\ndescription:\ntop_img:\ncomments:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\naplayer:\nhighlight_shrink:\naside:\n---\n\n从这里开始写正文\n\n\n\n\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"NCBI-blast-本地比对","published":1,"layout":"post","photos":[],"link":"","_id":"ckwbqdgdy0000n0g09t7e3cg9","content":"<p>从这里开始写正文</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#x66;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#x66;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#x33;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#x33;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"","more":"<p>从这里开始写正文</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#x66;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#x66;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#x33;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#x33;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n"},{"title":"data.table学习笔记","abbrlink":"9ba8b5f7","date":"2020-12-23T14:04:26.000Z","_content":"\n后面要处理大量数据，明显感觉到`data.frame`这种格式满足不了大数据要求了，索性把`data.table`学一下。\n\n<!-- more -->\n\n```R\n#install.packages('data.table')\n\n\n# load package\nlibrary(data.table)\n\n# read data\ndt = fread('flights_2014.csv')\n# fread(\"https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv\")\n\n# check numbers of row and column\nnrow(dt)\nncol(dt)\n\n# view names of headers\nnames(dt)\n\n# head data\nhead(dt)\n\n# selecting clunms\ndt1 = dt[,origin] # return a vector\ndt1 = dt[,.(origin)] # retuen a datat.table\ndt1 = dt[,c('origin'),with = FALSE]\n\n# keeping a column based on column position\ndt2 = dt[,2,with = FALSE]\n\n#selecting multiple columns\ndt3 = dt[,.(origin,year,month,hour)]\ndt4 = dt[,c(2:4),with = FALSE]\n\n# dropping a columns\ndt5 = dt[,!c('origin'),with = FALSE]\n\n# dropping multiple columns\ndt6 = dt[,!c('origin','year'),with = FALSE]\n\n# keeping a column that contain 'dep'\ndt7 = dt[,names(dt) %like% 'dep',with = FALSE]\n\n# rename\nsetnames(dt,c('dest'),c('Destination'))\n\n# rename multiple variables\nsetnames(dt, c('Destination','origin'),c('dest','origin.of.flighr'))\n\n# subsetting rows\ndt8 = dt[origin.of.flighr == 'JFK']\ndt9 = dt[origin.of.flighr %in% c('JFK','LGA')]\n\n# not subsetting rows\ndt10 = dt[!origin.of.flighr %in% c('JFK','LGA')]\n\n# filter based on multiple variables\ndt11 = dt[origin.of.flighr == 'JFK' & carrier == 'AA']\n\n# sorting data\ndt12 = setorder(dt,origin.of.flighr)\ndt13 = setorder(dt,-origin.of.flighr)\ndt14 = setorder(dt,origin.of.flighr,-carrier) # ascending then descending\n\n# adding a colume\ndt[,dep_sch:=dep_time-dep_delay]\n\n# adding multiple columns\ndt[,c('dep_sch','arr_sch'):=list(dep_time-dep_delay,arr_time - arr_delay)]\n\n# if else\ndt[,flag:=ifelse(min<50,1,0)]\n\n# subset then subset again\ndt[,dep_sch:=dep_time-dep_delay][,.(dep_time,dep_delay,dep_sch)]\n\n# summarize\ndt[,.(mean = mean(dep_delay,na.rm = TRUE),\n      median = median(arr_delay, na.rm = TRUE),\n      min = min(arr_delay, na.rm = TRUE),\n      max = max(arr_delay, na.rm = TRUE))]\n\n# summarize multiple columns\ndt[,.(mean(arr_delay), mean(dep_delay))]\n```\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/data-table学习笔记.md","raw":"---\ntitle: data.table学习笔记\ntags: R语言\ncategories: R语言\nabbrlink: 9ba8b5f7\ndate: 2020-12-23 22:04:26\n---\n\n后面要处理大量数据，明显感觉到`data.frame`这种格式满足不了大数据要求了，索性把`data.table`学一下。\n\n<!-- more -->\n\n```R\n#install.packages('data.table')\n\n\n# load package\nlibrary(data.table)\n\n# read data\ndt = fread('flights_2014.csv')\n# fread(\"https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv\")\n\n# check numbers of row and column\nnrow(dt)\nncol(dt)\n\n# view names of headers\nnames(dt)\n\n# head data\nhead(dt)\n\n# selecting clunms\ndt1 = dt[,origin] # return a vector\ndt1 = dt[,.(origin)] # retuen a datat.table\ndt1 = dt[,c('origin'),with = FALSE]\n\n# keeping a column based on column position\ndt2 = dt[,2,with = FALSE]\n\n#selecting multiple columns\ndt3 = dt[,.(origin,year,month,hour)]\ndt4 = dt[,c(2:4),with = FALSE]\n\n# dropping a columns\ndt5 = dt[,!c('origin'),with = FALSE]\n\n# dropping multiple columns\ndt6 = dt[,!c('origin','year'),with = FALSE]\n\n# keeping a column that contain 'dep'\ndt7 = dt[,names(dt) %like% 'dep',with = FALSE]\n\n# rename\nsetnames(dt,c('dest'),c('Destination'))\n\n# rename multiple variables\nsetnames(dt, c('Destination','origin'),c('dest','origin.of.flighr'))\n\n# subsetting rows\ndt8 = dt[origin.of.flighr == 'JFK']\ndt9 = dt[origin.of.flighr %in% c('JFK','LGA')]\n\n# not subsetting rows\ndt10 = dt[!origin.of.flighr %in% c('JFK','LGA')]\n\n# filter based on multiple variables\ndt11 = dt[origin.of.flighr == 'JFK' & carrier == 'AA']\n\n# sorting data\ndt12 = setorder(dt,origin.of.flighr)\ndt13 = setorder(dt,-origin.of.flighr)\ndt14 = setorder(dt,origin.of.flighr,-carrier) # ascending then descending\n\n# adding a colume\ndt[,dep_sch:=dep_time-dep_delay]\n\n# adding multiple columns\ndt[,c('dep_sch','arr_sch'):=list(dep_time-dep_delay,arr_time - arr_delay)]\n\n# if else\ndt[,flag:=ifelse(min<50,1,0)]\n\n# subset then subset again\ndt[,dep_sch:=dep_time-dep_delay][,.(dep_time,dep_delay,dep_sch)]\n\n# summarize\ndt[,.(mean = mean(dep_delay,na.rm = TRUE),\n      median = median(arr_delay, na.rm = TRUE),\n      min = min(arr_delay, na.rm = TRUE),\n      max = max(arr_delay, na.rm = TRUE))]\n\n# summarize multiple columns\ndt[,.(mean(arr_delay), mean(dep_delay))]\n```\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"data-table学习笔记","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcdf0000r0g0gtrq450x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>后面要处理大量数据，明显感觉到<code>data.frame</code>这种格式满足不了大数据要求了，索性把<code>data.table</code>学一下。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#install.packages(&#x27;data.table&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load package</span></span><br><span class=\"line\">library(data.table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read data</span></span><br><span class=\"line\">dt = fread(<span class=\"string\">&#x27;flights_2014.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># fread(&quot;https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># check numbers of row and column</span></span><br><span class=\"line\">nrow(dt)</span><br><span class=\"line\">ncol(dt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># view names of headers</span></span><br><span class=\"line\"><span class=\"built_in\">names</span>(dt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># head data</span></span><br><span class=\"line\">head(dt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># selecting clunms</span></span><br><span class=\"line\">dt1 = dt[,origin] <span class=\"comment\"># return a vector</span></span><br><span class=\"line\">dt1 = dt[,.(origin)] <span class=\"comment\"># retuen a datat.table</span></span><br><span class=\"line\">dt1 = dt[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;origin&#x27;</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># keeping a column based on column position</span></span><br><span class=\"line\">dt2 = dt[,<span class=\"number\">2</span>,with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#selecting multiple columns</span></span><br><span class=\"line\">dt3 = dt[,.(origin,year,month,hour)]</span><br><span class=\"line\">dt4 = dt[,<span class=\"built_in\">c</span>(<span class=\"number\">2</span>:<span class=\"number\">4</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dropping a columns</span></span><br><span class=\"line\">dt5 = dt[,!<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;origin&#x27;</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dropping multiple columns</span></span><br><span class=\"line\">dt6 = dt[,!<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;origin&#x27;</span>,<span class=\"string\">&#x27;year&#x27;</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># keeping a column that contain &#x27;dep&#x27;</span></span><br><span class=\"line\">dt7 = dt[,<span class=\"built_in\">names</span>(dt) %like% <span class=\"string\">&#x27;dep&#x27;</span>,with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rename</span></span><br><span class=\"line\">setnames(dt,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;dest&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Destination&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rename multiple variables</span></span><br><span class=\"line\">setnames(dt, <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Destination&#x27;</span>,<span class=\"string\">&#x27;origin&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;dest&#x27;</span>,<span class=\"string\">&#x27;origin.of.flighr&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># subsetting rows</span></span><br><span class=\"line\">dt8 = dt[origin.of.flighr == <span class=\"string\">&#x27;JFK&#x27;</span>]</span><br><span class=\"line\">dt9 = dt[origin.of.flighr %in% <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;JFK&#x27;</span>,<span class=\"string\">&#x27;LGA&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># not subsetting rows</span></span><br><span class=\"line\">dt10 = dt[!origin.of.flighr %in% <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;JFK&#x27;</span>,<span class=\"string\">&#x27;LGA&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># filter based on multiple variables</span></span><br><span class=\"line\">dt11 = dt[origin.of.flighr == <span class=\"string\">&#x27;JFK&#x27;</span> &amp; carrier == <span class=\"string\">&#x27;AA&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sorting data</span></span><br><span class=\"line\">dt12 = setorder(dt,origin.of.flighr)</span><br><span class=\"line\">dt13 = setorder(dt,-origin.of.flighr)</span><br><span class=\"line\">dt14 = setorder(dt,origin.of.flighr,-carrier) <span class=\"comment\"># ascending then descending</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adding a colume</span></span><br><span class=\"line\">dt[,dep_sch:=dep_time-dep_delay]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adding multiple columns</span></span><br><span class=\"line\">dt[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;dep_sch&#x27;</span>,<span class=\"string\">&#x27;arr_sch&#x27;</span>):=<span class=\"built_in\">list</span>(dep_time-dep_delay,arr_time - arr_delay)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if else</span></span><br><span class=\"line\">dt[,flag:=ifelse(<span class=\"built_in\">min</span>&lt;<span class=\"number\">50</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># subset then subset again</span></span><br><span class=\"line\">dt[,dep_sch:=dep_time-dep_delay][,.(dep_time,dep_delay,dep_sch)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># summarize</span></span><br><span class=\"line\">dt[,.(mean = mean(dep_delay,na.rm = <span class=\"literal\">TRUE</span>),</span><br><span class=\"line\">      median = median(arr_delay, na.rm = <span class=\"literal\">TRUE</span>),</span><br><span class=\"line\">      <span class=\"built_in\">min</span> = <span class=\"built_in\">min</span>(arr_delay, na.rm = <span class=\"literal\">TRUE</span>),</span><br><span class=\"line\">      <span class=\"built_in\">max</span> = <span class=\"built_in\">max</span>(arr_delay, na.rm = <span class=\"literal\">TRUE</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># summarize multiple columns</span></span><br><span class=\"line\">dt[,.(mean(arr_delay), mean(dep_delay))]</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>后面要处理大量数据，明显感觉到<code>data.frame</code>这种格式满足不了大数据要求了，索性把<code>data.table</code>学一下。</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#install.packages(&#x27;data.table&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load package</span></span><br><span class=\"line\">library(data.table)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read data</span></span><br><span class=\"line\">dt = fread(<span class=\"string\">&#x27;flights_2014.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># fread(&quot;https://github.com/arunsrinivasan/satrdays-workshop/raw/master/flights_2014.csv&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># check numbers of row and column</span></span><br><span class=\"line\">nrow(dt)</span><br><span class=\"line\">ncol(dt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># view names of headers</span></span><br><span class=\"line\"><span class=\"built_in\">names</span>(dt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># head data</span></span><br><span class=\"line\">head(dt)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># selecting clunms</span></span><br><span class=\"line\">dt1 = dt[,origin] <span class=\"comment\"># return a vector</span></span><br><span class=\"line\">dt1 = dt[,.(origin)] <span class=\"comment\"># retuen a datat.table</span></span><br><span class=\"line\">dt1 = dt[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;origin&#x27;</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># keeping a column based on column position</span></span><br><span class=\"line\">dt2 = dt[,<span class=\"number\">2</span>,with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#selecting multiple columns</span></span><br><span class=\"line\">dt3 = dt[,.(origin,year,month,hour)]</span><br><span class=\"line\">dt4 = dt[,<span class=\"built_in\">c</span>(<span class=\"number\">2</span>:<span class=\"number\">4</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dropping a columns</span></span><br><span class=\"line\">dt5 = dt[,!<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;origin&#x27;</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># dropping multiple columns</span></span><br><span class=\"line\">dt6 = dt[,!<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;origin&#x27;</span>,<span class=\"string\">&#x27;year&#x27;</span>),with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># keeping a column that contain &#x27;dep&#x27;</span></span><br><span class=\"line\">dt7 = dt[,<span class=\"built_in\">names</span>(dt) %like% <span class=\"string\">&#x27;dep&#x27;</span>,with = <span class=\"literal\">FALSE</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rename</span></span><br><span class=\"line\">setnames(dt,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;dest&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Destination&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rename multiple variables</span></span><br><span class=\"line\">setnames(dt, <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Destination&#x27;</span>,<span class=\"string\">&#x27;origin&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;dest&#x27;</span>,<span class=\"string\">&#x27;origin.of.flighr&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># subsetting rows</span></span><br><span class=\"line\">dt8 = dt[origin.of.flighr == <span class=\"string\">&#x27;JFK&#x27;</span>]</span><br><span class=\"line\">dt9 = dt[origin.of.flighr %in% <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;JFK&#x27;</span>,<span class=\"string\">&#x27;LGA&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># not subsetting rows</span></span><br><span class=\"line\">dt10 = dt[!origin.of.flighr %in% <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;JFK&#x27;</span>,<span class=\"string\">&#x27;LGA&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># filter based on multiple variables</span></span><br><span class=\"line\">dt11 = dt[origin.of.flighr == <span class=\"string\">&#x27;JFK&#x27;</span> &amp; carrier == <span class=\"string\">&#x27;AA&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sorting data</span></span><br><span class=\"line\">dt12 = setorder(dt,origin.of.flighr)</span><br><span class=\"line\">dt13 = setorder(dt,-origin.of.flighr)</span><br><span class=\"line\">dt14 = setorder(dt,origin.of.flighr,-carrier) <span class=\"comment\"># ascending then descending</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adding a colume</span></span><br><span class=\"line\">dt[,dep_sch:=dep_time-dep_delay]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adding multiple columns</span></span><br><span class=\"line\">dt[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;dep_sch&#x27;</span>,<span class=\"string\">&#x27;arr_sch&#x27;</span>):=<span class=\"built_in\">list</span>(dep_time-dep_delay,arr_time - arr_delay)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if else</span></span><br><span class=\"line\">dt[,flag:=ifelse(<span class=\"built_in\">min</span>&lt;<span class=\"number\">50</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># subset then subset again</span></span><br><span class=\"line\">dt[,dep_sch:=dep_time-dep_delay][,.(dep_time,dep_delay,dep_sch)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># summarize</span></span><br><span class=\"line\">dt[,.(mean = mean(dep_delay,na.rm = <span class=\"literal\">TRUE</span>),</span><br><span class=\"line\">      median = median(arr_delay, na.rm = <span class=\"literal\">TRUE</span>),</span><br><span class=\"line\">      <span class=\"built_in\">min</span> = <span class=\"built_in\">min</span>(arr_delay, na.rm = <span class=\"literal\">TRUE</span>),</span><br><span class=\"line\">      <span class=\"built_in\">max</span> = <span class=\"built_in\">max</span>(arr_delay, na.rm = <span class=\"literal\">TRUE</span>))]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># summarize multiple columns</span></span><br><span class=\"line\">dt[,.(mean(arr_delay), mean(dep_delay))]</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"clusterProfiler做富集分析","abbrlink":"97c73a9e","date":"2021-03-31T06:51:12.000Z","_content":"\n最近在分析水稻的转录组数据，用的参考基因组是我们小组自己组装的，没有用常见的那几个参考基因组做比对，这就导致一个问题，<!-- more -->得到的基因ID是我们参考基因组上的，而不是常见的水稻基因ID，也就无法转换成ENTREZID，想要用`clusterProfiler`$^{[1]}做$`GO`或者`KEGG`富集分析就很困难。难道就用公司返回的数据么？肯定不行啊，想要自己探索数据都不方便。怎么办呢？\n\n仔细观察公司返回的数据，发现他们注释的信息里面是有GO和KEGG信息的：\n{% asset_img 1.png %}\n\n那我把这些信息整合一下就可以用`clusterProfiler`包的函数`enricher`进行富集分析。\n\n# 构建富集分析的背景文件\n\n通过一些列的代码将公司返回的数据里面的相关信息进行整理：\n\n{% asset_img 2.png %}\n\n第一列是基因ID，第二列是GO term的ID，第三列是GO term的描述，第四列是GO term的分类。\n\n这个文件就是富集分析里面用到背景文件，背景文件里面的基因数量越多，后面富集到的也就越多。\n\n# 开始富集分析\n\n```R\ngo.rich.1 = enricher(gene = df.1$id, # 输入的差异基因的ID\n                     TERM2GENE = go.anno[c('ID','gene.id')], # 指定背景文件中的基因ID\n                     TERM2NAME = go.anno[c('ID','Description')], # 指定背景文件中的GO term的描述\n                     pvalueCutoff = 1, # p值阈值\n                     pAdjustMethod = 'BH', # p值校正方法\n                     maxGSSize = length(df.1$id)) # 最大基因数量\n```\n\n运行完了以后，就得到对应的富集分析结果。\n\n# 富集分析结果可视化\n\n可视化我没有选择`clusterProfiler`默认的绘图函数，而是先把数据稍加整理，然后用`ggplot2`进行可视化。\n\n{% asset_img 3.png %}\n\n```R\nggplot(df.plot, aes(GeneRatio,Description)) +\n  geom_point(aes(size = Count, shape = Ontology, color = pvalue)) +\n  scale_color_gradient(low = 'navy',high = 'firebrick3') +\n  labs(y = 'GO term', title = '15(15||15) VS 87(87||87)') +\n  theme_bw() +\n  theme(axis.text = element_text(color = 'black',size = 12))\n```\n\n{% asset_img 4.png %}\n\n# 参考文献：\n\n>[1] Yu G, Wang L G, Han Y, et al. clusterProfiler: an R package for comparing biological themes among gene clusters[J]. Omics: a journal of integrative biology, 2012, 16(5): 284-287.\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/clusterProfiler做富集分析.md","raw":"---\ntitle: clusterProfiler做富集分析\ntags: R语言\ncategories: R语言\nabbrlink: 97c73a9e\ndate: 2021-03-31 14:51:12\n---\n\n最近在分析水稻的转录组数据，用的参考基因组是我们小组自己组装的，没有用常见的那几个参考基因组做比对，这就导致一个问题，<!-- more -->得到的基因ID是我们参考基因组上的，而不是常见的水稻基因ID，也就无法转换成ENTREZID，想要用`clusterProfiler`$^{[1]}做$`GO`或者`KEGG`富集分析就很困难。难道就用公司返回的数据么？肯定不行啊，想要自己探索数据都不方便。怎么办呢？\n\n仔细观察公司返回的数据，发现他们注释的信息里面是有GO和KEGG信息的：\n{% asset_img 1.png %}\n\n那我把这些信息整合一下就可以用`clusterProfiler`包的函数`enricher`进行富集分析。\n\n# 构建富集分析的背景文件\n\n通过一些列的代码将公司返回的数据里面的相关信息进行整理：\n\n{% asset_img 2.png %}\n\n第一列是基因ID，第二列是GO term的ID，第三列是GO term的描述，第四列是GO term的分类。\n\n这个文件就是富集分析里面用到背景文件，背景文件里面的基因数量越多，后面富集到的也就越多。\n\n# 开始富集分析\n\n```R\ngo.rich.1 = enricher(gene = df.1$id, # 输入的差异基因的ID\n                     TERM2GENE = go.anno[c('ID','gene.id')], # 指定背景文件中的基因ID\n                     TERM2NAME = go.anno[c('ID','Description')], # 指定背景文件中的GO term的描述\n                     pvalueCutoff = 1, # p值阈值\n                     pAdjustMethod = 'BH', # p值校正方法\n                     maxGSSize = length(df.1$id)) # 最大基因数量\n```\n\n运行完了以后，就得到对应的富集分析结果。\n\n# 富集分析结果可视化\n\n可视化我没有选择`clusterProfiler`默认的绘图函数，而是先把数据稍加整理，然后用`ggplot2`进行可视化。\n\n{% asset_img 3.png %}\n\n```R\nggplot(df.plot, aes(GeneRatio,Description)) +\n  geom_point(aes(size = Count, shape = Ontology, color = pvalue)) +\n  scale_color_gradient(low = 'navy',high = 'firebrick3') +\n  labs(y = 'GO term', title = '15(15||15) VS 87(87||87)') +\n  theme_bw() +\n  theme(axis.text = element_text(color = 'black',size = 12))\n```\n\n{% asset_img 4.png %}\n\n# 参考文献：\n\n>[1] Yu G, Wang L G, Han Y, et al. clusterProfiler: an R package for comparing biological themes among gene clusters[J]. Omics: a journal of integrative biology, 2012, 16(5): 284-287.\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"clusterProfiler做富集分析","published":1,"updated":"2021-03-31T09:15:11.990Z","_id":"ckwbqwcdh0001r0g009o7dqrt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近在分析水稻的转录组数据，用的参考基因组是我们小组自己组装的，没有用常见的那几个参考基因组做比对，这就导致一个问题，<span id=\"more\"></span>得到的基因ID是我们参考基因组上的，而不是常见的水稻基因ID，也就无法转换成ENTREZID，想要用<code>clusterProfiler</code>$^{[1]}做$<code>GO</code>或者<code>KEGG</code>富集分析就很困难。难道就用公司返回的数据么？肯定不行啊，想要自己探索数据都不方便。怎么办呢？</p>\n<p>仔细观察公司返回的数据，发现他们注释的信息里面是有GO和KEGG信息的：</p>\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>那我把这些信息整合一下就可以用<code>clusterProfiler</code>包的函数<code>enricher</code>进行富集分析。</p>\n<h1 id=\"构建富集分析的背景文件\"><a href=\"#构建富集分析的背景文件\" class=\"headerlink\" title=\"构建富集分析的背景文件\"></a>构建富集分析的背景文件</h1><p>通过一些列的代码将公司返回的数据里面的相关信息进行整理：</p>\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>第一列是基因ID，第二列是GO term的ID，第三列是GO term的描述，第四列是GO term的分类。</p>\n<p>这个文件就是富集分析里面用到背景文件，背景文件里面的基因数量越多，后面富集到的也就越多。</p>\n<h1 id=\"开始富集分析\"><a href=\"#开始富集分析\" class=\"headerlink\" title=\"开始富集分析\"></a>开始富集分析</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go.rich.1 = enricher(gene = df.1$id, <span class=\"comment\"># 输入的差异基因的ID</span></span><br><span class=\"line\">                     TERM2GENE = go.anno[<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;ID&#x27;</span>,<span class=\"string\">&#x27;gene.id&#x27;</span>)], <span class=\"comment\"># 指定背景文件中的基因ID</span></span><br><span class=\"line\">                     TERM2NAME = go.anno[<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;ID&#x27;</span>,<span class=\"string\">&#x27;Description&#x27;</span>)], <span class=\"comment\"># 指定背景文件中的GO term的描述</span></span><br><span class=\"line\">                     pvalueCutoff = <span class=\"number\">1</span>, <span class=\"comment\"># p值阈值</span></span><br><span class=\"line\">                     pAdjustMethod = <span class=\"string\">&#x27;BH&#x27;</span>, <span class=\"comment\"># p值校正方法</span></span><br><span class=\"line\">                     maxGSSize = <span class=\"built_in\">length</span>(df.1$id)) <span class=\"comment\"># 最大基因数量</span></span><br></pre></td></tr></table></figure>\n\n<p>运行完了以后，就得到对应的富集分析结果。</p>\n<h1 id=\"富集分析结果可视化\"><a href=\"#富集分析结果可视化\" class=\"headerlink\" title=\"富集分析结果可视化\"></a>富集分析结果可视化</h1><p>可视化我没有选择<code>clusterProfiler</code>默认的绘图函数，而是先把数据稍加整理，然后用<code>ggplot2</code>进行可视化。</p>\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot(df.plot, aes(GeneRatio,Description)) +</span><br><span class=\"line\">  geom_point(aes(size = Count, shape = Ontology, color = pvalue)) +</span><br><span class=\"line\">  scale_color_gradient(low = <span class=\"string\">&#x27;navy&#x27;</span>,high = <span class=\"string\">&#x27;firebrick3&#x27;</span>) +</span><br><span class=\"line\">  labs(y = <span class=\"string\">&#x27;GO term&#x27;</span>, title = <span class=\"string\">&#x27;15(15||15) VS 87(87||87)&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<h1 id=\"参考文献：\"><a href=\"#参考文献：\" class=\"headerlink\" title=\"参考文献：\"></a>参考文献：</h1><blockquote>\n<p>[1] Yu G, Wang L G, Han Y, et al. clusterProfiler: an R package for comparing biological themes among gene clusters[J]. Omics: a journal of integrative biology, 2012, 16(5): 284-287.</p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;\">&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>最近在分析水稻的转录组数据，用的参考基因组是我们小组自己组装的，没有用常见的那几个参考基因组做比对，这就导致一个问题，","more":"得到的基因ID是我们参考基因组上的，而不是常见的水稻基因ID，也就无法转换成ENTREZID，想要用<code>clusterProfiler</code>$^{[1]}做$<code>GO</code>或者<code>KEGG</code>富集分析就很困难。难道就用公司返回的数据么？肯定不行啊，想要自己探索数据都不方便。怎么办呢？</p>\n<p>仔细观察公司返回的数据，发现他们注释的信息里面是有GO和KEGG信息的：</p>\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>那我把这些信息整合一下就可以用<code>clusterProfiler</code>包的函数<code>enricher</code>进行富集分析。</p>\n<h1 id=\"构建富集分析的背景文件\"><a href=\"#构建富集分析的背景文件\" class=\"headerlink\" title=\"构建富集分析的背景文件\"></a>构建富集分析的背景文件</h1><p>通过一些列的代码将公司返回的数据里面的相关信息进行整理：</p>\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>第一列是基因ID，第二列是GO term的ID，第三列是GO term的描述，第四列是GO term的分类。</p>\n<p>这个文件就是富集分析里面用到背景文件，背景文件里面的基因数量越多，后面富集到的也就越多。</p>\n<h1 id=\"开始富集分析\"><a href=\"#开始富集分析\" class=\"headerlink\" title=\"开始富集分析\"></a>开始富集分析</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go.rich.1 = enricher(gene = df.1$id, <span class=\"comment\"># 输入的差异基因的ID</span></span><br><span class=\"line\">                     TERM2GENE = go.anno[<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;ID&#x27;</span>,<span class=\"string\">&#x27;gene.id&#x27;</span>)], <span class=\"comment\"># 指定背景文件中的基因ID</span></span><br><span class=\"line\">                     TERM2NAME = go.anno[<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;ID&#x27;</span>,<span class=\"string\">&#x27;Description&#x27;</span>)], <span class=\"comment\"># 指定背景文件中的GO term的描述</span></span><br><span class=\"line\">                     pvalueCutoff = <span class=\"number\">1</span>, <span class=\"comment\"># p值阈值</span></span><br><span class=\"line\">                     pAdjustMethod = <span class=\"string\">&#x27;BH&#x27;</span>, <span class=\"comment\"># p值校正方法</span></span><br><span class=\"line\">                     maxGSSize = <span class=\"built_in\">length</span>(df.1$id)) <span class=\"comment\"># 最大基因数量</span></span><br></pre></td></tr></table></figure>\n\n<p>运行完了以后，就得到对应的富集分析结果。</p>\n<h1 id=\"富集分析结果可视化\"><a href=\"#富集分析结果可视化\" class=\"headerlink\" title=\"富集分析结果可视化\"></a>富集分析结果可视化</h1><p>可视化我没有选择<code>clusterProfiler</code>默认的绘图函数，而是先把数据稍加整理，然后用<code>ggplot2</code>进行可视化。</p>\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ggplot(df.plot, aes(GeneRatio,Description)) +</span><br><span class=\"line\">  geom_point(aes(size = Count, shape = Ontology, color = pvalue)) +</span><br><span class=\"line\">  scale_color_gradient(low = <span class=\"string\">&#x27;navy&#x27;</span>,high = <span class=\"string\">&#x27;firebrick3&#x27;</span>) +</span><br><span class=\"line\">  labs(y = <span class=\"string\">&#x27;GO term&#x27;</span>, title = <span class=\"string\">&#x27;15(15||15) VS 87(87||87)&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>))</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/03/31/clusterProfiler%E5%81%9A%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<h1 id=\"参考文献：\"><a href=\"#参考文献：\" class=\"headerlink\" title=\"参考文献：\"></a>参考文献：</h1><blockquote>\n<p>[1] Yu G, Wang L G, Han Y, et al. clusterProfiler: an R package for comparing biological themes among gene clusters[J]. Omics: a journal of integrative biology, 2012, 16(5): 284-287.</p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;\">&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"GENIE3构建基因调控网络","abbrlink":"10120676","date":"2021-07-06T02:20:00.000Z","_content":"\n最近一直寻思着构建基因共表达网络，之前了解到的方法是根据相关性构建互作网络。想着看看有没有新的方法，找到了这样一篇文献：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n谷歌学术显示该文章已经被引用940余次，引用的期刊不乏***Nature***等。\n\n具体的算法实现过程看不懂，那就应用吧。\n\n检索发现官方教程：https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html\n\n# 输入数据\n\n需要输入的数据是个表达矩阵，矩阵的行是基因，列是样本：\n\n```R\n##       Sample1 Sample2 Sample3 Sample4 Sample5\n## Gene1       9       9       6       4       6\n## Gene2       7       1       1       9       2\n## Gene3      10       6       6       7       9\n## Gene4       6       2      10       5       7\n## Gene5       6       3      10       2      10\n## Gene6       7       1       4      10       8\n```\n\n需要注意的是，作者在教程中提到输入的基因表达矩阵不能进行任何的处理，包括标准化、筛选及log转换等。\n\n# 函数参数\n\n```R\nGENIE3(\n  exprMatrix, # 表达矩阵\n  regulators = NULL, # 指定潜在的调控因子，比如转录因子等\n  targets = NULL, # 潜在的被调控的靶标基因\n  treeMethod = \"RF\", # 选择方法，默认的是“RF\"（随机森林），还可以选择“ET”（Extra-Trees）\n  K = \"sqrt\", \n  nTrees = 1000, # 树的量，默认是1000\n  nCores = 1, # 用于并行计算的核数，表达矩阵较大时选择并行，运算速度更快。\n  returnMatrix = TRUE, # 结果返回形式是矩阵还是list，选择\"TRUE\"就返回矩阵，否则就返回list\n  verbose = FALSE # 是否展示计算进度，默认是FALSE，即不展示计算进度\n)\n```\n\n# 输出结果\n\n```R\n> head(linkList)\n  regulatoryGene targetGene    weight\n1          Gene8      Gene4 0.2056790\n2         Gene13      Gene3 0.1918921\n3         Gene12      Gene3 0.1822270\n4          Gene7      Gene1 0.1801217\n5         Gene17      Gene9 0.1781883\n6          Gene5      Gene6 0.1750425\n```\n\n输出的结果有三列，分别是调控基因和被调控基因及权重weight。\n\n# 结果提取\n\n如果选择参数`returnMatrix = TRUE`的话，返回的就是矩阵，否则返回的是list，需要进行提取。\n\n提取方式有两种：\n\n- 提取前多少个\n- 按照阈值进行提取\n\n```\n# 提取前几位top调控连接\nlinkList <- getLinkList(weightMat, reportMax=5)\n\n# 按阈值提取\nlinkList <- getLinkList(weightMat, threshold=0.1)\n```\n\n# 注意事项\n\n输出结果中的`weight`是没有统计学意义的，阈值的选择需要按照自己的经验进行选择。\n\n# 结果可视化\n\n最后的结果可以用Gephi或者是Cytoscape等软件进行可视化。\n\nGephi安装参考教程：https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ\n\nGephi使用简明教程：https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw\n\n{% asset_img 2.png %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/GENIE3构建基因调控网络.md","raw":"---\ntitle: GENIE3构建基因调控网络\ntags: R语言\ncategories: R语言\nabbrlink: '10120676'\ndate: 2021-07-06 10:20:00\n---\n\n最近一直寻思着构建基因共表达网络，之前了解到的方法是根据相关性构建互作网络。想着看看有没有新的方法，找到了这样一篇文献：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n谷歌学术显示该文章已经被引用940余次，引用的期刊不乏***Nature***等。\n\n具体的算法实现过程看不懂，那就应用吧。\n\n检索发现官方教程：https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html\n\n# 输入数据\n\n需要输入的数据是个表达矩阵，矩阵的行是基因，列是样本：\n\n```R\n##       Sample1 Sample2 Sample3 Sample4 Sample5\n## Gene1       9       9       6       4       6\n## Gene2       7       1       1       9       2\n## Gene3      10       6       6       7       9\n## Gene4       6       2      10       5       7\n## Gene5       6       3      10       2      10\n## Gene6       7       1       4      10       8\n```\n\n需要注意的是，作者在教程中提到输入的基因表达矩阵不能进行任何的处理，包括标准化、筛选及log转换等。\n\n# 函数参数\n\n```R\nGENIE3(\n  exprMatrix, # 表达矩阵\n  regulators = NULL, # 指定潜在的调控因子，比如转录因子等\n  targets = NULL, # 潜在的被调控的靶标基因\n  treeMethod = \"RF\", # 选择方法，默认的是“RF\"（随机森林），还可以选择“ET”（Extra-Trees）\n  K = \"sqrt\", \n  nTrees = 1000, # 树的量，默认是1000\n  nCores = 1, # 用于并行计算的核数，表达矩阵较大时选择并行，运算速度更快。\n  returnMatrix = TRUE, # 结果返回形式是矩阵还是list，选择\"TRUE\"就返回矩阵，否则就返回list\n  verbose = FALSE # 是否展示计算进度，默认是FALSE，即不展示计算进度\n)\n```\n\n# 输出结果\n\n```R\n> head(linkList)\n  regulatoryGene targetGene    weight\n1          Gene8      Gene4 0.2056790\n2         Gene13      Gene3 0.1918921\n3         Gene12      Gene3 0.1822270\n4          Gene7      Gene1 0.1801217\n5         Gene17      Gene9 0.1781883\n6          Gene5      Gene6 0.1750425\n```\n\n输出的结果有三列，分别是调控基因和被调控基因及权重weight。\n\n# 结果提取\n\n如果选择参数`returnMatrix = TRUE`的话，返回的就是矩阵，否则返回的是list，需要进行提取。\n\n提取方式有两种：\n\n- 提取前多少个\n- 按照阈值进行提取\n\n```\n# 提取前几位top调控连接\nlinkList <- getLinkList(weightMat, reportMax=5)\n\n# 按阈值提取\nlinkList <- getLinkList(weightMat, threshold=0.1)\n```\n\n# 注意事项\n\n输出结果中的`weight`是没有统计学意义的，阈值的选择需要按照自己的经验进行选择。\n\n# 结果可视化\n\n最后的结果可以用Gephi或者是Cytoscape等软件进行可视化。\n\nGephi安装参考教程：https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ\n\nGephi使用简明教程：https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw\n\n{% asset_img 2.png %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"GENIE3构建基因调控网络","published":1,"updated":"2021-07-25T09:17:52.107Z","_id":"ckwbqwcdj0003r0g04pm2c2t9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近一直寻思着构建基因共表达网络，之前了解到的方法是根据相关性构建互作网络。想着看看有没有新的方法，找到了这样一篇文献：</p>\n<span id=\"more\"></span>\n\n<img src=\"/2021/07/06/GENIE3%E6%9E%84%E5%BB%BA%E5%9F%BA%E5%9B%A0%E8%B0%83%E6%8E%A7%E7%BD%91%E7%BB%9C/1.png\" class=\"\">\n\n<p>谷歌学术显示该文章已经被引用940余次，引用的期刊不乏<em><strong>Nature</strong></em>等。</p>\n<p>具体的算法实现过程看不懂，那就应用吧。</p>\n<p>检索发现官方教程：<a href=\"https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html\">https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html</a></p>\n<h1 id=\"输入数据\"><a href=\"#输入数据\" class=\"headerlink\" title=\"输入数据\"></a>输入数据</h1><p>需要输入的数据是个表达矩阵，矩阵的行是基因，列是样本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##       Sample1 Sample2 Sample3 Sample4 Sample5</span></span><br><span class=\"line\"><span class=\"comment\">## Gene1       9       9       6       4       6</span></span><br><span class=\"line\"><span class=\"comment\">## Gene2       7       1       1       9       2</span></span><br><span class=\"line\"><span class=\"comment\">## Gene3      10       6       6       7       9</span></span><br><span class=\"line\"><span class=\"comment\">## Gene4       6       2      10       5       7</span></span><br><span class=\"line\"><span class=\"comment\">## Gene5       6       3      10       2      10</span></span><br><span class=\"line\"><span class=\"comment\">## Gene6       7       1       4      10       8</span></span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是，作者在教程中提到输入的基因表达矩阵不能进行任何的处理，包括标准化、筛选及log转换等。</p>\n<h1 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GENIE3(</span><br><span class=\"line\">  exprMatrix, <span class=\"comment\"># 表达矩阵</span></span><br><span class=\"line\">  regulators = <span class=\"literal\">NULL</span>, <span class=\"comment\"># 指定潜在的调控因子，比如转录因子等</span></span><br><span class=\"line\">  targets = <span class=\"literal\">NULL</span>, <span class=\"comment\"># 潜在的被调控的靶标基因</span></span><br><span class=\"line\">  treeMethod = <span class=\"string\">&quot;RF&quot;</span>, <span class=\"comment\"># 选择方法，默认的是“RF&quot;（随机森林），还可以选择“ET”（Extra-Trees）</span></span><br><span class=\"line\">  K = <span class=\"string\">&quot;sqrt&quot;</span>, </span><br><span class=\"line\">  nTrees = <span class=\"number\">1000</span>, <span class=\"comment\"># 树的量，默认是1000</span></span><br><span class=\"line\">  nCores = <span class=\"number\">1</span>, <span class=\"comment\"># 用于并行计算的核数，表达矩阵较大时选择并行，运算速度更快。</span></span><br><span class=\"line\">  returnMatrix = <span class=\"literal\">TRUE</span>, <span class=\"comment\"># 结果返回形式是矩阵还是list，选择&quot;TRUE&quot;就返回矩阵，否则就返回list</span></span><br><span class=\"line\">  verbose = <span class=\"literal\">FALSE</span> <span class=\"comment\"># 是否展示计算进度，默认是FALSE，即不展示计算进度</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输出结果\"><a href=\"#输出结果\" class=\"headerlink\" title=\"输出结果\"></a>输出结果</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; head(linkList)</span><br><span class=\"line\">  regulatoryGene targetGene    weight</span><br><span class=\"line\"><span class=\"number\">1</span>          Gene8      Gene4 <span class=\"number\">0.2056790</span></span><br><span class=\"line\"><span class=\"number\">2</span>         Gene13      Gene3 <span class=\"number\">0.1918921</span></span><br><span class=\"line\"><span class=\"number\">3</span>         Gene12      Gene3 <span class=\"number\">0.1822270</span></span><br><span class=\"line\"><span class=\"number\">4</span>          Gene7      Gene1 <span class=\"number\">0.1801217</span></span><br><span class=\"line\"><span class=\"number\">5</span>         Gene17      Gene9 <span class=\"number\">0.1781883</span></span><br><span class=\"line\"><span class=\"number\">6</span>          Gene5      Gene6 <span class=\"number\">0.1750425</span></span><br></pre></td></tr></table></figure>\n\n<p>输出的结果有三列，分别是调控基因和被调控基因及权重weight。</p>\n<h1 id=\"结果提取\"><a href=\"#结果提取\" class=\"headerlink\" title=\"结果提取\"></a>结果提取</h1><p>如果选择参数<code>returnMatrix = TRUE</code>的话，返回的就是矩阵，否则返回的是list，需要进行提取。</p>\n<p>提取方式有两种：</p>\n<ul>\n<li>提取前多少个</li>\n<li>按照阈值进行提取</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 提取前几位top调控连接</span><br><span class=\"line\">linkList &lt;- getLinkList(weightMat, reportMax=5)</span><br><span class=\"line\"></span><br><span class=\"line\"># 按阈值提取</span><br><span class=\"line\">linkList &lt;- getLinkList(weightMat, threshold=0.1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>输出结果中的<code>weight</code>是没有统计学意义的，阈值的选择需要按照自己的经验进行选择。</p>\n<h1 id=\"结果可视化\"><a href=\"#结果可视化\" class=\"headerlink\" title=\"结果可视化\"></a>结果可视化</h1><p>最后的结果可以用Gephi或者是Cytoscape等软件进行可视化。</p>\n<p>Gephi安装参考教程：<a href=\"https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ\">https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ</a></p>\n<p>Gephi使用简明教程：<a href=\"https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw\">https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw</a></p>\n<img src=\"/2021/07/06/GENIE3%E6%9E%84%E5%BB%BA%E5%9F%BA%E5%9B%A0%E8%B0%83%E6%8E%A7%E7%BD%91%E7%BB%9C/2.png\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>最近一直寻思着构建基因共表达网络，之前了解到的方法是根据相关性构建互作网络。想着看看有没有新的方法，找到了这样一篇文献：</p>","more":"<img src=\"/2021/07/06/GENIE3%E6%9E%84%E5%BB%BA%E5%9F%BA%E5%9B%A0%E8%B0%83%E6%8E%A7%E7%BD%91%E7%BB%9C/1.png\" class=\"\">\n\n<p>谷歌学术显示该文章已经被引用940余次，引用的期刊不乏<em><strong>Nature</strong></em>等。</p>\n<p>具体的算法实现过程看不懂，那就应用吧。</p>\n<p>检索发现官方教程：<a href=\"https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html\">https://bioconductor.org/packages/release/bioc/vignettes/GENIE3/inst/doc/GENIE3.html</a></p>\n<h1 id=\"输入数据\"><a href=\"#输入数据\" class=\"headerlink\" title=\"输入数据\"></a>输入数据</h1><p>需要输入的数据是个表达矩阵，矩阵的行是基因，列是样本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##       Sample1 Sample2 Sample3 Sample4 Sample5</span></span><br><span class=\"line\"><span class=\"comment\">## Gene1       9       9       6       4       6</span></span><br><span class=\"line\"><span class=\"comment\">## Gene2       7       1       1       9       2</span></span><br><span class=\"line\"><span class=\"comment\">## Gene3      10       6       6       7       9</span></span><br><span class=\"line\"><span class=\"comment\">## Gene4       6       2      10       5       7</span></span><br><span class=\"line\"><span class=\"comment\">## Gene5       6       3      10       2      10</span></span><br><span class=\"line\"><span class=\"comment\">## Gene6       7       1       4      10       8</span></span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是，作者在教程中提到输入的基因表达矩阵不能进行任何的处理，包括标准化、筛选及log转换等。</p>\n<h1 id=\"函数参数\"><a href=\"#函数参数\" class=\"headerlink\" title=\"函数参数\"></a>函数参数</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GENIE3(</span><br><span class=\"line\">  exprMatrix, <span class=\"comment\"># 表达矩阵</span></span><br><span class=\"line\">  regulators = <span class=\"literal\">NULL</span>, <span class=\"comment\"># 指定潜在的调控因子，比如转录因子等</span></span><br><span class=\"line\">  targets = <span class=\"literal\">NULL</span>, <span class=\"comment\"># 潜在的被调控的靶标基因</span></span><br><span class=\"line\">  treeMethod = <span class=\"string\">&quot;RF&quot;</span>, <span class=\"comment\"># 选择方法，默认的是“RF&quot;（随机森林），还可以选择“ET”（Extra-Trees）</span></span><br><span class=\"line\">  K = <span class=\"string\">&quot;sqrt&quot;</span>, </span><br><span class=\"line\">  nTrees = <span class=\"number\">1000</span>, <span class=\"comment\"># 树的量，默认是1000</span></span><br><span class=\"line\">  nCores = <span class=\"number\">1</span>, <span class=\"comment\"># 用于并行计算的核数，表达矩阵较大时选择并行，运算速度更快。</span></span><br><span class=\"line\">  returnMatrix = <span class=\"literal\">TRUE</span>, <span class=\"comment\"># 结果返回形式是矩阵还是list，选择&quot;TRUE&quot;就返回矩阵，否则就返回list</span></span><br><span class=\"line\">  verbose = <span class=\"literal\">FALSE</span> <span class=\"comment\"># 是否展示计算进度，默认是FALSE，即不展示计算进度</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输出结果\"><a href=\"#输出结果\" class=\"headerlink\" title=\"输出结果\"></a>输出结果</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; head(linkList)</span><br><span class=\"line\">  regulatoryGene targetGene    weight</span><br><span class=\"line\"><span class=\"number\">1</span>          Gene8      Gene4 <span class=\"number\">0.2056790</span></span><br><span class=\"line\"><span class=\"number\">2</span>         Gene13      Gene3 <span class=\"number\">0.1918921</span></span><br><span class=\"line\"><span class=\"number\">3</span>         Gene12      Gene3 <span class=\"number\">0.1822270</span></span><br><span class=\"line\"><span class=\"number\">4</span>          Gene7      Gene1 <span class=\"number\">0.1801217</span></span><br><span class=\"line\"><span class=\"number\">5</span>         Gene17      Gene9 <span class=\"number\">0.1781883</span></span><br><span class=\"line\"><span class=\"number\">6</span>          Gene5      Gene6 <span class=\"number\">0.1750425</span></span><br></pre></td></tr></table></figure>\n\n<p>输出的结果有三列，分别是调控基因和被调控基因及权重weight。</p>\n<h1 id=\"结果提取\"><a href=\"#结果提取\" class=\"headerlink\" title=\"结果提取\"></a>结果提取</h1><p>如果选择参数<code>returnMatrix = TRUE</code>的话，返回的就是矩阵，否则返回的是list，需要进行提取。</p>\n<p>提取方式有两种：</p>\n<ul>\n<li>提取前多少个</li>\n<li>按照阈值进行提取</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 提取前几位top调控连接</span><br><span class=\"line\">linkList &lt;- getLinkList(weightMat, reportMax=5)</span><br><span class=\"line\"></span><br><span class=\"line\"># 按阈值提取</span><br><span class=\"line\">linkList &lt;- getLinkList(weightMat, threshold=0.1)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>输出结果中的<code>weight</code>是没有统计学意义的，阈值的选择需要按照自己的经验进行选择。</p>\n<h1 id=\"结果可视化\"><a href=\"#结果可视化\" class=\"headerlink\" title=\"结果可视化\"></a>结果可视化</h1><p>最后的结果可以用Gephi或者是Cytoscape等软件进行可视化。</p>\n<p>Gephi安装参考教程：<a href=\"https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ\">https://mp.weixin.qq.com/s/Eotixm5tCMHgw_cXj8b6GQ</a></p>\n<p>Gephi使用简明教程：<a href=\"https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw\">https://mp.weixin.qq.com/s/8DTbSEJfrImXVhQWCAbfvw</a></p>\n<img src=\"/2021/07/06/GENIE3%E6%9E%84%E5%BB%BA%E5%9F%BA%E5%9B%A0%E8%B0%83%E6%8E%A7%E7%BD%91%E7%BB%9C/2.png\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"Coursera助学金申请模板","abbrlink":"5d800d6f","date":"2021-02-26T00:52:00.000Z","_content":"\nI am a graduate student in a poor area of China. My major is plant pathology. <!-- more -->I don't have a bioinformatics-related course at my university. I don't have access to good educational resources. I hope to apply for a scholarship to complete this course and complete my studies and wishes.\n\nFirst of all, I am very interested in bioinformatics. I like programming and biology. Secondly, my research needs to use bioinformatics. I want to use this course to consolidate my foundation. Use what I have learned to contribute to my research.\n\nAfter the study is completed, I will share the knowledge I have learned with my colleagues in the lab and solve the bioinformatics problems in our lab.\n\nCoursera has created a barrier-free university that brings convenience to many students who are unable to afford it. Here, thanks to Coursera and the various agencies, thank them for their selfless and great dedication.\n\n \n\n \n\nDear reviewer, I am a student from Yunnan Agricultural University. My major is plant pathology. I would very much like to be able to apply for a scholarship for this course. After completing this course, I will gain a lot.\n\nFirst of all, I can successfully complete my postgraduate studies and further pursue a higher degree. Having a high degree of education is very important to me and is very important to my family. I will work hard to get the chance.\n\nSecondly, after completing this course, in addition to being able to solve my own problems, I can help solve the problems in the laboratory. Our lab has many second- and third-generation sequencing data, and more things are waiting to be mined.\n\nLearning this course is very important for the development of my thinking and hands-on ability. It is also important to my future at the same time.\n\nThank you!\n\n>💌lixiang117423@gmail.com\n>💌lixiang117423@foxmail.com","source":"_posts/Coursera助学金申请模板.md","raw":"---\ntitle: Coursera助学金申请模板\ntags: 技能\ncategories: 技能\nabbrlink: 5d800d6f\ndate: 2021-02-26 08:52:00\n---\n\nI am a graduate student in a poor area of China. My major is plant pathology. <!-- more -->I don't have a bioinformatics-related course at my university. I don't have access to good educational resources. I hope to apply for a scholarship to complete this course and complete my studies and wishes.\n\nFirst of all, I am very interested in bioinformatics. I like programming and biology. Secondly, my research needs to use bioinformatics. I want to use this course to consolidate my foundation. Use what I have learned to contribute to my research.\n\nAfter the study is completed, I will share the knowledge I have learned with my colleagues in the lab and solve the bioinformatics problems in our lab.\n\nCoursera has created a barrier-free university that brings convenience to many students who are unable to afford it. Here, thanks to Coursera and the various agencies, thank them for their selfless and great dedication.\n\n \n\n \n\nDear reviewer, I am a student from Yunnan Agricultural University. My major is plant pathology. I would very much like to be able to apply for a scholarship for this course. After completing this course, I will gain a lot.\n\nFirst of all, I can successfully complete my postgraduate studies and further pursue a higher degree. Having a high degree of education is very important to me and is very important to my family. I will work hard to get the chance.\n\nSecondly, after completing this course, in addition to being able to solve my own problems, I can help solve the problems in the laboratory. Our lab has many second- and third-generation sequencing data, and more things are waiting to be mined.\n\nLearning this course is very important for the development of my thinking and hands-on ability. It is also important to my future at the same time.\n\nThank you!\n\n>💌lixiang117423@gmail.com\n>💌lixiang117423@foxmail.com","slug":"Coursera助学金申请模板","published":1,"updated":"2021-02-26T00:54:37.684Z","_id":"ckwbqwcdk0005r0g0c26oaei4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I am a graduate student in a poor area of China. My major is plant pathology. <span id=\"more\"></span>I don’t have a bioinformatics-related course at my university. I don’t have access to good educational resources. I hope to apply for a scholarship to complete this course and complete my studies and wishes.</p>\n<p>First of all, I am very interested in bioinformatics. I like programming and biology. Secondly, my research needs to use bioinformatics. I want to use this course to consolidate my foundation. Use what I have learned to contribute to my research.</p>\n<p>After the study is completed, I will share the knowledge I have learned with my colleagues in the lab and solve the bioinformatics problems in our lab.</p>\n<p>Coursera has created a barrier-free university that brings convenience to many students who are unable to afford it. Here, thanks to Coursera and the various agencies, thank them for their selfless and great dedication.</p>\n<p>Dear reviewer, I am a student from Yunnan Agricultural University. My major is plant pathology. I would very much like to be able to apply for a scholarship for this course. After completing this course, I will gain a lot.</p>\n<p>First of all, I can successfully complete my postgraduate studies and further pursue a higher degree. Having a high degree of education is very important to me and is very important to my family. I will work hard to get the chance.</p>\n<p>Secondly, after completing this course, in addition to being able to solve my own problems, I can help solve the problems in the laboratory. Our lab has many second- and third-generation sequencing data, and more things are waiting to be mined.</p>\n<p>Learning this course is very important for the development of my thinking and hands-on ability. It is also important to my future at the same time.</p>\n<p>Thank you!</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>I am a graduate student in a poor area of China. My major is plant pathology.","more":"I don’t have a bioinformatics-related course at my university. I don’t have access to good educational resources. I hope to apply for a scholarship to complete this course and complete my studies and wishes.</p>\n<p>First of all, I am very interested in bioinformatics. I like programming and biology. Secondly, my research needs to use bioinformatics. I want to use this course to consolidate my foundation. Use what I have learned to contribute to my research.</p>\n<p>After the study is completed, I will share the knowledge I have learned with my colleagues in the lab and solve the bioinformatics problems in our lab.</p>\n<p>Coursera has created a barrier-free university that brings convenience to many students who are unable to afford it. Here, thanks to Coursera and the various agencies, thank them for their selfless and great dedication.</p>\n<p>Dear reviewer, I am a student from Yunnan Agricultural University. My major is plant pathology. I would very much like to be able to apply for a scholarship for this course. After completing this course, I will gain a lot.</p>\n<p>First of all, I can successfully complete my postgraduate studies and further pursue a higher degree. Having a high degree of education is very important to me and is very important to my family. I will work hard to get the chance.</p>\n<p>Secondly, after completing this course, in addition to being able to solve my own problems, I can help solve the problems in the laboratory. Our lab has many second- and third-generation sequencing data, and more things are waiting to be mined.</p>\n<p>Learning this course is very important for the development of my thinking and hands-on ability. It is also important to my future at the same time.</p>\n<p>Thank you!</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"ggplot2分面填充色与字体大小","abbrlink":"4f1cbafb","date":"2020-12-21T07:33:09.000Z","_content":"\n```R\ntheme(strip.text = element_text(face = \"bold\",size = rel(1.2)),\n      strip.background = element_rect(fill = \"white\",colour = \"black\",size = 1))\n```\n\n<!-- more -->\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/ggplot2分面填充色与字体大小.md","raw":"---\ntitle: ggplot2分面填充色与字体大小\ntags: R语言\ncategories: R语言\nabbrlink: 4f1cbafb\ndate: 2020-12-21 15:33:09\n---\n\n```R\ntheme(strip.text = element_text(face = \"bold\",size = rel(1.2)),\n      strip.background = element_rect(fill = \"white\",colour = \"black\",size = 1))\n```\n\n<!-- more -->\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"ggplot2分面填充色与字体大小","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcdk0008r0g087xmfpeq","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme(strip.text = element_text(face = <span class=\"string\">&quot;bold&quot;</span>,size = rel(<span class=\"number\">1.2</span>)),</span><br><span class=\"line\">      strip.background = element_rect(fill = <span class=\"string\">&quot;white&quot;</span>,colour = <span class=\"string\">&quot;black&quot;</span>,size = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#51;&#x40;&#102;&#111;&#x78;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#51;&#x40;&#102;&#111;&#x78;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme(strip.text = element_text(face = <span class=\"string\">&quot;bold&quot;</span>,size = rel(<span class=\"number\">1.2</span>)),</span><br><span class=\"line\">      strip.background = element_rect(fill = <span class=\"string\">&quot;white&quot;</span>,colour = <span class=\"string\">&quot;black&quot;</span>,size = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>","more":"<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#51;&#x40;&#102;&#111;&#x78;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#50;&#51;&#x40;&#102;&#111;&#x78;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"ggplot2坡度图","abbrlink":"b7629aa1","date":"2020-12-30T10:29:36.000Z","_content":"\n之前见过坡度图，但是不知道怎么画。今天稍微看了一下就搞定了！\n\n<!-- more -->\n\n```R\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggsci)\n\ndf = data.frame(cat = rep(c(1,2), each = 10),\n                value = c(1:10,6:15),\n                c = 1:10,\n                d = 6:15,\n                e= letters[1:10])\nggplot(df, aes(cat, value)) +\n  geom_vline(xintercept = 1:2,linetype = 'dashed') +\n  geom_point(aes(color = e),size = 2) +\n  geom_segment(aes(x = 1, xend = 2, \n                   y = c, yend = d, color = e),\n               size = 1) +\n  geom_hline(yintercept = 16, color = 'white') +\n  scale_y_continuous(breaks = seq(-1,15,2)) +\n  scale_x_discrete(limit = c(1,2)) +\n  scale_color_aaas() +\n  labs(x = '',y = '') +\n  theme_bw() +\n  theme(legend.position = 'none')\n```\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/ggplot2坡度图.md","raw":"---\ntitle: ggplot2坡度图\ntags: R语言\ncategories: R语言\nabbrlink: b7629aa1\ndate: 2020-12-30 18:29:36\n---\n\n之前见过坡度图，但是不知道怎么画。今天稍微看了一下就搞定了！\n\n<!-- more -->\n\n```R\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggsci)\n\ndf = data.frame(cat = rep(c(1,2), each = 10),\n                value = c(1:10,6:15),\n                c = 1:10,\n                d = 6:15,\n                e= letters[1:10])\nggplot(df, aes(cat, value)) +\n  geom_vline(xintercept = 1:2,linetype = 'dashed') +\n  geom_point(aes(color = e),size = 2) +\n  geom_segment(aes(x = 1, xend = 2, \n                   y = c, yend = d, color = e),\n               size = 1) +\n  geom_hline(yintercept = 16, color = 'white') +\n  scale_y_continuous(breaks = seq(-1,15,2)) +\n  scale_x_discrete(limit = c(1,2)) +\n  scale_color_aaas() +\n  labs(x = '',y = '') +\n  theme_bw() +\n  theme(legend.position = 'none')\n```\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"ggplot2坡度图","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcdm000cr0g07slu8d7j","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前见过坡度图，但是不知道怎么画。今天稍微看了一下就搞定了！</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\"></span><br><span class=\"line\">df = data.frame(cat = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>), each = <span class=\"number\">10</span>),</span><br><span class=\"line\">                value = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>:<span class=\"number\">10</span>,<span class=\"number\">6</span>:<span class=\"number\">15</span>),</span><br><span class=\"line\">                <span class=\"built_in\">c</span> = <span class=\"number\">1</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">                d = <span class=\"number\">6</span>:<span class=\"number\">15</span>,</span><br><span class=\"line\">                e= <span class=\"built_in\">letters</span>[<span class=\"number\">1</span>:<span class=\"number\">10</span>])</span><br><span class=\"line\">ggplot(df, aes(cat, value)) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">1</span>:<span class=\"number\">2</span>,linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(color = e),size = <span class=\"number\">2</span>) +</span><br><span class=\"line\">  geom_segment(aes(x = <span class=\"number\">1</span>, xend = <span class=\"number\">2</span>, </span><br><span class=\"line\">                   y = <span class=\"built_in\">c</span>, yend = d, color = e),</span><br><span class=\"line\">               size = <span class=\"number\">1</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">16</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(breaks = seq(-<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">2</span>)) +</span><br><span class=\"line\">  scale_x_discrete(limit = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>,y = <span class=\"string\">&#x27;&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/30/ggplot2%E5%9D%A1%E5%BA%A6%E5%9B%BE/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>之前见过坡度图，但是不知道怎么画。今天稍微看了一下就搞定了！</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\"></span><br><span class=\"line\">df = data.frame(cat = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>), each = <span class=\"number\">10</span>),</span><br><span class=\"line\">                value = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>:<span class=\"number\">10</span>,<span class=\"number\">6</span>:<span class=\"number\">15</span>),</span><br><span class=\"line\">                <span class=\"built_in\">c</span> = <span class=\"number\">1</span>:<span class=\"number\">10</span>,</span><br><span class=\"line\">                d = <span class=\"number\">6</span>:<span class=\"number\">15</span>,</span><br><span class=\"line\">                e= <span class=\"built_in\">letters</span>[<span class=\"number\">1</span>:<span class=\"number\">10</span>])</span><br><span class=\"line\">ggplot(df, aes(cat, value)) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">1</span>:<span class=\"number\">2</span>,linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(color = e),size = <span class=\"number\">2</span>) +</span><br><span class=\"line\">  geom_segment(aes(x = <span class=\"number\">1</span>, xend = <span class=\"number\">2</span>, </span><br><span class=\"line\">                   y = <span class=\"built_in\">c</span>, yend = d, color = e),</span><br><span class=\"line\">               size = <span class=\"number\">1</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">16</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(breaks = seq(-<span class=\"number\">1</span>,<span class=\"number\">15</span>,<span class=\"number\">2</span>)) +</span><br><span class=\"line\">  scale_x_discrete(limit = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>,y = <span class=\"string\">&#x27;&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/30/ggplot2%E5%9D%A1%E5%BA%A6%E5%9B%BE/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"ggplot2画箭头","abbrlink":"f2d7bee6","date":"2020-12-16T07:18:17.000Z","_content":"\n突然有个用`ggplot2`画箭头的需求，So，搞它！\n\n<!-- more -->\n\n{% asset_img 1.jpg %}\n\n```R\nlibrary(tidyverse)\n\ndata(\"iris\")\n\npca = prcomp(iris[,1:4])\n\nscore = pca[[\"x\"]] %>% as.data.frame()\nloading = pca[[\"rotation\"]] %>% as.data.frame()\n\nggplot(score, aes(PC1, PC2)) +\n  geom_hline(yintercept = 0, linetype = 'dashed') +\n  geom_vline(xintercept = 0, linetype = 'dashed') +\n  geom_point(aes(color = iris$Species)) +\n  geom_segment(data = loading,\n               aes(x = PC1, y = PC2, xend = 0, yend = 0),\n               arrow = arrow(length=unit(0.20,\"cm\"), \n                             ends=\"first\", type = \"closed\"), \n               size = 0.5) +\n  geom_text(data = loading,\n            aes(x = PC1, y = PC2, label = rownames(loading)),\n            size = 3) +\n  theme_bw()\n```\n\n----\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/ggplot2画箭头.md","raw":"---\ntitle: ggplot2画箭头\ntags: R语言\ncategories: R语言\nabbrlink: f2d7bee6\ndate: 2020-12-16 15:18:17\n---\n\n突然有个用`ggplot2`画箭头的需求，So，搞它！\n\n<!-- more -->\n\n{% asset_img 1.jpg %}\n\n```R\nlibrary(tidyverse)\n\ndata(\"iris\")\n\npca = prcomp(iris[,1:4])\n\nscore = pca[[\"x\"]] %>% as.data.frame()\nloading = pca[[\"rotation\"]] %>% as.data.frame()\n\nggplot(score, aes(PC1, PC2)) +\n  geom_hline(yintercept = 0, linetype = 'dashed') +\n  geom_vline(xintercept = 0, linetype = 'dashed') +\n  geom_point(aes(color = iris$Species)) +\n  geom_segment(data = loading,\n               aes(x = PC1, y = PC2, xend = 0, yend = 0),\n               arrow = arrow(length=unit(0.20,\"cm\"), \n                             ends=\"first\", type = \"closed\"), \n               size = 0.5) +\n  geom_text(data = loading,\n            aes(x = PC1, y = PC2, label = rownames(loading)),\n            size = 3) +\n  theme_bw()\n```\n\n----\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"ggplot2画箭头","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcdn000fr0g017i3d8ev","comments":1,"layout":"post","photos":[],"link":"","content":"<p>突然有个用<code>ggplot2</code>画箭头的需求，So，搞它！</p>\n<span id=\"more\"></span>\n\n<img src=\"/2020/12/16/ggplot2%E7%94%BB%E7%AE%AD%E5%A4%B4/1.jpg\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\">data(<span class=\"string\">&quot;iris&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pca = prcomp(iris[,<span class=\"number\">1</span>:<span class=\"number\">4</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">score = pca[[<span class=\"string\">&quot;x&quot;</span>]] %&gt;% as.data.frame()</span><br><span class=\"line\">loading = pca[[<span class=\"string\">&quot;rotation&quot;</span>]] %&gt;% as.data.frame()</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(score, aes(PC1, PC2)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(color = iris$Species)) +</span><br><span class=\"line\">  geom_segment(data = loading,</span><br><span class=\"line\">               aes(x = PC1, y = PC2, xend = <span class=\"number\">0</span>, yend = <span class=\"number\">0</span>),</span><br><span class=\"line\">               arrow = arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.20</span>,<span class=\"string\">&quot;cm&quot;</span>), </span><br><span class=\"line\">                             ends=<span class=\"string\">&quot;first&quot;</span>, type = <span class=\"string\">&quot;closed&quot;</span>), </span><br><span class=\"line\">               size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_text(data = loading,</span><br><span class=\"line\">            aes(x = PC1, y = PC2, label = rownames(loading)),</span><br><span class=\"line\">            size = <span class=\"number\">3</span>) +</span><br><span class=\"line\">  theme_bw()</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>突然有个用<code>ggplot2</code>画箭头的需求，So，搞它！</p>","more":"<img src=\"/2020/12/16/ggplot2%E7%94%BB%E7%AE%AD%E5%A4%B4/1.jpg\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\">data(<span class=\"string\">&quot;iris&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pca = prcomp(iris[,<span class=\"number\">1</span>:<span class=\"number\">4</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">score = pca[[<span class=\"string\">&quot;x&quot;</span>]] %&gt;% as.data.frame()</span><br><span class=\"line\">loading = pca[[<span class=\"string\">&quot;rotation&quot;</span>]] %&gt;% as.data.frame()</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(score, aes(PC1, PC2)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(color = iris$Species)) +</span><br><span class=\"line\">  geom_segment(data = loading,</span><br><span class=\"line\">               aes(x = PC1, y = PC2, xend = <span class=\"number\">0</span>, yend = <span class=\"number\">0</span>),</span><br><span class=\"line\">               arrow = arrow(<span class=\"built_in\">length</span>=unit(<span class=\"number\">0.20</span>,<span class=\"string\">&quot;cm&quot;</span>), </span><br><span class=\"line\">                             ends=<span class=\"string\">&quot;first&quot;</span>, type = <span class=\"string\">&quot;closed&quot;</span>), </span><br><span class=\"line\">               size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_text(data = loading,</span><br><span class=\"line\">            aes(x = PC1, y = PC2, label = rownames(loading)),</span><br><span class=\"line\">            size = <span class=\"number\">3</span>) +</span><br><span class=\"line\">  theme_bw()</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"ComplexHeatmap学习笔记","abbrlink":"550b1dc8","date":"2021-03-06T06:11:08.000Z","_content":"\n之前绘制热图都是使用`pheatmap`这个R包，后面<!-- more -->了解到一个包叫[`tidyHeatmap`](https://github.com/stemangiola/tidyHeatmap)，开始使用的时候觉得比较惊艳，数据格式是`tidy`的，比较熟悉些。后面自己要绘制比较复杂的热图，感觉`tidyHeatmap`不够用，索性直接学`ComplexHeatmap`。\n\n# 我对`ComplexHeatmap`的理解\n\n`ComplexHeatmap`是基于`grid`绘图系统的，对`grid`绘图系统了解不多，但是学习完`ComplexHeatmap`给我的感受是就像`ggplot2`那样，丝滑无比。我把`ComplexHeatmap`里面的各种注释、图列理解成了`ggplot2`里面的图层，不同的图层之间通过唯一的`key`来实现的。\n\n# 示例代码\n\n下面的示例代码我会选择性注释，未注释的代码行多为`R`基础。\n\n```R\n# 15_15VS87_87\nif (F) {\n  # 选择画图的数据\n  col = c('Index',\n          paste(str_split('15_15VS87_87','VS')[[1]][1],1:3, sep = '_'),\n          paste(str_split('15_15VS87_87','VS')[[1]][2],1:3, sep = '_'))\n    \n  # 筛选数据\n  df.sub = dplyr::select(metadata, col) %>%\n    dplyr::filter(Index %in% df[df$group_by == '15_15VS87_87',]$Index) %>%\n    as.data.frame()\n  \n  # 合并数据\n  df.sub = merge(df.sub, metainfo[,c('Index','物质')])\n  \n  col.names = colnames(df.sub)[2:7]\n  \n  rownames(df.sub) = df.sub$物质\n  \n  \n  df.sub = df.sub[,2:7] %>% # 选择数据\n    apply(1, scale) %>% # 按行对数据进行标准化\n    t() %>% # 行列转换\n    as.data.frame()\n  \n  colnames(df.sub) = col.names\n  \n  ann = df[df$group_by == '15_15VS87_87',] # 筛选代谢物的信息，分组筛选\n  ann = merge(ann, metainfo, by = 'Index') %>% as.data.frame() # 从原始数据中筛选代谢物信息\n  rownames(ann) = ann$物质 # 将注释信息数据框的行名称设置成代谢物名称\n  ann = ann[rownames(df.sub),] # 将代谢物注释信息和热图数据框进行匹配，这个就是上面提到的key\n  ann$signif = ifelse(ann$pvalue < 0.001, '***',\n                      ifelse(ann$pvalue > 0.01, '*','**')) # 根据p值标注显著性\n  \n  # 热图左边的注释\n  ann.left = HeatmapAnnotation(which = 'row', # 表明这是行的注释\n                               # 柱状图注释\n                               `OPLS-DA VIP Value` = anno_barplot(ann$VIP,# 选择数据来源\n                                                                  baseline = 1, # 柱状图基线\n                                                                  # 设置颜色及填充色等\n                                                                  gp = gpar(fill = 1:nrow(ann),\n                                                                            col = 'white')),\n                               # 同上\n                               FoldChange = anno_barplot(ann$FC,\n                                                         # bar_width = 1,\n                                                         gp = gpar(fill = 1:nrow(ann),\n                                                                   col = 'white')),\n                               gap = unit(3,'mm'), # 两个注释信息之间的间隔\n                               annotation_name_side = 'top', # 注释信息的名称\n                               annotation_name_rot = 90, # 注释信息名称的旋转角度\n                               annotation_name_offset = unit(2,'mm')) # 注释信息名称的偏移量\n  \n  # 热图顶部注释：此处只是简单地添加分组信息\n  ann.top = HeatmapAnnotation(which = 'column',\n                              #Group = rep(c('15_15','15_69'), each = 3),\n                              Group = anno_block(gp = gpar(fill = 'black'),\n                                                 labels = c('87_87','15_15'), # 手动调整分组\n                                                 labels_gp = gpar(col = 'white', fontsize = 15)))\n  # 右侧注释\n  ann.right = HeatmapAnnotation(which = 'row',\n                                gap = unit(1.5,'mm'), \n                                pvalue = anno_simple(ann$pvalue, \n                                                     col = pvalue_col_fun,\n                                                     pch = ann$signif), # 只能显示1个*，多余的要手动加\n                                一级分类 = ann$物质一级分类,\n                                二级分类 = ann$物质二级分类,\n                                annotation_name_side = 'top',\n                                annotation_name_rot = 90,\n                                annotation_name_offset = unit(2,'mm'))\n  \n  # 定义P值的颜色等\n  pvalue_col_fun = colorRamp2(c(min(ann$pvalue), \n                                mean(ann$pvalue), \n                                max(ann$pvalue)), \n                              c(\"green\", \"white\", \"red\")) \n  \n  # 设置P值的图例等\n  lgd_pvalue = Legend(title = 'P-value',\n                      col_fun = pvalue_col_fun,\n                      at = c(min(ann$pvalue), \n                             mean(ann$pvalue), \n                             max(ann$pvalue)),\n                      \n                      labels = c(round(min(ann$pvalue), 5), \n                                 round(mean(ann$pvalue), 5), \n                                 round(max(ann$pvalue), 5)))\n  \n  # 绘制热图\n  p = ComplexHeatmap::Heatmap(as.matrix(df.sub), # 输入数据为矩阵\n                              name = '相对含量', # 热图图例名称\n                              col = c(\"navy\", \"white\", \"firebrick3\"), # 定义颜色\n                              column_km = 2, # 划分列聚类\n                              row_km = 2, # 划分行聚类\n                              border = TRUE, # 显示边框\n                              column_names_rot = 90, # 列名称旋转角度\n                              row_names_rot = 45, # 行名称旋转角度\n                              left_annotation = ann.left, # 添加左侧注释信息\n                              top_annotation = ann.top, # 添加顶部注释信息\n                              right_annotation = ann.right, # 添加右侧注释信息\n                              row_title = 'Metabolites', # 行名称\n                              column_title = 'Group', # 列名称\n                              width = ncol(df.sub)*unit(10, \"mm\"), # 格子的宽度\n                              height = nrow(df.sub)*unit(10, \"mm\")) # 格子的高度\n  \n  # 保存图片\n  pdf(file = 'results/heatmap/complexheatmap/15_15VS87_87_1.pdf', width = 15, height = 20, family = 'GB1')\n  \n  # 绘图\n  draw(p, \n       merge_legend = TRUE, # 图例在一列上\n       annotation_legend_list = list(lgd_pvalue))\n  \n  dev.off() # 关闭绘图设备\n```\n\n{% asset_img 1.jpg %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/ComplexHeatmap学习笔记.md","raw":"---\ntitle: ComplexHeatmap学习笔记\ntags: R语言\ncategories: R语言\nabbrlink: 550b1dc8\ndate: 2021-03-06 14:11:08\n---\n\n之前绘制热图都是使用`pheatmap`这个R包，后面<!-- more -->了解到一个包叫[`tidyHeatmap`](https://github.com/stemangiola/tidyHeatmap)，开始使用的时候觉得比较惊艳，数据格式是`tidy`的，比较熟悉些。后面自己要绘制比较复杂的热图，感觉`tidyHeatmap`不够用，索性直接学`ComplexHeatmap`。\n\n# 我对`ComplexHeatmap`的理解\n\n`ComplexHeatmap`是基于`grid`绘图系统的，对`grid`绘图系统了解不多，但是学习完`ComplexHeatmap`给我的感受是就像`ggplot2`那样，丝滑无比。我把`ComplexHeatmap`里面的各种注释、图列理解成了`ggplot2`里面的图层，不同的图层之间通过唯一的`key`来实现的。\n\n# 示例代码\n\n下面的示例代码我会选择性注释，未注释的代码行多为`R`基础。\n\n```R\n# 15_15VS87_87\nif (F) {\n  # 选择画图的数据\n  col = c('Index',\n          paste(str_split('15_15VS87_87','VS')[[1]][1],1:3, sep = '_'),\n          paste(str_split('15_15VS87_87','VS')[[1]][2],1:3, sep = '_'))\n    \n  # 筛选数据\n  df.sub = dplyr::select(metadata, col) %>%\n    dplyr::filter(Index %in% df[df$group_by == '15_15VS87_87',]$Index) %>%\n    as.data.frame()\n  \n  # 合并数据\n  df.sub = merge(df.sub, metainfo[,c('Index','物质')])\n  \n  col.names = colnames(df.sub)[2:7]\n  \n  rownames(df.sub) = df.sub$物质\n  \n  \n  df.sub = df.sub[,2:7] %>% # 选择数据\n    apply(1, scale) %>% # 按行对数据进行标准化\n    t() %>% # 行列转换\n    as.data.frame()\n  \n  colnames(df.sub) = col.names\n  \n  ann = df[df$group_by == '15_15VS87_87',] # 筛选代谢物的信息，分组筛选\n  ann = merge(ann, metainfo, by = 'Index') %>% as.data.frame() # 从原始数据中筛选代谢物信息\n  rownames(ann) = ann$物质 # 将注释信息数据框的行名称设置成代谢物名称\n  ann = ann[rownames(df.sub),] # 将代谢物注释信息和热图数据框进行匹配，这个就是上面提到的key\n  ann$signif = ifelse(ann$pvalue < 0.001, '***',\n                      ifelse(ann$pvalue > 0.01, '*','**')) # 根据p值标注显著性\n  \n  # 热图左边的注释\n  ann.left = HeatmapAnnotation(which = 'row', # 表明这是行的注释\n                               # 柱状图注释\n                               `OPLS-DA VIP Value` = anno_barplot(ann$VIP,# 选择数据来源\n                                                                  baseline = 1, # 柱状图基线\n                                                                  # 设置颜色及填充色等\n                                                                  gp = gpar(fill = 1:nrow(ann),\n                                                                            col = 'white')),\n                               # 同上\n                               FoldChange = anno_barplot(ann$FC,\n                                                         # bar_width = 1,\n                                                         gp = gpar(fill = 1:nrow(ann),\n                                                                   col = 'white')),\n                               gap = unit(3,'mm'), # 两个注释信息之间的间隔\n                               annotation_name_side = 'top', # 注释信息的名称\n                               annotation_name_rot = 90, # 注释信息名称的旋转角度\n                               annotation_name_offset = unit(2,'mm')) # 注释信息名称的偏移量\n  \n  # 热图顶部注释：此处只是简单地添加分组信息\n  ann.top = HeatmapAnnotation(which = 'column',\n                              #Group = rep(c('15_15','15_69'), each = 3),\n                              Group = anno_block(gp = gpar(fill = 'black'),\n                                                 labels = c('87_87','15_15'), # 手动调整分组\n                                                 labels_gp = gpar(col = 'white', fontsize = 15)))\n  # 右侧注释\n  ann.right = HeatmapAnnotation(which = 'row',\n                                gap = unit(1.5,'mm'), \n                                pvalue = anno_simple(ann$pvalue, \n                                                     col = pvalue_col_fun,\n                                                     pch = ann$signif), # 只能显示1个*，多余的要手动加\n                                一级分类 = ann$物质一级分类,\n                                二级分类 = ann$物质二级分类,\n                                annotation_name_side = 'top',\n                                annotation_name_rot = 90,\n                                annotation_name_offset = unit(2,'mm'))\n  \n  # 定义P值的颜色等\n  pvalue_col_fun = colorRamp2(c(min(ann$pvalue), \n                                mean(ann$pvalue), \n                                max(ann$pvalue)), \n                              c(\"green\", \"white\", \"red\")) \n  \n  # 设置P值的图例等\n  lgd_pvalue = Legend(title = 'P-value',\n                      col_fun = pvalue_col_fun,\n                      at = c(min(ann$pvalue), \n                             mean(ann$pvalue), \n                             max(ann$pvalue)),\n                      \n                      labels = c(round(min(ann$pvalue), 5), \n                                 round(mean(ann$pvalue), 5), \n                                 round(max(ann$pvalue), 5)))\n  \n  # 绘制热图\n  p = ComplexHeatmap::Heatmap(as.matrix(df.sub), # 输入数据为矩阵\n                              name = '相对含量', # 热图图例名称\n                              col = c(\"navy\", \"white\", \"firebrick3\"), # 定义颜色\n                              column_km = 2, # 划分列聚类\n                              row_km = 2, # 划分行聚类\n                              border = TRUE, # 显示边框\n                              column_names_rot = 90, # 列名称旋转角度\n                              row_names_rot = 45, # 行名称旋转角度\n                              left_annotation = ann.left, # 添加左侧注释信息\n                              top_annotation = ann.top, # 添加顶部注释信息\n                              right_annotation = ann.right, # 添加右侧注释信息\n                              row_title = 'Metabolites', # 行名称\n                              column_title = 'Group', # 列名称\n                              width = ncol(df.sub)*unit(10, \"mm\"), # 格子的宽度\n                              height = nrow(df.sub)*unit(10, \"mm\")) # 格子的高度\n  \n  # 保存图片\n  pdf(file = 'results/heatmap/complexheatmap/15_15VS87_87_1.pdf', width = 15, height = 20, family = 'GB1')\n  \n  # 绘图\n  draw(p, \n       merge_legend = TRUE, # 图例在一列上\n       annotation_legend_list = list(lgd_pvalue))\n  \n  dev.off() # 关闭绘图设备\n```\n\n{% asset_img 1.jpg %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"ComplexHeatmap学习笔记","published":1,"updated":"2021-03-06T07:45:41.359Z","_id":"ckwbqwcdn000hr0g06oetcwlx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前绘制热图都是使用<code>pheatmap</code>这个R包，后面<span id=\"more\"></span>了解到一个包叫<a href=\"https://github.com/stemangiola/tidyHeatmap\"><code>tidyHeatmap</code></a>，开始使用的时候觉得比较惊艳，数据格式是<code>tidy</code>的，比较熟悉些。后面自己要绘制比较复杂的热图，感觉<code>tidyHeatmap</code>不够用，索性直接学<code>ComplexHeatmap</code>。</p>\n<h1 id=\"我对ComplexHeatmap的理解\"><a href=\"#我对ComplexHeatmap的理解\" class=\"headerlink\" title=\"我对ComplexHeatmap的理解\"></a>我对<code>ComplexHeatmap</code>的理解</h1><p><code>ComplexHeatmap</code>是基于<code>grid</code>绘图系统的，对<code>grid</code>绘图系统了解不多，但是学习完<code>ComplexHeatmap</code>给我的感受是就像<code>ggplot2</code>那样，丝滑无比。我把<code>ComplexHeatmap</code>里面的各种注释、图列理解成了<code>ggplot2</code>里面的图层，不同的图层之间通过唯一的<code>key</code>来实现的。</p>\n<h1 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h1><p>下面的示例代码我会选择性注释，未注释的代码行多为<code>R</code>基础。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 15_15VS87_87</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">F</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 选择画图的数据</span></span><br><span class=\"line\">  col = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Index&#x27;</span>,</span><br><span class=\"line\">          paste(str_split(<span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,<span class=\"string\">&#x27;VS&#x27;</span>)[[<span class=\"number\">1</span>]][<span class=\"number\">1</span>],<span class=\"number\">1</span>:<span class=\"number\">3</span>, sep = <span class=\"string\">&#x27;_&#x27;</span>),</span><br><span class=\"line\">          paste(str_split(<span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,<span class=\"string\">&#x27;VS&#x27;</span>)[[<span class=\"number\">1</span>]][<span class=\"number\">2</span>],<span class=\"number\">1</span>:<span class=\"number\">3</span>, sep = <span class=\"string\">&#x27;_&#x27;</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"comment\"># 筛选数据</span></span><br><span class=\"line\">  df.sub = dplyr::select(metadata, col) %&gt;%</span><br><span class=\"line\">    dplyr::filter(Index %in% df[df$group_by == <span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,]$Index) %&gt;%</span><br><span class=\"line\">    as.data.frame()</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 合并数据</span></span><br><span class=\"line\">  df.sub = merge(df.sub, metainfo[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Index&#x27;</span>,<span class=\"string\">&#x27;物质&#x27;</span>)])</span><br><span class=\"line\">  </span><br><span class=\"line\">  col.names = colnames(df.sub)[<span class=\"number\">2</span>:<span class=\"number\">7</span>]</span><br><span class=\"line\">  </span><br><span class=\"line\">  rownames(df.sub) = df.sub$物质</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  df.sub = df.sub[,<span class=\"number\">2</span>:<span class=\"number\">7</span>] %&gt;% <span class=\"comment\"># 选择数据</span></span><br><span class=\"line\">    apply(<span class=\"number\">1</span>, scale) %&gt;% <span class=\"comment\"># 按行对数据进行标准化</span></span><br><span class=\"line\">    t() %&gt;% <span class=\"comment\"># 行列转换</span></span><br><span class=\"line\">    as.data.frame()</span><br><span class=\"line\">  </span><br><span class=\"line\">  colnames(df.sub) = col.names</span><br><span class=\"line\">  </span><br><span class=\"line\">  ann = df[df$group_by == <span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,] <span class=\"comment\"># 筛选代谢物的信息，分组筛选</span></span><br><span class=\"line\">  ann = merge(ann, metainfo, by = <span class=\"string\">&#x27;Index&#x27;</span>) %&gt;% as.data.frame() <span class=\"comment\"># 从原始数据中筛选代谢物信息</span></span><br><span class=\"line\">  rownames(ann) = ann$物质 <span class=\"comment\"># 将注释信息数据框的行名称设置成代谢物名称</span></span><br><span class=\"line\">  ann = ann[rownames(df.sub),] <span class=\"comment\"># 将代谢物注释信息和热图数据框进行匹配，这个就是上面提到的key</span></span><br><span class=\"line\">  ann$<span class=\"built_in\">signif</span> = ifelse(ann$pvalue &lt; <span class=\"number\">0.001</span>, <span class=\"string\">&#x27;***&#x27;</span>,</span><br><span class=\"line\">                      ifelse(ann$pvalue &gt; <span class=\"number\">0.01</span>, <span class=\"string\">&#x27;*&#x27;</span>,<span class=\"string\">&#x27;**&#x27;</span>)) <span class=\"comment\"># 根据p值标注显著性</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 热图左边的注释</span></span><br><span class=\"line\">  ann.left = HeatmapAnnotation(which = <span class=\"string\">&#x27;row&#x27;</span>, <span class=\"comment\"># 表明这是行的注释</span></span><br><span class=\"line\">                               <span class=\"comment\"># 柱状图注释</span></span><br><span class=\"line\">                               `OPLS-DA VIP Value` = anno_barplot(ann$VIP,<span class=\"comment\"># 选择数据来源</span></span><br><span class=\"line\">                                                                  baseline = <span class=\"number\">1</span>, <span class=\"comment\"># 柱状图基线</span></span><br><span class=\"line\">                                                                  <span class=\"comment\"># 设置颜色及填充色等</span></span><br><span class=\"line\">                                                                  gp = gpar(fill = <span class=\"number\">1</span>:nrow(ann),</span><br><span class=\"line\">                                                                            col = <span class=\"string\">&#x27;white&#x27;</span>)),</span><br><span class=\"line\">                               <span class=\"comment\"># 同上</span></span><br><span class=\"line\">                               FoldChange = anno_barplot(ann$FC,</span><br><span class=\"line\">                                                         <span class=\"comment\"># bar_width = 1,</span></span><br><span class=\"line\">                                                         gp = gpar(fill = <span class=\"number\">1</span>:nrow(ann),</span><br><span class=\"line\">                                                                   col = <span class=\"string\">&#x27;white&#x27;</span>)),</span><br><span class=\"line\">                               gap = unit(<span class=\"number\">3</span>,<span class=\"string\">&#x27;mm&#x27;</span>), <span class=\"comment\"># 两个注释信息之间的间隔</span></span><br><span class=\"line\">                               annotation_name_side = <span class=\"string\">&#x27;top&#x27;</span>, <span class=\"comment\"># 注释信息的名称</span></span><br><span class=\"line\">                               annotation_name_rot = <span class=\"number\">90</span>, <span class=\"comment\"># 注释信息名称的旋转角度</span></span><br><span class=\"line\">                               annotation_name_offset = unit(<span class=\"number\">2</span>,<span class=\"string\">&#x27;mm&#x27;</span>)) <span class=\"comment\"># 注释信息名称的偏移量</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 热图顶部注释：此处只是简单地添加分组信息</span></span><br><span class=\"line\">  ann.top = HeatmapAnnotation(which = <span class=\"string\">&#x27;column&#x27;</span>,</span><br><span class=\"line\">                              <span class=\"comment\">#Group = rep(c(&#x27;15_15&#x27;,&#x27;15_69&#x27;), each = 3),</span></span><br><span class=\"line\">                              Group = anno_block(gp = gpar(fill = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">                                                 labels = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;87_87&#x27;</span>,<span class=\"string\">&#x27;15_15&#x27;</span>), <span class=\"comment\"># 手动调整分组</span></span><br><span class=\"line\">                                                 labels_gp = gpar(col = <span class=\"string\">&#x27;white&#x27;</span>, fontsize = <span class=\"number\">15</span>)))</span><br><span class=\"line\">  <span class=\"comment\"># 右侧注释</span></span><br><span class=\"line\">  ann.right = HeatmapAnnotation(which = <span class=\"string\">&#x27;row&#x27;</span>,</span><br><span class=\"line\">                                gap = unit(<span class=\"number\">1.5</span>,<span class=\"string\">&#x27;mm&#x27;</span>), </span><br><span class=\"line\">                                pvalue = anno_simple(ann$pvalue, </span><br><span class=\"line\">                                                     col = pvalue_col_fun,</span><br><span class=\"line\">                                                     pch = ann$<span class=\"built_in\">signif</span>), <span class=\"comment\"># 只能显示1个*，多余的要手动加</span></span><br><span class=\"line\">                                一级分类 = ann$物质一级分类,</span><br><span class=\"line\">                                二级分类 = ann$物质二级分类,</span><br><span class=\"line\">                                annotation_name_side = <span class=\"string\">&#x27;top&#x27;</span>,</span><br><span class=\"line\">                                annotation_name_rot = <span class=\"number\">90</span>,</span><br><span class=\"line\">                                annotation_name_offset = unit(<span class=\"number\">2</span>,<span class=\"string\">&#x27;mm&#x27;</span>))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 定义P值的颜色等</span></span><br><span class=\"line\">  pvalue_col_fun = colorRamp2(<span class=\"built_in\">c</span>(<span class=\"built_in\">min</span>(ann$pvalue), </span><br><span class=\"line\">                                mean(ann$pvalue), </span><br><span class=\"line\">                                <span class=\"built_in\">max</span>(ann$pvalue)), </span><br><span class=\"line\">                              <span class=\"built_in\">c</span>(<span class=\"string\">&quot;green&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 设置P值的图例等</span></span><br><span class=\"line\">  lgd_pvalue = Legend(title = <span class=\"string\">&#x27;P-value&#x27;</span>,</span><br><span class=\"line\">                      col_fun = pvalue_col_fun,</span><br><span class=\"line\">                      at = <span class=\"built_in\">c</span>(<span class=\"built_in\">min</span>(ann$pvalue), </span><br><span class=\"line\">                             mean(ann$pvalue), </span><br><span class=\"line\">                             <span class=\"built_in\">max</span>(ann$pvalue)),</span><br><span class=\"line\">                      </span><br><span class=\"line\">                      labels = <span class=\"built_in\">c</span>(<span class=\"built_in\">round</span>(<span class=\"built_in\">min</span>(ann$pvalue), <span class=\"number\">5</span>), </span><br><span class=\"line\">                                 <span class=\"built_in\">round</span>(mean(ann$pvalue), <span class=\"number\">5</span>), </span><br><span class=\"line\">                                 <span class=\"built_in\">round</span>(<span class=\"built_in\">max</span>(ann$pvalue), <span class=\"number\">5</span>)))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 绘制热图</span></span><br><span class=\"line\">  p = ComplexHeatmap::Heatmap(as.matrix(df.sub), <span class=\"comment\"># 输入数据为矩阵</span></span><br><span class=\"line\">                              name = <span class=\"string\">&#x27;相对含量&#x27;</span>, <span class=\"comment\"># 热图图例名称</span></span><br><span class=\"line\">                              col = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;navy&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;firebrick3&quot;</span>), <span class=\"comment\"># 定义颜色</span></span><br><span class=\"line\">                              column_km = <span class=\"number\">2</span>, <span class=\"comment\"># 划分列聚类</span></span><br><span class=\"line\">                              row_km = <span class=\"number\">2</span>, <span class=\"comment\"># 划分行聚类</span></span><br><span class=\"line\">                              border = <span class=\"literal\">TRUE</span>, <span class=\"comment\"># 显示边框</span></span><br><span class=\"line\">                              column_names_rot = <span class=\"number\">90</span>, <span class=\"comment\"># 列名称旋转角度</span></span><br><span class=\"line\">                              row_names_rot = <span class=\"number\">45</span>, <span class=\"comment\"># 行名称旋转角度</span></span><br><span class=\"line\">                              left_annotation = ann.left, <span class=\"comment\"># 添加左侧注释信息</span></span><br><span class=\"line\">                              top_annotation = ann.top, <span class=\"comment\"># 添加顶部注释信息</span></span><br><span class=\"line\">                              right_annotation = ann.right, <span class=\"comment\"># 添加右侧注释信息</span></span><br><span class=\"line\">                              row_title = <span class=\"string\">&#x27;Metabolites&#x27;</span>, <span class=\"comment\"># 行名称</span></span><br><span class=\"line\">                              column_title = <span class=\"string\">&#x27;Group&#x27;</span>, <span class=\"comment\"># 列名称</span></span><br><span class=\"line\">                              width = ncol(df.sub)*unit(<span class=\"number\">10</span>, <span class=\"string\">&quot;mm&quot;</span>), <span class=\"comment\"># 格子的宽度</span></span><br><span class=\"line\">                              height = nrow(df.sub)*unit(<span class=\"number\">10</span>, <span class=\"string\">&quot;mm&quot;</span>)) <span class=\"comment\"># 格子的高度</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">  pdf(file = <span class=\"string\">&#x27;results/heatmap/complexheatmap/15_15VS87_87_1.pdf&#x27;</span>, width = <span class=\"number\">15</span>, height = <span class=\"number\">20</span>, family = <span class=\"string\">&#x27;GB1&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 绘图</span></span><br><span class=\"line\">  draw(p, </span><br><span class=\"line\">       merge_legend = <span class=\"literal\">TRUE</span>, <span class=\"comment\"># 图例在一列上</span></span><br><span class=\"line\">       annotation_legend_list = <span class=\"built_in\">list</span>(lgd_pvalue))</span><br><span class=\"line\">  </span><br><span class=\"line\">  dev.off() <span class=\"comment\"># 关闭绘图设备</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/03/06/%C2%96ComplexHeatmap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.jpg\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>之前绘制热图都是使用<code>pheatmap</code>这个R包，后面","more":"了解到一个包叫<a href=\"https://github.com/stemangiola/tidyHeatmap\"><code>tidyHeatmap</code></a>，开始使用的时候觉得比较惊艳，数据格式是<code>tidy</code>的，比较熟悉些。后面自己要绘制比较复杂的热图，感觉<code>tidyHeatmap</code>不够用，索性直接学<code>ComplexHeatmap</code>。</p>\n<h1 id=\"我对ComplexHeatmap的理解\"><a href=\"#我对ComplexHeatmap的理解\" class=\"headerlink\" title=\"我对ComplexHeatmap的理解\"></a>我对<code>ComplexHeatmap</code>的理解</h1><p><code>ComplexHeatmap</code>是基于<code>grid</code>绘图系统的，对<code>grid</code>绘图系统了解不多，但是学习完<code>ComplexHeatmap</code>给我的感受是就像<code>ggplot2</code>那样，丝滑无比。我把<code>ComplexHeatmap</code>里面的各种注释、图列理解成了<code>ggplot2</code>里面的图层，不同的图层之间通过唯一的<code>key</code>来实现的。</p>\n<h1 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h1><p>下面的示例代码我会选择性注释，未注释的代码行多为<code>R</code>基础。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 15_15VS87_87</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">F</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 选择画图的数据</span></span><br><span class=\"line\">  col = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Index&#x27;</span>,</span><br><span class=\"line\">          paste(str_split(<span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,<span class=\"string\">&#x27;VS&#x27;</span>)[[<span class=\"number\">1</span>]][<span class=\"number\">1</span>],<span class=\"number\">1</span>:<span class=\"number\">3</span>, sep = <span class=\"string\">&#x27;_&#x27;</span>),</span><br><span class=\"line\">          paste(str_split(<span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,<span class=\"string\">&#x27;VS&#x27;</span>)[[<span class=\"number\">1</span>]][<span class=\"number\">2</span>],<span class=\"number\">1</span>:<span class=\"number\">3</span>, sep = <span class=\"string\">&#x27;_&#x27;</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"comment\"># 筛选数据</span></span><br><span class=\"line\">  df.sub = dplyr::select(metadata, col) %&gt;%</span><br><span class=\"line\">    dplyr::filter(Index %in% df[df$group_by == <span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,]$Index) %&gt;%</span><br><span class=\"line\">    as.data.frame()</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 合并数据</span></span><br><span class=\"line\">  df.sub = merge(df.sub, metainfo[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Index&#x27;</span>,<span class=\"string\">&#x27;物质&#x27;</span>)])</span><br><span class=\"line\">  </span><br><span class=\"line\">  col.names = colnames(df.sub)[<span class=\"number\">2</span>:<span class=\"number\">7</span>]</span><br><span class=\"line\">  </span><br><span class=\"line\">  rownames(df.sub) = df.sub$物质</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  df.sub = df.sub[,<span class=\"number\">2</span>:<span class=\"number\">7</span>] %&gt;% <span class=\"comment\"># 选择数据</span></span><br><span class=\"line\">    apply(<span class=\"number\">1</span>, scale) %&gt;% <span class=\"comment\"># 按行对数据进行标准化</span></span><br><span class=\"line\">    t() %&gt;% <span class=\"comment\"># 行列转换</span></span><br><span class=\"line\">    as.data.frame()</span><br><span class=\"line\">  </span><br><span class=\"line\">  colnames(df.sub) = col.names</span><br><span class=\"line\">  </span><br><span class=\"line\">  ann = df[df$group_by == <span class=\"string\">&#x27;15_15VS87_87&#x27;</span>,] <span class=\"comment\"># 筛选代谢物的信息，分组筛选</span></span><br><span class=\"line\">  ann = merge(ann, metainfo, by = <span class=\"string\">&#x27;Index&#x27;</span>) %&gt;% as.data.frame() <span class=\"comment\"># 从原始数据中筛选代谢物信息</span></span><br><span class=\"line\">  rownames(ann) = ann$物质 <span class=\"comment\"># 将注释信息数据框的行名称设置成代谢物名称</span></span><br><span class=\"line\">  ann = ann[rownames(df.sub),] <span class=\"comment\"># 将代谢物注释信息和热图数据框进行匹配，这个就是上面提到的key</span></span><br><span class=\"line\">  ann$<span class=\"built_in\">signif</span> = ifelse(ann$pvalue &lt; <span class=\"number\">0.001</span>, <span class=\"string\">&#x27;***&#x27;</span>,</span><br><span class=\"line\">                      ifelse(ann$pvalue &gt; <span class=\"number\">0.01</span>, <span class=\"string\">&#x27;*&#x27;</span>,<span class=\"string\">&#x27;**&#x27;</span>)) <span class=\"comment\"># 根据p值标注显著性</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 热图左边的注释</span></span><br><span class=\"line\">  ann.left = HeatmapAnnotation(which = <span class=\"string\">&#x27;row&#x27;</span>, <span class=\"comment\"># 表明这是行的注释</span></span><br><span class=\"line\">                               <span class=\"comment\"># 柱状图注释</span></span><br><span class=\"line\">                               `OPLS-DA VIP Value` = anno_barplot(ann$VIP,<span class=\"comment\"># 选择数据来源</span></span><br><span class=\"line\">                                                                  baseline = <span class=\"number\">1</span>, <span class=\"comment\"># 柱状图基线</span></span><br><span class=\"line\">                                                                  <span class=\"comment\"># 设置颜色及填充色等</span></span><br><span class=\"line\">                                                                  gp = gpar(fill = <span class=\"number\">1</span>:nrow(ann),</span><br><span class=\"line\">                                                                            col = <span class=\"string\">&#x27;white&#x27;</span>)),</span><br><span class=\"line\">                               <span class=\"comment\"># 同上</span></span><br><span class=\"line\">                               FoldChange = anno_barplot(ann$FC,</span><br><span class=\"line\">                                                         <span class=\"comment\"># bar_width = 1,</span></span><br><span class=\"line\">                                                         gp = gpar(fill = <span class=\"number\">1</span>:nrow(ann),</span><br><span class=\"line\">                                                                   col = <span class=\"string\">&#x27;white&#x27;</span>)),</span><br><span class=\"line\">                               gap = unit(<span class=\"number\">3</span>,<span class=\"string\">&#x27;mm&#x27;</span>), <span class=\"comment\"># 两个注释信息之间的间隔</span></span><br><span class=\"line\">                               annotation_name_side = <span class=\"string\">&#x27;top&#x27;</span>, <span class=\"comment\"># 注释信息的名称</span></span><br><span class=\"line\">                               annotation_name_rot = <span class=\"number\">90</span>, <span class=\"comment\"># 注释信息名称的旋转角度</span></span><br><span class=\"line\">                               annotation_name_offset = unit(<span class=\"number\">2</span>,<span class=\"string\">&#x27;mm&#x27;</span>)) <span class=\"comment\"># 注释信息名称的偏移量</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 热图顶部注释：此处只是简单地添加分组信息</span></span><br><span class=\"line\">  ann.top = HeatmapAnnotation(which = <span class=\"string\">&#x27;column&#x27;</span>,</span><br><span class=\"line\">                              <span class=\"comment\">#Group = rep(c(&#x27;15_15&#x27;,&#x27;15_69&#x27;), each = 3),</span></span><br><span class=\"line\">                              Group = anno_block(gp = gpar(fill = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">                                                 labels = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;87_87&#x27;</span>,<span class=\"string\">&#x27;15_15&#x27;</span>), <span class=\"comment\"># 手动调整分组</span></span><br><span class=\"line\">                                                 labels_gp = gpar(col = <span class=\"string\">&#x27;white&#x27;</span>, fontsize = <span class=\"number\">15</span>)))</span><br><span class=\"line\">  <span class=\"comment\"># 右侧注释</span></span><br><span class=\"line\">  ann.right = HeatmapAnnotation(which = <span class=\"string\">&#x27;row&#x27;</span>,</span><br><span class=\"line\">                                gap = unit(<span class=\"number\">1.5</span>,<span class=\"string\">&#x27;mm&#x27;</span>), </span><br><span class=\"line\">                                pvalue = anno_simple(ann$pvalue, </span><br><span class=\"line\">                                                     col = pvalue_col_fun,</span><br><span class=\"line\">                                                     pch = ann$<span class=\"built_in\">signif</span>), <span class=\"comment\"># 只能显示1个*，多余的要手动加</span></span><br><span class=\"line\">                                一级分类 = ann$物质一级分类,</span><br><span class=\"line\">                                二级分类 = ann$物质二级分类,</span><br><span class=\"line\">                                annotation_name_side = <span class=\"string\">&#x27;top&#x27;</span>,</span><br><span class=\"line\">                                annotation_name_rot = <span class=\"number\">90</span>,</span><br><span class=\"line\">                                annotation_name_offset = unit(<span class=\"number\">2</span>,<span class=\"string\">&#x27;mm&#x27;</span>))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 定义P值的颜色等</span></span><br><span class=\"line\">  pvalue_col_fun = colorRamp2(<span class=\"built_in\">c</span>(<span class=\"built_in\">min</span>(ann$pvalue), </span><br><span class=\"line\">                                mean(ann$pvalue), </span><br><span class=\"line\">                                <span class=\"built_in\">max</span>(ann$pvalue)), </span><br><span class=\"line\">                              <span class=\"built_in\">c</span>(<span class=\"string\">&quot;green&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;red&quot;</span>)) </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 设置P值的图例等</span></span><br><span class=\"line\">  lgd_pvalue = Legend(title = <span class=\"string\">&#x27;P-value&#x27;</span>,</span><br><span class=\"line\">                      col_fun = pvalue_col_fun,</span><br><span class=\"line\">                      at = <span class=\"built_in\">c</span>(<span class=\"built_in\">min</span>(ann$pvalue), </span><br><span class=\"line\">                             mean(ann$pvalue), </span><br><span class=\"line\">                             <span class=\"built_in\">max</span>(ann$pvalue)),</span><br><span class=\"line\">                      </span><br><span class=\"line\">                      labels = <span class=\"built_in\">c</span>(<span class=\"built_in\">round</span>(<span class=\"built_in\">min</span>(ann$pvalue), <span class=\"number\">5</span>), </span><br><span class=\"line\">                                 <span class=\"built_in\">round</span>(mean(ann$pvalue), <span class=\"number\">5</span>), </span><br><span class=\"line\">                                 <span class=\"built_in\">round</span>(<span class=\"built_in\">max</span>(ann$pvalue), <span class=\"number\">5</span>)))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 绘制热图</span></span><br><span class=\"line\">  p = ComplexHeatmap::Heatmap(as.matrix(df.sub), <span class=\"comment\"># 输入数据为矩阵</span></span><br><span class=\"line\">                              name = <span class=\"string\">&#x27;相对含量&#x27;</span>, <span class=\"comment\"># 热图图例名称</span></span><br><span class=\"line\">                              col = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;navy&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;firebrick3&quot;</span>), <span class=\"comment\"># 定义颜色</span></span><br><span class=\"line\">                              column_km = <span class=\"number\">2</span>, <span class=\"comment\"># 划分列聚类</span></span><br><span class=\"line\">                              row_km = <span class=\"number\">2</span>, <span class=\"comment\"># 划分行聚类</span></span><br><span class=\"line\">                              border = <span class=\"literal\">TRUE</span>, <span class=\"comment\"># 显示边框</span></span><br><span class=\"line\">                              column_names_rot = <span class=\"number\">90</span>, <span class=\"comment\"># 列名称旋转角度</span></span><br><span class=\"line\">                              row_names_rot = <span class=\"number\">45</span>, <span class=\"comment\"># 行名称旋转角度</span></span><br><span class=\"line\">                              left_annotation = ann.left, <span class=\"comment\"># 添加左侧注释信息</span></span><br><span class=\"line\">                              top_annotation = ann.top, <span class=\"comment\"># 添加顶部注释信息</span></span><br><span class=\"line\">                              right_annotation = ann.right, <span class=\"comment\"># 添加右侧注释信息</span></span><br><span class=\"line\">                              row_title = <span class=\"string\">&#x27;Metabolites&#x27;</span>, <span class=\"comment\"># 行名称</span></span><br><span class=\"line\">                              column_title = <span class=\"string\">&#x27;Group&#x27;</span>, <span class=\"comment\"># 列名称</span></span><br><span class=\"line\">                              width = ncol(df.sub)*unit(<span class=\"number\">10</span>, <span class=\"string\">&quot;mm&quot;</span>), <span class=\"comment\"># 格子的宽度</span></span><br><span class=\"line\">                              height = nrow(df.sub)*unit(<span class=\"number\">10</span>, <span class=\"string\">&quot;mm&quot;</span>)) <span class=\"comment\"># 格子的高度</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">  pdf(file = <span class=\"string\">&#x27;results/heatmap/complexheatmap/15_15VS87_87_1.pdf&#x27;</span>, width = <span class=\"number\">15</span>, height = <span class=\"number\">20</span>, family = <span class=\"string\">&#x27;GB1&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 绘图</span></span><br><span class=\"line\">  draw(p, </span><br><span class=\"line\">       merge_legend = <span class=\"literal\">TRUE</span>, <span class=\"comment\"># 图例在一列上</span></span><br><span class=\"line\">       annotation_legend_list = <span class=\"built_in\">list</span>(lgd_pvalue))</span><br><span class=\"line\">  </span><br><span class=\"line\">  dev.off() <span class=\"comment\"># 关闭绘图设备</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/03/06/%C2%96ComplexHeatmap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.jpg\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#102;&#111;&#120;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"Win10子系统安装运行QIIME2","abbrlink":"c539b14f","date":"2021-07-03T07:36:31.000Z","_content":"\n下载最新文件：\n\n[https://docs.qiime2.org/2021.4/](https://docs.qiime2.org/2021.4/)\n\n[https://docs.qiime2.org/2021.4/install/native/](https://docs.qiime2.org/2021.4/install/native/)\n\n<!-- more -->\n\n```PowerShell\n# These instructions are identical to the Linux (64-bit) instructions\nwget https://data.qiime2.org/distro/core/qiime2-2021.4-py38-linux-conda.yml\nconda env create -n qiime2-2021.4 --file qiime2-2021.4-py38-linux-conda.yml\n# OPTIONAL CLEANUP\nrm qiime2-2021.4-py38-linux-conda.yml\n```\n\n\n下载示例数据：\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv](https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv)\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz](https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz)\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz](https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz)\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz](https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz)\n\n开始分析：\n\n- 首先是导入数据：\n\n```PowerShell\n# 双末端测序二数据<br />qiime tools import --type EMPPairedEndSequences --input-path ./data --output-path ./data/emp-paired-end-sequences.qza\n```\n\n\n- 去除barcode:\n\n```PowerShell\nqiime demux emp-paired \\\n  --m-barcodes-file sample-metadata.tsv \\\n  --m-barcodes-column barcode-sequence \\\n  --p-rev-comp-mapping-barcodes \\\n  --i-seqs emp-paired-end-sequences.qza \\\n  --o-per-sample-sequences demux-full.qza \\\n  --o-error-correction-details demux-details.qza\n```\n\n\n- 抽样：\n\n```PowerShell\nqiime demux subsample-paired \\\n  --i-sequences demux-full.qza \\\n  --p-fraction 0.3 \\\n  --o-subsampled-sequences demux-subsample.qza\n\nqiime demux summarize \\\n  --i-data demux-subsample.qza \\\n  --o-visualization demux-subsample.qzv\n```\n\n\n- 导出数据\n\n```PowerShell\nqiime tools export \\\n  --input-path demux-subsample.qzv \\\n  --output-path ./demux-subsample/\n\nqiime demux filter-samples \\\n  --i-demux demux-subsample.qza \\\n  --m-metadata-file ./demux-subsample/per-sample-fastq-counts.tsv \\\n  --p-where 'CAST([forward sequence count] AS INT) > 100' \\\n  --o-filtered-demux demux.qza\n```\n\n\n- 注释\n\n```PowerShell\nqiime dada2 denoise-paired \\\n  --i-demultiplexed-seqs demux.qza \\\n  --p-trim-left-f 13 \\\n  --p-trim-left-r 13 \\\n  --p-trunc-len-f 150 \\\n  --p-trunc-len-r 150 \\\n  --o-table table.qza \\\n  --o-representative-sequences rep-seqs.qza \\\n  --o-denoising-stats denoising-stats.qza\n```\n\n\n- 获取特征表\n\n```PowerShell\nqiime feature-table summarize \\\n  --i-table table.qza \\\n  --o-visualization table.qzv \\\n  --m-sample-metadata-file sample-metadata.tsv\n\nqiime feature-table tabulate-seqs \\\n  --i-data rep-seqs.qza \\\n  --o-visualization rep-seqs.qzv\n\nqiime metadata tabulate \\\n  --m-input-file denoising-stats.qza \\\n  --o-visualization denoising-stats.qzv\n```\n\n\n- 导出数据\n\n```PowerShell\nqiime tools export --input-path table.qza --output-path ../results/\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/Win10子系统安装运行QIIME2.md","raw":"---\ntitle: \"\\x96Win10子系统安装运行QIIME2\"\ntags: 生物信息学\ncategories: 生物信息学\nabbrlink: c539b14f\ndate: 2021-07-03 15:36:31\n---\n\n下载最新文件：\n\n[https://docs.qiime2.org/2021.4/](https://docs.qiime2.org/2021.4/)\n\n[https://docs.qiime2.org/2021.4/install/native/](https://docs.qiime2.org/2021.4/install/native/)\n\n<!-- more -->\n\n```PowerShell\n# These instructions are identical to the Linux (64-bit) instructions\nwget https://data.qiime2.org/distro/core/qiime2-2021.4-py38-linux-conda.yml\nconda env create -n qiime2-2021.4 --file qiime2-2021.4-py38-linux-conda.yml\n# OPTIONAL CLEANUP\nrm qiime2-2021.4-py38-linux-conda.yml\n```\n\n\n下载示例数据：\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv](https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv)\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz](https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz)\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz](https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz)\n\n[https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz](https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz)\n\n开始分析：\n\n- 首先是导入数据：\n\n```PowerShell\n# 双末端测序二数据<br />qiime tools import --type EMPPairedEndSequences --input-path ./data --output-path ./data/emp-paired-end-sequences.qza\n```\n\n\n- 去除barcode:\n\n```PowerShell\nqiime demux emp-paired \\\n  --m-barcodes-file sample-metadata.tsv \\\n  --m-barcodes-column barcode-sequence \\\n  --p-rev-comp-mapping-barcodes \\\n  --i-seqs emp-paired-end-sequences.qza \\\n  --o-per-sample-sequences demux-full.qza \\\n  --o-error-correction-details demux-details.qza\n```\n\n\n- 抽样：\n\n```PowerShell\nqiime demux subsample-paired \\\n  --i-sequences demux-full.qza \\\n  --p-fraction 0.3 \\\n  --o-subsampled-sequences demux-subsample.qza\n\nqiime demux summarize \\\n  --i-data demux-subsample.qza \\\n  --o-visualization demux-subsample.qzv\n```\n\n\n- 导出数据\n\n```PowerShell\nqiime tools export \\\n  --input-path demux-subsample.qzv \\\n  --output-path ./demux-subsample/\n\nqiime demux filter-samples \\\n  --i-demux demux-subsample.qza \\\n  --m-metadata-file ./demux-subsample/per-sample-fastq-counts.tsv \\\n  --p-where 'CAST([forward sequence count] AS INT) > 100' \\\n  --o-filtered-demux demux.qza\n```\n\n\n- 注释\n\n```PowerShell\nqiime dada2 denoise-paired \\\n  --i-demultiplexed-seqs demux.qza \\\n  --p-trim-left-f 13 \\\n  --p-trim-left-r 13 \\\n  --p-trunc-len-f 150 \\\n  --p-trunc-len-r 150 \\\n  --o-table table.qza \\\n  --o-representative-sequences rep-seqs.qza \\\n  --o-denoising-stats denoising-stats.qza\n```\n\n\n- 获取特征表\n\n```PowerShell\nqiime feature-table summarize \\\n  --i-table table.qza \\\n  --o-visualization table.qzv \\\n  --m-sample-metadata-file sample-metadata.tsv\n\nqiime feature-table tabulate-seqs \\\n  --i-data rep-seqs.qza \\\n  --o-visualization rep-seqs.qzv\n\nqiime metadata tabulate \\\n  --m-input-file denoising-stats.qza \\\n  --o-visualization denoising-stats.qzv\n```\n\n\n- 导出数据\n\n```PowerShell\nqiime tools export --input-path table.qza --output-path ../results/\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"Win10子系统安装运行QIIME2","published":1,"updated":"2021-07-03T07:39:18.106Z","_id":"ckwbqwcdo000kr0g03mxs5vfp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>下载最新文件：</p>\n<p><a href=\"https://docs.qiime2.org/2021.4/\">https://docs.qiime2.org/2021.4/</a></p>\n<p><a href=\"https://docs.qiime2.org/2021.4/install/native/\">https://docs.qiime2.org/2021.4/install/native/</a></p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># These instructions are identical to the Linux (64-bit) instructions</span></span><br><span class=\"line\"><span class=\"built_in\">wget</span> https://data.qiime2.org/distro/core/qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span><span class=\"literal\">-py38</span><span class=\"literal\">-linux</span><span class=\"literal\">-conda</span>.yml</span><br><span class=\"line\">conda env create <span class=\"literal\">-n</span> qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span> -<span class=\"operator\">-file</span> qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span><span class=\"literal\">-py38</span><span class=\"literal\">-linux</span><span class=\"literal\">-conda</span>.yml</span><br><span class=\"line\"><span class=\"comment\"># OPTIONAL CLEANUP</span></span><br><span class=\"line\"><span class=\"built_in\">rm</span> qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span><span class=\"literal\">-py38</span><span class=\"literal\">-linux</span><span class=\"literal\">-conda</span>.yml</span><br></pre></td></tr></table></figure>\n\n\n<p>下载示例数据：</p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv</a></p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz</a></p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz</a></p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz</a></p>\n<p>开始分析：</p>\n<ul>\n<li>首先是导入数据：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 双末端测序二数据&lt;br /&gt;qiime tools import --type EMPPairedEndSequences --input-path ./data --output-path ./data/emp-paired-end-sequences.qza</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>去除barcode:</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime demux emp<span class=\"literal\">-paired</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-barcodes</span><span class=\"operator\">-file</span> sample<span class=\"literal\">-metadata</span>.tsv \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-barcodes</span><span class=\"literal\">-column</span> barcode<span class=\"literal\">-sequence</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-rev</span><span class=\"literal\">-comp</span><span class=\"literal\">-mapping</span><span class=\"literal\">-barcodes</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-seqs</span> emp<span class=\"literal\">-paired</span><span class=\"literal\">-end</span><span class=\"literal\">-sequences</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-per</span><span class=\"literal\">-sample</span><span class=\"literal\">-sequences</span> demux<span class=\"literal\">-full</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-error</span><span class=\"literal\">-correction</span><span class=\"literal\">-details</span> demux<span class=\"literal\">-details</span>.qza</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>抽样：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime demux subsample<span class=\"literal\">-paired</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-sequences</span> demux<span class=\"literal\">-full</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-fraction</span> <span class=\"number\">0.3</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-subsampled</span><span class=\"literal\">-sequences</span> demux<span class=\"literal\">-subsample</span>.qza</span><br><span class=\"line\"></span><br><span class=\"line\">qiime demux summarize \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-data</span> demux<span class=\"literal\">-subsample</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> demux<span class=\"literal\">-subsample</span>.qzv</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>导出数据</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime tools export \\</span><br><span class=\"line\">  -<span class=\"literal\">-input</span><span class=\"literal\">-path</span> demux<span class=\"literal\">-subsample</span>.qzv \\</span><br><span class=\"line\">  -<span class=\"literal\">-output</span><span class=\"literal\">-path</span> ./demux<span class=\"literal\">-subsample</span>/</span><br><span class=\"line\"></span><br><span class=\"line\">qiime demux <span class=\"keyword\">filter</span><span class=\"literal\">-samples</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-demux</span> demux<span class=\"literal\">-subsample</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-metadata</span><span class=\"operator\">-file</span> ./demux<span class=\"literal\">-subsample</span>/per<span class=\"literal\">-sample</span><span class=\"literal\">-fastq</span><span class=\"literal\">-counts</span>.tsv \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-where</span> <span class=\"string\">&#x27;CAST([forward sequence count] AS INT) &gt; 100&#x27;</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-filtered</span><span class=\"literal\">-demux</span> demux.qza</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>注释</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime dada2 denoise<span class=\"literal\">-paired</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-demultiplexed</span><span class=\"literal\">-seqs</span> demux.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trim</span><span class=\"literal\">-left</span><span class=\"operator\">-f</span> <span class=\"number\">13</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trim</span><span class=\"literal\">-left</span><span class=\"literal\">-r</span> <span class=\"number\">13</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trunc</span><span class=\"literal\">-len</span><span class=\"operator\">-f</span> <span class=\"number\">150</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trunc</span><span class=\"literal\">-len</span><span class=\"literal\">-r</span> <span class=\"number\">150</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-table</span> table.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-representative</span><span class=\"literal\">-sequences</span> rep<span class=\"literal\">-seqs</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-denoising</span><span class=\"literal\">-stats</span> denoising<span class=\"literal\">-stats</span>.qza</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>获取特征表</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime feature<span class=\"literal\">-table</span> summarize \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-table</span> table.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> table.qzv \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-sample</span><span class=\"literal\">-metadata</span><span class=\"operator\">-file</span> sample<span class=\"literal\">-metadata</span>.tsv</span><br><span class=\"line\"></span><br><span class=\"line\">qiime feature<span class=\"literal\">-table</span> tabulate<span class=\"literal\">-seqs</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-data</span> rep<span class=\"literal\">-seqs</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> rep<span class=\"literal\">-seqs</span>.qzv</span><br><span class=\"line\"></span><br><span class=\"line\">qiime metadata tabulate \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-input</span><span class=\"operator\">-file</span> denoising<span class=\"literal\">-stats</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> denoising<span class=\"literal\">-stats</span>.qzv</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>导出数据</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime tools export -<span class=\"literal\">-input</span><span class=\"literal\">-path</span> table.qza -<span class=\"literal\">-output</span><span class=\"literal\">-path</span> ../results/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#x32;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#x32;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>下载最新文件：</p>\n<p><a href=\"https://docs.qiime2.org/2021.4/\">https://docs.qiime2.org/2021.4/</a></p>\n<p><a href=\"https://docs.qiime2.org/2021.4/install/native/\">https://docs.qiime2.org/2021.4/install/native/</a></p>","more":"<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># These instructions are identical to the Linux (64-bit) instructions</span></span><br><span class=\"line\"><span class=\"built_in\">wget</span> https://data.qiime2.org/distro/core/qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span><span class=\"literal\">-py38</span><span class=\"literal\">-linux</span><span class=\"literal\">-conda</span>.yml</span><br><span class=\"line\">conda env create <span class=\"literal\">-n</span> qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span> -<span class=\"operator\">-file</span> qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span><span class=\"literal\">-py38</span><span class=\"literal\">-linux</span><span class=\"literal\">-conda</span>.yml</span><br><span class=\"line\"><span class=\"comment\"># OPTIONAL CLEANUP</span></span><br><span class=\"line\"><span class=\"built_in\">rm</span> qiime2<span class=\"literal\">-2021</span>.<span class=\"number\">4</span><span class=\"literal\">-py38</span><span class=\"literal\">-linux</span><span class=\"literal\">-conda</span>.yml</span><br></pre></td></tr></table></figure>\n\n\n<p>下载示例数据：</p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/sample_metadata.tsv</a></p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/forward.fastq.gz</a></p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/reverse.fastq.gz</a></p>\n<p><a href=\"https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz\">https://data.qiime2.org/2021.4/tutorials/atacama-soils/10p/barcodes.fastq.gz</a></p>\n<p>开始分析：</p>\n<ul>\n<li>首先是导入数据：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 双末端测序二数据&lt;br /&gt;qiime tools import --type EMPPairedEndSequences --input-path ./data --output-path ./data/emp-paired-end-sequences.qza</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>去除barcode:</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime demux emp<span class=\"literal\">-paired</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-barcodes</span><span class=\"operator\">-file</span> sample<span class=\"literal\">-metadata</span>.tsv \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-barcodes</span><span class=\"literal\">-column</span> barcode<span class=\"literal\">-sequence</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-rev</span><span class=\"literal\">-comp</span><span class=\"literal\">-mapping</span><span class=\"literal\">-barcodes</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-seqs</span> emp<span class=\"literal\">-paired</span><span class=\"literal\">-end</span><span class=\"literal\">-sequences</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-per</span><span class=\"literal\">-sample</span><span class=\"literal\">-sequences</span> demux<span class=\"literal\">-full</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-error</span><span class=\"literal\">-correction</span><span class=\"literal\">-details</span> demux<span class=\"literal\">-details</span>.qza</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>抽样：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime demux subsample<span class=\"literal\">-paired</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-sequences</span> demux<span class=\"literal\">-full</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-fraction</span> <span class=\"number\">0.3</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-subsampled</span><span class=\"literal\">-sequences</span> demux<span class=\"literal\">-subsample</span>.qza</span><br><span class=\"line\"></span><br><span class=\"line\">qiime demux summarize \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-data</span> demux<span class=\"literal\">-subsample</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> demux<span class=\"literal\">-subsample</span>.qzv</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>导出数据</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime tools export \\</span><br><span class=\"line\">  -<span class=\"literal\">-input</span><span class=\"literal\">-path</span> demux<span class=\"literal\">-subsample</span>.qzv \\</span><br><span class=\"line\">  -<span class=\"literal\">-output</span><span class=\"literal\">-path</span> ./demux<span class=\"literal\">-subsample</span>/</span><br><span class=\"line\"></span><br><span class=\"line\">qiime demux <span class=\"keyword\">filter</span><span class=\"literal\">-samples</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-demux</span> demux<span class=\"literal\">-subsample</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-metadata</span><span class=\"operator\">-file</span> ./demux<span class=\"literal\">-subsample</span>/per<span class=\"literal\">-sample</span><span class=\"literal\">-fastq</span><span class=\"literal\">-counts</span>.tsv \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-where</span> <span class=\"string\">&#x27;CAST([forward sequence count] AS INT) &gt; 100&#x27;</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-filtered</span><span class=\"literal\">-demux</span> demux.qza</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>注释</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime dada2 denoise<span class=\"literal\">-paired</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-demultiplexed</span><span class=\"literal\">-seqs</span> demux.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trim</span><span class=\"literal\">-left</span><span class=\"operator\">-f</span> <span class=\"number\">13</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trim</span><span class=\"literal\">-left</span><span class=\"literal\">-r</span> <span class=\"number\">13</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trunc</span><span class=\"literal\">-len</span><span class=\"operator\">-f</span> <span class=\"number\">150</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-p</span><span class=\"literal\">-trunc</span><span class=\"literal\">-len</span><span class=\"literal\">-r</span> <span class=\"number\">150</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-table</span> table.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-representative</span><span class=\"literal\">-sequences</span> rep<span class=\"literal\">-seqs</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-denoising</span><span class=\"literal\">-stats</span> denoising<span class=\"literal\">-stats</span>.qza</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>获取特征表</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime feature<span class=\"literal\">-table</span> summarize \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-table</span> table.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> table.qzv \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-sample</span><span class=\"literal\">-metadata</span><span class=\"operator\">-file</span> sample<span class=\"literal\">-metadata</span>.tsv</span><br><span class=\"line\"></span><br><span class=\"line\">qiime feature<span class=\"literal\">-table</span> tabulate<span class=\"literal\">-seqs</span> \\</span><br><span class=\"line\">  -<span class=\"literal\">-i</span><span class=\"literal\">-data</span> rep<span class=\"literal\">-seqs</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> rep<span class=\"literal\">-seqs</span>.qzv</span><br><span class=\"line\"></span><br><span class=\"line\">qiime metadata tabulate \\</span><br><span class=\"line\">  -<span class=\"literal\">-m</span><span class=\"literal\">-input</span><span class=\"operator\">-file</span> denoising<span class=\"literal\">-stats</span>.qza \\</span><br><span class=\"line\">  -<span class=\"literal\">-o</span><span class=\"literal\">-visualization</span> denoising<span class=\"literal\">-stats</span>.qzv</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>导出数据</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qiime tools export -<span class=\"literal\">-input</span><span class=\"literal\">-path</span> table.qza -<span class=\"literal\">-output</span><span class=\"literal\">-path</span> ../results/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#x32;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#x32;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"ggprism学习笔记","abbrlink":"5d41879e","date":"2021-02-08T10:18:43.000Z","_content":"\n这个包简直就是完美啊！！！<!-- more -->\n\n```R\n# for the graph\nlibrary(ggplot2)\nlibrary(ggprism)\nlibrary(ggnewscale)\n\n# just for manipulating the data.frame\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\nlibrary(tidyr)\n\n# construct the data.frame, log10 transform the agonist concentration\n# convert the data.frame to long format, then remove any rows with NA\ndf <- data.frame(\n        agonist = c(1e-10, 1e-8, 3e-8, 1e-7, 3e-7, 1e-6, 3e-6, 1e-5, 3e-5, 1e-4, 3e-4),\n        ctr1 = c(0, 11, 125, 190, 258, 322, 354, 348, NA, 412, NA),\n        ctr2 = c(3, 33, 141, 218, 289, 353, 359, 298, NA, 378, NA),\n        ctr3 = c(2, 25, 160, 196, 345, 328, 369, 372, NA, 399, NA),\n        trt1 = c(3, NA, 11, 52, 80, 171, 289, 272, 359, 352, 389),\n        trt2 = c(5, NA, 25, 55, 77, 195, 230, 333, 306, 320, 338), \n        trt3 = c(4, NA, 28, 61, 44, 246, 243, 310, 297, 365, NA)\n) %>% \n        mutate(log.agonist = log10(agonist)) %>% \n        pivot_longer(\n                c(-agonist, -log.agonist), \n                names_pattern = \"(.{3})([0-9])\", \n                names_to = c(\"treatment\", \"rep\"),\n                values_to = \"response\"\n        ) %>% \n        filter(!is.na(response))\n\nhead(df)\n#> # A tibble: 6 x 5\n#>        agonist log.agonist treatment rep   response\n#>          <dbl>       <dbl> <chr>     <chr>    <dbl>\n#> 1 0.0000000001         -10 ctr       1            0\n#> 2 0.0000000001         -10 ctr       2            3\n#> 3 0.0000000001         -10 ctr       3            2\n#> 4 0.0000000001         -10 trt       1            3\n#> 5 0.0000000001         -10 trt       2            5\n#> 6 0.0000000001         -10 trt       3            4\n\n# define model (note x and ec50 are swapped around because ec50 is already -ve)\ndose_resp <- y ~ min + ((max - min) / (1 + exp(hill_coefficient * (ec50 - x))))\n\n\n# plot the log10(agonist concentration) vs the response\np <- ggplot(df, aes(x = log.agonist, y = response))\n# fit separate curves to the data from the two treatment types\np <- p + geom_smooth(\n        aes(colour = treatment),\n        method = \"nls\", formula = dose_resp, se = FALSE,\n        method.args = list(start = list(min = 1.67, max = 397, ec50 = -7, hill_coefficient = 1))\n)\np\n\n# apply a manual colour scale to the curves\np <- p + scale_colour_manual(\n        labels = c(\"No inhibitor\", \"Inhibitor\"),\n        values = c(\"#00167B\", \"#9FA3FE\")\n)\np\n\n\n# reset the colour scale, add the data points, then use a new colour scale\np <- p + ggnewscale::new_scale_colour() +\n        geom_point(aes(colour = treatment, shape = treatment), size = 3) + \n        scale_colour_prism(\n                palette = \"winter_bright\", \n                labels = c(\"No inhibitor\",\n                           \"Inhibitor\")\n        ) + \n        scale_shape_prism(\n                labels = c(\"No inhibitor\",\n                           \"Inhibitor\")\n        )\np\n\n# use the Winter Bright theme and make the size of all plot elements larger\np <- p + theme_prism(palette = \"winter_bright\", base_size = 16)\np\n\n# adjust the axis limits, major tick positions, and axis guide\np <- p + scale_y_continuous(\n        limits = c(-100, 500), \n        breaks = seq(-100, 500, 100),\n        guide = \"prism_offset\"\n)\np\n\n\n# adjust the axis limits, major and minor tick positions, axis guide, and \n# axis text (aka. label) appearance\np <- p + scale_x_continuous(\n        limits = c(-10, -3), \n        breaks = -10:-3,\n        guide = \"prism_offset_minor\",\n        minor_breaks = log10(rep(1:9, 7)*(10^rep(-10:-4, each = 9))),\n        labels = function(lab) {\n                do.call(\n                        expression,\n                        lapply(paste(lab), function(x) bquote(bold(\"10\"^.(x))))\n                )\n        }\n)\np\n\n# remove the y axis title and legend title, change the x axis title and\n# move the legend to the top left\np <- p + theme(\n        axis.title.y = element_blank(),\n        legend.title = element_blank(),\n        legend.position = c(0.05, 0.95),\n        legend.justification = c(0.05, 0.95)\n) + \n        labs(x = \"[Agonist], M\")\np\n\n\n\n\n# all code\ndose_resp <- y ~ min + ((max - min) / (1 + exp(hill_coefficient * (ec50 - x))))\n\nggplot(df, aes(x = log.agonist, y = response)) + \n        geom_smooth(\n                aes(colour = treatment),\n                method = \"nls\", formula = dose_resp, se = FALSE,\n                method.args = list(start = list(min = 1.67, max = 397, ec50 = -7, hill_coefficient = 1))\n        ) + \n        scale_colour_manual(labels = c(\"No inhibitor\", \"Inhibitor\"),\n                            values = c(\"#00167B\", \"#9FA3FE\")) + \n        ggnewscale::new_scale_colour() +\n        geom_point(aes(colour = treatment, shape = treatment), size = 3) + \n        scale_colour_prism(palette = \"winter_bright\", \n                           labels = c(\"No inhibitor\", \"Inhibitor\")) + \n        scale_shape_prism(labels = c(\"No inhibitor\", \"Inhibitor\")) + \n        theme_prism(palette = \"winter_bright\", base_size = 16) + \n        scale_y_continuous(limits = c(-100, 500), \n                           breaks = seq(-100, 500, 100),\n                           guide = \"prism_offset\") + \n        scale_x_continuous(\n                limits = c(-10, -3), \n                breaks = -10:-3,\n                guide = \"prism_offset_minor\",\n                minor_breaks = log10(rep(1:9, 7)*(10^rep(-10:-4, each = 9))),\n                labels = function(lab) {\n                        do.call(\n                                expression,\n                                lapply(paste(lab), function(x) bquote(bold(\"10\"^.(x))))\n                        )\n                }\n        ) + \n        theme(axis.title.y = element_blank(),\n              legend.title = element_blank(),\n              legend.position = c(0.05, 0.95),\n              legend.justification = c(0.05, 0.95)) + \n        labs(x = \"[Agonist], M\")\n```\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com","source":"_posts/ggprism学习笔记.md","raw":"---\ntitle: ggprism学习笔记\ntags: R语言\ncategories: R语言\nabbrlink: 5d41879e\ndate: 2021-02-08 18:18:43\n---\n\n这个包简直就是完美啊！！！<!-- more -->\n\n```R\n# for the graph\nlibrary(ggplot2)\nlibrary(ggprism)\nlibrary(ggnewscale)\n\n# just for manipulating the data.frame\nlibrary(dplyr)\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\nlibrary(tidyr)\n\n# construct the data.frame, log10 transform the agonist concentration\n# convert the data.frame to long format, then remove any rows with NA\ndf <- data.frame(\n        agonist = c(1e-10, 1e-8, 3e-8, 1e-7, 3e-7, 1e-6, 3e-6, 1e-5, 3e-5, 1e-4, 3e-4),\n        ctr1 = c(0, 11, 125, 190, 258, 322, 354, 348, NA, 412, NA),\n        ctr2 = c(3, 33, 141, 218, 289, 353, 359, 298, NA, 378, NA),\n        ctr3 = c(2, 25, 160, 196, 345, 328, 369, 372, NA, 399, NA),\n        trt1 = c(3, NA, 11, 52, 80, 171, 289, 272, 359, 352, 389),\n        trt2 = c(5, NA, 25, 55, 77, 195, 230, 333, 306, 320, 338), \n        trt3 = c(4, NA, 28, 61, 44, 246, 243, 310, 297, 365, NA)\n) %>% \n        mutate(log.agonist = log10(agonist)) %>% \n        pivot_longer(\n                c(-agonist, -log.agonist), \n                names_pattern = \"(.{3})([0-9])\", \n                names_to = c(\"treatment\", \"rep\"),\n                values_to = \"response\"\n        ) %>% \n        filter(!is.na(response))\n\nhead(df)\n#> # A tibble: 6 x 5\n#>        agonist log.agonist treatment rep   response\n#>          <dbl>       <dbl> <chr>     <chr>    <dbl>\n#> 1 0.0000000001         -10 ctr       1            0\n#> 2 0.0000000001         -10 ctr       2            3\n#> 3 0.0000000001         -10 ctr       3            2\n#> 4 0.0000000001         -10 trt       1            3\n#> 5 0.0000000001         -10 trt       2            5\n#> 6 0.0000000001         -10 trt       3            4\n\n# define model (note x and ec50 are swapped around because ec50 is already -ve)\ndose_resp <- y ~ min + ((max - min) / (1 + exp(hill_coefficient * (ec50 - x))))\n\n\n# plot the log10(agonist concentration) vs the response\np <- ggplot(df, aes(x = log.agonist, y = response))\n# fit separate curves to the data from the two treatment types\np <- p + geom_smooth(\n        aes(colour = treatment),\n        method = \"nls\", formula = dose_resp, se = FALSE,\n        method.args = list(start = list(min = 1.67, max = 397, ec50 = -7, hill_coefficient = 1))\n)\np\n\n# apply a manual colour scale to the curves\np <- p + scale_colour_manual(\n        labels = c(\"No inhibitor\", \"Inhibitor\"),\n        values = c(\"#00167B\", \"#9FA3FE\")\n)\np\n\n\n# reset the colour scale, add the data points, then use a new colour scale\np <- p + ggnewscale::new_scale_colour() +\n        geom_point(aes(colour = treatment, shape = treatment), size = 3) + \n        scale_colour_prism(\n                palette = \"winter_bright\", \n                labels = c(\"No inhibitor\",\n                           \"Inhibitor\")\n        ) + \n        scale_shape_prism(\n                labels = c(\"No inhibitor\",\n                           \"Inhibitor\")\n        )\np\n\n# use the Winter Bright theme and make the size of all plot elements larger\np <- p + theme_prism(palette = \"winter_bright\", base_size = 16)\np\n\n# adjust the axis limits, major tick positions, and axis guide\np <- p + scale_y_continuous(\n        limits = c(-100, 500), \n        breaks = seq(-100, 500, 100),\n        guide = \"prism_offset\"\n)\np\n\n\n# adjust the axis limits, major and minor tick positions, axis guide, and \n# axis text (aka. label) appearance\np <- p + scale_x_continuous(\n        limits = c(-10, -3), \n        breaks = -10:-3,\n        guide = \"prism_offset_minor\",\n        minor_breaks = log10(rep(1:9, 7)*(10^rep(-10:-4, each = 9))),\n        labels = function(lab) {\n                do.call(\n                        expression,\n                        lapply(paste(lab), function(x) bquote(bold(\"10\"^.(x))))\n                )\n        }\n)\np\n\n# remove the y axis title and legend title, change the x axis title and\n# move the legend to the top left\np <- p + theme(\n        axis.title.y = element_blank(),\n        legend.title = element_blank(),\n        legend.position = c(0.05, 0.95),\n        legend.justification = c(0.05, 0.95)\n) + \n        labs(x = \"[Agonist], M\")\np\n\n\n\n\n# all code\ndose_resp <- y ~ min + ((max - min) / (1 + exp(hill_coefficient * (ec50 - x))))\n\nggplot(df, aes(x = log.agonist, y = response)) + \n        geom_smooth(\n                aes(colour = treatment),\n                method = \"nls\", formula = dose_resp, se = FALSE,\n                method.args = list(start = list(min = 1.67, max = 397, ec50 = -7, hill_coefficient = 1))\n        ) + \n        scale_colour_manual(labels = c(\"No inhibitor\", \"Inhibitor\"),\n                            values = c(\"#00167B\", \"#9FA3FE\")) + \n        ggnewscale::new_scale_colour() +\n        geom_point(aes(colour = treatment, shape = treatment), size = 3) + \n        scale_colour_prism(palette = \"winter_bright\", \n                           labels = c(\"No inhibitor\", \"Inhibitor\")) + \n        scale_shape_prism(labels = c(\"No inhibitor\", \"Inhibitor\")) + \n        theme_prism(palette = \"winter_bright\", base_size = 16) + \n        scale_y_continuous(limits = c(-100, 500), \n                           breaks = seq(-100, 500, 100),\n                           guide = \"prism_offset\") + \n        scale_x_continuous(\n                limits = c(-10, -3), \n                breaks = -10:-3,\n                guide = \"prism_offset_minor\",\n                minor_breaks = log10(rep(1:9, 7)*(10^rep(-10:-4, each = 9))),\n                labels = function(lab) {\n                        do.call(\n                                expression,\n                                lapply(paste(lab), function(x) bquote(bold(\"10\"^.(x))))\n                        )\n                }\n        ) + \n        theme(axis.title.y = element_blank(),\n              legend.title = element_blank(),\n              legend.position = c(0.05, 0.95),\n              legend.justification = c(0.05, 0.95)) + \n        labs(x = \"[Agonist], M\")\n```\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com","slug":"ggprism学习笔记","published":1,"updated":"2021-02-20T09:01:36.253Z","_id":"ckwbqwcej000ur0g0487a2qgl","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这个包简直就是完美啊！！！<span id=\"more\"></span></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for the graph</span></span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggprism)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># just for manipulating the data.frame</span></span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\"><span class=\"comment\">#&gt; </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Attaching package: &#x27;dplyr&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; The following objects are masked from &#x27;package:stats&#x27;:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     filter, lag</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; The following objects are masked from &#x27;package:base&#x27;:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     intersect, setdiff, setequal, union</span></span><br><span class=\"line\">library(tidyr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># construct the data.frame, log10 transform the agonist concentration</span></span><br><span class=\"line\"><span class=\"comment\"># convert the data.frame to long format, then remove any rows with NA</span></span><br><span class=\"line\">df &lt;- data.frame(</span><br><span class=\"line\">        agonist = <span class=\"built_in\">c</span>(<span class=\"number\">1e-10</span>, <span class=\"number\">1e-8</span>, <span class=\"number\">3e-8</span>, <span class=\"number\">1e-7</span>, <span class=\"number\">3e-7</span>, <span class=\"number\">1e-6</span>, <span class=\"number\">3e-6</span>, <span class=\"number\">1e-5</span>, <span class=\"number\">3e-5</span>, <span class=\"number\">1e-4</span>, <span class=\"number\">3e-4</span>),</span><br><span class=\"line\">        ctr1 = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">11</span>, <span class=\"number\">125</span>, <span class=\"number\">190</span>, <span class=\"number\">258</span>, <span class=\"number\">322</span>, <span class=\"number\">354</span>, <span class=\"number\">348</span>, <span class=\"literal\">NA</span>, <span class=\"number\">412</span>, <span class=\"literal\">NA</span>),</span><br><span class=\"line\">        ctr2 = <span class=\"built_in\">c</span>(<span class=\"number\">3</span>, <span class=\"number\">33</span>, <span class=\"number\">141</span>, <span class=\"number\">218</span>, <span class=\"number\">289</span>, <span class=\"number\">353</span>, <span class=\"number\">359</span>, <span class=\"number\">298</span>, <span class=\"literal\">NA</span>, <span class=\"number\">378</span>, <span class=\"literal\">NA</span>),</span><br><span class=\"line\">        ctr3 = <span class=\"built_in\">c</span>(<span class=\"number\">2</span>, <span class=\"number\">25</span>, <span class=\"number\">160</span>, <span class=\"number\">196</span>, <span class=\"number\">345</span>, <span class=\"number\">328</span>, <span class=\"number\">369</span>, <span class=\"number\">372</span>, <span class=\"literal\">NA</span>, <span class=\"number\">399</span>, <span class=\"literal\">NA</span>),</span><br><span class=\"line\">        trt1 = <span class=\"built_in\">c</span>(<span class=\"number\">3</span>, <span class=\"literal\">NA</span>, <span class=\"number\">11</span>, <span class=\"number\">52</span>, <span class=\"number\">80</span>, <span class=\"number\">171</span>, <span class=\"number\">289</span>, <span class=\"number\">272</span>, <span class=\"number\">359</span>, <span class=\"number\">352</span>, <span class=\"number\">389</span>),</span><br><span class=\"line\">        trt2 = <span class=\"built_in\">c</span>(<span class=\"number\">5</span>, <span class=\"literal\">NA</span>, <span class=\"number\">25</span>, <span class=\"number\">55</span>, <span class=\"number\">77</span>, <span class=\"number\">195</span>, <span class=\"number\">230</span>, <span class=\"number\">333</span>, <span class=\"number\">306</span>, <span class=\"number\">320</span>, <span class=\"number\">338</span>), </span><br><span class=\"line\">        trt3 = <span class=\"built_in\">c</span>(<span class=\"number\">4</span>, <span class=\"literal\">NA</span>, <span class=\"number\">28</span>, <span class=\"number\">61</span>, <span class=\"number\">44</span>, <span class=\"number\">246</span>, <span class=\"number\">243</span>, <span class=\"number\">310</span>, <span class=\"number\">297</span>, <span class=\"number\">365</span>, <span class=\"literal\">NA</span>)</span><br><span class=\"line\">) %&gt;% </span><br><span class=\"line\">        mutate(log.agonist = log10(agonist)) %&gt;% </span><br><span class=\"line\">        pivot_longer(</span><br><span class=\"line\">                <span class=\"built_in\">c</span>(-agonist, -log.agonist), </span><br><span class=\"line\">                names_pattern = <span class=\"string\">&quot;(.&#123;3&#125;)([0-9])&quot;</span>, </span><br><span class=\"line\">                names_to = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;treatment&quot;</span>, <span class=\"string\">&quot;rep&quot;</span>),</span><br><span class=\"line\">                values_to = <span class=\"string\">&quot;response&quot;</span></span><br><span class=\"line\">        ) %&gt;% </span><br><span class=\"line\">        filter(!<span class=\"built_in\">is.na</span>(response))</span><br><span class=\"line\"></span><br><span class=\"line\">head(df)</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 6 x 5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;        agonist log.agonist treatment rep   response</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;          &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 0.0000000001         -10 ctr       1            0</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 0.0000000001         -10 ctr       2            3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 0.0000000001         -10 ctr       3            2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 0.0000000001         -10 trt       1            3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 0.0000000001         -10 trt       2            5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 0.0000000001         -10 trt       3            4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># define model (note x and ec50 are swapped around because ec50 is already -ve)</span></span><br><span class=\"line\">dose_resp &lt;- y ~ <span class=\"built_in\">min</span> + ((<span class=\"built_in\">max</span> - <span class=\"built_in\">min</span>) / (<span class=\"number\">1</span> + <span class=\"built_in\">exp</span>(hill_coefficient * (ec50 - x))))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot the log10(agonist concentration) vs the response</span></span><br><span class=\"line\">p &lt;- ggplot(df, aes(x = log.agonist, y = response))</span><br><span class=\"line\"><span class=\"comment\"># fit separate curves to the data from the two treatment types</span></span><br><span class=\"line\">p &lt;- p + geom_smooth(</span><br><span class=\"line\">        aes(colour = treatment),</span><br><span class=\"line\">        method = <span class=\"string\">&quot;nls&quot;</span>, formula = dose_resp, se = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">        method.args = <span class=\"built_in\">list</span>(start = <span class=\"built_in\">list</span>(<span class=\"built_in\">min</span> = <span class=\"number\">1.67</span>, <span class=\"built_in\">max</span> = <span class=\"number\">397</span>, ec50 = -<span class=\"number\">7</span>, hill_coefficient = <span class=\"number\">1</span>))</span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># apply a manual colour scale to the curves</span></span><br><span class=\"line\">p &lt;- p + scale_colour_manual(</span><br><span class=\"line\">        labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>),</span><br><span class=\"line\">        values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;#00167B&quot;</span>, <span class=\"string\">&quot;#9FA3FE&quot;</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># reset the colour scale, add the data points, then use a new colour scale</span></span><br><span class=\"line\">p &lt;- p + ggnewscale::new_scale_colour() +</span><br><span class=\"line\">        geom_point(aes(colour = treatment, shape = treatment), size = <span class=\"number\">3</span>) + </span><br><span class=\"line\">        scale_colour_prism(</span><br><span class=\"line\">                palette = <span class=\"string\">&quot;winter_bright&quot;</span>, </span><br><span class=\"line\">                labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&quot;Inhibitor&quot;</span>)</span><br><span class=\"line\">        ) + </span><br><span class=\"line\">        scale_shape_prism(</span><br><span class=\"line\">                labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&quot;Inhibitor&quot;</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use the Winter Bright theme and make the size of all plot elements larger</span></span><br><span class=\"line\">p &lt;- p + theme_prism(palette = <span class=\"string\">&quot;winter_bright&quot;</span>, base_size = <span class=\"number\">16</span>)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adjust the axis limits, major tick positions, and axis guide</span></span><br><span class=\"line\">p &lt;- p + scale_y_continuous(</span><br><span class=\"line\">        limits = <span class=\"built_in\">c</span>(-<span class=\"number\">100</span>, <span class=\"number\">500</span>), </span><br><span class=\"line\">        breaks = seq(-<span class=\"number\">100</span>, <span class=\"number\">500</span>, <span class=\"number\">100</span>),</span><br><span class=\"line\">        guide = <span class=\"string\">&quot;prism_offset&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adjust the axis limits, major and minor tick positions, axis guide, and </span></span><br><span class=\"line\"><span class=\"comment\"># axis text (aka. label) appearance</span></span><br><span class=\"line\">p &lt;- p + scale_x_continuous(</span><br><span class=\"line\">        limits = <span class=\"built_in\">c</span>(-<span class=\"number\">10</span>, -<span class=\"number\">3</span>), </span><br><span class=\"line\">        breaks = -<span class=\"number\">10</span>:-<span class=\"number\">3</span>,</span><br><span class=\"line\">        guide = <span class=\"string\">&quot;prism_offset_minor&quot;</span>,</span><br><span class=\"line\">        minor_breaks = log10(<span class=\"built_in\">rep</span>(<span class=\"number\">1</span>:<span class=\"number\">9</span>, <span class=\"number\">7</span>)*(<span class=\"number\">10</span>^<span class=\"built_in\">rep</span>(-<span class=\"number\">10</span>:-<span class=\"number\">4</span>, each = <span class=\"number\">9</span>))),</span><br><span class=\"line\">        labels = <span class=\"keyword\">function</span>(lab) &#123;</span><br><span class=\"line\">                do.call(</span><br><span class=\"line\">                        <span class=\"built_in\">expression</span>,</span><br><span class=\"line\">                        lapply(paste(lab), <span class=\"keyword\">function</span>(x) bquote(bold(<span class=\"string\">&quot;10&quot;</span>^.(x))))</span><br><span class=\"line\">                )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># remove the y axis title and legend title, change the x axis title and</span></span><br><span class=\"line\"><span class=\"comment\"># move the legend to the top left</span></span><br><span class=\"line\">p &lt;- p + theme(</span><br><span class=\"line\">        axis.title.y = element_blank(),</span><br><span class=\"line\">        legend.title = element_blank(),</span><br><span class=\"line\">        legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>),</span><br><span class=\"line\">        legend.justification = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>)</span><br><span class=\"line\">) + </span><br><span class=\"line\">        labs(x = <span class=\"string\">&quot;[Agonist], M&quot;</span>)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># all code</span></span><br><span class=\"line\">dose_resp &lt;- y ~ <span class=\"built_in\">min</span> + ((<span class=\"built_in\">max</span> - <span class=\"built_in\">min</span>) / (<span class=\"number\">1</span> + <span class=\"built_in\">exp</span>(hill_coefficient * (ec50 - x))))</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(df, aes(x = log.agonist, y = response)) + </span><br><span class=\"line\">        geom_smooth(</span><br><span class=\"line\">                aes(colour = treatment),</span><br><span class=\"line\">                method = <span class=\"string\">&quot;nls&quot;</span>, formula = dose_resp, se = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                method.args = <span class=\"built_in\">list</span>(start = <span class=\"built_in\">list</span>(<span class=\"built_in\">min</span> = <span class=\"number\">1.67</span>, <span class=\"built_in\">max</span> = <span class=\"number\">397</span>, ec50 = -<span class=\"number\">7</span>, hill_coefficient = <span class=\"number\">1</span>))</span><br><span class=\"line\">        ) + </span><br><span class=\"line\">        scale_colour_manual(labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>),</span><br><span class=\"line\">                            values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;#00167B&quot;</span>, <span class=\"string\">&quot;#9FA3FE&quot;</span>)) + </span><br><span class=\"line\">        ggnewscale::new_scale_colour() +</span><br><span class=\"line\">        geom_point(aes(colour = treatment, shape = treatment), size = <span class=\"number\">3</span>) + </span><br><span class=\"line\">        scale_colour_prism(palette = <span class=\"string\">&quot;winter_bright&quot;</span>, </span><br><span class=\"line\">                           labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>)) + </span><br><span class=\"line\">        scale_shape_prism(labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>)) + </span><br><span class=\"line\">        theme_prism(palette = <span class=\"string\">&quot;winter_bright&quot;</span>, base_size = <span class=\"number\">16</span>) + </span><br><span class=\"line\">        scale_y_continuous(limits = <span class=\"built_in\">c</span>(-<span class=\"number\">100</span>, <span class=\"number\">500</span>), </span><br><span class=\"line\">                           breaks = seq(-<span class=\"number\">100</span>, <span class=\"number\">500</span>, <span class=\"number\">100</span>),</span><br><span class=\"line\">                           guide = <span class=\"string\">&quot;prism_offset&quot;</span>) + </span><br><span class=\"line\">        scale_x_continuous(</span><br><span class=\"line\">                limits = <span class=\"built_in\">c</span>(-<span class=\"number\">10</span>, -<span class=\"number\">3</span>), </span><br><span class=\"line\">                breaks = -<span class=\"number\">10</span>:-<span class=\"number\">3</span>,</span><br><span class=\"line\">                guide = <span class=\"string\">&quot;prism_offset_minor&quot;</span>,</span><br><span class=\"line\">                minor_breaks = log10(<span class=\"built_in\">rep</span>(<span class=\"number\">1</span>:<span class=\"number\">9</span>, <span class=\"number\">7</span>)*(<span class=\"number\">10</span>^<span class=\"built_in\">rep</span>(-<span class=\"number\">10</span>:-<span class=\"number\">4</span>, each = <span class=\"number\">9</span>))),</span><br><span class=\"line\">                labels = <span class=\"keyword\">function</span>(lab) &#123;</span><br><span class=\"line\">                        do.call(</span><br><span class=\"line\">                                <span class=\"built_in\">expression</span>,</span><br><span class=\"line\">                                lapply(paste(lab), <span class=\"keyword\">function</span>(x) bquote(bold(<span class=\"string\">&quot;10&quot;</span>^.(x))))</span><br><span class=\"line\">                        )</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        ) + </span><br><span class=\"line\">        theme(axis.title.y = element_blank(),</span><br><span class=\"line\">              legend.title = element_blank(),</span><br><span class=\"line\">              legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>),</span><br><span class=\"line\">              legend.justification = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>)) + </span><br><span class=\"line\">        labs(x = <span class=\"string\">&quot;[Agonist], M&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#x66;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#x66;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>这个包简直就是完美啊！！！","more":"</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for the graph</span></span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggprism)</span><br><span class=\"line\">library(ggnewscale)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># just for manipulating the data.frame</span></span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\"><span class=\"comment\">#&gt; </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Attaching package: &#x27;dplyr&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; The following objects are masked from &#x27;package:stats&#x27;:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     filter, lag</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; The following objects are masked from &#x27;package:base&#x27;:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     intersect, setdiff, setequal, union</span></span><br><span class=\"line\">library(tidyr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># construct the data.frame, log10 transform the agonist concentration</span></span><br><span class=\"line\"><span class=\"comment\"># convert the data.frame to long format, then remove any rows with NA</span></span><br><span class=\"line\">df &lt;- data.frame(</span><br><span class=\"line\">        agonist = <span class=\"built_in\">c</span>(<span class=\"number\">1e-10</span>, <span class=\"number\">1e-8</span>, <span class=\"number\">3e-8</span>, <span class=\"number\">1e-7</span>, <span class=\"number\">3e-7</span>, <span class=\"number\">1e-6</span>, <span class=\"number\">3e-6</span>, <span class=\"number\">1e-5</span>, <span class=\"number\">3e-5</span>, <span class=\"number\">1e-4</span>, <span class=\"number\">3e-4</span>),</span><br><span class=\"line\">        ctr1 = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>, <span class=\"number\">11</span>, <span class=\"number\">125</span>, <span class=\"number\">190</span>, <span class=\"number\">258</span>, <span class=\"number\">322</span>, <span class=\"number\">354</span>, <span class=\"number\">348</span>, <span class=\"literal\">NA</span>, <span class=\"number\">412</span>, <span class=\"literal\">NA</span>),</span><br><span class=\"line\">        ctr2 = <span class=\"built_in\">c</span>(<span class=\"number\">3</span>, <span class=\"number\">33</span>, <span class=\"number\">141</span>, <span class=\"number\">218</span>, <span class=\"number\">289</span>, <span class=\"number\">353</span>, <span class=\"number\">359</span>, <span class=\"number\">298</span>, <span class=\"literal\">NA</span>, <span class=\"number\">378</span>, <span class=\"literal\">NA</span>),</span><br><span class=\"line\">        ctr3 = <span class=\"built_in\">c</span>(<span class=\"number\">2</span>, <span class=\"number\">25</span>, <span class=\"number\">160</span>, <span class=\"number\">196</span>, <span class=\"number\">345</span>, <span class=\"number\">328</span>, <span class=\"number\">369</span>, <span class=\"number\">372</span>, <span class=\"literal\">NA</span>, <span class=\"number\">399</span>, <span class=\"literal\">NA</span>),</span><br><span class=\"line\">        trt1 = <span class=\"built_in\">c</span>(<span class=\"number\">3</span>, <span class=\"literal\">NA</span>, <span class=\"number\">11</span>, <span class=\"number\">52</span>, <span class=\"number\">80</span>, <span class=\"number\">171</span>, <span class=\"number\">289</span>, <span class=\"number\">272</span>, <span class=\"number\">359</span>, <span class=\"number\">352</span>, <span class=\"number\">389</span>),</span><br><span class=\"line\">        trt2 = <span class=\"built_in\">c</span>(<span class=\"number\">5</span>, <span class=\"literal\">NA</span>, <span class=\"number\">25</span>, <span class=\"number\">55</span>, <span class=\"number\">77</span>, <span class=\"number\">195</span>, <span class=\"number\">230</span>, <span class=\"number\">333</span>, <span class=\"number\">306</span>, <span class=\"number\">320</span>, <span class=\"number\">338</span>), </span><br><span class=\"line\">        trt3 = <span class=\"built_in\">c</span>(<span class=\"number\">4</span>, <span class=\"literal\">NA</span>, <span class=\"number\">28</span>, <span class=\"number\">61</span>, <span class=\"number\">44</span>, <span class=\"number\">246</span>, <span class=\"number\">243</span>, <span class=\"number\">310</span>, <span class=\"number\">297</span>, <span class=\"number\">365</span>, <span class=\"literal\">NA</span>)</span><br><span class=\"line\">) %&gt;% </span><br><span class=\"line\">        mutate(log.agonist = log10(agonist)) %&gt;% </span><br><span class=\"line\">        pivot_longer(</span><br><span class=\"line\">                <span class=\"built_in\">c</span>(-agonist, -log.agonist), </span><br><span class=\"line\">                names_pattern = <span class=\"string\">&quot;(.&#123;3&#125;)([0-9])&quot;</span>, </span><br><span class=\"line\">                names_to = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;treatment&quot;</span>, <span class=\"string\">&quot;rep&quot;</span>),</span><br><span class=\"line\">                values_to = <span class=\"string\">&quot;response&quot;</span></span><br><span class=\"line\">        ) %&gt;% </span><br><span class=\"line\">        filter(!<span class=\"built_in\">is.na</span>(response))</span><br><span class=\"line\"></span><br><span class=\"line\">head(df)</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 6 x 5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;        agonist log.agonist treatment rep   response</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;          &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 0.0000000001         -10 ctr       1            0</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 0.0000000001         -10 ctr       2            3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 0.0000000001         -10 ctr       3            2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 0.0000000001         -10 trt       1            3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 0.0000000001         -10 trt       2            5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 0.0000000001         -10 trt       3            4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># define model (note x and ec50 are swapped around because ec50 is already -ve)</span></span><br><span class=\"line\">dose_resp &lt;- y ~ <span class=\"built_in\">min</span> + ((<span class=\"built_in\">max</span> - <span class=\"built_in\">min</span>) / (<span class=\"number\">1</span> + <span class=\"built_in\">exp</span>(hill_coefficient * (ec50 - x))))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot the log10(agonist concentration) vs the response</span></span><br><span class=\"line\">p &lt;- ggplot(df, aes(x = log.agonist, y = response))</span><br><span class=\"line\"><span class=\"comment\"># fit separate curves to the data from the two treatment types</span></span><br><span class=\"line\">p &lt;- p + geom_smooth(</span><br><span class=\"line\">        aes(colour = treatment),</span><br><span class=\"line\">        method = <span class=\"string\">&quot;nls&quot;</span>, formula = dose_resp, se = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">        method.args = <span class=\"built_in\">list</span>(start = <span class=\"built_in\">list</span>(<span class=\"built_in\">min</span> = <span class=\"number\">1.67</span>, <span class=\"built_in\">max</span> = <span class=\"number\">397</span>, ec50 = -<span class=\"number\">7</span>, hill_coefficient = <span class=\"number\">1</span>))</span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># apply a manual colour scale to the curves</span></span><br><span class=\"line\">p &lt;- p + scale_colour_manual(</span><br><span class=\"line\">        labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>),</span><br><span class=\"line\">        values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;#00167B&quot;</span>, <span class=\"string\">&quot;#9FA3FE&quot;</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># reset the colour scale, add the data points, then use a new colour scale</span></span><br><span class=\"line\">p &lt;- p + ggnewscale::new_scale_colour() +</span><br><span class=\"line\">        geom_point(aes(colour = treatment, shape = treatment), size = <span class=\"number\">3</span>) + </span><br><span class=\"line\">        scale_colour_prism(</span><br><span class=\"line\">                palette = <span class=\"string\">&quot;winter_bright&quot;</span>, </span><br><span class=\"line\">                labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&quot;Inhibitor&quot;</span>)</span><br><span class=\"line\">        ) + </span><br><span class=\"line\">        scale_shape_prism(</span><br><span class=\"line\">                labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>,</span><br><span class=\"line\">                           <span class=\"string\">&quot;Inhibitor&quot;</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use the Winter Bright theme and make the size of all plot elements larger</span></span><br><span class=\"line\">p &lt;- p + theme_prism(palette = <span class=\"string\">&quot;winter_bright&quot;</span>, base_size = <span class=\"number\">16</span>)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adjust the axis limits, major tick positions, and axis guide</span></span><br><span class=\"line\">p &lt;- p + scale_y_continuous(</span><br><span class=\"line\">        limits = <span class=\"built_in\">c</span>(-<span class=\"number\">100</span>, <span class=\"number\">500</span>), </span><br><span class=\"line\">        breaks = seq(-<span class=\"number\">100</span>, <span class=\"number\">500</span>, <span class=\"number\">100</span>),</span><br><span class=\"line\">        guide = <span class=\"string\">&quot;prism_offset&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># adjust the axis limits, major and minor tick positions, axis guide, and </span></span><br><span class=\"line\"><span class=\"comment\"># axis text (aka. label) appearance</span></span><br><span class=\"line\">p &lt;- p + scale_x_continuous(</span><br><span class=\"line\">        limits = <span class=\"built_in\">c</span>(-<span class=\"number\">10</span>, -<span class=\"number\">3</span>), </span><br><span class=\"line\">        breaks = -<span class=\"number\">10</span>:-<span class=\"number\">3</span>,</span><br><span class=\"line\">        guide = <span class=\"string\">&quot;prism_offset_minor&quot;</span>,</span><br><span class=\"line\">        minor_breaks = log10(<span class=\"built_in\">rep</span>(<span class=\"number\">1</span>:<span class=\"number\">9</span>, <span class=\"number\">7</span>)*(<span class=\"number\">10</span>^<span class=\"built_in\">rep</span>(-<span class=\"number\">10</span>:-<span class=\"number\">4</span>, each = <span class=\"number\">9</span>))),</span><br><span class=\"line\">        labels = <span class=\"keyword\">function</span>(lab) &#123;</span><br><span class=\"line\">                do.call(</span><br><span class=\"line\">                        <span class=\"built_in\">expression</span>,</span><br><span class=\"line\">                        lapply(paste(lab), <span class=\"keyword\">function</span>(x) bquote(bold(<span class=\"string\">&quot;10&quot;</span>^.(x))))</span><br><span class=\"line\">                )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># remove the y axis title and legend title, change the x axis title and</span></span><br><span class=\"line\"><span class=\"comment\"># move the legend to the top left</span></span><br><span class=\"line\">p &lt;- p + theme(</span><br><span class=\"line\">        axis.title.y = element_blank(),</span><br><span class=\"line\">        legend.title = element_blank(),</span><br><span class=\"line\">        legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>),</span><br><span class=\"line\">        legend.justification = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>)</span><br><span class=\"line\">) + </span><br><span class=\"line\">        labs(x = <span class=\"string\">&quot;[Agonist], M&quot;</span>)</span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># all code</span></span><br><span class=\"line\">dose_resp &lt;- y ~ <span class=\"built_in\">min</span> + ((<span class=\"built_in\">max</span> - <span class=\"built_in\">min</span>) / (<span class=\"number\">1</span> + <span class=\"built_in\">exp</span>(hill_coefficient * (ec50 - x))))</span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(df, aes(x = log.agonist, y = response)) + </span><br><span class=\"line\">        geom_smooth(</span><br><span class=\"line\">                aes(colour = treatment),</span><br><span class=\"line\">                method = <span class=\"string\">&quot;nls&quot;</span>, formula = dose_resp, se = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">                method.args = <span class=\"built_in\">list</span>(start = <span class=\"built_in\">list</span>(<span class=\"built_in\">min</span> = <span class=\"number\">1.67</span>, <span class=\"built_in\">max</span> = <span class=\"number\">397</span>, ec50 = -<span class=\"number\">7</span>, hill_coefficient = <span class=\"number\">1</span>))</span><br><span class=\"line\">        ) + </span><br><span class=\"line\">        scale_colour_manual(labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>),</span><br><span class=\"line\">                            values = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;#00167B&quot;</span>, <span class=\"string\">&quot;#9FA3FE&quot;</span>)) + </span><br><span class=\"line\">        ggnewscale::new_scale_colour() +</span><br><span class=\"line\">        geom_point(aes(colour = treatment, shape = treatment), size = <span class=\"number\">3</span>) + </span><br><span class=\"line\">        scale_colour_prism(palette = <span class=\"string\">&quot;winter_bright&quot;</span>, </span><br><span class=\"line\">                           labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>)) + </span><br><span class=\"line\">        scale_shape_prism(labels = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;No inhibitor&quot;</span>, <span class=\"string\">&quot;Inhibitor&quot;</span>)) + </span><br><span class=\"line\">        theme_prism(palette = <span class=\"string\">&quot;winter_bright&quot;</span>, base_size = <span class=\"number\">16</span>) + </span><br><span class=\"line\">        scale_y_continuous(limits = <span class=\"built_in\">c</span>(-<span class=\"number\">100</span>, <span class=\"number\">500</span>), </span><br><span class=\"line\">                           breaks = seq(-<span class=\"number\">100</span>, <span class=\"number\">500</span>, <span class=\"number\">100</span>),</span><br><span class=\"line\">                           guide = <span class=\"string\">&quot;prism_offset&quot;</span>) + </span><br><span class=\"line\">        scale_x_continuous(</span><br><span class=\"line\">                limits = <span class=\"built_in\">c</span>(-<span class=\"number\">10</span>, -<span class=\"number\">3</span>), </span><br><span class=\"line\">                breaks = -<span class=\"number\">10</span>:-<span class=\"number\">3</span>,</span><br><span class=\"line\">                guide = <span class=\"string\">&quot;prism_offset_minor&quot;</span>,</span><br><span class=\"line\">                minor_breaks = log10(<span class=\"built_in\">rep</span>(<span class=\"number\">1</span>:<span class=\"number\">9</span>, <span class=\"number\">7</span>)*(<span class=\"number\">10</span>^<span class=\"built_in\">rep</span>(-<span class=\"number\">10</span>:-<span class=\"number\">4</span>, each = <span class=\"number\">9</span>))),</span><br><span class=\"line\">                labels = <span class=\"keyword\">function</span>(lab) &#123;</span><br><span class=\"line\">                        do.call(</span><br><span class=\"line\">                                <span class=\"built_in\">expression</span>,</span><br><span class=\"line\">                                lapply(paste(lab), <span class=\"keyword\">function</span>(x) bquote(bold(<span class=\"string\">&quot;10&quot;</span>^.(x))))</span><br><span class=\"line\">                        )</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        ) + </span><br><span class=\"line\">        theme(axis.title.y = element_blank(),</span><br><span class=\"line\">              legend.title = element_blank(),</span><br><span class=\"line\">              legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>),</span><br><span class=\"line\">              legend.justification = <span class=\"built_in\">c</span>(<span class=\"number\">0.05</span>, <span class=\"number\">0.95</span>)) + </span><br><span class=\"line\">        labs(x = <span class=\"string\">&quot;[Agonist], M&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#64;&#103;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#x66;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#x66;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n</blockquote>"},{"title":"ggplot2柱状图相关","abbrlink":"c005101c","date":"2021-03-01T07:26:37.000Z","_content":"\n之前在公众号上的文章，查看不方便，搬到个人博客好了。<!-- more -->\n\n```R\nrm(list = ls())\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nlibrary(ggsci)\nlibrary(reshape2)\n\ndata = melt(iris, id.vars = ncol(iris))\n\n# 普通柱状图\np0 = ggplot(data, aes(Species, value)) +\n        geom_bar(aes(fill = variable),\n                 stat = 'identity',\n                 position = 'dodge') +\n        scale_y_continuous(expand = c(0,0)) +\n        scale_fill_aaas() +\n        theme_bw()\nggsave(p0, filename = '普通柱状图.pdf',width = 5, height = 5)\n\n# 堆叠柱状图\np1 = ggplot(data, aes(Species, value)) +\n        geom_bar(aes(fill = variable),\n                 stat = 'identity') +\n        scale_y_continuous(expand = c(0,0)) +\n        scale_fill_aaas() +\n        theme_bw()\n\nggsave(p1, filename = '堆叠柱状图.pdf',width = 5, height = 5)\n\n# 百分比柱状图\np2 = ggplot(data, aes(Species, value)) +\n        geom_bar(aes(fill = variable),\n                 stat = 'identity',\n                 position = 'fill') +\n        scale_y_continuous(labels = scales::percent) +\n        scale_fill_aaas() +\n        theme_bw()\nggsave(p2, filename = '百分比柱状图.pdf',width = 5, height = 5)\n\n# 带百分比标签的堆积柱状图\ndata.2 = data %>%\n        mutate(cat = paste(data$variable, data$Species, sep = '_'))\ndata.2 = aggregate(data.2$value, by = list(as.character(data.2$Species), \n                                          as.character(data.2$variable)), FUN = sum)\ncolnames(data.2) = c('Species', 'variable','value')\n\nsum.temp = aggregate(data.2$value, by = list(data.2$Species), FUN = sum)\n\ndata.2$per = ifelse(data.2$Species == 'setosa', \n                    data.2$value / sum.temp[1,2],\n                    ifelse(data.2$Species == 'versicolor', \n                           data.2$value / sum.temp[2,2],\n                           data.2$value / sum.temp[3,2]))\ndata.2$per2 = paste(round(data.2$per *100, 2), '%', sep = '')\ndata.2$variable = factor(data.2$variable, levels = unique(data.2$variable))\n\n\np3 = ggplot(data.2, aes(Species, per, \n                     fill = variable,\n                     label = per2)) +\n        geom_col(position = position_stack()) +\n        geom_text(position = position_stack(vjust = .5), \n                  size = 2.5, color = 'white') +\n        scale_y_continuous(labels = scales::percent) +\n        theme_bw() +\n        scale_fill_aaas() +\n        theme(axis.text = element_text(color = 'black'))\n\nggsave(p3, filename = '带百分比标签的堆积柱状图.pdf',width = 5, height = 5)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/ggplot2柱状图相关.md","raw":"---\ntitle: ggplot2柱状图相关\ntags: R语言\ncategories: R语言\nabbrlink: c005101c\ndate: 2021-03-01 15:26:37 \n---\n\n之前在公众号上的文章，查看不方便，搬到个人博客好了。<!-- more -->\n\n```R\nrm(list = ls())\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nlibrary(ggsci)\nlibrary(reshape2)\n\ndata = melt(iris, id.vars = ncol(iris))\n\n# 普通柱状图\np0 = ggplot(data, aes(Species, value)) +\n        geom_bar(aes(fill = variable),\n                 stat = 'identity',\n                 position = 'dodge') +\n        scale_y_continuous(expand = c(0,0)) +\n        scale_fill_aaas() +\n        theme_bw()\nggsave(p0, filename = '普通柱状图.pdf',width = 5, height = 5)\n\n# 堆叠柱状图\np1 = ggplot(data, aes(Species, value)) +\n        geom_bar(aes(fill = variable),\n                 stat = 'identity') +\n        scale_y_continuous(expand = c(0,0)) +\n        scale_fill_aaas() +\n        theme_bw()\n\nggsave(p1, filename = '堆叠柱状图.pdf',width = 5, height = 5)\n\n# 百分比柱状图\np2 = ggplot(data, aes(Species, value)) +\n        geom_bar(aes(fill = variable),\n                 stat = 'identity',\n                 position = 'fill') +\n        scale_y_continuous(labels = scales::percent) +\n        scale_fill_aaas() +\n        theme_bw()\nggsave(p2, filename = '百分比柱状图.pdf',width = 5, height = 5)\n\n# 带百分比标签的堆积柱状图\ndata.2 = data %>%\n        mutate(cat = paste(data$variable, data$Species, sep = '_'))\ndata.2 = aggregate(data.2$value, by = list(as.character(data.2$Species), \n                                          as.character(data.2$variable)), FUN = sum)\ncolnames(data.2) = c('Species', 'variable','value')\n\nsum.temp = aggregate(data.2$value, by = list(data.2$Species), FUN = sum)\n\ndata.2$per = ifelse(data.2$Species == 'setosa', \n                    data.2$value / sum.temp[1,2],\n                    ifelse(data.2$Species == 'versicolor', \n                           data.2$value / sum.temp[2,2],\n                           data.2$value / sum.temp[3,2]))\ndata.2$per2 = paste(round(data.2$per *100, 2), '%', sep = '')\ndata.2$variable = factor(data.2$variable, levels = unique(data.2$variable))\n\n\np3 = ggplot(data.2, aes(Species, per, \n                     fill = variable,\n                     label = per2)) +\n        geom_col(position = position_stack()) +\n        geom_text(position = position_stack(vjust = .5), \n                  size = 2.5, color = 'white') +\n        scale_y_continuous(labels = scales::percent) +\n        theme_bw() +\n        scale_fill_aaas() +\n        theme(axis.text = element_text(color = 'black'))\n\nggsave(p3, filename = '带百分比标签的堆积柱状图.pdf',width = 5, height = 5)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"ggplot2柱状图相关","published":1,"updated":"2021-03-01T07:30:11.048Z","_id":"ckwbqwcek000vr0g01wyf0y13","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前在公众号上的文章，查看不方便，搬到个人博客好了。<span id=\"more\"></span></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\"></span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(reshape2)</span><br><span class=\"line\"></span><br><span class=\"line\">data = melt(iris, id.vars = ncol(iris))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 普通柱状图</span></span><br><span class=\"line\">p0 = ggplot(data, aes(Species, value)) +</span><br><span class=\"line\">        geom_bar(aes(fill = variable),</span><br><span class=\"line\">                 stat = <span class=\"string\">&#x27;identity&#x27;</span>,</span><br><span class=\"line\">                 position = <span class=\"string\">&#x27;dodge&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme_bw()</span><br><span class=\"line\">ggsave(p0, filename = <span class=\"string\">&#x27;普通柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 堆叠柱状图</span></span><br><span class=\"line\">p1 = ggplot(data, aes(Species, value)) +</span><br><span class=\"line\">        geom_bar(aes(fill = variable),</span><br><span class=\"line\">                 stat = <span class=\"string\">&#x27;identity&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme_bw()</span><br><span class=\"line\"></span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;堆叠柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 百分比柱状图</span></span><br><span class=\"line\">p2 = ggplot(data, aes(Species, value)) +</span><br><span class=\"line\">        geom_bar(aes(fill = variable),</span><br><span class=\"line\">                 stat = <span class=\"string\">&#x27;identity&#x27;</span>,</span><br><span class=\"line\">                 position = <span class=\"string\">&#x27;fill&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(labels = scales::percent) +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme_bw()</span><br><span class=\"line\">ggsave(p2, filename = <span class=\"string\">&#x27;百分比柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 带百分比标签的堆积柱状图</span></span><br><span class=\"line\">data.2 = data %&gt;%</span><br><span class=\"line\">        mutate(cat = paste(data$variable, data$Species, sep = <span class=\"string\">&#x27;_&#x27;</span>))</span><br><span class=\"line\">data.2 = aggregate(data.2$value, by = <span class=\"built_in\">list</span>(<span class=\"built_in\">as.character</span>(data.2$Species), </span><br><span class=\"line\">                                          <span class=\"built_in\">as.character</span>(data.2$variable)), FUN = <span class=\"built_in\">sum</span>)</span><br><span class=\"line\">colnames(data.2) = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Species&#x27;</span>, <span class=\"string\">&#x27;variable&#x27;</span>,<span class=\"string\">&#x27;value&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sum.temp = aggregate(data.2$value, by = <span class=\"built_in\">list</span>(data.2$Species), FUN = <span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">data.2$per = ifelse(data.2$Species == <span class=\"string\">&#x27;setosa&#x27;</span>, </span><br><span class=\"line\">                    data.2$value / sum.temp[<span class=\"number\">1</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">                    ifelse(data.2$Species == <span class=\"string\">&#x27;versicolor&#x27;</span>, </span><br><span class=\"line\">                           data.2$value / sum.temp[<span class=\"number\">2</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">                           data.2$value / sum.temp[<span class=\"number\">3</span>,<span class=\"number\">2</span>]))</span><br><span class=\"line\">data.2$per2 = paste(<span class=\"built_in\">round</span>(data.2$per *<span class=\"number\">100</span>, <span class=\"number\">2</span>), <span class=\"string\">&#x27;%&#x27;</span>, sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">data.2$variable = factor(data.2$variable, levels = unique(data.2$variable))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggplot(data.2, aes(Species, per, </span><br><span class=\"line\">                     fill = variable,</span><br><span class=\"line\">                     label = per2)) +</span><br><span class=\"line\">        geom_col(position = position_stack()) +</span><br><span class=\"line\">        geom_text(position = position_stack(vjust = <span class=\"number\">.5</span>), </span><br><span class=\"line\">                  size = <span class=\"number\">2.5</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(labels = scales::percent) +</span><br><span class=\"line\">        theme_bw() +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme(axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ggsave(p3, filename = <span class=\"string\">&#x27;带百分比标签的堆积柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>之前在公众号上的文章，查看不方便，搬到个人博客好了。","more":"</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\"></span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(reshape2)</span><br><span class=\"line\"></span><br><span class=\"line\">data = melt(iris, id.vars = ncol(iris))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 普通柱状图</span></span><br><span class=\"line\">p0 = ggplot(data, aes(Species, value)) +</span><br><span class=\"line\">        geom_bar(aes(fill = variable),</span><br><span class=\"line\">                 stat = <span class=\"string\">&#x27;identity&#x27;</span>,</span><br><span class=\"line\">                 position = <span class=\"string\">&#x27;dodge&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme_bw()</span><br><span class=\"line\">ggsave(p0, filename = <span class=\"string\">&#x27;普通柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 堆叠柱状图</span></span><br><span class=\"line\">p1 = ggplot(data, aes(Species, value)) +</span><br><span class=\"line\">        geom_bar(aes(fill = variable),</span><br><span class=\"line\">                 stat = <span class=\"string\">&#x27;identity&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme_bw()</span><br><span class=\"line\"></span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;堆叠柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 百分比柱状图</span></span><br><span class=\"line\">p2 = ggplot(data, aes(Species, value)) +</span><br><span class=\"line\">        geom_bar(aes(fill = variable),</span><br><span class=\"line\">                 stat = <span class=\"string\">&#x27;identity&#x27;</span>,</span><br><span class=\"line\">                 position = <span class=\"string\">&#x27;fill&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(labels = scales::percent) +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme_bw()</span><br><span class=\"line\">ggsave(p2, filename = <span class=\"string\">&#x27;百分比柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 带百分比标签的堆积柱状图</span></span><br><span class=\"line\">data.2 = data %&gt;%</span><br><span class=\"line\">        mutate(cat = paste(data$variable, data$Species, sep = <span class=\"string\">&#x27;_&#x27;</span>))</span><br><span class=\"line\">data.2 = aggregate(data.2$value, by = <span class=\"built_in\">list</span>(<span class=\"built_in\">as.character</span>(data.2$Species), </span><br><span class=\"line\">                                          <span class=\"built_in\">as.character</span>(data.2$variable)), FUN = <span class=\"built_in\">sum</span>)</span><br><span class=\"line\">colnames(data.2) = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Species&#x27;</span>, <span class=\"string\">&#x27;variable&#x27;</span>,<span class=\"string\">&#x27;value&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sum.temp = aggregate(data.2$value, by = <span class=\"built_in\">list</span>(data.2$Species), FUN = <span class=\"built_in\">sum</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">data.2$per = ifelse(data.2$Species == <span class=\"string\">&#x27;setosa&#x27;</span>, </span><br><span class=\"line\">                    data.2$value / sum.temp[<span class=\"number\">1</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">                    ifelse(data.2$Species == <span class=\"string\">&#x27;versicolor&#x27;</span>, </span><br><span class=\"line\">                           data.2$value / sum.temp[<span class=\"number\">2</span>,<span class=\"number\">2</span>],</span><br><span class=\"line\">                           data.2$value / sum.temp[<span class=\"number\">3</span>,<span class=\"number\">2</span>]))</span><br><span class=\"line\">data.2$per2 = paste(<span class=\"built_in\">round</span>(data.2$per *<span class=\"number\">100</span>, <span class=\"number\">2</span>), <span class=\"string\">&#x27;%&#x27;</span>, sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">data.2$variable = factor(data.2$variable, levels = unique(data.2$variable))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggplot(data.2, aes(Species, per, </span><br><span class=\"line\">                     fill = variable,</span><br><span class=\"line\">                     label = per2)) +</span><br><span class=\"line\">        geom_col(position = position_stack()) +</span><br><span class=\"line\">        geom_text(position = position_stack(vjust = <span class=\"number\">.5</span>), </span><br><span class=\"line\">                  size = <span class=\"number\">2.5</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">        scale_y_continuous(labels = scales::percent) +</span><br><span class=\"line\">        theme_bw() +</span><br><span class=\"line\">        scale_fill_aaas() +</span><br><span class=\"line\">        theme(axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ggsave(p3, filename = <span class=\"string\">&#x27;带百分比标签的堆积柱状图.pdf&#x27;</span>,width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"iTAK简明教程","abbrlink":"375f91cd","date":"2021-06-01T03:15:00.000Z","_content":"\niTAK是植物转录因子、转录调节子及转录激酶预测的工具，使用简单。\n\n<!-- more -->\n\n打开网站[**iTAK** - Plant Transcription factor & Protein Kinase Identifier and Classifier](http://itak.feilab.net/cgi-bin/itak/index.cgi)。iTAK提供了网页版在线工具和离线版，离线版只支持64位Linux。在线版基本够用了，如果序列条数大于5万条或文件大小超过100M，就只能使用离线版。使用流程很简单，如下图：\n\n{% asset_img 1.png %}\n\n运行结束后会邮件提示，点击邮件中的链接就能下载结果了。\n\n结果中会有6个文件，“shiu”开头的是蛋白激酶的结果，“tf”开头的是转录因子的结果。\n\n{% asset_img 2.png %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/iTAK简明教程.md","raw":"---\ntitle: iTAK简明教程\ntags: 生物信息学\ncategories: 生物信息学\nabbrlink: 375f91cd\ndate: 2021-06-01 11:15:00\n---\n\niTAK是植物转录因子、转录调节子及转录激酶预测的工具，使用简单。\n\n<!-- more -->\n\n打开网站[**iTAK** - Plant Transcription factor & Protein Kinase Identifier and Classifier](http://itak.feilab.net/cgi-bin/itak/index.cgi)。iTAK提供了网页版在线工具和离线版，离线版只支持64位Linux。在线版基本够用了，如果序列条数大于5万条或文件大小超过100M，就只能使用离线版。使用流程很简单，如下图：\n\n{% asset_img 1.png %}\n\n运行结束后会邮件提示，点击邮件中的链接就能下载结果了。\n\n结果中会有6个文件，“shiu”开头的是蛋白激酶的结果，“tf”开头的是转录因子的结果。\n\n{% asset_img 2.png %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"iTAK简明教程","published":1,"updated":"2021-06-01T03:30:08.485Z","_id":"ckwbqwcek000xr0g0404zhv0t","comments":1,"layout":"post","photos":[],"link":"","content":"<p>iTAK是植物转录因子、转录调节子及转录激酶预测的工具，使用简单。</p>\n<span id=\"more\"></span>\n\n<p>打开网站<a href=\"http://itak.feilab.net/cgi-bin/itak/index.cgi\"><strong>iTAK</strong> - Plant Transcription factor &amp; Protein Kinase Identifier and Classifier</a>。iTAK提供了网页版在线工具和离线版，离线版只支持64位Linux。在线版基本够用了，如果序列条数大于5万条或文件大小超过100M，就只能使用离线版。使用流程很简单，如下图：</p>\n<img src=\"/2021/06/01/iTAK%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/1.png\" class=\"\">\n\n<p>运行结束后会邮件提示，点击邮件中的链接就能下载结果了。</p>\n<p>结果中会有6个文件，“shiu”开头的是蛋白激酶的结果，“tf”开头的是转录因子的结果。</p>\n<img src=\"/2021/06/01/iTAK%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/2.png\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>iTAK是植物转录因子、转录调节子及转录激酶预测的工具，使用简单。</p>","more":"<p>打开网站<a href=\"http://itak.feilab.net/cgi-bin/itak/index.cgi\"><strong>iTAK</strong> - Plant Transcription factor &amp; Protein Kinase Identifier and Classifier</a>。iTAK提供了网页版在线工具和离线版，离线版只支持64位Linux。在线版基本够用了，如果序列条数大于5万条或文件大小超过100M，就只能使用离线版。使用流程很简单，如下图：</p>\n<img src=\"/2021/06/01/iTAK%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/1.png\" class=\"\">\n\n<p>运行结束后会邮件提示，点击邮件中的链接就能下载结果了。</p>\n<p>结果中会有6个文件，“shiu”开头的是蛋白激酶的结果，“tf”开头的是转录因子的结果。</p>\n<img src=\"/2021/06/01/iTAK%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/2.png\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"iTOL修饰进化树","abbrlink":"651c50ad","date":"2020-01-09T12:22:33.000Z","_content":"\n绘制进化树的软件很多，窗口界面的MEGA$^{[1]}$、Y叔R包ggtree$^{[2]}$等。MEGA属于神仙级别的软件，一篇文章拉高期刊的影响因子。而Y的`ggtree`更受R爱好者的青睐，可以各种尽情修饰进化树。相对来说，MEGA建的树就不是那么好看，需要后期修饰一下。修饰的软件推荐[iTOL](https://itol.embl.de/)$^{[3]}$。大多数的参数直接在右边界面就能修改，但是如果需要批量修改颜色等信息的话，就需要写配置文件。\n\n<!-- more -->\n\n# 开局一张图\n\n`iTOL`并不能建树，只能修饰进化树，需要导入`.nwk`结尾的文件，是长这样的：\n\n{% asset_img 1.png %}\n\n在网站界面直接选择文件upload就行，就能得到下面这样的图：\n\n{% asset_img 2.png %}\n\n简单修饰直接点击右边就能进行修改。\n\n# 标签背景色\n\n批量添加标签的背景色，需要写一个配置文件`label.txt`，这个文件的格式是这样的：\n\n{% asset_img 3.png %}\n\n最上面的三行是默认的，下面的分别表示样品名称、range(表示背景色)、颜色编码、样品的分组。最后上色的时候是用样品分组信息进行着色的，效果如下：\n\n{% asset_img 4.png %}\n\n# 线条着色\n\n同样的编辑配置文件，格式如下：\n\n{% asset_img 6.png %}\n\n前三行是固定的，下面每一列分别表示的是样品名称、线条、颜色属性、样式、大小。\n\n编辑完之后直接将文件拖到网页的进化树上就行了。效果如下：\n\n{% asset_img 5.png %}\n\n# 标签颜色\n\n标签颜色和标签的背景色的设置是大同小异的，直接将`range`换成`label`就可以 了。\n\n# 最终效果\n\n{% asset_img 7.png %}\n\n<font color=red>更多修饰细节可以观看网页视频教程噢。</font>\n\n# 参考文献\n\n>[1] Kumar, Sudhir, Koichiro Tamura, and Masatoshi Nei. \"MEGA: molecular evolutionary genetics analysis software for microcomputers.\" **Bioinformatics**** 10.2 (1994): 189-191.\n>\n>[2] Yu, Guangchuang, et al. \"ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data.\" ***Methods in Ecology and Evolution*** 8.1 (2017): 28-36.\n>\n>[3] Letunic, Ivica, and Peer Bork. \"Interactive tree of life (iTOL) v3: an online tool for the display and annotation of phylogenetic and other trees.\" ***Nucleic acids research*** 44.W1 (2016): W242-W245.\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/iTOL修饰进化树.md","raw":"---\ntitle: iTOL修饰进化树\ntags: 生物信息学\ncategories: 生物信息学\nabbrlink: 651c50ad\ndate: 2020-01-09 20:22:33\n---\n\n绘制进化树的软件很多，窗口界面的MEGA$^{[1]}$、Y叔R包ggtree$^{[2]}$等。MEGA属于神仙级别的软件，一篇文章拉高期刊的影响因子。而Y的`ggtree`更受R爱好者的青睐，可以各种尽情修饰进化树。相对来说，MEGA建的树就不是那么好看，需要后期修饰一下。修饰的软件推荐[iTOL](https://itol.embl.de/)$^{[3]}$。大多数的参数直接在右边界面就能修改，但是如果需要批量修改颜色等信息的话，就需要写配置文件。\n\n<!-- more -->\n\n# 开局一张图\n\n`iTOL`并不能建树，只能修饰进化树，需要导入`.nwk`结尾的文件，是长这样的：\n\n{% asset_img 1.png %}\n\n在网站界面直接选择文件upload就行，就能得到下面这样的图：\n\n{% asset_img 2.png %}\n\n简单修饰直接点击右边就能进行修改。\n\n# 标签背景色\n\n批量添加标签的背景色，需要写一个配置文件`label.txt`，这个文件的格式是这样的：\n\n{% asset_img 3.png %}\n\n最上面的三行是默认的，下面的分别表示样品名称、range(表示背景色)、颜色编码、样品的分组。最后上色的时候是用样品分组信息进行着色的，效果如下：\n\n{% asset_img 4.png %}\n\n# 线条着色\n\n同样的编辑配置文件，格式如下：\n\n{% asset_img 6.png %}\n\n前三行是固定的，下面每一列分别表示的是样品名称、线条、颜色属性、样式、大小。\n\n编辑完之后直接将文件拖到网页的进化树上就行了。效果如下：\n\n{% asset_img 5.png %}\n\n# 标签颜色\n\n标签颜色和标签的背景色的设置是大同小异的，直接将`range`换成`label`就可以 了。\n\n# 最终效果\n\n{% asset_img 7.png %}\n\n<font color=red>更多修饰细节可以观看网页视频教程噢。</font>\n\n# 参考文献\n\n>[1] Kumar, Sudhir, Koichiro Tamura, and Masatoshi Nei. \"MEGA: molecular evolutionary genetics analysis software for microcomputers.\" **Bioinformatics**** 10.2 (1994): 189-191.\n>\n>[2] Yu, Guangchuang, et al. \"ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data.\" ***Methods in Ecology and Evolution*** 8.1 (2017): 28-36.\n>\n>[3] Letunic, Ivica, and Peer Bork. \"Interactive tree of life (iTOL) v3: an online tool for the display and annotation of phylogenetic and other trees.\" ***Nucleic acids research*** 44.W1 (2016): W242-W245.\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"iTOL修饰进化树","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcen0013r0g09vbhfs4y","comments":1,"layout":"post","photos":[],"link":"","content":"<p>绘制进化树的软件很多，窗口界面的MEGA$^{[1]}$、Y叔R包ggtree$^{[2]}$等。MEGA属于神仙级别的软件，一篇文章拉高期刊的影响因子。而Y的<code>ggtree</code>更受R爱好者的青睐，可以各种尽情修饰进化树。相对来说，MEGA建的树就不是那么好看，需要后期修饰一下。修饰的软件推荐<a href=\"https://itol.embl.de/\">iTOL</a>$^{[3]}$。大多数的参数直接在右边界面就能修改，但是如果需要批量修改颜色等信息的话，就需要写配置文件。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"开局一张图\"><a href=\"#开局一张图\" class=\"headerlink\" title=\"开局一张图\"></a>开局一张图</h1><p><code>iTOL</code>并不能建树，只能修饰进化树，需要导入<code>.nwk</code>结尾的文件，是长这样的：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/1.png\" class=\"\">\n\n<p>在网站界面直接选择文件upload就行，就能得到下面这样的图：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/2.png\" class=\"\">\n\n<p>简单修饰直接点击右边就能进行修改。</p>\n<h1 id=\"标签背景色\"><a href=\"#标签背景色\" class=\"headerlink\" title=\"标签背景色\"></a>标签背景色</h1><p>批量添加标签的背景色，需要写一个配置文件<code>label.txt</code>，这个文件的格式是这样的：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/3.png\" class=\"\">\n\n<p>最上面的三行是默认的，下面的分别表示样品名称、range(表示背景色)、颜色编码、样品的分组。最后上色的时候是用样品分组信息进行着色的，效果如下：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/4.png\" class=\"\">\n\n<h1 id=\"线条着色\"><a href=\"#线条着色\" class=\"headerlink\" title=\"线条着色\"></a>线条着色</h1><p>同样的编辑配置文件，格式如下：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/6.png\" class=\"\">\n\n<p>前三行是固定的，下面每一列分别表示的是样品名称、线条、颜色属性、样式、大小。</p>\n<p>编辑完之后直接将文件拖到网页的进化树上就行了。效果如下：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/5.png\" class=\"\">\n\n<h1 id=\"标签颜色\"><a href=\"#标签颜色\" class=\"headerlink\" title=\"标签颜色\"></a>标签颜色</h1><p>标签颜色和标签的背景色的设置是大同小异的，直接将<code>range</code>换成<code>label</code>就可以 了。</p>\n<h1 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h1><img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/7.png\" class=\"\">\n\n<p><font color=red>更多修饰细节可以观看网页视频教程噢。</font></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Kumar, Sudhir, Koichiro Tamura, and Masatoshi Nei. “MEGA: molecular evolutionary genetics analysis software for microcomputers.” <strong>Bioinformatics</strong>** 10.2 (1994): 189-191.</p>\n<p>[2] Yu, Guangchuang, et al. “ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data.” <em><strong>Methods in Ecology and Evolution</strong></em> 8.1 (2017): 28-36.</p>\n<p>[3] Letunic, Ivica, and Peer Bork. “Interactive tree of life (iTOL) v3: an online tool for the display and annotation of phylogenetic and other trees.” <em><strong>Nucleic acids research</strong></em> 44.W1 (2016): W242-W245.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#120;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#120;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>绘制进化树的软件很多，窗口界面的MEGA$^{[1]}$、Y叔R包ggtree$^{[2]}$等。MEGA属于神仙级别的软件，一篇文章拉高期刊的影响因子。而Y的<code>ggtree</code>更受R爱好者的青睐，可以各种尽情修饰进化树。相对来说，MEGA建的树就不是那么好看，需要后期修饰一下。修饰的软件推荐<a href=\"https://itol.embl.de/\">iTOL</a>$^{[3]}$。大多数的参数直接在右边界面就能修改，但是如果需要批量修改颜色等信息的话，就需要写配置文件。</p>","more":"<h1 id=\"开局一张图\"><a href=\"#开局一张图\" class=\"headerlink\" title=\"开局一张图\"></a>开局一张图</h1><p><code>iTOL</code>并不能建树，只能修饰进化树，需要导入<code>.nwk</code>结尾的文件，是长这样的：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/1.png\" class=\"\">\n\n<p>在网站界面直接选择文件upload就行，就能得到下面这样的图：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/2.png\" class=\"\">\n\n<p>简单修饰直接点击右边就能进行修改。</p>\n<h1 id=\"标签背景色\"><a href=\"#标签背景色\" class=\"headerlink\" title=\"标签背景色\"></a>标签背景色</h1><p>批量添加标签的背景色，需要写一个配置文件<code>label.txt</code>，这个文件的格式是这样的：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/3.png\" class=\"\">\n\n<p>最上面的三行是默认的，下面的分别表示样品名称、range(表示背景色)、颜色编码、样品的分组。最后上色的时候是用样品分组信息进行着色的，效果如下：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/4.png\" class=\"\">\n\n<h1 id=\"线条着色\"><a href=\"#线条着色\" class=\"headerlink\" title=\"线条着色\"></a>线条着色</h1><p>同样的编辑配置文件，格式如下：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/6.png\" class=\"\">\n\n<p>前三行是固定的，下面每一列分别表示的是样品名称、线条、颜色属性、样式、大小。</p>\n<p>编辑完之后直接将文件拖到网页的进化树上就行了。效果如下：</p>\n<img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/5.png\" class=\"\">\n\n<h1 id=\"标签颜色\"><a href=\"#标签颜色\" class=\"headerlink\" title=\"标签颜色\"></a>标签颜色</h1><p>标签颜色和标签的背景色的设置是大同小异的，直接将<code>range</code>换成<code>label</code>就可以 了。</p>\n<h1 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h1><img src=\"/2020/01/09/iTOL%E4%BF%AE%E9%A5%B0%E8%BF%9B%E5%8C%96%E6%A0%91/7.png\" class=\"\">\n\n<p><font color=red>更多修饰细节可以观看网页视频教程噢。</font></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Kumar, Sudhir, Koichiro Tamura, and Masatoshi Nei. “MEGA: molecular evolutionary genetics analysis software for microcomputers.” <strong>Bioinformatics</strong>** 10.2 (1994): 189-191.</p>\n<p>[2] Yu, Guangchuang, et al. “ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data.” <em><strong>Methods in Ecology and Evolution</strong></em> 8.1 (2017): 28-36.</p>\n<p>[3] Letunic, Ivica, and Peer Bork. “Interactive tree of life (iTOL) v3: an online tool for the display and annotation of phylogenetic and other trees.” <em><strong>Nucleic acids research</strong></em> 44.W1 (2016): W242-W245.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#120;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#120;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"NMDS分析","abbrlink":"4e41844f","date":"2021-01-04T04:21:13.000Z","_content":"\nNMDS（nonmetric multidimensional scaling，非度量多维尺度分析）是排序（ordination）分析一种。排序分析的目的在于寻找数据的连续性（也就是通过连续的排序轴来展示数据的主要趋势）。\n\n<!-- more -->\n\n为什么在微生物（微生态）研究中常用排序分析呢？因为自然生态群落往往是沿着环境梯度呈连续性分布的。\n\n# 为什么要用排序分析\n\n假设现在有这样一组数据：100个样本，100个变量（如基因），那得到的数据就是一个100行×100列的表，也就是100×100=10000维的数据，我（们）能理解（想象）的维度只能到3维，超过3维的数据就很难理解（想象）了。那怎么办呢？既然维度太高我们无法理解，那就把维度降低，降到一维、二维或者三维就能理解了。所以，我理解的排序分析的本质就是降维（个人理解）。\n\n# 排序分析分类\n\n那都有哪些排序分析方法呢？\n\n按照是否”约束“可以分成两类：\n\n- 约束（典范）排序：RDA（冗余分析）、CCA（典范对应分析）、LDA（线性判别分析）等；\n- 非约束排序：PCA（主成分分析）、CA对应分析、PCoA（主坐标分析）、NMDS（非度量多维尺度分析）等。\n\n需要注意的是：非约束排序只是一种描述性的方法，不存在统计检验评估排序结果显著性的问题；而约束排序则需要对排序的结果进行显著性检验。\n\n# NMDS的原理\n\n数学原理和算法很复杂，我们作为应用中，只需要要知道怎么用就可以了（下面的例子都是我自己的理解，不妥指出还请批评指正）。\n\n举个很简单的例子，假设现在路上有4个人在跑步，分别是①②③④。现在我们并不关心他们之间的具体的距离是多少，我们在乎的只是对某个人来说，其他三个人和他的相对距离。现在假设我是图中的①，那么②就是我的”第一远“，思就是我的”第二远“，③就是我的”第三远“。\n\n{% asset_img 1.png %}\n\n在NMDS中，排序轴就是一条条的跑道，根据排序轴来比较样本的差异。\n\n# NMDS在R中的实现\n\n好像是有好多软件能完成NMDS分析，但是我还是觉得R语言是最好的。PS：就在我些这个文章的时候，同学告诉我说经典的进化树可视化软件（软件）`iTOL`开始收费了，所以是，开源不收费还是好啊。\n\n```R\nrm(list = ls())\n\nlibrary(ade4)\nlibrary(vegan)\nlibrary(plyr)\nlibrary(tidyverse)\nlibrary(ggsci)\n\n# download data\nload('Doubs.RData')\nspe = spe[-8,] # 提出无物种数据的样本\n\n# run NMDS\nspe.nmds = vegan::metaMDS(spe, distance = 'bray')\nspe.nmds\n\n# 经验法则：应力 < 0.05 可很好地表示尺寸减小，\n# <0.1 非常好，<0.2 还不错，而应力 < 0.3 有待提高。\nspe.nmds$stress\n\nplot(spe.nmds,type = 't')\n\n# 评估拟合度\npng(filename = '20201109NMDS(非度量多维尺度分析)/figures/2.png',\n    width = 500, heigh = 400)\nstressplot(spe.nmds)\ndev.off()\n```\n\n{% asset_img 2.png %}\n\n\n\n这个图看$R^2$即可，$R^2$越大越好。\n\n# NMDS可视化\n\nNMDS的可视化本质是散点图，通常有三种可视化方法：\n\n1. 置信椭圆\n2. 多边形\n3. 放射线\n\n```R\n# 利用ggplot2进行可视化\nnmds.res = spe.nmds[[\"points\"]] %>%\n  as.data.frame() %>%\n  mutate(group = rep(c('a','b','c'),c(10,10,9)))\n\n# 椭圆\np1 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +\n  geom_point() +\n  stat_ellipse(level = 0.68, show.legend = F) +\n  scale_x_continuous(breaks = seq(-2,2,0.5)) +\n  scale_color_aaas() +\n  annotate('text', x = -1.4, y = -1.2, label = 'Rseq = 0.995 \\n Stress = 0.0738') +\n  labs(x = 'NMDS1',y = 'NMDS2') +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.3))\np1\nggsave(p1, filename = '20201109NMDS(非度量多维尺度分析)/figures/3.png',\n       width = 5, height = 5)\n```\n\n{% asset_img 3.png %}\n\n```R\n# 多边形\ngroup_border = ddply(nmds.res, 'group', \n                     function(df) df[chull(df[[1]], df[[2]]), ])\n\np2 = ggplot(nmds.res, aes(MDS1, MDS2, color = group, fill = group)) +\n  geom_point() +\n  geom_polygon(data = group_border, alpha = 0.4, show.legend = F) +\n  scale_x_continuous(breaks = seq(-2,2,0.5)) +\n  scale_color_aaas() +\n  scale_fill_aaas() +\n  annotate('text', x = -1.4, y = -1.2, label = 'Rseq = 0.995 \\n Stress = 0.0738') +\n  labs(x = 'NMDS1',y = 'NMDS2') +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.3))\np2\nggsave(p1, filename = '20201109NMDS(非度量多维尺度分析)/figures/4.png',\n       width = 5, height = 5)\n```\n\n{% asset_img 4.png %}\n\n```R\n# 放射线\n\n# mean\ncent = aggregate(cbind(MDS1,MDS2) ~ group, data = nmds.res, FUN = mean)\ncolnames(cent)[2:3] = c('cent1','cent2')\n\n# merge data\nnmds.res = merge(nmds.res, cent, by = 'group', all.x = TRUE)\n\np3 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +\n  geom_point() +\n  geom_point(data = cent, aes(cent1, cent2), size = 5, show.legend = FALSE) +\n  geom_segment(mapping = aes(xend = cent1, yend = cent2), show.legend = FALSE) +\n  scale_x_continuous(breaks = seq(-2,2,0.5)) +\n  scale_color_aaas() +\n  scale_fill_aaas() +\n  annotate('text', x = -1.4, y = -1.2, label = 'Rseq = 0.995 \\n Stress = 0.0738') +\n  labs(x = 'NMDS1',y = 'NMDS2') +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.3))\np3\nggsave(p3, filename = '20201109NMDS(非度量多维尺度分析)/figures/5.png',\n       width = 5, height = 5)\n```\n\n{% asset_img 5.png %}\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/NMDS分析.md","raw":"---\ntitle: NMDS分析\ntags: R语言\ncategories: R语言\nabbrlink: 4e41844f\ndate: 2021-01-04 12:21:13\n---\n\nNMDS（nonmetric multidimensional scaling，非度量多维尺度分析）是排序（ordination）分析一种。排序分析的目的在于寻找数据的连续性（也就是通过连续的排序轴来展示数据的主要趋势）。\n\n<!-- more -->\n\n为什么在微生物（微生态）研究中常用排序分析呢？因为自然生态群落往往是沿着环境梯度呈连续性分布的。\n\n# 为什么要用排序分析\n\n假设现在有这样一组数据：100个样本，100个变量（如基因），那得到的数据就是一个100行×100列的表，也就是100×100=10000维的数据，我（们）能理解（想象）的维度只能到3维，超过3维的数据就很难理解（想象）了。那怎么办呢？既然维度太高我们无法理解，那就把维度降低，降到一维、二维或者三维就能理解了。所以，我理解的排序分析的本质就是降维（个人理解）。\n\n# 排序分析分类\n\n那都有哪些排序分析方法呢？\n\n按照是否”约束“可以分成两类：\n\n- 约束（典范）排序：RDA（冗余分析）、CCA（典范对应分析）、LDA（线性判别分析）等；\n- 非约束排序：PCA（主成分分析）、CA对应分析、PCoA（主坐标分析）、NMDS（非度量多维尺度分析）等。\n\n需要注意的是：非约束排序只是一种描述性的方法，不存在统计检验评估排序结果显著性的问题；而约束排序则需要对排序的结果进行显著性检验。\n\n# NMDS的原理\n\n数学原理和算法很复杂，我们作为应用中，只需要要知道怎么用就可以了（下面的例子都是我自己的理解，不妥指出还请批评指正）。\n\n举个很简单的例子，假设现在路上有4个人在跑步，分别是①②③④。现在我们并不关心他们之间的具体的距离是多少，我们在乎的只是对某个人来说，其他三个人和他的相对距离。现在假设我是图中的①，那么②就是我的”第一远“，思就是我的”第二远“，③就是我的”第三远“。\n\n{% asset_img 1.png %}\n\n在NMDS中，排序轴就是一条条的跑道，根据排序轴来比较样本的差异。\n\n# NMDS在R中的实现\n\n好像是有好多软件能完成NMDS分析，但是我还是觉得R语言是最好的。PS：就在我些这个文章的时候，同学告诉我说经典的进化树可视化软件（软件）`iTOL`开始收费了，所以是，开源不收费还是好啊。\n\n```R\nrm(list = ls())\n\nlibrary(ade4)\nlibrary(vegan)\nlibrary(plyr)\nlibrary(tidyverse)\nlibrary(ggsci)\n\n# download data\nload('Doubs.RData')\nspe = spe[-8,] # 提出无物种数据的样本\n\n# run NMDS\nspe.nmds = vegan::metaMDS(spe, distance = 'bray')\nspe.nmds\n\n# 经验法则：应力 < 0.05 可很好地表示尺寸减小，\n# <0.1 非常好，<0.2 还不错，而应力 < 0.3 有待提高。\nspe.nmds$stress\n\nplot(spe.nmds,type = 't')\n\n# 评估拟合度\npng(filename = '20201109NMDS(非度量多维尺度分析)/figures/2.png',\n    width = 500, heigh = 400)\nstressplot(spe.nmds)\ndev.off()\n```\n\n{% asset_img 2.png %}\n\n\n\n这个图看$R^2$即可，$R^2$越大越好。\n\n# NMDS可视化\n\nNMDS的可视化本质是散点图，通常有三种可视化方法：\n\n1. 置信椭圆\n2. 多边形\n3. 放射线\n\n```R\n# 利用ggplot2进行可视化\nnmds.res = spe.nmds[[\"points\"]] %>%\n  as.data.frame() %>%\n  mutate(group = rep(c('a','b','c'),c(10,10,9)))\n\n# 椭圆\np1 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +\n  geom_point() +\n  stat_ellipse(level = 0.68, show.legend = F) +\n  scale_x_continuous(breaks = seq(-2,2,0.5)) +\n  scale_color_aaas() +\n  annotate('text', x = -1.4, y = -1.2, label = 'Rseq = 0.995 \\n Stress = 0.0738') +\n  labs(x = 'NMDS1',y = 'NMDS2') +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.3))\np1\nggsave(p1, filename = '20201109NMDS(非度量多维尺度分析)/figures/3.png',\n       width = 5, height = 5)\n```\n\n{% asset_img 3.png %}\n\n```R\n# 多边形\ngroup_border = ddply(nmds.res, 'group', \n                     function(df) df[chull(df[[1]], df[[2]]), ])\n\np2 = ggplot(nmds.res, aes(MDS1, MDS2, color = group, fill = group)) +\n  geom_point() +\n  geom_polygon(data = group_border, alpha = 0.4, show.legend = F) +\n  scale_x_continuous(breaks = seq(-2,2,0.5)) +\n  scale_color_aaas() +\n  scale_fill_aaas() +\n  annotate('text', x = -1.4, y = -1.2, label = 'Rseq = 0.995 \\n Stress = 0.0738') +\n  labs(x = 'NMDS1',y = 'NMDS2') +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.3))\np2\nggsave(p1, filename = '20201109NMDS(非度量多维尺度分析)/figures/4.png',\n       width = 5, height = 5)\n```\n\n{% asset_img 4.png %}\n\n```R\n# 放射线\n\n# mean\ncent = aggregate(cbind(MDS1,MDS2) ~ group, data = nmds.res, FUN = mean)\ncolnames(cent)[2:3] = c('cent1','cent2')\n\n# merge data\nnmds.res = merge(nmds.res, cent, by = 'group', all.x = TRUE)\n\np3 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +\n  geom_point() +\n  geom_point(data = cent, aes(cent1, cent2), size = 5, show.legend = FALSE) +\n  geom_segment(mapping = aes(xend = cent1, yend = cent2), show.legend = FALSE) +\n  scale_x_continuous(breaks = seq(-2,2,0.5)) +\n  scale_color_aaas() +\n  scale_fill_aaas() +\n  annotate('text', x = -1.4, y = -1.2, label = 'Rseq = 0.995 \\n Stress = 0.0738') +\n  labs(x = 'NMDS1',y = 'NMDS2') +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.3))\np3\nggsave(p3, filename = '20201109NMDS(非度量多维尺度分析)/figures/5.png',\n       width = 5, height = 5)\n```\n\n{% asset_img 5.png %}\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"NMDS分析","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwceo0014r0g02r0ggykr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>NMDS（nonmetric multidimensional scaling，非度量多维尺度分析）是排序（ordination）分析一种。排序分析的目的在于寻找数据的连续性（也就是通过连续的排序轴来展示数据的主要趋势）。</p>\n<span id=\"more\"></span>\n\n<p>为什么在微生物（微生态）研究中常用排序分析呢？因为自然生态群落往往是沿着环境梯度呈连续性分布的。</p>\n<h1 id=\"为什么要用排序分析\"><a href=\"#为什么要用排序分析\" class=\"headerlink\" title=\"为什么要用排序分析\"></a>为什么要用排序分析</h1><p>假设现在有这样一组数据：100个样本，100个变量（如基因），那得到的数据就是一个100行×100列的表，也就是100×100=10000维的数据，我（们）能理解（想象）的维度只能到3维，超过3维的数据就很难理解（想象）了。那怎么办呢？既然维度太高我们无法理解，那就把维度降低，降到一维、二维或者三维就能理解了。所以，我理解的排序分析的本质就是降维（个人理解）。</p>\n<h1 id=\"排序分析分类\"><a href=\"#排序分析分类\" class=\"headerlink\" title=\"排序分析分类\"></a>排序分析分类</h1><p>那都有哪些排序分析方法呢？</p>\n<p>按照是否”约束“可以分成两类：</p>\n<ul>\n<li>约束（典范）排序：RDA（冗余分析）、CCA（典范对应分析）、LDA（线性判别分析）等；</li>\n<li>非约束排序：PCA（主成分分析）、CA对应分析、PCoA（主坐标分析）、NMDS（非度量多维尺度分析）等。</li>\n</ul>\n<p>需要注意的是：非约束排序只是一种描述性的方法，不存在统计检验评估排序结果显著性的问题；而约束排序则需要对排序的结果进行显著性检验。</p>\n<h1 id=\"NMDS的原理\"><a href=\"#NMDS的原理\" class=\"headerlink\" title=\"NMDS的原理\"></a>NMDS的原理</h1><p>数学原理和算法很复杂，我们作为应用中，只需要要知道怎么用就可以了（下面的例子都是我自己的理解，不妥指出还请批评指正）。</p>\n<p>举个很简单的例子，假设现在路上有4个人在跑步，分别是①②③④。现在我们并不关心他们之间的具体的距离是多少，我们在乎的只是对某个人来说，其他三个人和他的相对距离。现在假设我是图中的①，那么②就是我的”第一远“，思就是我的”第二远“，③就是我的”第三远“。</p>\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>在NMDS中，排序轴就是一条条的跑道，根据排序轴来比较样本的差异。</p>\n<h1 id=\"NMDS在R中的实现\"><a href=\"#NMDS在R中的实现\" class=\"headerlink\" title=\"NMDS在R中的实现\"></a>NMDS在R中的实现</h1><p>好像是有好多软件能完成NMDS分析，但是我还是觉得R语言是最好的。PS：就在我些这个文章的时候，同学告诉我说经典的进化树可视化软件（软件）<code>iTOL</code>开始收费了，所以是，开源不收费还是好啊。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(ade4)</span><br><span class=\"line\">library(vegan)</span><br><span class=\"line\">library(plyr)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download data</span></span><br><span class=\"line\">load(<span class=\"string\">&#x27;Doubs.RData&#x27;</span>)</span><br><span class=\"line\">spe = spe[-<span class=\"number\">8</span>,] <span class=\"comment\"># 提出无物种数据的样本</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run NMDS</span></span><br><span class=\"line\">spe.nmds = vegan::metaMDS(spe, distance = <span class=\"string\">&#x27;bray&#x27;</span>)</span><br><span class=\"line\">spe.nmds</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 经验法则：应力 &lt; 0.05 可很好地表示尺寸减小，</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;0.1 非常好，&lt;0.2 还不错，而应力 &lt; 0.3 有待提高。</span></span><br><span class=\"line\">spe.nmds$stress</span><br><span class=\"line\"></span><br><span class=\"line\">plot(spe.nmds,type = <span class=\"string\">&#x27;t&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 评估拟合度</span></span><br><span class=\"line\">png(filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/2.png&#x27;</span>,</span><br><span class=\"line\">    width = <span class=\"number\">500</span>, heigh = <span class=\"number\">400</span>)</span><br><span class=\"line\">stressplot(spe.nmds)</span><br><span class=\"line\">dev.off()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n\n\n<p>这个图看$R^2$即可，$R^2$越大越好。</p>\n<h1 id=\"NMDS可视化\"><a href=\"#NMDS可视化\" class=\"headerlink\" title=\"NMDS可视化\"></a>NMDS可视化</h1><p>NMDS的可视化本质是散点图，通常有三种可视化方法：</p>\n<ol>\n<li>置信椭圆</li>\n<li>多边形</li>\n<li>放射线</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 利用ggplot2进行可视化</span></span><br><span class=\"line\">nmds.res = spe.nmds[[<span class=\"string\">&quot;points&quot;</span>]] %&gt;%</span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(group = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"number\">10</span>,<span class=\"number\">10</span>,<span class=\"number\">9</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 椭圆</span></span><br><span class=\"line\">p1 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.68</span>, show.legend = <span class=\"built_in\">F</span>) +</span><br><span class=\"line\">  scale_x_continuous(breaks = seq(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">0.5</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>, x = -<span class=\"number\">1.4</span>, y = -<span class=\"number\">1.2</span>, label = <span class=\"string\">&#x27;Rseq = 0.995 \\n Stress = 0.0738&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;NMDS1&#x27;</span>,y = <span class=\"string\">&#x27;NMDS2&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\">p1</span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/3.png&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 多边形</span></span><br><span class=\"line\">group_border = ddply(nmds.res, <span class=\"string\">&#x27;group&#x27;</span>, </span><br><span class=\"line\">                     <span class=\"keyword\">function</span>(df) df[chull(df[[<span class=\"number\">1</span>]], df[[<span class=\"number\">2</span>]]), ])</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggplot(nmds.res, aes(MDS1, MDS2, color = group, fill = group)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  geom_polygon(data = group_border, alpha = <span class=\"number\">0.4</span>, show.legend = <span class=\"built_in\">F</span>) +</span><br><span class=\"line\">  scale_x_continuous(breaks = seq(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">0.5</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  scale_fill_aaas() +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>, x = -<span class=\"number\">1.4</span>, y = -<span class=\"number\">1.2</span>, label = <span class=\"string\">&#x27;Rseq = 0.995 \\n Stress = 0.0738&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;NMDS1&#x27;</span>,y = <span class=\"string\">&#x27;NMDS2&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\">p2</span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/4.png&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 放射线</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mean</span></span><br><span class=\"line\">cent = aggregate(cbind(MDS1,MDS2) ~ group, data = nmds.res, FUN = mean)</span><br><span class=\"line\">colnames(cent)[<span class=\"number\">2</span>:<span class=\"number\">3</span>] = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;cent1&#x27;</span>,<span class=\"string\">&#x27;cent2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># merge data</span></span><br><span class=\"line\">nmds.res = merge(nmds.res, cent, by = <span class=\"string\">&#x27;group&#x27;</span>, all.x = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  geom_point(data = cent, aes(cent1, cent2), size = <span class=\"number\">5</span>, show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  geom_segment(mapping = aes(xend = cent1, yend = cent2), show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_x_continuous(breaks = seq(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">0.5</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  scale_fill_aaas() +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>, x = -<span class=\"number\">1.4</span>, y = -<span class=\"number\">1.2</span>, label = <span class=\"string\">&#x27;Rseq = 0.995 \\n Stress = 0.0738&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;NMDS1&#x27;</span>,y = <span class=\"string\">&#x27;NMDS2&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\">p3</span><br><span class=\"line\">ggsave(p3, filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/5.png&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#102;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#102;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>NMDS（nonmetric multidimensional scaling，非度量多维尺度分析）是排序（ordination）分析一种。排序分析的目的在于寻找数据的连续性（也就是通过连续的排序轴来展示数据的主要趋势）。</p>","more":"<p>为什么在微生物（微生态）研究中常用排序分析呢？因为自然生态群落往往是沿着环境梯度呈连续性分布的。</p>\n<h1 id=\"为什么要用排序分析\"><a href=\"#为什么要用排序分析\" class=\"headerlink\" title=\"为什么要用排序分析\"></a>为什么要用排序分析</h1><p>假设现在有这样一组数据：100个样本，100个变量（如基因），那得到的数据就是一个100行×100列的表，也就是100×100=10000维的数据，我（们）能理解（想象）的维度只能到3维，超过3维的数据就很难理解（想象）了。那怎么办呢？既然维度太高我们无法理解，那就把维度降低，降到一维、二维或者三维就能理解了。所以，我理解的排序分析的本质就是降维（个人理解）。</p>\n<h1 id=\"排序分析分类\"><a href=\"#排序分析分类\" class=\"headerlink\" title=\"排序分析分类\"></a>排序分析分类</h1><p>那都有哪些排序分析方法呢？</p>\n<p>按照是否”约束“可以分成两类：</p>\n<ul>\n<li>约束（典范）排序：RDA（冗余分析）、CCA（典范对应分析）、LDA（线性判别分析）等；</li>\n<li>非约束排序：PCA（主成分分析）、CA对应分析、PCoA（主坐标分析）、NMDS（非度量多维尺度分析）等。</li>\n</ul>\n<p>需要注意的是：非约束排序只是一种描述性的方法，不存在统计检验评估排序结果显著性的问题；而约束排序则需要对排序的结果进行显著性检验。</p>\n<h1 id=\"NMDS的原理\"><a href=\"#NMDS的原理\" class=\"headerlink\" title=\"NMDS的原理\"></a>NMDS的原理</h1><p>数学原理和算法很复杂，我们作为应用中，只需要要知道怎么用就可以了（下面的例子都是我自己的理解，不妥指出还请批评指正）。</p>\n<p>举个很简单的例子，假设现在路上有4个人在跑步，分别是①②③④。现在我们并不关心他们之间的具体的距离是多少，我们在乎的只是对某个人来说，其他三个人和他的相对距离。现在假设我是图中的①，那么②就是我的”第一远“，思就是我的”第二远“，③就是我的”第三远“。</p>\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>在NMDS中，排序轴就是一条条的跑道，根据排序轴来比较样本的差异。</p>\n<h1 id=\"NMDS在R中的实现\"><a href=\"#NMDS在R中的实现\" class=\"headerlink\" title=\"NMDS在R中的实现\"></a>NMDS在R中的实现</h1><p>好像是有好多软件能完成NMDS分析，但是我还是觉得R语言是最好的。PS：就在我些这个文章的时候，同学告诉我说经典的进化树可视化软件（软件）<code>iTOL</code>开始收费了，所以是，开源不收费还是好啊。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(ade4)</span><br><span class=\"line\">library(vegan)</span><br><span class=\"line\">library(plyr)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download data</span></span><br><span class=\"line\">load(<span class=\"string\">&#x27;Doubs.RData&#x27;</span>)</span><br><span class=\"line\">spe = spe[-<span class=\"number\">8</span>,] <span class=\"comment\"># 提出无物种数据的样本</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run NMDS</span></span><br><span class=\"line\">spe.nmds = vegan::metaMDS(spe, distance = <span class=\"string\">&#x27;bray&#x27;</span>)</span><br><span class=\"line\">spe.nmds</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 经验法则：应力 &lt; 0.05 可很好地表示尺寸减小，</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;0.1 非常好，&lt;0.2 还不错，而应力 &lt; 0.3 有待提高。</span></span><br><span class=\"line\">spe.nmds$stress</span><br><span class=\"line\"></span><br><span class=\"line\">plot(spe.nmds,type = <span class=\"string\">&#x27;t&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 评估拟合度</span></span><br><span class=\"line\">png(filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/2.png&#x27;</span>,</span><br><span class=\"line\">    width = <span class=\"number\">500</span>, heigh = <span class=\"number\">400</span>)</span><br><span class=\"line\">stressplot(spe.nmds)</span><br><span class=\"line\">dev.off()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n\n\n<p>这个图看$R^2$即可，$R^2$越大越好。</p>\n<h1 id=\"NMDS可视化\"><a href=\"#NMDS可视化\" class=\"headerlink\" title=\"NMDS可视化\"></a>NMDS可视化</h1><p>NMDS的可视化本质是散点图，通常有三种可视化方法：</p>\n<ol>\n<li>置信椭圆</li>\n<li>多边形</li>\n<li>放射线</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 利用ggplot2进行可视化</span></span><br><span class=\"line\">nmds.res = spe.nmds[[<span class=\"string\">&quot;points&quot;</span>]] %&gt;%</span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(group = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"number\">10</span>,<span class=\"number\">10</span>,<span class=\"number\">9</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 椭圆</span></span><br><span class=\"line\">p1 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.68</span>, show.legend = <span class=\"built_in\">F</span>) +</span><br><span class=\"line\">  scale_x_continuous(breaks = seq(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">0.5</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>, x = -<span class=\"number\">1.4</span>, y = -<span class=\"number\">1.2</span>, label = <span class=\"string\">&#x27;Rseq = 0.995 \\n Stress = 0.0738&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;NMDS1&#x27;</span>,y = <span class=\"string\">&#x27;NMDS2&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\">p1</span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/3.png&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 多边形</span></span><br><span class=\"line\">group_border = ddply(nmds.res, <span class=\"string\">&#x27;group&#x27;</span>, </span><br><span class=\"line\">                     <span class=\"keyword\">function</span>(df) df[chull(df[[<span class=\"number\">1</span>]], df[[<span class=\"number\">2</span>]]), ])</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggplot(nmds.res, aes(MDS1, MDS2, color = group, fill = group)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  geom_polygon(data = group_border, alpha = <span class=\"number\">0.4</span>, show.legend = <span class=\"built_in\">F</span>) +</span><br><span class=\"line\">  scale_x_continuous(breaks = seq(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">0.5</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  scale_fill_aaas() +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>, x = -<span class=\"number\">1.4</span>, y = -<span class=\"number\">1.2</span>, label = <span class=\"string\">&#x27;Rseq = 0.995 \\n Stress = 0.0738&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;NMDS1&#x27;</span>,y = <span class=\"string\">&#x27;NMDS2&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\">p2</span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/4.png&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 放射线</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mean</span></span><br><span class=\"line\">cent = aggregate(cbind(MDS1,MDS2) ~ group, data = nmds.res, FUN = mean)</span><br><span class=\"line\">colnames(cent)[<span class=\"number\">2</span>:<span class=\"number\">3</span>] = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;cent1&#x27;</span>,<span class=\"string\">&#x27;cent2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># merge data</span></span><br><span class=\"line\">nmds.res = merge(nmds.res, cent, by = <span class=\"string\">&#x27;group&#x27;</span>, all.x = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggplot(nmds.res, aes(MDS1, MDS2, color = group)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  geom_point(data = cent, aes(cent1, cent2), size = <span class=\"number\">5</span>, show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  geom_segment(mapping = aes(xend = cent1, yend = cent2), show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_x_continuous(breaks = seq(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">0.5</span>)) +</span><br><span class=\"line\">  scale_color_aaas() +</span><br><span class=\"line\">  scale_fill_aaas() +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>, x = -<span class=\"number\">1.4</span>, y = -<span class=\"number\">1.2</span>, label = <span class=\"string\">&#x27;Rseq = 0.995 \\n Stress = 0.0738&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;NMDS1&#x27;</span>,y = <span class=\"string\">&#x27;NMDS2&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\">p3</span><br><span class=\"line\">ggsave(p3, filename = <span class=\"string\">&#x27;20201109NMDS(非度量多维尺度分析)/figures/5.png&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/04/NMDS%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#102;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#102;&#111;&#x78;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"Linux Tips","abbrlink":"2f176420","date":"2021-04-05T08:56:33.000Z","_content":"\n1. 统计某个特定字符串出现的次数：\n\n   ```shell\n   grep -c '>' filename\n   ```\n\n   <!-- more -->\n\n2. 查看某个特定字符出现的行数：\n\n   ```R\n   grep -n '>' filename\n   ```\n\n3. 根据`gff`文件提取基因序列：\n\n   ```shell\n   awk '{if ($3==\"gene\") print}' ylg.gff3 > ylg.gene.gff3\n   bedtools getfasta -fi your_fasta.file -bed your_gff3.file > your_output.name\n   ```\n\n4. 统计文件行数：\n\n   ```shell\n   wc -l your_file\n   ```\n\n5. 修改`atp`源：\n\n   ```shell\n   # 备份源\n   sudo cp /etc/apt/sources.list  /etc/apt/sources.list_backup\n   # 编辑源\n   sudo vi /etc/apt/sources.list\n   \n   deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\n   ```\n\n6. `conda`安装：\n\n   ```shell\n   wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh\n   \n   bash Miniconda2-latest-Linux-x86_64.sh\n   \n   conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\n   conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge\n   conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda\n   conda config --set show_channel_urls yes\n   \n   conda create -n rna\n   # 创建一个小环境名为rna\n   \n   conda install python=2\n   # 安装python 2版本\n   # 以上两句话可以等同于一句命令：conda create -n rna python=2\n   \n   conda info -e\n   conda info --envs\n   conda env list\n   # 都是来查看已经存在小环境名的\n   \n   # 运行后如下：rna即为刚刚建立成功的小环境名\n   \n   $ conda info -e\n   # conda environments:\n   #\n   base                  *  /home/you/miniconda2\n   rna                      /home/you/miniconda2/envs/rna\n   \n   source activate rna\n   ```\n\n7. 安装`htop`：\n\n   ```shell\n   sudo apt install htop\n   ```\n\n8. `wget`后台运行+断点续传：\n\n   ```shell\n   wget -b -c your_link\n   ```\n\n9. 查看某个文件夹的大小：\n\n   ```shell\n   du -h youdir\n   ```\n\n10. `wegt`批量下载：\n\n    ```shell\n    wget -c -b -t 0 -T 6000 -i yourlinkesfiles\n    ```\n    \n11. 服务器之间传输文件：\n\n    ```shell\n    scp -r ./thisfolder username@192.168.212.212:/home/user $ 目标服务器\n    ```\n\n12. md5值检验：\n\n    ```shell\n    md5sum yourfile\n    ```\n\n    \n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/Linux-Tips.md","raw":"---\ntitle: Linux Tips\ntags: Linux\ncategories: Linux\nabbrlink: 2f176420\ndate: 2021-04-05 16:56:33\n---\n\n1. 统计某个特定字符串出现的次数：\n\n   ```shell\n   grep -c '>' filename\n   ```\n\n   <!-- more -->\n\n2. 查看某个特定字符出现的行数：\n\n   ```R\n   grep -n '>' filename\n   ```\n\n3. 根据`gff`文件提取基因序列：\n\n   ```shell\n   awk '{if ($3==\"gene\") print}' ylg.gff3 > ylg.gene.gff3\n   bedtools getfasta -fi your_fasta.file -bed your_gff3.file > your_output.name\n   ```\n\n4. 统计文件行数：\n\n   ```shell\n   wc -l your_file\n   ```\n\n5. 修改`atp`源：\n\n   ```shell\n   # 备份源\n   sudo cp /etc/apt/sources.list  /etc/apt/sources.list_backup\n   # 编辑源\n   sudo vi /etc/apt/sources.list\n   \n   deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\n   deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\n   deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\n   ```\n\n6. `conda`安装：\n\n   ```shell\n   wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh\n   \n   bash Miniconda2-latest-Linux-x86_64.sh\n   \n   conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\n   conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge\n   conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda\n   conda config --set show_channel_urls yes\n   \n   conda create -n rna\n   # 创建一个小环境名为rna\n   \n   conda install python=2\n   # 安装python 2版本\n   # 以上两句话可以等同于一句命令：conda create -n rna python=2\n   \n   conda info -e\n   conda info --envs\n   conda env list\n   # 都是来查看已经存在小环境名的\n   \n   # 运行后如下：rna即为刚刚建立成功的小环境名\n   \n   $ conda info -e\n   # conda environments:\n   #\n   base                  *  /home/you/miniconda2\n   rna                      /home/you/miniconda2/envs/rna\n   \n   source activate rna\n   ```\n\n7. 安装`htop`：\n\n   ```shell\n   sudo apt install htop\n   ```\n\n8. `wget`后台运行+断点续传：\n\n   ```shell\n   wget -b -c your_link\n   ```\n\n9. 查看某个文件夹的大小：\n\n   ```shell\n   du -h youdir\n   ```\n\n10. `wegt`批量下载：\n\n    ```shell\n    wget -c -b -t 0 -T 6000 -i yourlinkesfiles\n    ```\n    \n11. 服务器之间传输文件：\n\n    ```shell\n    scp -r ./thisfolder username@192.168.212.212:/home/user $ 目标服务器\n    ```\n\n12. md5值检验：\n\n    ```shell\n    md5sum yourfile\n    ```\n\n    \n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"Linux-Tips","published":1,"updated":"2021-04-14T01:42:13.361Z","_id":"ckwbqwceo0016r0g0avnj311q","comments":1,"layout":"post","photos":[],"link":"","content":"<ol>\n<li><p>统计某个特定字符串出现的次数：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -c &#x27;&gt;&#x27; filename</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span></li>\n<li><p>查看某个特定字符出现的行数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -n <span class=\"string\">&#x27;&gt;&#x27;</span> filename</span><br></pre></td></tr></table></figure></li>\n<li><p>根据<code>gff</code>文件提取基因序列：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &#x27;&#123;if ($3==&quot;gene&quot;) print&#125;&#x27; ylg.gff3 &gt; ylg.gene.gff3</span><br><span class=\"line\">bedtools getfasta -fi your_fasta.file -bed your_gff3.file &gt; your_output.name</span><br></pre></td></tr></table></figure></li>\n<li><p>统计文件行数：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wc -l your_file</span><br></pre></td></tr></table></figure></li>\n<li><p>修改<code>atp</code>源：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 备份源</span></span><br><span class=\"line\">sudo cp /etc/apt/sources.list  /etc/apt/sources.list_backup</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 编辑源</span></span><br><span class=\"line\">sudo vi /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></li>\n<li><p><code>conda</code>安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">bash Miniconda2-latest-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda</span><br><span class=\"line\">conda config --set show_channel_urls yes</span><br><span class=\"line\"></span><br><span class=\"line\">conda create -n rna</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 创建一个小环境名为rna</span></span><br><span class=\"line\"></span><br><span class=\"line\">conda install python=2</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装python 2版本</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 以上两句话可以等同于一句命令：conda create -n rna python=2</span></span><br><span class=\"line\"></span><br><span class=\"line\">conda info -e</span><br><span class=\"line\">conda info --envs</span><br><span class=\"line\">conda env list</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 都是来查看已经存在小环境名的</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 运行后如下：rna即为刚刚建立成功的小环境名</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> conda info -e</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> conda environments:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\">base                  *  /home/you/miniconda2</span></span><br><span class=\"line\">rna                      /home/you/miniconda2/envs/rna</span><br><span class=\"line\"></span><br><span class=\"line\">source activate rna</span><br></pre></td></tr></table></figure></li>\n<li><p>安装<code>htop</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install htop</span><br></pre></td></tr></table></figure></li>\n<li><p><code>wget</code>后台运行+断点续传：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -b -c your_link</span><br></pre></td></tr></table></figure></li>\n<li><p>查看某个文件夹的大小：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -h youdir</span><br></pre></td></tr></table></figure></li>\n<li><p><code>wegt</code>批量下载：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c -b -t 0 -T 6000 -i yourlinkesfiles</span><br></pre></td></tr></table></figure></li>\n<li><p>服务器之间传输文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r ./thisfolder username@192.168.212.212:/home/user $ 目标服务器</span><br></pre></td></tr></table></figure></li>\n<li><p>md5值检验：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum yourfile</span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<ol>\n<li><p>统计某个特定字符串出现的次数：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -c &#x27;&gt;&#x27; filename</span><br></pre></td></tr></table></figure>","more":"</li>\n<li><p>查看某个特定字符出现的行数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -n <span class=\"string\">&#x27;&gt;&#x27;</span> filename</span><br></pre></td></tr></table></figure></li>\n<li><p>根据<code>gff</code>文件提取基因序列：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk &#x27;&#123;if ($3==&quot;gene&quot;) print&#125;&#x27; ylg.gff3 &gt; ylg.gene.gff3</span><br><span class=\"line\">bedtools getfasta -fi your_fasta.file -bed your_gff3.file &gt; your_output.name</span><br></pre></td></tr></table></figure></li>\n<li><p>统计文件行数：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wc -l your_file</span><br></pre></td></tr></table></figure></li>\n<li><p>修改<code>atp</code>源：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 备份源</span></span><br><span class=\"line\">sudo cp /etc/apt/sources.list  /etc/apt/sources.list_backup</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 编辑源</span></span><br><span class=\"line\">sudo vi /etc/apt/sources.list</span><br><span class=\"line\"></span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></li>\n<li><p><code>conda</code>安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">bash Miniconda2-latest-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class=\"line\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda</span><br><span class=\"line\">conda config --set show_channel_urls yes</span><br><span class=\"line\"></span><br><span class=\"line\">conda create -n rna</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 创建一个小环境名为rna</span></span><br><span class=\"line\"></span><br><span class=\"line\">conda install python=2</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装python 2版本</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 以上两句话可以等同于一句命令：conda create -n rna python=2</span></span><br><span class=\"line\"></span><br><span class=\"line\">conda info -e</span><br><span class=\"line\">conda info --envs</span><br><span class=\"line\">conda env list</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 都是来查看已经存在小环境名的</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 运行后如下：rna即为刚刚建立成功的小环境名</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> conda info -e</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> conda environments:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"></span></span><br><span class=\"line\"><span class=\"bash\">base                  *  /home/you/miniconda2</span></span><br><span class=\"line\">rna                      /home/you/miniconda2/envs/rna</span><br><span class=\"line\"></span><br><span class=\"line\">source activate rna</span><br></pre></td></tr></table></figure></li>\n<li><p>安装<code>htop</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install htop</span><br></pre></td></tr></table></figure></li>\n<li><p><code>wget</code>后台运行+断点续传：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -b -c your_link</span><br></pre></td></tr></table></figure></li>\n<li><p>查看某个文件夹的大小：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -h youdir</span><br></pre></td></tr></table></figure></li>\n<li><p><code>wegt</code>批量下载：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c -b -t 0 -T 6000 -i yourlinkesfiles</span><br></pre></td></tr></table></figure></li>\n<li><p>服务器之间传输文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r ./thisfolder username@192.168.212.212:/home/user $ 目标服务器</span><br></pre></td></tr></table></figure></li>\n<li><p>md5值检验：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5sum yourfile</span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"MiKTeX安装报错解决办法","abbrlink":"89753032","date":"2021-03-05T14:01:50.000Z","_content":"\n最近打算用`bookdown`记实验记录，实在是受不了`Word`了。<!-- more -->使用`bookdown`需要使用`MiKTeX`，安装的时候我选择的是一路默认，使用的时候还是会报错，尝试了几次，找到了解决办法：\n\n{% asset_img 1.jpg %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/MiKTeX安装报错解决办法.md","raw":"---\ntitle: MiKTeX安装报错解决办法\ntags: R语言\ncategories: R语言\nabbrlink: '89753032'\ndate: 2021-03-05 22:01:50\n---\n\n最近打算用`bookdown`记实验记录，实在是受不了`Word`了。<!-- more -->使用`bookdown`需要使用`MiKTeX`，安装的时候我选择的是一路默认，使用的时候还是会报错，尝试了几次，找到了解决办法：\n\n{% asset_img 1.jpg %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"MiKTeX安装报错解决办法","published":1,"updated":"2021-03-05T14:05:34.325Z","_id":"ckwbqwcep0018r0g06xwq2gy3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近打算用<code>bookdown</code>记实验记录，实在是受不了<code>Word</code>了。<span id=\"more\"></span>使用<code>bookdown</code>需要使用<code>MiKTeX</code>，安装的时候我选择的是一路默认，使用的时候还是会报错，尝试了几次，找到了解决办法：</p>\n<img src=\"/2021/03/05/MiKTeX%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/1.jpg\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>最近打算用<code>bookdown</code>记实验记录，实在是受不了<code>Word</code>了。","more":"使用<code>bookdown</code>需要使用<code>MiKTeX</code>，安装的时候我选择的是一路默认，使用的时候还是会报错，尝试了几次，找到了解决办法：</p>\n<img src=\"/2021/03/05/MiKTeX%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/1.jpg\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"PCA和PERMANOVA分析","abbrlink":"76358c9","date":"2020-01-07T04:32:15.000Z","_content":"\nPCA这种图，图片上看起来不同的组别之间是有差异的，比如说这个：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n可是各组别之间到底有没有显著的差异呢？普通的ANOVA行不行？就16s的数据来说，一般是有几千个OTU，普通的ANOVA根本就是无能为力啊。\n这个时候就需要进行PERMANOVA检验了。PERMANOVA分析(也叫 NPMANOVA、Adonis 分析) 是一种以距离矩阵为对象的多元方差分析。\n下面的代码包括了PCA和PERMANOVA的整个分析流程。\n\n```R\nrm(list = ls())\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(vegan)\n\ndata = read.table('data/otu.txt',header = T, row.names = 1) %>%\n  t() %>%\n  as.data.frame() %>%\n  mutate(group = rep(c('AAS','ANS','NAS','NNS'),each = 3))\n\npca = prcomp(data[,1:ncol(data)-1],scale. = TRUE)\n\n# 计算原始数据中的每个数据在每个 PC 上的比重\npca.var = pca$sdev^2 \n\n#计算每个 PC 占所有 PC 的和的比列\npca.var.per = round(pca.var/sum(pca.var)*100,2)\n\n# 柱状图显示每个PC所占的比列\ndata.frame(PC = as.character(paste('PC',1:nrow(data),sep = '')),\n           value = pca.var.per) %>%\n  ggplot(aes(PC,value))+\n  geom_bar(stat = 'identity', fill = 'white', color = 'black')+\n  geom_hline(yintercept = pca.var.per[1]*1.1, color = 'white')+\n  scale_x_discrete(limits = c(paste('PC',1:nrow(data),sep = '')))+\n  theme_classic()+\n  scale_y_continuous(expand = c(0,0))+\n  geom_text(aes(y = value + 1,label = paste(value,'%',sep = '')),size = 2.5)+\n  labs(x = '',y = '',title = 'ScreePlot')+\n  theme(axis.text = element_text(size = 11,color = 'black'),\n        axis.ticks = element_line(color = 'black'),\n        plot.title = element_text(hjust = 0.5))\n\n# ggplot2绘图\nas.data.frame(pca$x) %>%\n  mutate(group = data$group) %>%\n  ggplot(aes(PC1,PC2,color = group))+\n  geom_point(size = 2)+\n  theme_classic()+\n  labs(x = paste('PC1(',pca.var.per[1],'%)',sep = ''),\n       y = paste('PC2(',pca.var.per[2],'%)',sep = ''))+\n  stat_ellipse(level = 0.68)+\n  theme(axis.text = element_text(size = 11,color = 'black'),\n        axis.ticks = element_line(color = 'black'),\n        plot.title = element_text(hjust = 0.5))\n\n###############################################################\n###############################PERMANOVA分析###################\n###############################################################\notu = data[,1:ncol(data)-1]\n\ndist = vegdist(otu, method = 'bray') # 计算距离\n\n# 分组信息\nsite = data.frame(sample = rownames(data),\n                  group = data$group)\n\n# PERMANOVA分析\n# 整体水平比较\nadonis_result_dis = adonis(dist~group, site, permutations = 999)\nadonis_result_dis\n\n# 两两比较\ngroup_name = unique(site$group)\n\nresult = data.frame()\n\nfor (i in 1:(length(group_name) - 1)) {\n  for (j in (i + 1):length(group_name)) {\n    group_ij = subset(site, group %in% c(as.character(group_name[i]), as.character(group_name[j])))\n    otu_ij = otu[group_ij$sample, ]\n    adonis_result_otu_ij = adonis(otu_ij~group, group_ij, permutations = 999, distance = 'bray')\n    res.temp = as.data.frame(adonis_result_otu_ij$aov.tab)[1,]\n    rownames(res.temp) = paste(as.character(group_name[i]),'/',as.character(group_name[j]))\n    \n    result = rbind(result,res.temp)\n  }\n}\n\nhead(result,nrow(result))\n```\n最终得到的结果有PCA分析的碎石图、PCA图、PERMANOVA整体分析的结果以及两两比较的结果。\n\n----\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/PCA和PERMANOVA分析.md","raw":"---\ntitle: PCA和PERMANOVA分析\ncategories: R语言\ntags: R语言\nabbrlink: 76358c9\ndate: 2020-01-07 12:32:15\n---\n\nPCA这种图，图片上看起来不同的组别之间是有差异的，比如说这个：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n可是各组别之间到底有没有显著的差异呢？普通的ANOVA行不行？就16s的数据来说，一般是有几千个OTU，普通的ANOVA根本就是无能为力啊。\n这个时候就需要进行PERMANOVA检验了。PERMANOVA分析(也叫 NPMANOVA、Adonis 分析) 是一种以距离矩阵为对象的多元方差分析。\n下面的代码包括了PCA和PERMANOVA的整个分析流程。\n\n```R\nrm(list = ls())\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(vegan)\n\ndata = read.table('data/otu.txt',header = T, row.names = 1) %>%\n  t() %>%\n  as.data.frame() %>%\n  mutate(group = rep(c('AAS','ANS','NAS','NNS'),each = 3))\n\npca = prcomp(data[,1:ncol(data)-1],scale. = TRUE)\n\n# 计算原始数据中的每个数据在每个 PC 上的比重\npca.var = pca$sdev^2 \n\n#计算每个 PC 占所有 PC 的和的比列\npca.var.per = round(pca.var/sum(pca.var)*100,2)\n\n# 柱状图显示每个PC所占的比列\ndata.frame(PC = as.character(paste('PC',1:nrow(data),sep = '')),\n           value = pca.var.per) %>%\n  ggplot(aes(PC,value))+\n  geom_bar(stat = 'identity', fill = 'white', color = 'black')+\n  geom_hline(yintercept = pca.var.per[1]*1.1, color = 'white')+\n  scale_x_discrete(limits = c(paste('PC',1:nrow(data),sep = '')))+\n  theme_classic()+\n  scale_y_continuous(expand = c(0,0))+\n  geom_text(aes(y = value + 1,label = paste(value,'%',sep = '')),size = 2.5)+\n  labs(x = '',y = '',title = 'ScreePlot')+\n  theme(axis.text = element_text(size = 11,color = 'black'),\n        axis.ticks = element_line(color = 'black'),\n        plot.title = element_text(hjust = 0.5))\n\n# ggplot2绘图\nas.data.frame(pca$x) %>%\n  mutate(group = data$group) %>%\n  ggplot(aes(PC1,PC2,color = group))+\n  geom_point(size = 2)+\n  theme_classic()+\n  labs(x = paste('PC1(',pca.var.per[1],'%)',sep = ''),\n       y = paste('PC2(',pca.var.per[2],'%)',sep = ''))+\n  stat_ellipse(level = 0.68)+\n  theme(axis.text = element_text(size = 11,color = 'black'),\n        axis.ticks = element_line(color = 'black'),\n        plot.title = element_text(hjust = 0.5))\n\n###############################################################\n###############################PERMANOVA分析###################\n###############################################################\notu = data[,1:ncol(data)-1]\n\ndist = vegdist(otu, method = 'bray') # 计算距离\n\n# 分组信息\nsite = data.frame(sample = rownames(data),\n                  group = data$group)\n\n# PERMANOVA分析\n# 整体水平比较\nadonis_result_dis = adonis(dist~group, site, permutations = 999)\nadonis_result_dis\n\n# 两两比较\ngroup_name = unique(site$group)\n\nresult = data.frame()\n\nfor (i in 1:(length(group_name) - 1)) {\n  for (j in (i + 1):length(group_name)) {\n    group_ij = subset(site, group %in% c(as.character(group_name[i]), as.character(group_name[j])))\n    otu_ij = otu[group_ij$sample, ]\n    adonis_result_otu_ij = adonis(otu_ij~group, group_ij, permutations = 999, distance = 'bray')\n    res.temp = as.data.frame(adonis_result_otu_ij$aov.tab)[1,]\n    rownames(res.temp) = paste(as.character(group_name[i]),'/',as.character(group_name[j]))\n    \n    result = rbind(result,res.temp)\n  }\n}\n\nhead(result,nrow(result))\n```\n最终得到的结果有PCA分析的碎石图、PCA图、PERMANOVA整体分析的结果以及两两比较的结果。\n\n----\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"PCA和PERMANOVA分析","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwceq001cr0g0823b5pf8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>PCA这种图，图片上看起来不同的组别之间是有差异的，比如说这个：</p>\n<span id=\"more\"></span>\n\n<img src=\"/2020/01/07/PCA%E5%92%8CPERMANOVA%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>可是各组别之间到底有没有显著的差异呢？普通的ANOVA行不行？就16s的数据来说，一般是有几千个OTU，普通的ANOVA根本就是无能为力啊。<br>这个时候就需要进行PERMANOVA检验了。PERMANOVA分析(也叫 NPMANOVA、Adonis 分析) 是一种以距离矩阵为对象的多元方差分析。<br>下面的代码包括了PCA和PERMANOVA的整个分析流程。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(vegan)</span><br><span class=\"line\"></span><br><span class=\"line\">data = read.table(<span class=\"string\">&#x27;data/otu.txt&#x27;</span>,header = <span class=\"built_in\">T</span>, row.names = <span class=\"number\">1</span>) %&gt;%</span><br><span class=\"line\">  t() %&gt;%</span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(group = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;AAS&#x27;</span>,<span class=\"string\">&#x27;ANS&#x27;</span>,<span class=\"string\">&#x27;NAS&#x27;</span>,<span class=\"string\">&#x27;NNS&#x27;</span>),each = <span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">pca = prcomp(data[,<span class=\"number\">1</span>:ncol(data)-<span class=\"number\">1</span>],scale. = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算原始数据中的每个数据在每个 PC 上的比重</span></span><br><span class=\"line\">pca.var = pca$sdev^<span class=\"number\">2</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#计算每个 PC 占所有 PC 的和的比列</span></span><br><span class=\"line\">pca.var.per = <span class=\"built_in\">round</span>(pca.var/<span class=\"built_in\">sum</span>(pca.var)*<span class=\"number\">100</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 柱状图显示每个PC所占的比列</span></span><br><span class=\"line\">data.frame(PC = <span class=\"built_in\">as.character</span>(paste(<span class=\"string\">&#x27;PC&#x27;</span>,<span class=\"number\">1</span>:nrow(data),sep = <span class=\"string\">&#x27;&#x27;</span>)),</span><br><span class=\"line\">           value = pca.var.per) %&gt;%</span><br><span class=\"line\">  ggplot(aes(PC,value))+</span><br><span class=\"line\">  geom_bar(stat = <span class=\"string\">&#x27;identity&#x27;</span>, fill = <span class=\"string\">&#x27;white&#x27;</span>, color = <span class=\"string\">&#x27;black&#x27;</span>)+</span><br><span class=\"line\">  geom_hline(yintercept = pca.var.per[<span class=\"number\">1</span>]*<span class=\"number\">1.1</span>, color = <span class=\"string\">&#x27;white&#x27;</span>)+</span><br><span class=\"line\">  scale_x_discrete(limits = <span class=\"built_in\">c</span>(paste(<span class=\"string\">&#x27;PC&#x27;</span>,<span class=\"number\">1</span>:nrow(data),sep = <span class=\"string\">&#x27;&#x27;</span>)))+</span><br><span class=\"line\">  theme_classic()+</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>))+</span><br><span class=\"line\">  geom_text(aes(y = value + <span class=\"number\">1</span>,label = paste(value,<span class=\"string\">&#x27;%&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>)),size = <span class=\"number\">2.5</span>)+</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>,y = <span class=\"string\">&#x27;&#x27;</span>,title = <span class=\"string\">&#x27;ScreePlot&#x27;</span>)+</span><br><span class=\"line\">  theme(axis.text = element_text(size = <span class=\"number\">11</span>,color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        plot.title = element_text(hjust = <span class=\"number\">0.5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ggplot2绘图</span></span><br><span class=\"line\">as.data.frame(pca$x) %&gt;%</span><br><span class=\"line\">  mutate(group = data$group) %&gt;%</span><br><span class=\"line\">  ggplot(aes(PC1,PC2,color = group))+</span><br><span class=\"line\">  geom_point(size = <span class=\"number\">2</span>)+</span><br><span class=\"line\">  theme_classic()+</span><br><span class=\"line\">  labs(x = paste(<span class=\"string\">&#x27;PC1(&#x27;</span>,pca.var.per[<span class=\"number\">1</span>],<span class=\"string\">&#x27;%)&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>),</span><br><span class=\"line\">       y = paste(<span class=\"string\">&#x27;PC2(&#x27;</span>,pca.var.per[<span class=\"number\">2</span>],<span class=\"string\">&#x27;%)&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))+</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.68</span>)+</span><br><span class=\"line\">  theme(axis.text = element_text(size = <span class=\"number\">11</span>,color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        plot.title = element_text(hjust = <span class=\"number\">0.5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###############################################################</span></span><br><span class=\"line\"><span class=\"comment\">###############################PERMANOVA分析###################</span></span><br><span class=\"line\"><span class=\"comment\">###############################################################</span></span><br><span class=\"line\">otu = data[,<span class=\"number\">1</span>:ncol(data)-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">dist = vegdist(otu, method = <span class=\"string\">&#x27;bray&#x27;</span>) <span class=\"comment\"># 计算距离</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分组信息</span></span><br><span class=\"line\">site = data.frame(sample = rownames(data),</span><br><span class=\"line\">                  group = data$group)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PERMANOVA分析</span></span><br><span class=\"line\"><span class=\"comment\"># 整体水平比较</span></span><br><span class=\"line\">adonis_result_dis = adonis(dist~group, site, permutations = <span class=\"number\">999</span>)</span><br><span class=\"line\">adonis_result_dis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 两两比较</span></span><br><span class=\"line\">group_name = unique(site$group)</span><br><span class=\"line\"></span><br><span class=\"line\">result = data.frame()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:(<span class=\"built_in\">length</span>(group_name) - <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (j <span class=\"keyword\">in</span> (i + <span class=\"number\">1</span>):<span class=\"built_in\">length</span>(group_name)) &#123;</span><br><span class=\"line\">    group_ij = subset(site, group %in% <span class=\"built_in\">c</span>(<span class=\"built_in\">as.character</span>(group_name[i]), <span class=\"built_in\">as.character</span>(group_name[j])))</span><br><span class=\"line\">    otu_ij = otu[group_ij$sample, ]</span><br><span class=\"line\">    adonis_result_otu_ij = adonis(otu_ij~group, group_ij, permutations = <span class=\"number\">999</span>, distance = <span class=\"string\">&#x27;bray&#x27;</span>)</span><br><span class=\"line\">    res.temp = as.data.frame(adonis_result_otu_ij$aov.tab)[<span class=\"number\">1</span>,]</span><br><span class=\"line\">    rownames(res.temp) = paste(<span class=\"built_in\">as.character</span>(group_name[i]),<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"built_in\">as.character</span>(group_name[j]))</span><br><span class=\"line\">    </span><br><span class=\"line\">    result = rbind(result,res.temp)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">head(result,nrow(result))</span><br></pre></td></tr></table></figure>\n<p>最终得到的结果有PCA分析的碎石图、PCA图、PERMANOVA整体分析的结果以及两两比较的结果。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>PCA这种图，图片上看起来不同的组别之间是有差异的，比如说这个：</p>","more":"<img src=\"/2020/01/07/PCA%E5%92%8CPERMANOVA%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>可是各组别之间到底有没有显著的差异呢？普通的ANOVA行不行？就16s的数据来说，一般是有几千个OTU，普通的ANOVA根本就是无能为力啊。<br>这个时候就需要进行PERMANOVA检验了。PERMANOVA分析(也叫 NPMANOVA、Adonis 分析) 是一种以距离矩阵为对象的多元方差分析。<br>下面的代码包括了PCA和PERMANOVA的整个分析流程。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(vegan)</span><br><span class=\"line\"></span><br><span class=\"line\">data = read.table(<span class=\"string\">&#x27;data/otu.txt&#x27;</span>,header = <span class=\"built_in\">T</span>, row.names = <span class=\"number\">1</span>) %&gt;%</span><br><span class=\"line\">  t() %&gt;%</span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(group = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;AAS&#x27;</span>,<span class=\"string\">&#x27;ANS&#x27;</span>,<span class=\"string\">&#x27;NAS&#x27;</span>,<span class=\"string\">&#x27;NNS&#x27;</span>),each = <span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">pca = prcomp(data[,<span class=\"number\">1</span>:ncol(data)-<span class=\"number\">1</span>],scale. = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算原始数据中的每个数据在每个 PC 上的比重</span></span><br><span class=\"line\">pca.var = pca$sdev^<span class=\"number\">2</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#计算每个 PC 占所有 PC 的和的比列</span></span><br><span class=\"line\">pca.var.per = <span class=\"built_in\">round</span>(pca.var/<span class=\"built_in\">sum</span>(pca.var)*<span class=\"number\">100</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 柱状图显示每个PC所占的比列</span></span><br><span class=\"line\">data.frame(PC = <span class=\"built_in\">as.character</span>(paste(<span class=\"string\">&#x27;PC&#x27;</span>,<span class=\"number\">1</span>:nrow(data),sep = <span class=\"string\">&#x27;&#x27;</span>)),</span><br><span class=\"line\">           value = pca.var.per) %&gt;%</span><br><span class=\"line\">  ggplot(aes(PC,value))+</span><br><span class=\"line\">  geom_bar(stat = <span class=\"string\">&#x27;identity&#x27;</span>, fill = <span class=\"string\">&#x27;white&#x27;</span>, color = <span class=\"string\">&#x27;black&#x27;</span>)+</span><br><span class=\"line\">  geom_hline(yintercept = pca.var.per[<span class=\"number\">1</span>]*<span class=\"number\">1.1</span>, color = <span class=\"string\">&#x27;white&#x27;</span>)+</span><br><span class=\"line\">  scale_x_discrete(limits = <span class=\"built_in\">c</span>(paste(<span class=\"string\">&#x27;PC&#x27;</span>,<span class=\"number\">1</span>:nrow(data),sep = <span class=\"string\">&#x27;&#x27;</span>)))+</span><br><span class=\"line\">  theme_classic()+</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>))+</span><br><span class=\"line\">  geom_text(aes(y = value + <span class=\"number\">1</span>,label = paste(value,<span class=\"string\">&#x27;%&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>)),size = <span class=\"number\">2.5</span>)+</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>,y = <span class=\"string\">&#x27;&#x27;</span>,title = <span class=\"string\">&#x27;ScreePlot&#x27;</span>)+</span><br><span class=\"line\">  theme(axis.text = element_text(size = <span class=\"number\">11</span>,color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        plot.title = element_text(hjust = <span class=\"number\">0.5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ggplot2绘图</span></span><br><span class=\"line\">as.data.frame(pca$x) %&gt;%</span><br><span class=\"line\">  mutate(group = data$group) %&gt;%</span><br><span class=\"line\">  ggplot(aes(PC1,PC2,color = group))+</span><br><span class=\"line\">  geom_point(size = <span class=\"number\">2</span>)+</span><br><span class=\"line\">  theme_classic()+</span><br><span class=\"line\">  labs(x = paste(<span class=\"string\">&#x27;PC1(&#x27;</span>,pca.var.per[<span class=\"number\">1</span>],<span class=\"string\">&#x27;%)&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>),</span><br><span class=\"line\">       y = paste(<span class=\"string\">&#x27;PC2(&#x27;</span>,pca.var.per[<span class=\"number\">2</span>],<span class=\"string\">&#x27;%)&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))+</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.68</span>)+</span><br><span class=\"line\">  theme(axis.text = element_text(size = <span class=\"number\">11</span>,color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        plot.title = element_text(hjust = <span class=\"number\">0.5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###############################################################</span></span><br><span class=\"line\"><span class=\"comment\">###############################PERMANOVA分析###################</span></span><br><span class=\"line\"><span class=\"comment\">###############################################################</span></span><br><span class=\"line\">otu = data[,<span class=\"number\">1</span>:ncol(data)-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">dist = vegdist(otu, method = <span class=\"string\">&#x27;bray&#x27;</span>) <span class=\"comment\"># 计算距离</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分组信息</span></span><br><span class=\"line\">site = data.frame(sample = rownames(data),</span><br><span class=\"line\">                  group = data$group)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PERMANOVA分析</span></span><br><span class=\"line\"><span class=\"comment\"># 整体水平比较</span></span><br><span class=\"line\">adonis_result_dis = adonis(dist~group, site, permutations = <span class=\"number\">999</span>)</span><br><span class=\"line\">adonis_result_dis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 两两比较</span></span><br><span class=\"line\">group_name = unique(site$group)</span><br><span class=\"line\"></span><br><span class=\"line\">result = data.frame()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:(<span class=\"built_in\">length</span>(group_name) - <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (j <span class=\"keyword\">in</span> (i + <span class=\"number\">1</span>):<span class=\"built_in\">length</span>(group_name)) &#123;</span><br><span class=\"line\">    group_ij = subset(site, group %in% <span class=\"built_in\">c</span>(<span class=\"built_in\">as.character</span>(group_name[i]), <span class=\"built_in\">as.character</span>(group_name[j])))</span><br><span class=\"line\">    otu_ij = otu[group_ij$sample, ]</span><br><span class=\"line\">    adonis_result_otu_ij = adonis(otu_ij~group, group_ij, permutations = <span class=\"number\">999</span>, distance = <span class=\"string\">&#x27;bray&#x27;</span>)</span><br><span class=\"line\">    res.temp = as.data.frame(adonis_result_otu_ij$aov.tab)[<span class=\"number\">1</span>,]</span><br><span class=\"line\">    rownames(res.temp) = paste(<span class=\"built_in\">as.character</span>(group_name[i]),<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"built_in\">as.character</span>(group_name[j]))</span><br><span class=\"line\">    </span><br><span class=\"line\">    result = rbind(result,res.temp)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">head(result,nrow(result))</span><br></pre></td></tr></table></figure>\n<p>最终得到的结果有PCA分析的碎石图、PCA图、PERMANOVA整体分析的结果以及两两比较的结果。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"PCA在R语言中的实现","abbrlink":"c719a57","date":"2020-01-07T10:10:11.000Z","_content":"\n# PCA 简介\n\nPCA（*Principal Component Analysis*），即主成分分析。PCA是一种研究数据相似性或差异性的可视化方法，采取降维的思想，PCA 可以找到距离矩阵中最主要的坐标，把复杂的数据用一系列的特征值和特征向量进行排序后，选择主要的前几位特征值，来表示样品之间的关系。通过 PCA 可以观察个体或群体间的差异。PC 后面的百分数表示对应特征向量对数据的解释量，此值越大越好。\n\n<!-- more -->\n\n和PCA类似的数据降维方法还有MDS和PCoA。它们三者之间的区别联系如下图。\n\nPCA creates plots based on correlations among samples.\n\nMDS and PCoA create plots based on distances among samples.\n\n\n\n{% asset_img 1.png %}\n\n# PCA算法\n\nPCA的计算过程比较复杂，可以参考B站up主上传的YouTube上的视频（[点击观看](https://www.bilibili.com/video/av35447404?from=search&seid=1532616759578227057)）作为参考。PS：YouTube上的StatQuest系列视频及其通俗易懂，强推。\n\n# PCA在R语言中的实现\n\n（R代码下载：[点击下载](https://pan.baidu.com/s/1hLwiBLDvk2uiJBj-q1yFwg)）\n\n```R\ndata.matrix <- matrix(nrow = 100,ncol = 10) #创建一个100行10列的空矩阵\n\ncolnames(data.matrix) <- c(paste(\"wt\",1:5,sep = \"\"),paste(\"ko\",1:5,sep = \"\")) #命名矩阵的列\n\nrownames(data.matrix) <- paste(\"gene\",1:100,sep = \"\") #命名矩阵的行\n\n\\# for循环填充矩阵\n\nfor (i in 1:100) {\n\n  wt.values <- rpois(5,lambda = sample(x=10:1000,size = 1))\n\n  ko.values <- rpois(5,lambda = sample(x=10:1000,size = 1))\n\n  data.matrix[i,] <- c(wt.values,ko.values)\n\n}\n\npca <- prcomp(t(data.matrix),scale = TRUE) #t()函数的功能的将矩阵的行列位置进行置换，本例中研究的是“样本”，不是“Gene”\n\n\\#prcomp()的结果是三个值：x,sdev和rotation。三个值在后面都会用到\n\nplot(pca$x[,1],pca$x[,2])\n\npca.var <- pca$sdev^2 # 计算原始数据中的每个数据在每个PC上的比重\n\npca.var.per <- round(pca.var/sum(pca.var)*100,1) #计算每个PC占所有PC的和的比列\n\nbarplot(pca.var.per,main = \"Sreen Plot\",xlab = \"Princioal Component\",ylab = \"percent Variation\")#柱状图显示每个PC所占的比列\n```\n\n\n\n\n\n{% asset_img 2.png %}\n\n```R\nlibrary(ggplot2)#调用ggplot2()\n\npca.data <- data.frame(Sample=rownames(pca$x),X=pca$x[,1],Y=pca$x[,2])#创建数据框\n\n\\#ggplot2绘图\n\nggplot(data = pca.data,aes(x=X,y=Y,label=Sample))+\n\n  geom_text()+\n\n  xlab(paste(\"PC1 - \",pca.var.per[1],\"%\",sep = \"\"))+\n\n  ylab(paste(\"PC2 - \",pca.var.per[2],\"%\",sep = \"\"))+\n\n  theme_bw()+\n\n  ggtitle(\"My PCA Graph\")\n```\n\n\n\n\n\n{% asset_img 3.png %}\n\n```R\nloading_scores <- pca$rotation[,1] #查看PC1的loading scores\n\ngene_scores <- abs(loading_scores) #计算loading score的绝对值\n\ngene_score_ranked <- sort(gene_scores,decreasing = TRUE) #降序排列loading scores\n\ntop_10_genes <- names(gene_score_ranked[1:10])\n\ntop_10_genes\n\npca$rotation[top_10_genes,2]\n```\n\n\n\n# 代码生成\n\n在网站[https://carbon.now.sh](https://carbon.now.sh/?bg=rgba(13%2C78%2C165%2C1)&t=blackboard&wt=none&l=r&ds=true&dsyoff=20px&dsblur=68px&wc=false&wa=true&pv=48px&ph=32px&ln=false&fm=Hack&fs=17px&lh=133%&si=false&es=2x&wm=false)上生成带感的代码图片。\n\n\n\n{% asset_img 4.png %}\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/PCA在R语言中的实现.md","raw":"---\ntitle: PCA在R语言中的实现\ntags: R语言\ncategories: R语言\nabbrlink: c719a57\ndate: 2020-01-07 18:10:11\n---\n\n# PCA 简介\n\nPCA（*Principal Component Analysis*），即主成分分析。PCA是一种研究数据相似性或差异性的可视化方法，采取降维的思想，PCA 可以找到距离矩阵中最主要的坐标，把复杂的数据用一系列的特征值和特征向量进行排序后，选择主要的前几位特征值，来表示样品之间的关系。通过 PCA 可以观察个体或群体间的差异。PC 后面的百分数表示对应特征向量对数据的解释量，此值越大越好。\n\n<!-- more -->\n\n和PCA类似的数据降维方法还有MDS和PCoA。它们三者之间的区别联系如下图。\n\nPCA creates plots based on correlations among samples.\n\nMDS and PCoA create plots based on distances among samples.\n\n\n\n{% asset_img 1.png %}\n\n# PCA算法\n\nPCA的计算过程比较复杂，可以参考B站up主上传的YouTube上的视频（[点击观看](https://www.bilibili.com/video/av35447404?from=search&seid=1532616759578227057)）作为参考。PS：YouTube上的StatQuest系列视频及其通俗易懂，强推。\n\n# PCA在R语言中的实现\n\n（R代码下载：[点击下载](https://pan.baidu.com/s/1hLwiBLDvk2uiJBj-q1yFwg)）\n\n```R\ndata.matrix <- matrix(nrow = 100,ncol = 10) #创建一个100行10列的空矩阵\n\ncolnames(data.matrix) <- c(paste(\"wt\",1:5,sep = \"\"),paste(\"ko\",1:5,sep = \"\")) #命名矩阵的列\n\nrownames(data.matrix) <- paste(\"gene\",1:100,sep = \"\") #命名矩阵的行\n\n\\# for循环填充矩阵\n\nfor (i in 1:100) {\n\n  wt.values <- rpois(5,lambda = sample(x=10:1000,size = 1))\n\n  ko.values <- rpois(5,lambda = sample(x=10:1000,size = 1))\n\n  data.matrix[i,] <- c(wt.values,ko.values)\n\n}\n\npca <- prcomp(t(data.matrix),scale = TRUE) #t()函数的功能的将矩阵的行列位置进行置换，本例中研究的是“样本”，不是“Gene”\n\n\\#prcomp()的结果是三个值：x,sdev和rotation。三个值在后面都会用到\n\nplot(pca$x[,1],pca$x[,2])\n\npca.var <- pca$sdev^2 # 计算原始数据中的每个数据在每个PC上的比重\n\npca.var.per <- round(pca.var/sum(pca.var)*100,1) #计算每个PC占所有PC的和的比列\n\nbarplot(pca.var.per,main = \"Sreen Plot\",xlab = \"Princioal Component\",ylab = \"percent Variation\")#柱状图显示每个PC所占的比列\n```\n\n\n\n\n\n{% asset_img 2.png %}\n\n```R\nlibrary(ggplot2)#调用ggplot2()\n\npca.data <- data.frame(Sample=rownames(pca$x),X=pca$x[,1],Y=pca$x[,2])#创建数据框\n\n\\#ggplot2绘图\n\nggplot(data = pca.data,aes(x=X,y=Y,label=Sample))+\n\n  geom_text()+\n\n  xlab(paste(\"PC1 - \",pca.var.per[1],\"%\",sep = \"\"))+\n\n  ylab(paste(\"PC2 - \",pca.var.per[2],\"%\",sep = \"\"))+\n\n  theme_bw()+\n\n  ggtitle(\"My PCA Graph\")\n```\n\n\n\n\n\n{% asset_img 3.png %}\n\n```R\nloading_scores <- pca$rotation[,1] #查看PC1的loading scores\n\ngene_scores <- abs(loading_scores) #计算loading score的绝对值\n\ngene_score_ranked <- sort(gene_scores,decreasing = TRUE) #降序排列loading scores\n\ntop_10_genes <- names(gene_score_ranked[1:10])\n\ntop_10_genes\n\npca$rotation[top_10_genes,2]\n```\n\n\n\n# 代码生成\n\n在网站[https://carbon.now.sh](https://carbon.now.sh/?bg=rgba(13%2C78%2C165%2C1)&t=blackboard&wt=none&l=r&ds=true&dsyoff=20px&dsblur=68px&wc=false&wa=true&pv=48px&ph=32px&ln=false&fm=Hack&fs=17px&lh=133%&si=false&es=2x&wm=false)上生成带感的代码图片。\n\n\n\n{% asset_img 4.png %}\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"PCA在R语言中的实现","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwcer001fr0g0brey3eub","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"PCA-简介\"><a href=\"#PCA-简介\" class=\"headerlink\" title=\"PCA 简介\"></a>PCA 简介</h1><p>PCA（<em>Principal Component Analysis</em>），即主成分分析。PCA是一种研究数据相似性或差异性的可视化方法，采取降维的思想，PCA 可以找到距离矩阵中最主要的坐标，把复杂的数据用一系列的特征值和特征向量进行排序后，选择主要的前几位特征值，来表示样品之间的关系。通过 PCA 可以观察个体或群体间的差异。PC 后面的百分数表示对应特征向量对数据的解释量，此值越大越好。</p>\n<span id=\"more\"></span>\n\n<p>和PCA类似的数据降维方法还有MDS和PCoA。它们三者之间的区别联系如下图。</p>\n<p>PCA creates plots based on correlations among samples.</p>\n<p>MDS and PCoA create plots based on distances among samples.</p>\n\n\n<h1 id=\"PCA算法\"><a href=\"#PCA算法\" class=\"headerlink\" title=\"PCA算法\"></a>PCA算法</h1><p>PCA的计算过程比较复杂，可以参考B站up主上传的YouTube上的视频（<a href=\"https://www.bilibili.com/video/av35447404?from=search&seid=1532616759578227057\">点击观看</a>）作为参考。PS：YouTube上的StatQuest系列视频及其通俗易懂，强推。</p>\n<h1 id=\"PCA在R语言中的实现\"><a href=\"#PCA在R语言中的实现\" class=\"headerlink\" title=\"PCA在R语言中的实现\"></a>PCA在R语言中的实现</h1><p>（R代码下载：<a href=\"https://pan.baidu.com/s/1hLwiBLDvk2uiJBj-q1yFwg\">点击下载</a>）</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data.matrix &lt;- matrix(nrow = <span class=\"number\">100</span>,ncol = <span class=\"number\">10</span>) <span class=\"comment\">#创建一个100行10列的空矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\">colnames(data.matrix) &lt;- <span class=\"built_in\">c</span>(paste(<span class=\"string\">&quot;wt&quot;</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>,sep = <span class=\"string\">&quot;&quot;</span>),paste(<span class=\"string\">&quot;ko&quot;</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>,sep = <span class=\"string\">&quot;&quot;</span>)) <span class=\"comment\">#命名矩阵的列</span></span><br><span class=\"line\"></span><br><span class=\"line\">rownames(data.matrix) &lt;- paste(<span class=\"string\">&quot;gene&quot;</span>,<span class=\"number\">1</span>:<span class=\"number\">100</span>,sep = <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">#命名矩阵的行</span></span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\"># for循环填充矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  wt.values &lt;- rpois(<span class=\"number\">5</span>,lambda = sample(x=<span class=\"number\">10</span>:<span class=\"number\">1000</span>,size = <span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">  ko.values &lt;- rpois(<span class=\"number\">5</span>,lambda = sample(x=<span class=\"number\">10</span>:<span class=\"number\">1000</span>,size = <span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">  data.matrix[i,] &lt;- <span class=\"built_in\">c</span>(wt.values,ko.values)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pca &lt;- prcomp(t(data.matrix),scale = <span class=\"literal\">TRUE</span>) <span class=\"comment\">#t()函数的功能的将矩阵的行列位置进行置换，本例中研究的是“样本”，不是“Gene”</span></span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\">#prcomp()的结果是三个值：x,sdev和rotation。三个值在后面都会用到</span></span><br><span class=\"line\"></span><br><span class=\"line\">plot(pca$x[,<span class=\"number\">1</span>],pca$x[,<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">pca.var &lt;- pca$sdev^<span class=\"number\">2</span> <span class=\"comment\"># 计算原始数据中的每个数据在每个PC上的比重</span></span><br><span class=\"line\"></span><br><span class=\"line\">pca.var.per &lt;- <span class=\"built_in\">round</span>(pca.var/<span class=\"built_in\">sum</span>(pca.var)*<span class=\"number\">100</span>,<span class=\"number\">1</span>) <span class=\"comment\">#计算每个PC占所有PC的和的比列</span></span><br><span class=\"line\"></span><br><span class=\"line\">barplot(pca.var.per,main = <span class=\"string\">&quot;Sreen Plot&quot;</span>,xlab = <span class=\"string\">&quot;Princioal Component&quot;</span>,ylab = <span class=\"string\">&quot;percent Variation&quot;</span>)<span class=\"comment\">#柱状图显示每个PC所占的比列</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)<span class=\"comment\">#调用ggplot2()</span></span><br><span class=\"line\"></span><br><span class=\"line\">pca.data &lt;- data.frame(Sample=rownames(pca$x),X=pca$x[,<span class=\"number\">1</span>],Y=pca$x[,<span class=\"number\">2</span>])<span class=\"comment\">#创建数据框</span></span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\">#ggplot2绘图</span></span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(data = pca.data,aes(x=X,y=Y,label=Sample))+</span><br><span class=\"line\"></span><br><span class=\"line\">  geom_text()+</span><br><span class=\"line\"></span><br><span class=\"line\">  xlab(paste(<span class=\"string\">&quot;PC1 - &quot;</span>,pca.var.per[<span class=\"number\">1</span>],<span class=\"string\">&quot;%&quot;</span>,sep = <span class=\"string\">&quot;&quot;</span>))+</span><br><span class=\"line\"></span><br><span class=\"line\">  ylab(paste(<span class=\"string\">&quot;PC2 - &quot;</span>,pca.var.per[<span class=\"number\">2</span>],<span class=\"string\">&quot;%&quot;</span>,sep = <span class=\"string\">&quot;&quot;</span>))+</span><br><span class=\"line\"></span><br><span class=\"line\">  theme_bw()+</span><br><span class=\"line\"></span><br><span class=\"line\">  ggtitle(<span class=\"string\">&quot;My PCA Graph&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loading_scores &lt;- pca$rotation[,<span class=\"number\">1</span>] <span class=\"comment\">#查看PC1的loading scores</span></span><br><span class=\"line\"></span><br><span class=\"line\">gene_scores &lt;- <span class=\"built_in\">abs</span>(loading_scores) <span class=\"comment\">#计算loading score的绝对值</span></span><br><span class=\"line\"></span><br><span class=\"line\">gene_score_ranked &lt;- sort(gene_scores,decreasing = <span class=\"literal\">TRUE</span>) <span class=\"comment\">#降序排列loading scores</span></span><br><span class=\"line\"></span><br><span class=\"line\">top_10_genes &lt;- <span class=\"built_in\">names</span>(gene_score_ranked[<span class=\"number\">1</span>:<span class=\"number\">10</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">top_10_genes</span><br><span class=\"line\"></span><br><span class=\"line\">pca$rotation[top_10_genes,<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"代码生成\"><a href=\"#代码生成\" class=\"headerlink\" title=\"代码生成\"></a>代码生成</h1><p>在网站<a href=\"https://carbon.now.sh/?bg=rgba(13,78,165,1)&t=blackboard&wt=none&l=r&ds=true&dsyoff=20px&dsblur=68px&wc=false&wa=true&pv=48px&ph=32px&ln=false&fm=Hack&fs=17px&lh=133%25&si=false&es=2x&wm=false\">https://carbon.now.sh</a>上生成带感的代码图片。</p>\n\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"PCA-简介\"><a href=\"#PCA-简介\" class=\"headerlink\" title=\"PCA 简介\"></a>PCA 简介</h1><p>PCA（<em>Principal Component Analysis</em>），即主成分分析。PCA是一种研究数据相似性或差异性的可视化方法，采取降维的思想，PCA 可以找到距离矩阵中最主要的坐标，把复杂的数据用一系列的特征值和特征向量进行排序后，选择主要的前几位特征值，来表示样品之间的关系。通过 PCA 可以观察个体或群体间的差异。PC 后面的百分数表示对应特征向量对数据的解释量，此值越大越好。</p>","more":"<p>和PCA类似的数据降维方法还有MDS和PCoA。它们三者之间的区别联系如下图。</p>\n<p>PCA creates plots based on correlations among samples.</p>\n<p>MDS and PCoA create plots based on distances among samples.</p>\n\n\n<h1 id=\"PCA算法\"><a href=\"#PCA算法\" class=\"headerlink\" title=\"PCA算法\"></a>PCA算法</h1><p>PCA的计算过程比较复杂，可以参考B站up主上传的YouTube上的视频（<a href=\"https://www.bilibili.com/video/av35447404?from=search&seid=1532616759578227057\">点击观看</a>）作为参考。PS：YouTube上的StatQuest系列视频及其通俗易懂，强推。</p>\n<h1 id=\"PCA在R语言中的实现\"><a href=\"#PCA在R语言中的实现\" class=\"headerlink\" title=\"PCA在R语言中的实现\"></a>PCA在R语言中的实现</h1><p>（R代码下载：<a href=\"https://pan.baidu.com/s/1hLwiBLDvk2uiJBj-q1yFwg\">点击下载</a>）</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data.matrix &lt;- matrix(nrow = <span class=\"number\">100</span>,ncol = <span class=\"number\">10</span>) <span class=\"comment\">#创建一个100行10列的空矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\">colnames(data.matrix) &lt;- <span class=\"built_in\">c</span>(paste(<span class=\"string\">&quot;wt&quot;</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>,sep = <span class=\"string\">&quot;&quot;</span>),paste(<span class=\"string\">&quot;ko&quot;</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>,sep = <span class=\"string\">&quot;&quot;</span>)) <span class=\"comment\">#命名矩阵的列</span></span><br><span class=\"line\"></span><br><span class=\"line\">rownames(data.matrix) &lt;- paste(<span class=\"string\">&quot;gene&quot;</span>,<span class=\"number\">1</span>:<span class=\"number\">100</span>,sep = <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">#命名矩阵的行</span></span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\"># for循环填充矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  wt.values &lt;- rpois(<span class=\"number\">5</span>,lambda = sample(x=<span class=\"number\">10</span>:<span class=\"number\">1000</span>,size = <span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">  ko.values &lt;- rpois(<span class=\"number\">5</span>,lambda = sample(x=<span class=\"number\">10</span>:<span class=\"number\">1000</span>,size = <span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">  data.matrix[i,] &lt;- <span class=\"built_in\">c</span>(wt.values,ko.values)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pca &lt;- prcomp(t(data.matrix),scale = <span class=\"literal\">TRUE</span>) <span class=\"comment\">#t()函数的功能的将矩阵的行列位置进行置换，本例中研究的是“样本”，不是“Gene”</span></span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\">#prcomp()的结果是三个值：x,sdev和rotation。三个值在后面都会用到</span></span><br><span class=\"line\"></span><br><span class=\"line\">plot(pca$x[,<span class=\"number\">1</span>],pca$x[,<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">pca.var &lt;- pca$sdev^<span class=\"number\">2</span> <span class=\"comment\"># 计算原始数据中的每个数据在每个PC上的比重</span></span><br><span class=\"line\"></span><br><span class=\"line\">pca.var.per &lt;- <span class=\"built_in\">round</span>(pca.var/<span class=\"built_in\">sum</span>(pca.var)*<span class=\"number\">100</span>,<span class=\"number\">1</span>) <span class=\"comment\">#计算每个PC占所有PC的和的比列</span></span><br><span class=\"line\"></span><br><span class=\"line\">barplot(pca.var.per,main = <span class=\"string\">&quot;Sreen Plot&quot;</span>,xlab = <span class=\"string\">&quot;Princioal Component&quot;</span>,ylab = <span class=\"string\">&quot;percent Variation&quot;</span>)<span class=\"comment\">#柱状图显示每个PC所占的比列</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(ggplot2)<span class=\"comment\">#调用ggplot2()</span></span><br><span class=\"line\"></span><br><span class=\"line\">pca.data &lt;- data.frame(Sample=rownames(pca$x),X=pca$x[,<span class=\"number\">1</span>],Y=pca$x[,<span class=\"number\">2</span>])<span class=\"comment\">#创建数据框</span></span><br><span class=\"line\"></span><br><span class=\"line\">\\<span class=\"comment\">#ggplot2绘图</span></span><br><span class=\"line\"></span><br><span class=\"line\">ggplot(data = pca.data,aes(x=X,y=Y,label=Sample))+</span><br><span class=\"line\"></span><br><span class=\"line\">  geom_text()+</span><br><span class=\"line\"></span><br><span class=\"line\">  xlab(paste(<span class=\"string\">&quot;PC1 - &quot;</span>,pca.var.per[<span class=\"number\">1</span>],<span class=\"string\">&quot;%&quot;</span>,sep = <span class=\"string\">&quot;&quot;</span>))+</span><br><span class=\"line\"></span><br><span class=\"line\">  ylab(paste(<span class=\"string\">&quot;PC2 - &quot;</span>,pca.var.per[<span class=\"number\">2</span>],<span class=\"string\">&quot;%&quot;</span>,sep = <span class=\"string\">&quot;&quot;</span>))+</span><br><span class=\"line\"></span><br><span class=\"line\">  theme_bw()+</span><br><span class=\"line\"></span><br><span class=\"line\">  ggtitle(<span class=\"string\">&quot;My PCA Graph&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loading_scores &lt;- pca$rotation[,<span class=\"number\">1</span>] <span class=\"comment\">#查看PC1的loading scores</span></span><br><span class=\"line\"></span><br><span class=\"line\">gene_scores &lt;- <span class=\"built_in\">abs</span>(loading_scores) <span class=\"comment\">#计算loading score的绝对值</span></span><br><span class=\"line\"></span><br><span class=\"line\">gene_score_ranked &lt;- sort(gene_scores,decreasing = <span class=\"literal\">TRUE</span>) <span class=\"comment\">#降序排列loading scores</span></span><br><span class=\"line\"></span><br><span class=\"line\">top_10_genes &lt;- <span class=\"built_in\">names</span>(gene_score_ranked[<span class=\"number\">1</span>:<span class=\"number\">10</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">top_10_genes</span><br><span class=\"line\"></span><br><span class=\"line\">pca$rotation[top_10_genes,<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"代码生成\"><a href=\"#代码生成\" class=\"headerlink\" title=\"代码生成\"></a>代码生成</h1><p>在网站<a href=\"https://carbon.now.sh/?bg=rgba(13,78,165,1)&t=blackboard&wt=none&l=r&ds=true&dsyoff=20px&dsblur=68px&wc=false&wa=true&pv=48px&ph=32px&ln=false&fm=Hack&fs=17px&lh=133%25&si=false&es=2x&wm=false\">https://carbon.now.sh</a>上生成带感的代码图片。</p>\n\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"Python 爬取知乎问题 即将步入研究生，有什么忠告？ 所有回答后将数据写入 Excel 并生成.html 文件","abbrlink":"18367565","date":"2020-01-07T10:53:40.000Z","_content":"\n学Python爬虫一周多，今天练练手，爬取了一个自己感兴趣的知乎话题[即将步入研究生，有什么忠告？](https://www.zhihu.com/question/64270965)。一共是272个答案，本次爬取的目的是爬取到所有回答者的昵称、个性签名、赞同数以及具体的内容。\n\n<!-- more -->\n\n先检查一波：\n{% asset_img 1.png %}\n我天真地以为全部都在“Elements”这个页面里面，DuangDuangDuang一阵代码。呵呵，太天真了。\n既然在“Elements”没有，那就一定是带参数请求数据的。\n那看看“Network”下的“XHR”，每次下拉出现新的内容，总是会有个“answers?...”的东西，直觉告诉我应该就是这个鬼东西了。看看吧：\n{% asset_img 2.png %}\n\n{% asset_img 3.png %}\n\n{% asset_img 4.png %}\n\n**完犊子了，完全没规律啊！！！！！！**\n这种大网站是不可能没有规律的，再看看、、、、、、\n\n{% asset_img 5.png %}\n\n{% asset_img 6.png %}\n\n\n\n果然，第3个“answers?...”开始就有规律了，“limit”始终是5，“offset”依次叠加5。\n针对前两个，两次代码，之后剩下的，一个大的for循环搞定（前两个是可以不用for循环的，但是为了后面的for循环，就索性都用了）。\n\n代码如下：\n```\n# 载入相应的模块\nimport time\nimport requests\nimport openpyxl\n\ntime1 = time.time()\n\nlists = []\nlists.append(['answer_kname','headline','voteup_count','content'])\n\n##################\nfor i in range(0,1,1):\n    url = 'https://www.zhihu.com/api/v4/questions/64270965/answers'\n    headers = {\n        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'\n    }\n    params = {\n        'include': 'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics',\n        'offset': str(i),\n        'limit': '3',\n        'sort_by': 'default',\n        'platform': 'desktop'\n    }\n    res = requests.get(url, headers=headers, params=params)\n    res_json = res.json()\n    items = res_json['data']\n    for item in items:\n        answer_kname = item['author']['name']\n        headline = item['author']['headline']\n        content = item['content']\n        voteup_count = item['voteup_count']\n\n        lists.append([answer_kname,headline,voteup_count,content])\n\n##################\nfor i in range(3,3,1):\n    url = 'https://www.zhihu.com/api/v4/questions/64270965/answers'\n    headers = {\n        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'\n    }\n    params = {\n        'include': 'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics',\n        'offset': str(i),\n        'limit': '5',\n        'sort_by': 'default',\n        'platform': 'desktop'\n    }\n    res = requests.get(url, headers=headers, params=params)\n    res_json = res.json()\n    items = res_json['data']\n    for item in items:\n        answer_kname = item['author']['name']\n        headline = item['author']['headline']\n        content = item['content']\n        voteup_count = item['voteup_count']\n\n        lists.append([answer_kname,headline,voteup_count,content])\n\n##################\nfor i in range(8,278,5):\n    url = 'https://www.zhihu.com/api/v4/questions/64270965/answers'\n    headers = {\n        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'\n    }\n    params = {\n        'include': 'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics',\n        'offset': str(i),\n        'limit': '5',\n        'sort_by': 'default',\n        'platform': 'desktop'\n    }\n    res = requests.get(url, headers=headers, params=params)\n    res_json = res.json()\n    items = res_json['data']\n    for item in items:\n        answer_kname = item['author']['name']\n        headline = item['author']['headline']\n        content = item['content']\n        voteup_count = item['voteup_count']\n\n        lists.append([answer_kname,headline,voteup_count,content])\n\n\n##################\nfile = openpyxl.Workbook()\nsheet = file.active\nsheet.title = 'answers'\nfor i in lists:\n    sheet.append(i)\n\nfile.save('即将步入研究生，有什么忠告.xlsx')\n\n##################\nfile_html = open('知乎：即将步入研究生，有什么忠告.html','w',encoding= 'utf-8')\n\nfor i in lists:\n    file_html.write(i[3])\nfile_html.close()\n\n##################\ntime2 = time.time()\nprint('爬虫耗时：%.3f'%(float(time2-time1)),'秒')\n\n```\n\n附件：\n1. [代码](https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.py)\n2. [即将步入研究生，有什么忠告.xlsx](https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.xlsx)\n3. [知乎：即将步入研究生，有什么忠告.html](https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E7%9F%A5%E4%B9%8E%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.html)\n\n---\n\n💌lixiang117423@gmail.com\n\n💌lixiang117423@foxmail.com","source":"_posts/Python-爬取知乎问题-即将步入研究生，有什么忠告？-所有回答后将数据写入-Excel-并生成-html-文件.md","raw":"---\ntitle: Python 爬取知乎问题 即将步入研究生，有什么忠告？ 所有回答后将数据写入 Excel 并生成.html 文件\ntags: Python\ncategories: Python\nabbrlink: '18367565'\ndate: 2020-01-07 18:53:40\n---\n\n学Python爬虫一周多，今天练练手，爬取了一个自己感兴趣的知乎话题[即将步入研究生，有什么忠告？](https://www.zhihu.com/question/64270965)。一共是272个答案，本次爬取的目的是爬取到所有回答者的昵称、个性签名、赞同数以及具体的内容。\n\n<!-- more -->\n\n先检查一波：\n{% asset_img 1.png %}\n我天真地以为全部都在“Elements”这个页面里面，DuangDuangDuang一阵代码。呵呵，太天真了。\n既然在“Elements”没有，那就一定是带参数请求数据的。\n那看看“Network”下的“XHR”，每次下拉出现新的内容，总是会有个“answers?...”的东西，直觉告诉我应该就是这个鬼东西了。看看吧：\n{% asset_img 2.png %}\n\n{% asset_img 3.png %}\n\n{% asset_img 4.png %}\n\n**完犊子了，完全没规律啊！！！！！！**\n这种大网站是不可能没有规律的，再看看、、、、、、\n\n{% asset_img 5.png %}\n\n{% asset_img 6.png %}\n\n\n\n果然，第3个“answers?...”开始就有规律了，“limit”始终是5，“offset”依次叠加5。\n针对前两个，两次代码，之后剩下的，一个大的for循环搞定（前两个是可以不用for循环的，但是为了后面的for循环，就索性都用了）。\n\n代码如下：\n```\n# 载入相应的模块\nimport time\nimport requests\nimport openpyxl\n\ntime1 = time.time()\n\nlists = []\nlists.append(['answer_kname','headline','voteup_count','content'])\n\n##################\nfor i in range(0,1,1):\n    url = 'https://www.zhihu.com/api/v4/questions/64270965/answers'\n    headers = {\n        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'\n    }\n    params = {\n        'include': 'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics',\n        'offset': str(i),\n        'limit': '3',\n        'sort_by': 'default',\n        'platform': 'desktop'\n    }\n    res = requests.get(url, headers=headers, params=params)\n    res_json = res.json()\n    items = res_json['data']\n    for item in items:\n        answer_kname = item['author']['name']\n        headline = item['author']['headline']\n        content = item['content']\n        voteup_count = item['voteup_count']\n\n        lists.append([answer_kname,headline,voteup_count,content])\n\n##################\nfor i in range(3,3,1):\n    url = 'https://www.zhihu.com/api/v4/questions/64270965/answers'\n    headers = {\n        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'\n    }\n    params = {\n        'include': 'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics',\n        'offset': str(i),\n        'limit': '5',\n        'sort_by': 'default',\n        'platform': 'desktop'\n    }\n    res = requests.get(url, headers=headers, params=params)\n    res_json = res.json()\n    items = res_json['data']\n    for item in items:\n        answer_kname = item['author']['name']\n        headline = item['author']['headline']\n        content = item['content']\n        voteup_count = item['voteup_count']\n\n        lists.append([answer_kname,headline,voteup_count,content])\n\n##################\nfor i in range(8,278,5):\n    url = 'https://www.zhihu.com/api/v4/questions/64270965/answers'\n    headers = {\n        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'\n    }\n    params = {\n        'include': 'data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics',\n        'offset': str(i),\n        'limit': '5',\n        'sort_by': 'default',\n        'platform': 'desktop'\n    }\n    res = requests.get(url, headers=headers, params=params)\n    res_json = res.json()\n    items = res_json['data']\n    for item in items:\n        answer_kname = item['author']['name']\n        headline = item['author']['headline']\n        content = item['content']\n        voteup_count = item['voteup_count']\n\n        lists.append([answer_kname,headline,voteup_count,content])\n\n\n##################\nfile = openpyxl.Workbook()\nsheet = file.active\nsheet.title = 'answers'\nfor i in lists:\n    sheet.append(i)\n\nfile.save('即将步入研究生，有什么忠告.xlsx')\n\n##################\nfile_html = open('知乎：即将步入研究生，有什么忠告.html','w',encoding= 'utf-8')\n\nfor i in lists:\n    file_html.write(i[3])\nfile_html.close()\n\n##################\ntime2 = time.time()\nprint('爬虫耗时：%.3f'%(float(time2-time1)),'秒')\n\n```\n\n附件：\n1. [代码](https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.py)\n2. [即将步入研究生，有什么忠告.xlsx](https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.xlsx)\n3. [知乎：即将步入研究生，有什么忠告.html](https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E7%9F%A5%E4%B9%8E%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.html)\n\n---\n\n💌lixiang117423@gmail.com\n\n💌lixiang117423@foxmail.com","slug":"Python-爬取知乎问题-即将步入研究生，有什么忠告？-所有回答后将数据写入-Excel-并生成-html-文件","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwcer001hr0g0414fgc2w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>学Python爬虫一周多，今天练练手，爬取了一个自己感兴趣的知乎话题<a href=\"https://www.zhihu.com/question/64270965\">即将步入研究生，有什么忠告？</a>。一共是272个答案，本次爬取的目的是爬取到所有回答者的昵称、个性签名、赞同数以及具体的内容。</p>\n<span id=\"more\"></span>\n\n<p>先检查一波：</p>\n\n<p>我天真地以为全部都在“Elements”这个页面里面，DuangDuangDuang一阵代码。呵呵，太天真了。<br>既然在“Elements”没有，那就一定是带参数请求数据的。<br>那看看“Network”下的“XHR”，每次下拉出现新的内容，总是会有个“answers?…”的东西，直觉告诉我应该就是这个鬼东西了。看看吧：</p>\n\n\n\n\n\n\n<p><strong>完犊子了，完全没规律啊！！！！！！</strong><br>这种大网站是不可能没有规律的，再看看、、、、、、</p>\n\n\n\n\n\n\n<p>果然，第3个“answers?…”开始就有规律了，“limit”始终是5，“offset”依次叠加5。<br>针对前两个，两次代码，之后剩下的，一个大的for循环搞定（前两个是可以不用for循环的，但是为了后面的for循环，就索性都用了）。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 载入相应的模块</span><br><span class=\"line\">import time</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import openpyxl</span><br><span class=\"line\"></span><br><span class=\"line\">time1 = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">lists = []</span><br><span class=\"line\">lists.append([&#x27;answer_kname&#x27;,&#x27;headline&#x27;,&#x27;voteup_count&#x27;,&#x27;content&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">for i in range(0,1,1):</span><br><span class=\"line\">    url = &#x27;https://www.zhihu.com/api/v4/questions/64270965/answers&#x27;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        &#x27;include&#x27;: &#x27;data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics&#x27;,</span><br><span class=\"line\">        &#x27;offset&#x27;: str(i),</span><br><span class=\"line\">        &#x27;limit&#x27;: &#x27;3&#x27;,</span><br><span class=\"line\">        &#x27;sort_by&#x27;: &#x27;default&#x27;,</span><br><span class=\"line\">        &#x27;platform&#x27;: &#x27;desktop&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url, headers=headers, params=params)</span><br><span class=\"line\">    res_json = res.json()</span><br><span class=\"line\">    items = res_json[&#x27;data&#x27;]</span><br><span class=\"line\">    for item in items:</span><br><span class=\"line\">        answer_kname = item[&#x27;author&#x27;][&#x27;name&#x27;]</span><br><span class=\"line\">        headline = item[&#x27;author&#x27;][&#x27;headline&#x27;]</span><br><span class=\"line\">        content = item[&#x27;content&#x27;]</span><br><span class=\"line\">        voteup_count = item[&#x27;voteup_count&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">        lists.append([answer_kname,headline,voteup_count,content])</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">for i in range(3,3,1):</span><br><span class=\"line\">    url = &#x27;https://www.zhihu.com/api/v4/questions/64270965/answers&#x27;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        &#x27;include&#x27;: &#x27;data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics&#x27;,</span><br><span class=\"line\">        &#x27;offset&#x27;: str(i),</span><br><span class=\"line\">        &#x27;limit&#x27;: &#x27;5&#x27;,</span><br><span class=\"line\">        &#x27;sort_by&#x27;: &#x27;default&#x27;,</span><br><span class=\"line\">        &#x27;platform&#x27;: &#x27;desktop&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url, headers=headers, params=params)</span><br><span class=\"line\">    res_json = res.json()</span><br><span class=\"line\">    items = res_json[&#x27;data&#x27;]</span><br><span class=\"line\">    for item in items:</span><br><span class=\"line\">        answer_kname = item[&#x27;author&#x27;][&#x27;name&#x27;]</span><br><span class=\"line\">        headline = item[&#x27;author&#x27;][&#x27;headline&#x27;]</span><br><span class=\"line\">        content = item[&#x27;content&#x27;]</span><br><span class=\"line\">        voteup_count = item[&#x27;voteup_count&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">        lists.append([answer_kname,headline,voteup_count,content])</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">for i in range(8,278,5):</span><br><span class=\"line\">    url = &#x27;https://www.zhihu.com/api/v4/questions/64270965/answers&#x27;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        &#x27;include&#x27;: &#x27;data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics&#x27;,</span><br><span class=\"line\">        &#x27;offset&#x27;: str(i),</span><br><span class=\"line\">        &#x27;limit&#x27;: &#x27;5&#x27;,</span><br><span class=\"line\">        &#x27;sort_by&#x27;: &#x27;default&#x27;,</span><br><span class=\"line\">        &#x27;platform&#x27;: &#x27;desktop&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url, headers=headers, params=params)</span><br><span class=\"line\">    res_json = res.json()</span><br><span class=\"line\">    items = res_json[&#x27;data&#x27;]</span><br><span class=\"line\">    for item in items:</span><br><span class=\"line\">        answer_kname = item[&#x27;author&#x27;][&#x27;name&#x27;]</span><br><span class=\"line\">        headline = item[&#x27;author&#x27;][&#x27;headline&#x27;]</span><br><span class=\"line\">        content = item[&#x27;content&#x27;]</span><br><span class=\"line\">        voteup_count = item[&#x27;voteup_count&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">        lists.append([answer_kname,headline,voteup_count,content])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">file = openpyxl.Workbook()</span><br><span class=\"line\">sheet = file.active</span><br><span class=\"line\">sheet.title = &#x27;answers&#x27;</span><br><span class=\"line\">for i in lists:</span><br><span class=\"line\">    sheet.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">file.save(&#x27;即将步入研究生，有什么忠告.xlsx&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">file_html = open(&#x27;知乎：即将步入研究生，有什么忠告.html&#x27;,&#x27;w&#x27;,encoding= &#x27;utf-8&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in lists:</span><br><span class=\"line\">    file_html.write(i[3])</span><br><span class=\"line\">file_html.close()</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">time2 = time.time()</span><br><span class=\"line\">print(&#x27;爬虫耗时：%.3f&#x27;%(float(time2-time1)),&#x27;秒&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>附件：</p>\n<ol>\n<li><a href=\"https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.py\">代码</a></li>\n<li><a href=\"https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.xlsx\">即将步入研究生，有什么忠告.xlsx</a></li>\n<li><a href=\"https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E7%9F%A5%E4%B9%8E%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.html\">知乎：即将步入研究生，有什么忠告.html</a></li>\n</ol>\n<hr>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>学Python爬虫一周多，今天练练手，爬取了一个自己感兴趣的知乎话题<a href=\"https://www.zhihu.com/question/64270965\">即将步入研究生，有什么忠告？</a>。一共是272个答案，本次爬取的目的是爬取到所有回答者的昵称、个性签名、赞同数以及具体的内容。</p>","more":"<p>先检查一波：</p>\n\n<p>我天真地以为全部都在“Elements”这个页面里面，DuangDuangDuang一阵代码。呵呵，太天真了。<br>既然在“Elements”没有，那就一定是带参数请求数据的。<br>那看看“Network”下的“XHR”，每次下拉出现新的内容，总是会有个“answers?…”的东西，直觉告诉我应该就是这个鬼东西了。看看吧：</p>\n\n\n\n\n\n\n<p><strong>完犊子了，完全没规律啊！！！！！！</strong><br>这种大网站是不可能没有规律的，再看看、、、、、、</p>\n\n\n\n\n\n\n<p>果然，第3个“answers?…”开始就有规律了，“limit”始终是5，“offset”依次叠加5。<br>针对前两个，两次代码，之后剩下的，一个大的for循环搞定（前两个是可以不用for循环的，但是为了后面的for循环，就索性都用了）。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 载入相应的模块</span><br><span class=\"line\">import time</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import openpyxl</span><br><span class=\"line\"></span><br><span class=\"line\">time1 = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">lists = []</span><br><span class=\"line\">lists.append([&#x27;answer_kname&#x27;,&#x27;headline&#x27;,&#x27;voteup_count&#x27;,&#x27;content&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">for i in range(0,1,1):</span><br><span class=\"line\">    url = &#x27;https://www.zhihu.com/api/v4/questions/64270965/answers&#x27;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        &#x27;include&#x27;: &#x27;data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics&#x27;,</span><br><span class=\"line\">        &#x27;offset&#x27;: str(i),</span><br><span class=\"line\">        &#x27;limit&#x27;: &#x27;3&#x27;,</span><br><span class=\"line\">        &#x27;sort_by&#x27;: &#x27;default&#x27;,</span><br><span class=\"line\">        &#x27;platform&#x27;: &#x27;desktop&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url, headers=headers, params=params)</span><br><span class=\"line\">    res_json = res.json()</span><br><span class=\"line\">    items = res_json[&#x27;data&#x27;]</span><br><span class=\"line\">    for item in items:</span><br><span class=\"line\">        answer_kname = item[&#x27;author&#x27;][&#x27;name&#x27;]</span><br><span class=\"line\">        headline = item[&#x27;author&#x27;][&#x27;headline&#x27;]</span><br><span class=\"line\">        content = item[&#x27;content&#x27;]</span><br><span class=\"line\">        voteup_count = item[&#x27;voteup_count&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">        lists.append([answer_kname,headline,voteup_count,content])</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">for i in range(3,3,1):</span><br><span class=\"line\">    url = &#x27;https://www.zhihu.com/api/v4/questions/64270965/answers&#x27;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        &#x27;include&#x27;: &#x27;data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics&#x27;,</span><br><span class=\"line\">        &#x27;offset&#x27;: str(i),</span><br><span class=\"line\">        &#x27;limit&#x27;: &#x27;5&#x27;,</span><br><span class=\"line\">        &#x27;sort_by&#x27;: &#x27;default&#x27;,</span><br><span class=\"line\">        &#x27;platform&#x27;: &#x27;desktop&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url, headers=headers, params=params)</span><br><span class=\"line\">    res_json = res.json()</span><br><span class=\"line\">    items = res_json[&#x27;data&#x27;]</span><br><span class=\"line\">    for item in items:</span><br><span class=\"line\">        answer_kname = item[&#x27;author&#x27;][&#x27;name&#x27;]</span><br><span class=\"line\">        headline = item[&#x27;author&#x27;][&#x27;headline&#x27;]</span><br><span class=\"line\">        content = item[&#x27;content&#x27;]</span><br><span class=\"line\">        voteup_count = item[&#x27;voteup_count&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">        lists.append([answer_kname,headline,voteup_count,content])</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">for i in range(8,278,5):</span><br><span class=\"line\">    url = &#x27;https://www.zhihu.com/api/v4/questions/64270965/answers&#x27;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        &#x27;user-agent&#x27;: &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        &#x27;include&#x27;: &#x27;data[*].is_normal,admin_closed_comment,reward_info,is_collapsed,annotation_action,annotation_detail,collapse_reason,is_sticky,collapsed_by,suggest_edit,comment_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,created_time,updated_time,review_info,relevant_info,question,excerpt,relationship.is_authorized,is_author,voting,is_thanked,is_nothelp,is_labeled,is_recognized,paid_info,paid_info_content;data[*].mark_infos[*].url;data[*].author.follower_count,badge[*].topics&#x27;,</span><br><span class=\"line\">        &#x27;offset&#x27;: str(i),</span><br><span class=\"line\">        &#x27;limit&#x27;: &#x27;5&#x27;,</span><br><span class=\"line\">        &#x27;sort_by&#x27;: &#x27;default&#x27;,</span><br><span class=\"line\">        &#x27;platform&#x27;: &#x27;desktop&#x27;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res = requests.get(url, headers=headers, params=params)</span><br><span class=\"line\">    res_json = res.json()</span><br><span class=\"line\">    items = res_json[&#x27;data&#x27;]</span><br><span class=\"line\">    for item in items:</span><br><span class=\"line\">        answer_kname = item[&#x27;author&#x27;][&#x27;name&#x27;]</span><br><span class=\"line\">        headline = item[&#x27;author&#x27;][&#x27;headline&#x27;]</span><br><span class=\"line\">        content = item[&#x27;content&#x27;]</span><br><span class=\"line\">        voteup_count = item[&#x27;voteup_count&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">        lists.append([answer_kname,headline,voteup_count,content])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">file = openpyxl.Workbook()</span><br><span class=\"line\">sheet = file.active</span><br><span class=\"line\">sheet.title = &#x27;answers&#x27;</span><br><span class=\"line\">for i in lists:</span><br><span class=\"line\">    sheet.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">file.save(&#x27;即将步入研究生，有什么忠告.xlsx&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">file_html = open(&#x27;知乎：即将步入研究生，有什么忠告.html&#x27;,&#x27;w&#x27;,encoding= &#x27;utf-8&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in lists:</span><br><span class=\"line\">    file_html.write(i[3])</span><br><span class=\"line\">file_html.close()</span><br><span class=\"line\"></span><br><span class=\"line\">##################</span><br><span class=\"line\">time2 = time.time()</span><br><span class=\"line\">print(&#x27;爬虫耗时：%.3f&#x27;%(float(time2-time1)),&#x27;秒&#x27;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>附件：</p>\n<ol>\n<li><a href=\"https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.py\">代码</a></li>\n<li><a href=\"https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.xlsx\">即将步入研究生，有什么忠告.xlsx</a></li>\n<li><a href=\"https://github.com/GitHub-LiXiang/Python/blob/master/%E7%88%AC%E8%99%AB/%E7%9F%A5%E4%B9%8E%E8%AF%9D%E9%A2%98%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A/%E7%9F%A5%E4%B9%8E%EF%BC%9A%E5%8D%B3%E5%B0%86%E6%AD%A5%E5%85%A5%E7%A0%94%E7%A9%B6%E7%94%9F%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%BF%A0%E5%91%8A.html\">知乎：即将步入研究生，有什么忠告.html</a></li>\n</ol>\n<hr>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>"},{"title":"Python英文文献爬虫","abbrlink":"926c2b5a","date":"2020-01-12T07:27:11.000Z","_content":"\n之前写过用Python爬取中文文献，但是更多时候需要的是英文文献，就写了个英文的爬虫代码。\n\n<!-- more -->\n\n```python\nimport os\nimport random\nimport openpyxl\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\ntime_start = time.time()\nheader = {\n        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36'\n}\n\nuser_key_words = input('请输入你的关键词(空格分隔)：')\nuser_key_words = user_key_words.replace(' ','%20')\nurl_1 = 'http://xueshu.baidu.com/s?wd='\nurl_2 = '&tn=SE_baiduxueshu_c1gjeupa&ie=utf-8&sc_f_para=sc_tasktype%3D%7BfirstSimpleSearch%7D&sc_hit=1'\n\nurl_0 = url_1 + user_key_words +  '&pn=' + str(0) + url_2\nres = requests.get(url_0, headers=header)\nsoup = BeautifulSoup(res.text, 'html.parser')\nnum = re.findall('\\d{1,20}', soup.find('span',class_='nums').text.replace(',',''))[0]\n\nprint('找到约%s条相关结果'%(num))\n\nfor i in range(0,int(num),10):\n    print(i)\n    url = url_1 + user_key_words +  '&pn=' + str(i) + url_2\n    res = requests.get(url, headers=header)\n\n    title_link_result = openpyxl.Workbook()\n    sheet = title_link_result.active\n    sheet.title = '百度学术文献爬取'\n    col_name = ['title','key_words','year','ref_wr','author','abstract','doi','doi_url','journal']\n    sheet.append(col_name)\n\n    if res.status_code == 200:\n        soup = BeautifulSoup(res.text, 'html.parser')\n        items = soup.find_all('div', class_='sc_content')\n        for item in items:\n            url_temp = item.find('h3').find('a')['href']\n            res_final = requests.get(url_temp, headers=header)\n            soup_final = BeautifulSoup(res_final.text, 'html.parser')\n            main_info = soup_final.find('div', class_='main-info')\n            try:\n                title = main_info.find('h3').text.replace('\\n','')\n                title = re.sub(' ','', title, 8)\n            except AttributeError:\n                title = 'None'\n            try:\n                author = main_info.find('div', class_='author_wr').find('p',class_='author_text').find('a').text\n            except AttributeError:\n                author = 'None'\n            \n            try:\n                abstract = main_info.find('div',class_='abstract_wr').find('p',class_='abstract').text\n            except AttributeError:\n                abstract = 'None'\n\n            try:\n                key_temp = main_info.find('div',class_='kw_wr').find('p',class_='kw_main').find_all('a')\n                key_words = ''\n                for key in key_temp:\n                    key_words = key_words + ',' + key.text\n            except AttributeError:\n                key_words = 'None'\n\n            try:\n                doi = main_info.find('div',class_='doi_wr').find('p', class_='kw_main').text.replace(' ','')\n            except AttributeError:\n                doi = 'None'\n\n            doi_url = (\"https://doi.org/\" + doi).replace('\\n','')\n\n            try:\n                ref_wr = main_info.find('div', class_='ref_wr').find('a',class_='sc_cite_cont').text.replace(' ','')\n            except AttributeError:\n                ref_wr = 'None'\n\n            try:\n                year = main_info.find('div', class_='year_wr').find('p',class_='kw_main').text.replace(' ','')\n            except AttributeError:\n                yeay = 'None'\n\n            try:\n                journal = soup_final.find('div',class_='dtl_r_item').find('div', class_='container_right').find('a', class_='journal_title').text.replace('《','').replace('》','')\n            except AttributeError:\n                journal = \"None\"\n        \n            sheet.append([title,key_words,year,ref_wr,author,abstract,doi,doi_url,journal])\n        file_name = 'D:\\!01\\git\\Python\\Python爬取英文文献\\\\results\\第'+str((i+10)/10).replace('.0','') + '页.xlsx'\n        title_link_result.save(file_name)\n\n    else:\n        print('Something is wrong! Please check!')\n\n    time_end = time.time()\n    \n    print('已经完成第'+str((i+10)/10).replace('.0','') + '页爬取，耗时：%s'%(time_end-time_start) + '，休息10s继续爬取！')\n    time.sleep(10)\n```\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/Python英文文献爬虫.md","raw":"---\ntitle: Python英文文献爬虫\ntags: Python\ncategories: Python\nabbrlink: 926c2b5a\ndate: 2020-01-12 15:27:11\n---\n\n之前写过用Python爬取中文文献，但是更多时候需要的是英文文献，就写了个英文的爬虫代码。\n\n<!-- more -->\n\n```python\nimport os\nimport random\nimport openpyxl\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\ntime_start = time.time()\nheader = {\n        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36'\n}\n\nuser_key_words = input('请输入你的关键词(空格分隔)：')\nuser_key_words = user_key_words.replace(' ','%20')\nurl_1 = 'http://xueshu.baidu.com/s?wd='\nurl_2 = '&tn=SE_baiduxueshu_c1gjeupa&ie=utf-8&sc_f_para=sc_tasktype%3D%7BfirstSimpleSearch%7D&sc_hit=1'\n\nurl_0 = url_1 + user_key_words +  '&pn=' + str(0) + url_2\nres = requests.get(url_0, headers=header)\nsoup = BeautifulSoup(res.text, 'html.parser')\nnum = re.findall('\\d{1,20}', soup.find('span',class_='nums').text.replace(',',''))[0]\n\nprint('找到约%s条相关结果'%(num))\n\nfor i in range(0,int(num),10):\n    print(i)\n    url = url_1 + user_key_words +  '&pn=' + str(i) + url_2\n    res = requests.get(url, headers=header)\n\n    title_link_result = openpyxl.Workbook()\n    sheet = title_link_result.active\n    sheet.title = '百度学术文献爬取'\n    col_name = ['title','key_words','year','ref_wr','author','abstract','doi','doi_url','journal']\n    sheet.append(col_name)\n\n    if res.status_code == 200:\n        soup = BeautifulSoup(res.text, 'html.parser')\n        items = soup.find_all('div', class_='sc_content')\n        for item in items:\n            url_temp = item.find('h3').find('a')['href']\n            res_final = requests.get(url_temp, headers=header)\n            soup_final = BeautifulSoup(res_final.text, 'html.parser')\n            main_info = soup_final.find('div', class_='main-info')\n            try:\n                title = main_info.find('h3').text.replace('\\n','')\n                title = re.sub(' ','', title, 8)\n            except AttributeError:\n                title = 'None'\n            try:\n                author = main_info.find('div', class_='author_wr').find('p',class_='author_text').find('a').text\n            except AttributeError:\n                author = 'None'\n            \n            try:\n                abstract = main_info.find('div',class_='abstract_wr').find('p',class_='abstract').text\n            except AttributeError:\n                abstract = 'None'\n\n            try:\n                key_temp = main_info.find('div',class_='kw_wr').find('p',class_='kw_main').find_all('a')\n                key_words = ''\n                for key in key_temp:\n                    key_words = key_words + ',' + key.text\n            except AttributeError:\n                key_words = 'None'\n\n            try:\n                doi = main_info.find('div',class_='doi_wr').find('p', class_='kw_main').text.replace(' ','')\n            except AttributeError:\n                doi = 'None'\n\n            doi_url = (\"https://doi.org/\" + doi).replace('\\n','')\n\n            try:\n                ref_wr = main_info.find('div', class_='ref_wr').find('a',class_='sc_cite_cont').text.replace(' ','')\n            except AttributeError:\n                ref_wr = 'None'\n\n            try:\n                year = main_info.find('div', class_='year_wr').find('p',class_='kw_main').text.replace(' ','')\n            except AttributeError:\n                yeay = 'None'\n\n            try:\n                journal = soup_final.find('div',class_='dtl_r_item').find('div', class_='container_right').find('a', class_='journal_title').text.replace('《','').replace('》','')\n            except AttributeError:\n                journal = \"None\"\n        \n            sheet.append([title,key_words,year,ref_wr,author,abstract,doi,doi_url,journal])\n        file_name = 'D:\\!01\\git\\Python\\Python爬取英文文献\\\\results\\第'+str((i+10)/10).replace('.0','') + '页.xlsx'\n        title_link_result.save(file_name)\n\n    else:\n        print('Something is wrong! Please check!')\n\n    time_end = time.time()\n    \n    print('已经完成第'+str((i+10)/10).replace('.0','') + '页爬取，耗时：%s'%(time_end-time_start) + '，休息10s继续爬取！')\n    time.sleep(10)\n```\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"Python英文文献爬虫","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwces001kr0g08lf73qc6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>之前写过用Python爬取中文文献，但是更多时候需要的是英文文献，就写了个英文的爬虫代码。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> openpyxl</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">time_start = time.time()</span><br><span class=\"line\">header = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;user-agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">user_key_words = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你的关键词(空格分隔)：&#x27;</span>)</span><br><span class=\"line\">user_key_words = user_key_words.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;%20&#x27;</span>)</span><br><span class=\"line\">url_1 = <span class=\"string\">&#x27;http://xueshu.baidu.com/s?wd=&#x27;</span></span><br><span class=\"line\">url_2 = <span class=\"string\">&#x27;&amp;tn=SE_baiduxueshu_c1gjeupa&amp;ie=utf-8&amp;sc_f_para=sc_tasktype%3D%7BfirstSimpleSearch%7D&amp;sc_hit=1&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">url_0 = url_1 + user_key_words +  <span class=\"string\">&#x27;&amp;pn=&#x27;</span> + <span class=\"built_in\">str</span>(<span class=\"number\">0</span>) + url_2</span><br><span class=\"line\">res = requests.get(url_0, headers=header)</span><br><span class=\"line\">soup = BeautifulSoup(res.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">num = re.findall(<span class=\"string\">&#x27;\\d&#123;1,20&#125;&#x27;</span>, soup.find(<span class=\"string\">&#x27;span&#x27;</span>,class_=<span class=\"string\">&#x27;nums&#x27;</span>).text.replace(<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>))[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;找到约%s条相关结果&#x27;</span>%(num))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">int</span>(num),<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    url = url_1 + user_key_words +  <span class=\"string\">&#x27;&amp;pn=&#x27;</span> + <span class=\"built_in\">str</span>(i) + url_2</span><br><span class=\"line\">    res = requests.get(url, headers=header)</span><br><span class=\"line\"></span><br><span class=\"line\">    title_link_result = openpyxl.Workbook()</span><br><span class=\"line\">    sheet = title_link_result.active</span><br><span class=\"line\">    sheet.title = <span class=\"string\">&#x27;百度学术文献爬取&#x27;</span></span><br><span class=\"line\">    col_name = [<span class=\"string\">&#x27;title&#x27;</span>,<span class=\"string\">&#x27;key_words&#x27;</span>,<span class=\"string\">&#x27;year&#x27;</span>,<span class=\"string\">&#x27;ref_wr&#x27;</span>,<span class=\"string\">&#x27;author&#x27;</span>,<span class=\"string\">&#x27;abstract&#x27;</span>,<span class=\"string\">&#x27;doi&#x27;</span>,<span class=\"string\">&#x27;doi_url&#x27;</span>,<span class=\"string\">&#x27;journal&#x27;</span>]</span><br><span class=\"line\">    sheet.append(col_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> res.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">        soup = BeautifulSoup(res.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        items = soup.find_all(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;sc_content&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">            url_temp = item.find(<span class=\"string\">&#x27;h3&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">            res_final = requests.get(url_temp, headers=header)</span><br><span class=\"line\">            soup_final = BeautifulSoup(res_final.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">            main_info = soup_final.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;main-info&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                title = main_info.find(<span class=\"string\">&#x27;h3&#x27;</span>).text.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                title = re.sub(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>, title, <span class=\"number\">8</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                title = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                author = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;author_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;author_text&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>).text</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                author = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                abstract = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;abstract_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;abstract&#x27;</span>).text</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                abstract = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                key_temp = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;kw_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;kw_main&#x27;</span>).find_all(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">                key_words = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> key_temp:</span><br><span class=\"line\">                    key_words = key_words + <span class=\"string\">&#x27;,&#x27;</span> + key.text</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                key_words = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                doi = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;doi_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>, class_=<span class=\"string\">&#x27;kw_main&#x27;</span>).text.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                doi = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            doi_url = (<span class=\"string\">&quot;https://doi.org/&quot;</span> + doi).replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                ref_wr = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;ref_wr&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>,class_=<span class=\"string\">&#x27;sc_cite_cont&#x27;</span>).text.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                ref_wr = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                year = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;year_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;kw_main&#x27;</span>).text.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                yeay = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                journal = soup_final.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;dtl_r_item&#x27;</span>).find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;container_right&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>, class_=<span class=\"string\">&#x27;journal_title&#x27;</span>).text.replace(<span class=\"string\">&#x27;《&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;》&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                journal = <span class=\"string\">&quot;None&quot;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">            sheet.append([title,key_words,year,ref_wr,author,abstract,doi,doi_url,journal])</span><br><span class=\"line\">        file_name = <span class=\"string\">&#x27;D:\\!01\\git\\Python\\Python爬取英文文献\\\\results\\第&#x27;</span>+<span class=\"built_in\">str</span>((i+<span class=\"number\">10</span>)/<span class=\"number\">10</span>).replace(<span class=\"string\">&#x27;.0&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&#x27;页.xlsx&#x27;</span></span><br><span class=\"line\">        title_link_result.save(file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Something is wrong! Please check!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    time_end = time.time()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;已经完成第&#x27;</span>+<span class=\"built_in\">str</span>((i+<span class=\"number\">10</span>)/<span class=\"number\">10</span>).replace(<span class=\"string\">&#x27;.0&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&#x27;页爬取，耗时：%s&#x27;</span>%(time_end-time_start) + <span class=\"string\">&#x27;，休息10s继续爬取！&#x27;</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#x6f;&#x78;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#x6f;&#x78;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>之前写过用Python爬取中文文献，但是更多时候需要的是英文文献，就写了个英文的爬虫代码。</p>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> openpyxl</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">time_start = time.time()</span><br><span class=\"line\">header = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;user-agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">user_key_words = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你的关键词(空格分隔)：&#x27;</span>)</span><br><span class=\"line\">user_key_words = user_key_words.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;%20&#x27;</span>)</span><br><span class=\"line\">url_1 = <span class=\"string\">&#x27;http://xueshu.baidu.com/s?wd=&#x27;</span></span><br><span class=\"line\">url_2 = <span class=\"string\">&#x27;&amp;tn=SE_baiduxueshu_c1gjeupa&amp;ie=utf-8&amp;sc_f_para=sc_tasktype%3D%7BfirstSimpleSearch%7D&amp;sc_hit=1&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">url_0 = url_1 + user_key_words +  <span class=\"string\">&#x27;&amp;pn=&#x27;</span> + <span class=\"built_in\">str</span>(<span class=\"number\">0</span>) + url_2</span><br><span class=\"line\">res = requests.get(url_0, headers=header)</span><br><span class=\"line\">soup = BeautifulSoup(res.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">num = re.findall(<span class=\"string\">&#x27;\\d&#123;1,20&#125;&#x27;</span>, soup.find(<span class=\"string\">&#x27;span&#x27;</span>,class_=<span class=\"string\">&#x27;nums&#x27;</span>).text.replace(<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>))[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;找到约%s条相关结果&#x27;</span>%(num))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">int</span>(num),<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    url = url_1 + user_key_words +  <span class=\"string\">&#x27;&amp;pn=&#x27;</span> + <span class=\"built_in\">str</span>(i) + url_2</span><br><span class=\"line\">    res = requests.get(url, headers=header)</span><br><span class=\"line\"></span><br><span class=\"line\">    title_link_result = openpyxl.Workbook()</span><br><span class=\"line\">    sheet = title_link_result.active</span><br><span class=\"line\">    sheet.title = <span class=\"string\">&#x27;百度学术文献爬取&#x27;</span></span><br><span class=\"line\">    col_name = [<span class=\"string\">&#x27;title&#x27;</span>,<span class=\"string\">&#x27;key_words&#x27;</span>,<span class=\"string\">&#x27;year&#x27;</span>,<span class=\"string\">&#x27;ref_wr&#x27;</span>,<span class=\"string\">&#x27;author&#x27;</span>,<span class=\"string\">&#x27;abstract&#x27;</span>,<span class=\"string\">&#x27;doi&#x27;</span>,<span class=\"string\">&#x27;doi_url&#x27;</span>,<span class=\"string\">&#x27;journal&#x27;</span>]</span><br><span class=\"line\">    sheet.append(col_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> res.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">        soup = BeautifulSoup(res.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        items = soup.find_all(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;sc_content&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">            url_temp = item.find(<span class=\"string\">&#x27;h3&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">            res_final = requests.get(url_temp, headers=header)</span><br><span class=\"line\">            soup_final = BeautifulSoup(res_final.text, <span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">            main_info = soup_final.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;main-info&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                title = main_info.find(<span class=\"string\">&#x27;h3&#x27;</span>).text.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                title = re.sub(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>, title, <span class=\"number\">8</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                title = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                author = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;author_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;author_text&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>).text</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                author = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                abstract = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;abstract_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;abstract&#x27;</span>).text</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                abstract = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                key_temp = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;kw_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;kw_main&#x27;</span>).find_all(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">                key_words = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> key_temp:</span><br><span class=\"line\">                    key_words = key_words + <span class=\"string\">&#x27;,&#x27;</span> + key.text</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                key_words = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                doi = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;doi_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>, class_=<span class=\"string\">&#x27;kw_main&#x27;</span>).text.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                doi = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            doi_url = (<span class=\"string\">&quot;https://doi.org/&quot;</span> + doi).replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                ref_wr = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;ref_wr&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>,class_=<span class=\"string\">&#x27;sc_cite_cont&#x27;</span>).text.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                ref_wr = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                year = main_info.find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;year_wr&#x27;</span>).find(<span class=\"string\">&#x27;p&#x27;</span>,class_=<span class=\"string\">&#x27;kw_main&#x27;</span>).text.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                yeay = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                journal = soup_final.find(<span class=\"string\">&#x27;div&#x27;</span>,class_=<span class=\"string\">&#x27;dtl_r_item&#x27;</span>).find(<span class=\"string\">&#x27;div&#x27;</span>, class_=<span class=\"string\">&#x27;container_right&#x27;</span>).find(<span class=\"string\">&#x27;a&#x27;</span>, class_=<span class=\"string\">&#x27;journal_title&#x27;</span>).text.replace(<span class=\"string\">&#x27;《&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;》&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                journal = <span class=\"string\">&quot;None&quot;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">            sheet.append([title,key_words,year,ref_wr,author,abstract,doi,doi_url,journal])</span><br><span class=\"line\">        file_name = <span class=\"string\">&#x27;D:\\!01\\git\\Python\\Python爬取英文文献\\\\results\\第&#x27;</span>+<span class=\"built_in\">str</span>((i+<span class=\"number\">10</span>)/<span class=\"number\">10</span>).replace(<span class=\"string\">&#x27;.0&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&#x27;页.xlsx&#x27;</span></span><br><span class=\"line\">        title_link_result.save(file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Something is wrong! Please check!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    time_end = time.time()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;已经完成第&#x27;</span>+<span class=\"built_in\">str</span>((i+<span class=\"number\">10</span>)/<span class=\"number\">10</span>).replace(<span class=\"string\">&#x27;.0&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&#x27;页爬取，耗时：%s&#x27;</span>%(time_end-time_start) + <span class=\"string\">&#x27;，休息10s继续爬取！&#x27;</span>)</span><br><span class=\"line\">    time.sleep(<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#x6f;&#x78;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#x6f;&#x78;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"R包stat4xiang","abbrlink":"29e3cb7","date":"2021-01-04T03:12:47.000Z","_content":"\n# Summary\n\nThe R package [**stat4xiang**](https://github.com/lixiang117423/stat4xiang) is for statistical analysis including *Student t-test*, *Anova*, *Wilcox test* and *Kruskal test*.\n\n<!-- more -->\n\n# Download and Install\n\nTo download the development version of the package, type the following at the R command line:\n\n```r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"lixiang117423/stat4xiang\", build_vignettes = TRUE)\n```\n\n# Parameter\n\n>`df`: input data.frame 输入数据框\n>\n>`value`: Colnames of value 值所在的列名\n>\n>`group`: Colnames of group 分组信息所在列名\n>\n>`method`: Method of statistics 统计方法：`t检验`、`方差分析`、`Wilcox检验`及`Kruskal检验`\n>\n>`level`: Statistical inspection level 显著水平，如`0.99`\n\n# Basic example\n\n```R\nlibrary(stat4xiang)\n\nres <- stat4xiang(iris,'Sepal.Length','Species','anova',0.99)\n```\n\n# Reporting bugs and other issues\n\nIf you encounter a clear bug, please file a minimal reproducible example on github.\n\n# Contact us\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/R包stat4xiang.md","raw":"---\ntitle: R包stat4xiang\ntags: R 语言\ncategories: R语言\nabbrlink: 29e3cb7\ndate: 2021-01-04 11:12:47\n---\n\n# Summary\n\nThe R package [**stat4xiang**](https://github.com/lixiang117423/stat4xiang) is for statistical analysis including *Student t-test*, *Anova*, *Wilcox test* and *Kruskal test*.\n\n<!-- more -->\n\n# Download and Install\n\nTo download the development version of the package, type the following at the R command line:\n\n```r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"lixiang117423/stat4xiang\", build_vignettes = TRUE)\n```\n\n# Parameter\n\n>`df`: input data.frame 输入数据框\n>\n>`value`: Colnames of value 值所在的列名\n>\n>`group`: Colnames of group 分组信息所在列名\n>\n>`method`: Method of statistics 统计方法：`t检验`、`方差分析`、`Wilcox检验`及`Kruskal检验`\n>\n>`level`: Statistical inspection level 显著水平，如`0.99`\n\n# Basic example\n\n```R\nlibrary(stat4xiang)\n\nres <- stat4xiang(iris,'Sepal.Length','Species','anova',0.99)\n```\n\n# Reporting bugs and other issues\n\nIf you encounter a clear bug, please file a minimal reproducible example on github.\n\n# Contact us\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"R包stat4xiang","published":1,"updated":"2021-02-02T07:38:44.098Z","_id":"ckwbqwcet001or0g02n416d0c","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h1><p>The R package <a href=\"https://github.com/lixiang117423/stat4xiang\"><strong>stat4xiang</strong></a> is for statistical analysis including <em>Student t-test</em>, <em>Anova</em>, <em>Wilcox test</em> and <em>Kruskal test</em>.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Download-and-Install\"><a href=\"#Download-and-Install\" class=\"headerlink\" title=\"Download and Install\"></a>Download and Install</h1><p>To download the development version of the package, type the following at the R command line:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages(<span class=\"string\">&quot;devtools&quot;</span>)</span><br><span class=\"line\">devtools::install_github(<span class=\"string\">&quot;lixiang117423/stat4xiang&quot;</span>, build_vignettes = <span class=\"literal\">TRUE</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Parameter\"><a href=\"#Parameter\" class=\"headerlink\" title=\"Parameter\"></a>Parameter</h1><blockquote>\n<p><code>df</code>: input data.frame 输入数据框</p>\n<p><code>value</code>: Colnames of value 值所在的列名</p>\n<p><code>group</code>: Colnames of group 分组信息所在列名</p>\n<p><code>method</code>: Method of statistics 统计方法：<code>t检验</code>、<code>方差分析</code>、<code>Wilcox检验</code>及<code>Kruskal检验</code></p>\n<p><code>level</code>: Statistical inspection level 显著水平，如<code>0.99</code></p>\n</blockquote>\n<h1 id=\"Basic-example\"><a href=\"#Basic-example\" class=\"headerlink\" title=\"Basic example\"></a>Basic example</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(stat4xiang)</span><br><span class=\"line\"></span><br><span class=\"line\">res &lt;- stat4xiang(iris,<span class=\"string\">&#x27;Sepal.Length&#x27;</span>,<span class=\"string\">&#x27;Species&#x27;</span>,<span class=\"string\">&#x27;anova&#x27;</span>,<span class=\"number\">0.99</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Reporting-bugs-and-other-issues\"><a href=\"#Reporting-bugs-and-other-issues\" class=\"headerlink\" title=\"Reporting bugs and other issues\"></a>Reporting bugs and other issues</h1><p>If you encounter a clear bug, please file a minimal reproducible example on github.</p>\n<h1 id=\"Contact-us\"><a href=\"#Contact-us\" class=\"headerlink\" title=\"Contact us\"></a>Contact us</h1><blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h1><p>The R package <a href=\"https://github.com/lixiang117423/stat4xiang\"><strong>stat4xiang</strong></a> is for statistical analysis including <em>Student t-test</em>, <em>Anova</em>, <em>Wilcox test</em> and <em>Kruskal test</em>.</p>","more":"<h1 id=\"Download-and-Install\"><a href=\"#Download-and-Install\" class=\"headerlink\" title=\"Download and Install\"></a>Download and Install</h1><p>To download the development version of the package, type the following at the R command line:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages(<span class=\"string\">&quot;devtools&quot;</span>)</span><br><span class=\"line\">devtools::install_github(<span class=\"string\">&quot;lixiang117423/stat4xiang&quot;</span>, build_vignettes = <span class=\"literal\">TRUE</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Parameter\"><a href=\"#Parameter\" class=\"headerlink\" title=\"Parameter\"></a>Parameter</h1><blockquote>\n<p><code>df</code>: input data.frame 输入数据框</p>\n<p><code>value</code>: Colnames of value 值所在的列名</p>\n<p><code>group</code>: Colnames of group 分组信息所在列名</p>\n<p><code>method</code>: Method of statistics 统计方法：<code>t检验</code>、<code>方差分析</code>、<code>Wilcox检验</code>及<code>Kruskal检验</code></p>\n<p><code>level</code>: Statistical inspection level 显著水平，如<code>0.99</code></p>\n</blockquote>\n<h1 id=\"Basic-example\"><a href=\"#Basic-example\" class=\"headerlink\" title=\"Basic example\"></a>Basic example</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(stat4xiang)</span><br><span class=\"line\"></span><br><span class=\"line\">res &lt;- stat4xiang(iris,<span class=\"string\">&#x27;Sepal.Length&#x27;</span>,<span class=\"string\">&#x27;Species&#x27;</span>,<span class=\"string\">&#x27;anova&#x27;</span>,<span class=\"number\">0.99</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Reporting-bugs-and-other-issues\"><a href=\"#Reporting-bugs-and-other-issues\" class=\"headerlink\" title=\"Reporting bugs and other issues\"></a>Reporting bugs and other issues</h1><p>If you encounter a clear bug, please file a minimal reproducible example on github.</p>\n<h1 id=\"Contact-us\"><a href=\"#Contact-us\" class=\"headerlink\" title=\"Contact us\"></a>Contact us</h1><blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#x61;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#x6f;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"Python提取fasta文件成单行文件","abbrlink":"7136a0b7","date":"2021-04-07T02:18:35.000Z","_content":"\n`R`语言对`fasta`这种超大的字符文件进行处理真的是太慢了，`Python`是真的香啊！<!-- more -->\n\n```python\nimport os\nimport time\n\nstart = time.time()\n\nos.chdir('C:/Users/Administrator/Desktop/')\nprint(os.getcwd())\n\nres_dict = {}\n\nwith open('ylg.protein.pep','r') as pep:\n    for line in pep:\n        if line.startswith('>'):\n            name = line.strip().split()[0]\n            res_dict[name] = ''\n        else:\n            res_dict[name] += line.replace('\\n','')\n\nprint(len(res_dict))\n\nfor cds_id, sequence in res_dict.items():\n    #print(cds_id)\n    #print(sequence)\n    #time.sleep(2)\n    with open('pep.seq.txt', 'a') as file:\n        file.write(cds_id.replace('>','') + \"\\t\" + sequence + \"\\n\")\n\nend = time.time()\nprint(end - start)\n```\n\n4万多个基于32万多行，耗时5.12s。和`R`相比真的是很快了。\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/Python提取fasta文件成单行文件.md","raw":"---\ntitle: Python提取fasta文件成单行文件\ntags: Python\ncategories: Python\nabbrlink: 7136a0b7\ndate: 2021-04-07 10:18:35\n---\n\n`R`语言对`fasta`这种超大的字符文件进行处理真的是太慢了，`Python`是真的香啊！<!-- more -->\n\n```python\nimport os\nimport time\n\nstart = time.time()\n\nos.chdir('C:/Users/Administrator/Desktop/')\nprint(os.getcwd())\n\nres_dict = {}\n\nwith open('ylg.protein.pep','r') as pep:\n    for line in pep:\n        if line.startswith('>'):\n            name = line.strip().split()[0]\n            res_dict[name] = ''\n        else:\n            res_dict[name] += line.replace('\\n','')\n\nprint(len(res_dict))\n\nfor cds_id, sequence in res_dict.items():\n    #print(cds_id)\n    #print(sequence)\n    #time.sleep(2)\n    with open('pep.seq.txt', 'a') as file:\n        file.write(cds_id.replace('>','') + \"\\t\" + sequence + \"\\n\")\n\nend = time.time()\nprint(end - start)\n```\n\n4万多个基于32万多行，耗时5.12s。和`R`相比真的是很快了。\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"Python提取fasta文件成单行文件","published":1,"updated":"2021-04-07T02:21:53.077Z","_id":"ckwbqwcet001qr0g044a04npb","comments":1,"layout":"post","photos":[],"link":"","content":"<p><code>R</code>语言对<code>fasta</code>这种超大的字符文件进行处理真的是太慢了，<code>Python</code>是真的香啊！<span id=\"more\"></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">start = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop/&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\">res_dict = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;ylg.protein.pep&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> pep:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> pep:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> line.startswith(<span class=\"string\">&#x27;&gt;&#x27;</span>):</span><br><span class=\"line\">            name = line.strip().split()[<span class=\"number\">0</span>]</span><br><span class=\"line\">            res_dict[name] = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            res_dict[name] += line.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(res_dict))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> cds_id, sequence <span class=\"keyword\">in</span> res_dict.items():</span><br><span class=\"line\">    <span class=\"comment\">#print(cds_id)</span></span><br><span class=\"line\">    <span class=\"comment\">#print(sequence)</span></span><br><span class=\"line\">    <span class=\"comment\">#time.sleep(2)</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;pep.seq.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(cds_id.replace(<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&quot;\\t&quot;</span> + sequence + <span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(end - start)</span><br></pre></td></tr></table></figure>\n\n<p>4万多个基于32万多行，耗时5.12s。和<code>R</code>相比真的是很快了。</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#x66;&#111;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#x66;&#111;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p><code>R</code>语言对<code>fasta</code>这种超大的字符文件进行处理真的是太慢了，<code>Python</code>是真的香啊！","more":"</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">start = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop/&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\">res_dict = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;ylg.protein.pep&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> pep:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> pep:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> line.startswith(<span class=\"string\">&#x27;&gt;&#x27;</span>):</span><br><span class=\"line\">            name = line.strip().split()[<span class=\"number\">0</span>]</span><br><span class=\"line\">            res_dict[name] = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            res_dict[name] += line.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(res_dict))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> cds_id, sequence <span class=\"keyword\">in</span> res_dict.items():</span><br><span class=\"line\">    <span class=\"comment\">#print(cds_id)</span></span><br><span class=\"line\">    <span class=\"comment\">#print(sequence)</span></span><br><span class=\"line\">    <span class=\"comment\">#time.sleep(2)</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;pep.seq.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(cds_id.replace(<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&quot;\\t&quot;</span> + sequence + <span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(end - start)</span><br></pre></td></tr></table></figure>\n\n<p>4万多个基于32万多行，耗时5.12s。和<code>R</code>相比真的是很快了。</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#x66;&#111;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#x69;&#x61;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#x66;&#111;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"Python爬取水稻基因的Entrez ID","abbrlink":"61374b33","date":"2021-03-28T08:44:04.000Z","_content":"\n海外服务器爬NCBI是真的香！！！<!-- more -->\n\n大概有25000个基因，用R包做KEGG和GO的时候需要把基因ID转换成ENTREZID，显然一个一个查找是不现实的，那就爬虫吧。\n\n国内网络的话单次爬取500个左右就会断，索性部署到阿里云新加坡的服务器上去，爬取12000+了依旧没有断线，继续分析数据等它爬完。\n\n```R\nimport os\nimport random\nimport openpyxl\nimport csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\n# os.chdir('C:/Users/Administrator/Desktop')\nos.chdir(os.getcwd())\n\nsymbol_id = open('rice.SYMBOL.csv','r')\nread_id = csv.reader(symbol_id)\n\nurl_list = []\n\nfor i in read_id:\n    order = i[0]\n    symbol = i[1]\n    url = 'https://www.ncbi.nlm.nih.gov/gene/?term=' + i[1]\n\n    url_temp = [order, symbol, url]\n\n    url_list.append(url_temp)\n\n\nfor i in url_list[10388:len(url_list)]:\n    #print(i[0] + '---' + i[1])\n    #print(i[1])\n    \n    res = requests.get(i[2])\n    #print(res.status_code)\n\n    if res.status_code == 200:\n        soup = BeautifulSoup(res.text,'html.parser')\n        entrezid = soup.find_all('span',class_ = 'geneid')\n\n        if len(entrezid) != 0:\n            entrezid = soup.find_all('span',class_ = 'geneid')[0].get_text().split(',')[0].split(': ')[1]\n            res_excel = openpyxl.Workbook()\n            sheet = res_excel.active\n            sheet.title = 'rice gene ENTREZID'\n            col_name = ['SYMBOL','ENTREZID']\n            sheet.append(col_name)\n            res_now = [i[1],entrezid]\n            sheet.append(res_now)\n\n            file_name = os.getcwd() + '/results/' + i[1] + '-entrezid.xlsx'\n            res_excel.save(file_name)\n\n            print(i[0] + '---' + i[1] + '---' + entrezid)\n\n        else:\n            print(i[0] + '---' + i[1] + '---' + 'NO entrezid')\n            continue\n    else:\n        print(i[0] + '---' + i[1] + '---' + 'Failed')\n        continue\n\n    time.sleep(0)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/Python爬取水稻基因的Entrez-ID.md","raw":"---\ntitle: Python爬取水稻基因的Entrez ID\ntags: Python\ncategories: Python\nabbrlink: 61374b33\ndate: 2021-03-28 16:44:04\n---\n\n海外服务器爬NCBI是真的香！！！<!-- more -->\n\n大概有25000个基因，用R包做KEGG和GO的时候需要把基因ID转换成ENTREZID，显然一个一个查找是不现实的，那就爬虫吧。\n\n国内网络的话单次爬取500个左右就会断，索性部署到阿里云新加坡的服务器上去，爬取12000+了依旧没有断线，继续分析数据等它爬完。\n\n```R\nimport os\nimport random\nimport openpyxl\nimport csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\n# os.chdir('C:/Users/Administrator/Desktop')\nos.chdir(os.getcwd())\n\nsymbol_id = open('rice.SYMBOL.csv','r')\nread_id = csv.reader(symbol_id)\n\nurl_list = []\n\nfor i in read_id:\n    order = i[0]\n    symbol = i[1]\n    url = 'https://www.ncbi.nlm.nih.gov/gene/?term=' + i[1]\n\n    url_temp = [order, symbol, url]\n\n    url_list.append(url_temp)\n\n\nfor i in url_list[10388:len(url_list)]:\n    #print(i[0] + '---' + i[1])\n    #print(i[1])\n    \n    res = requests.get(i[2])\n    #print(res.status_code)\n\n    if res.status_code == 200:\n        soup = BeautifulSoup(res.text,'html.parser')\n        entrezid = soup.find_all('span',class_ = 'geneid')\n\n        if len(entrezid) != 0:\n            entrezid = soup.find_all('span',class_ = 'geneid')[0].get_text().split(',')[0].split(': ')[1]\n            res_excel = openpyxl.Workbook()\n            sheet = res_excel.active\n            sheet.title = 'rice gene ENTREZID'\n            col_name = ['SYMBOL','ENTREZID']\n            sheet.append(col_name)\n            res_now = [i[1],entrezid]\n            sheet.append(res_now)\n\n            file_name = os.getcwd() + '/results/' + i[1] + '-entrezid.xlsx'\n            res_excel.save(file_name)\n\n            print(i[0] + '---' + i[1] + '---' + entrezid)\n\n        else:\n            print(i[0] + '---' + i[1] + '---' + 'NO entrezid')\n            continue\n    else:\n        print(i[0] + '---' + i[1] + '---' + 'Failed')\n        continue\n\n    time.sleep(0)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"Python爬取水稻基因的Entrez-ID","published":1,"updated":"2021-03-28T09:02:59.961Z","_id":"ckwbqwceu001sr0g020dc3udg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>海外服务器爬NCBI是真的香！！！<span id=\"more\"></span></p>\n<p>大概有25000个基因，用R包做KEGG和GO的时候需要把基因ID转换成ENTREZID，显然一个一个查找是不现实的，那就爬虫吧。</p>\n<p>国内网络的话单次爬取500个左右就会断，索性部署到阿里云新加坡的服务器上去，爬取12000+了依旧没有断线，继续分析数据等它爬完。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import random</span><br><span class=\"line\">import openpyxl</span><br><span class=\"line\">import csv</span><br><span class=\"line\">import time</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.chdir(&#x27;C:/Users/Administrator/Desktop&#x27;)</span></span><br><span class=\"line\">os.chdir(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\">symbol_id = open(<span class=\"string\">&#x27;rice.SYMBOL.csv&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">read_id = csv.reader(symbol_id)</span><br><span class=\"line\"></span><br><span class=\"line\">url_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> read_id:</span><br><span class=\"line\">    order = i[<span class=\"number\">0</span>]</span><br><span class=\"line\">    symbol = i[<span class=\"number\">1</span>]</span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://www.ncbi.nlm.nih.gov/gene/?term=&#x27;</span> + i[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    url_temp = [order, symbol, url]</span><br><span class=\"line\"></span><br><span class=\"line\">    url_list.append(url_temp)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> url_list[<span class=\"number\">10388</span>:len(url_list)]:</span><br><span class=\"line\">    <span class=\"comment\">#print(i[0] + &#x27;---&#x27; + i[1])</span></span><br><span class=\"line\">    <span class=\"comment\">#print(i[1])</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    res = requests.get(i[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"comment\">#print(res.status_code)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> res.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">        soup = BeautifulSoup(res.text,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        entrezid = soup.find_all(<span class=\"string\">&#x27;span&#x27;</span>,class_ = <span class=\"string\">&#x27;geneid&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(entrezid) != <span class=\"number\">0</span>:</span><br><span class=\"line\">            entrezid = soup.find_all(<span class=\"string\">&#x27;span&#x27;</span>,class_ = <span class=\"string\">&#x27;geneid&#x27;</span>)[<span class=\"number\">0</span>].get_text().split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;: &#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">            res_excel = openpyxl.Workbook()</span><br><span class=\"line\">            sheet = res_excel.active</span><br><span class=\"line\">            sheet.title = <span class=\"string\">&#x27;rice gene ENTREZID&#x27;</span></span><br><span class=\"line\">            col_name = [<span class=\"string\">&#x27;SYMBOL&#x27;</span>,<span class=\"string\">&#x27;ENTREZID&#x27;</span>]</span><br><span class=\"line\">            sheet.append(col_name)</span><br><span class=\"line\">            res_now = [i[<span class=\"number\">1</span>],entrezid]</span><br><span class=\"line\">            sheet.append(res_now)</span><br><span class=\"line\"></span><br><span class=\"line\">            file_name = os.getcwd() + <span class=\"string\">&#x27;/results/&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;-entrezid.xlsx&#x27;</span></span><br><span class=\"line\">            res_excel.save(file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">            print(i[<span class=\"number\">0</span>] + <span class=\"string\">&#x27;---&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;---&#x27;</span> + entrezid)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(i[<span class=\"number\">0</span>] + <span class=\"string\">&#x27;---&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;---&#x27;</span> + <span class=\"string\">&#x27;NO entrezid&#x27;</span>)</span><br><span class=\"line\">            continue</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(i[<span class=\"number\">0</span>] + <span class=\"string\">&#x27;---&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;---&#x27;</span> + <span class=\"string\">&#x27;Failed&#x27;</span>)</span><br><span class=\"line\">        continue</span><br><span class=\"line\"></span><br><span class=\"line\">    time.sleep(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>海外服务器爬NCBI是真的香！！！","more":"</p>\n<p>大概有25000个基因，用R包做KEGG和GO的时候需要把基因ID转换成ENTREZID，显然一个一个查找是不现实的，那就爬虫吧。</p>\n<p>国内网络的话单次爬取500个左右就会断，索性部署到阿里云新加坡的服务器上去，爬取12000+了依旧没有断线，继续分析数据等它爬完。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os</span><br><span class=\"line\">import random</span><br><span class=\"line\">import openpyxl</span><br><span class=\"line\">import csv</span><br><span class=\"line\">import time</span><br><span class=\"line\">import requests</span><br><span class=\"line\">from bs4 import BeautifulSoup</span><br><span class=\"line\">import re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.chdir(&#x27;C:/Users/Administrator/Desktop&#x27;)</span></span><br><span class=\"line\">os.chdir(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\">symbol_id = open(<span class=\"string\">&#x27;rice.SYMBOL.csv&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">read_id = csv.reader(symbol_id)</span><br><span class=\"line\"></span><br><span class=\"line\">url_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> read_id:</span><br><span class=\"line\">    order = i[<span class=\"number\">0</span>]</span><br><span class=\"line\">    symbol = i[<span class=\"number\">1</span>]</span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://www.ncbi.nlm.nih.gov/gene/?term=&#x27;</span> + i[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    url_temp = [order, symbol, url]</span><br><span class=\"line\"></span><br><span class=\"line\">    url_list.append(url_temp)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> url_list[<span class=\"number\">10388</span>:len(url_list)]:</span><br><span class=\"line\">    <span class=\"comment\">#print(i[0] + &#x27;---&#x27; + i[1])</span></span><br><span class=\"line\">    <span class=\"comment\">#print(i[1])</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    res = requests.get(i[<span class=\"number\">2</span>])</span><br><span class=\"line\">    <span class=\"comment\">#print(res.status_code)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> res.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">        soup = BeautifulSoup(res.text,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        entrezid = soup.find_all(<span class=\"string\">&#x27;span&#x27;</span>,class_ = <span class=\"string\">&#x27;geneid&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(entrezid) != <span class=\"number\">0</span>:</span><br><span class=\"line\">            entrezid = soup.find_all(<span class=\"string\">&#x27;span&#x27;</span>,class_ = <span class=\"string\">&#x27;geneid&#x27;</span>)[<span class=\"number\">0</span>].get_text().split(<span class=\"string\">&#x27;,&#x27;</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;: &#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">            res_excel = openpyxl.Workbook()</span><br><span class=\"line\">            sheet = res_excel.active</span><br><span class=\"line\">            sheet.title = <span class=\"string\">&#x27;rice gene ENTREZID&#x27;</span></span><br><span class=\"line\">            col_name = [<span class=\"string\">&#x27;SYMBOL&#x27;</span>,<span class=\"string\">&#x27;ENTREZID&#x27;</span>]</span><br><span class=\"line\">            sheet.append(col_name)</span><br><span class=\"line\">            res_now = [i[<span class=\"number\">1</span>],entrezid]</span><br><span class=\"line\">            sheet.append(res_now)</span><br><span class=\"line\"></span><br><span class=\"line\">            file_name = os.getcwd() + <span class=\"string\">&#x27;/results/&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;-entrezid.xlsx&#x27;</span></span><br><span class=\"line\">            res_excel.save(file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">            print(i[<span class=\"number\">0</span>] + <span class=\"string\">&#x27;---&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;---&#x27;</span> + entrezid)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(i[<span class=\"number\">0</span>] + <span class=\"string\">&#x27;---&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;---&#x27;</span> + <span class=\"string\">&#x27;NO entrezid&#x27;</span>)</span><br><span class=\"line\">            continue</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(i[<span class=\"number\">0</span>] + <span class=\"string\">&#x27;---&#x27;</span> + i[<span class=\"number\">1</span>] + <span class=\"string\">&#x27;---&#x27;</span> + <span class=\"string\">&#x27;Failed&#x27;</span>)</span><br><span class=\"line\">        continue</span><br><span class=\"line\"></span><br><span class=\"line\">    time.sleep(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#64;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"R语言常用Tips","top":true,"abbrlink":"15541358","date":"2021-01-18T09:17:33.000Z","_content":"\n经常要用到`R`，有些小技巧每次都要去查，比较麻烦，干脆记录一下。\n\n<!-- more -->\n\n# 软件安装\n\n1. 安装`Rtools`：\n\n   - 安装 Rtools4.0，安装包：[https://cran.r-project.org/bin/windows/Rtools/](https://link.zhihu.com/?target=https%3A//cran.r-project.org/bin/windows/Rtools/)\n\n   - 配置环境\n\n     - 在 RStudio 里面运行以下脚本：\n\n       ```R\n       writeLines('PATH=\"${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\"', con = \"~/.Renviron\")\n       ```\n\n     - 重新启动 RStudio，然后运行以下代码：\n\n       ```R\n       Sys.which(\"make\")\n       ```\n\n       会得到结果：\"C:\\\\rtools40\\\\usr\\\\bin\\\\make.exe\"（也就是 make.exe 的路径）\n\n     - 尝试安装一个包\n\n       ```R\n       install.packages(\"jsonlite\", type = \"source\")\n       ```\n\n2. `RStudio`中文乱码：\n   菜单栏中的 `file->reopen with encoding->utf-8`\n\n3. `Rshiny`上传文件大小限制：在`server.R`文件顶部加上下面这行代码：\n\n   ```R\n   options(shiny.maxRequestSize=1000*1024^2)\n   ```\n   \n4. 更新所有R包：\n\n   ```R\n   #安装包\n   install.packages(\"rvcheck\")\n   #加载包\n   library(rvcheck)\n   #检查R是否有更新\n   rvcheck::check_r()\n   # 更新所有R包\n   rvcheck::update_all(check_R = FALSE,which = c(\"CRAN\",\"BioC\",\"github\")\n   ```\n   \n5. 更新R版本：\n\n   ```R\n   library(installr)\n   updateR()\n   ```\n\n   \n\n# `ggplot2`\n\n1. `ggplot2`限制Y轴范围：\n\n   ```R\n   coord_cartesian(ylim = c(5, 22))\n   ```\n\n2. `ggplot2`输出中文：\n\n   ```R\n    theme_bw(base_family = \"STKaiti\")\n   ```\n\n3. `ggplot2`坐标轴文字角度：\n\n   ```R\n   axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)\n   ```\n\n4. `ggplot2`导出成`PPT`：\n\n   ```R\n   export::graph2ppt(p2, width = 6, height = 5,\n                     margins = c(top = 0.5, right = 0.5, \n                                     bottom = 0.5, left= 0.5), \n                     center = TRUE,\n                     file = '../results/PPT/稻瘟病发病情况（2020）.ppt')\n   ```\n\n5. `ggplot2`渐变色填充：\n\n   ```R\n   scale_fill_gradient2(low = \"#000080\", mid = \"white\", high = \"#B22222\")\n   ```\n   \n6. 图例名称：\n\n   ```R\n   labs(fill = 'Cor')\n   ```\n   \n7. 坐标轴刻度长度：\n\n   ```R\n   theme(axis.ticks.length.y = unit(0,'mm'))\n   ```\n\n8. 颠倒X轴和Y轴：\n\n   ```R\n   coord_flip()\n   ```\n\n   \n\n# 热图相关\n\n1. `ComplexHeatmap`注释的颜色设置：\n\n   ```R\n   ann.right = HeatmapAnnotation(which = 'row',\n                                 gap = unit(1.5,'mm'),\n                                 `Class I` = res.cor.3$`Class I`,\n                                 annotation_name_side = 'top',\n                                 annotation_name_rot = 90,\n                                 annotation_name_offset = unit(2,'mm'),\n                                 col = list(`Class I` = c('Lipids' = '#DC143C',\n                                                         'Phenolic acids' = '#00FF00',\n                                                         'Alkaloids' = '#483D8B',\n                                                         'Terpenoids' = '#808000',\n                                                         'Organic acids' = '#FF8C00',\n                                                         'Others' = '#B22222',\n                                                         'Nucleotides' = '#000000',\n                                                         'Flavonoids' = '#006400',\n                                                         'Amino acids' = '#0000CD')))\n   ```\n\n   \n\n2. 调用`pheatmap`包中的函数解决`ComplexHeatmap::Heatmap`数据标准化问题：\n\n   ```R\n   df.heatmap[,1:6] %>% as.matrix() %>%\n     pheatmap:::scale_rows() %>%\n     ComplexHeatmap::Heatmap(name = '相 对\\n表达量',\n                             col = c(\"navy\", \"white\", \"firebrick3\"),\n                             show_row_names = FALSE)\n   ```\n   \n3. 热图标注显著性：\n\n   ```R\n   p.cor = quickcor(design, mes, cor.test = TRUE) +\n     geom_colour() +\n     geom_mark(r = NA,sig.thres = 0.05, \n               size = 5, color = 'black',\n               nudge_x = 0, nudge_y = 0) +\n     scale_fill_gradient2(low = \"navy\", \n                          mid = \"white\", \n                          high = \"firebrick3\")+\n     labs(fill = 'Cor')\n   ```\n\n4. `ggcor`绘制两个矩阵的热图：\n\n   ```R\n   quickcor(df.dems.1, df.degs.1.down, cor.test = TRUE, height = 10) +\n       geom_colour() +\n       scale_fill_gradient2(low = \"navy\", \n                            mid = \"white\", \n                            high = \"firebrick3\")+\n       labs(fill = 'Cor')+\n       remove_x_axis() +\n       theme(axis.ticks.length.y = unit(0,'mm'),\n             axis.text.y = element_text(size = 1))\n   ```\n\n   \n\n# 数据处理\n\n1. `dcast()`函数用法：\n\n   ```R\n   reshape2::dcast(res.cor, gene ~ meta) # gene是行，meta是列\n   # acast()函数的话直接就生成rownames\n   # gene在第一列，meta在第二列，这样才能成功，我也不知道是为啥！\n   ```\n\n2. 方差分析多重比较：\n\n   ```R\n   tuk.15 = glht(fit.15, linfct = mcp(donor = 'Tukey'))\n   sig.15 = cld(tuk.15, level = 0.95, decreasing = TRUE)[[\"mcletters\"]][[\"Letters\"]] %>%\n           as.data.frame()\n   ```\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/R语言常用Tips.md","raw":"---\ntitle: R语言常用Tips\ntags: R语言\ncategories: R语言\ntop: true\nabbrlink: '15541358'\ndate: 2021-01-18 17:17:33\n---\n\n经常要用到`R`，有些小技巧每次都要去查，比较麻烦，干脆记录一下。\n\n<!-- more -->\n\n# 软件安装\n\n1. 安装`Rtools`：\n\n   - 安装 Rtools4.0，安装包：[https://cran.r-project.org/bin/windows/Rtools/](https://link.zhihu.com/?target=https%3A//cran.r-project.org/bin/windows/Rtools/)\n\n   - 配置环境\n\n     - 在 RStudio 里面运行以下脚本：\n\n       ```R\n       writeLines('PATH=\"${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\"', con = \"~/.Renviron\")\n       ```\n\n     - 重新启动 RStudio，然后运行以下代码：\n\n       ```R\n       Sys.which(\"make\")\n       ```\n\n       会得到结果：\"C:\\\\rtools40\\\\usr\\\\bin\\\\make.exe\"（也就是 make.exe 的路径）\n\n     - 尝试安装一个包\n\n       ```R\n       install.packages(\"jsonlite\", type = \"source\")\n       ```\n\n2. `RStudio`中文乱码：\n   菜单栏中的 `file->reopen with encoding->utf-8`\n\n3. `Rshiny`上传文件大小限制：在`server.R`文件顶部加上下面这行代码：\n\n   ```R\n   options(shiny.maxRequestSize=1000*1024^2)\n   ```\n   \n4. 更新所有R包：\n\n   ```R\n   #安装包\n   install.packages(\"rvcheck\")\n   #加载包\n   library(rvcheck)\n   #检查R是否有更新\n   rvcheck::check_r()\n   # 更新所有R包\n   rvcheck::update_all(check_R = FALSE,which = c(\"CRAN\",\"BioC\",\"github\")\n   ```\n   \n5. 更新R版本：\n\n   ```R\n   library(installr)\n   updateR()\n   ```\n\n   \n\n# `ggplot2`\n\n1. `ggplot2`限制Y轴范围：\n\n   ```R\n   coord_cartesian(ylim = c(5, 22))\n   ```\n\n2. `ggplot2`输出中文：\n\n   ```R\n    theme_bw(base_family = \"STKaiti\")\n   ```\n\n3. `ggplot2`坐标轴文字角度：\n\n   ```R\n   axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)\n   ```\n\n4. `ggplot2`导出成`PPT`：\n\n   ```R\n   export::graph2ppt(p2, width = 6, height = 5,\n                     margins = c(top = 0.5, right = 0.5, \n                                     bottom = 0.5, left= 0.5), \n                     center = TRUE,\n                     file = '../results/PPT/稻瘟病发病情况（2020）.ppt')\n   ```\n\n5. `ggplot2`渐变色填充：\n\n   ```R\n   scale_fill_gradient2(low = \"#000080\", mid = \"white\", high = \"#B22222\")\n   ```\n   \n6. 图例名称：\n\n   ```R\n   labs(fill = 'Cor')\n   ```\n   \n7. 坐标轴刻度长度：\n\n   ```R\n   theme(axis.ticks.length.y = unit(0,'mm'))\n   ```\n\n8. 颠倒X轴和Y轴：\n\n   ```R\n   coord_flip()\n   ```\n\n   \n\n# 热图相关\n\n1. `ComplexHeatmap`注释的颜色设置：\n\n   ```R\n   ann.right = HeatmapAnnotation(which = 'row',\n                                 gap = unit(1.5,'mm'),\n                                 `Class I` = res.cor.3$`Class I`,\n                                 annotation_name_side = 'top',\n                                 annotation_name_rot = 90,\n                                 annotation_name_offset = unit(2,'mm'),\n                                 col = list(`Class I` = c('Lipids' = '#DC143C',\n                                                         'Phenolic acids' = '#00FF00',\n                                                         'Alkaloids' = '#483D8B',\n                                                         'Terpenoids' = '#808000',\n                                                         'Organic acids' = '#FF8C00',\n                                                         'Others' = '#B22222',\n                                                         'Nucleotides' = '#000000',\n                                                         'Flavonoids' = '#006400',\n                                                         'Amino acids' = '#0000CD')))\n   ```\n\n   \n\n2. 调用`pheatmap`包中的函数解决`ComplexHeatmap::Heatmap`数据标准化问题：\n\n   ```R\n   df.heatmap[,1:6] %>% as.matrix() %>%\n     pheatmap:::scale_rows() %>%\n     ComplexHeatmap::Heatmap(name = '相 对\\n表达量',\n                             col = c(\"navy\", \"white\", \"firebrick3\"),\n                             show_row_names = FALSE)\n   ```\n   \n3. 热图标注显著性：\n\n   ```R\n   p.cor = quickcor(design, mes, cor.test = TRUE) +\n     geom_colour() +\n     geom_mark(r = NA,sig.thres = 0.05, \n               size = 5, color = 'black',\n               nudge_x = 0, nudge_y = 0) +\n     scale_fill_gradient2(low = \"navy\", \n                          mid = \"white\", \n                          high = \"firebrick3\")+\n     labs(fill = 'Cor')\n   ```\n\n4. `ggcor`绘制两个矩阵的热图：\n\n   ```R\n   quickcor(df.dems.1, df.degs.1.down, cor.test = TRUE, height = 10) +\n       geom_colour() +\n       scale_fill_gradient2(low = \"navy\", \n                            mid = \"white\", \n                            high = \"firebrick3\")+\n       labs(fill = 'Cor')+\n       remove_x_axis() +\n       theme(axis.ticks.length.y = unit(0,'mm'),\n             axis.text.y = element_text(size = 1))\n   ```\n\n   \n\n# 数据处理\n\n1. `dcast()`函数用法：\n\n   ```R\n   reshape2::dcast(res.cor, gene ~ meta) # gene是行，meta是列\n   # acast()函数的话直接就生成rownames\n   # gene在第一列，meta在第二列，这样才能成功，我也不知道是为啥！\n   ```\n\n2. 方差分析多重比较：\n\n   ```R\n   tuk.15 = glht(fit.15, linfct = mcp(donor = 'Tukey'))\n   sig.15 = cld(tuk.15, level = 0.95, decreasing = TRUE)[[\"mcletters\"]][[\"Letters\"]] %>%\n           as.data.frame()\n   ```\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"R语言常用Tips","published":1,"updated":"2021-04-02T03:09:26.521Z","_id":"ckwbqwcez0026r0g019nsagbh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>经常要用到<code>R</code>，有些小技巧每次都要去查，比较麻烦，干脆记录一下。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><ol>\n<li><p>安装<code>Rtools</code>：</p>\n<ul>\n<li><p>安装 Rtools4.0，安装包：<a href=\"https://link.zhihu.com/?target=https://cran.r-project.org/bin/windows/Rtools/\">https://cran.r-project.org/bin/windows/Rtools/</a></p>\n</li>\n<li><p>配置环境</p>\n<ul>\n<li><p>在 RStudio 里面运行以下脚本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">writeLines(<span class=\"string\">&#x27;PATH=&quot;$&#123;RTOOLS40_HOME&#125;\\\\usr\\\\bin;$&#123;PATH&#125;&quot;&#x27;</span>, con = <span class=\"string\">&quot;~/.Renviron&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>重新启动 RStudio，然后运行以下代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sys.which(<span class=\"string\">&quot;make&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>会得到结果：”C:\\rtools40\\usr\\bin\\make.exe”（也就是 make.exe 的路径）</p>\n</li>\n<li><p>尝试安装一个包</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages(<span class=\"string\">&quot;jsonlite&quot;</span>, type = <span class=\"string\">&quot;source&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>RStudio</code>中文乱码：<br>菜单栏中的 <code>file-&gt;reopen with encoding-&gt;utf-8</code></p>\n</li>\n<li><p><code>Rshiny</code>上传文件大小限制：在<code>server.R</code>文件顶部加上下面这行代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options(shiny.maxRequestSize=<span class=\"number\">1000</span>*<span class=\"number\">1024</span>^<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>更新所有R包：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装包</span></span><br><span class=\"line\">install.packages(<span class=\"string\">&quot;rvcheck&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#加载包</span></span><br><span class=\"line\">library(rvcheck)</span><br><span class=\"line\"><span class=\"comment\">#检查R是否有更新</span></span><br><span class=\"line\">rvcheck::check_r()</span><br><span class=\"line\"><span class=\"comment\"># 更新所有R包</span></span><br><span class=\"line\">rvcheck::update_all(check_R = <span class=\"literal\">FALSE</span>,which = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;CRAN&quot;</span>,<span class=\"string\">&quot;BioC&quot;</span>,<span class=\"string\">&quot;github&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>更新R版本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(installr)</span><br><span class=\"line\">updateR()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"ggplot2\"><a href=\"#ggplot2\" class=\"headerlink\" title=\"ggplot2\"></a><code>ggplot2</code></h1><ol>\n<li><p><code>ggplot2</code>限制Y轴范围：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">coord_cartesian(ylim = <span class=\"built_in\">c</span>(<span class=\"number\">5</span>, <span class=\"number\">22</span>))</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>输出中文：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme_bw(base_family = <span class=\"string\">&quot;STKaiti&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>坐标轴文字角度：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axis.text.x = element_text(angle = <span class=\"number\">45</span>, hjust = <span class=\"number\">1</span>, vjust = <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>导出成<code>PPT</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export::graph2ppt(p2, width = <span class=\"number\">6</span>, height = <span class=\"number\">5</span>,</span><br><span class=\"line\">                  margins = <span class=\"built_in\">c</span>(top = <span class=\"number\">0.5</span>, right = <span class=\"number\">0.5</span>, </span><br><span class=\"line\">                                  bottom = <span class=\"number\">0.5</span>, left= <span class=\"number\">0.5</span>), </span><br><span class=\"line\">                  center = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">                  file = <span class=\"string\">&#x27;../results/PPT/稻瘟病发病情况（2020）.ppt&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>渐变色填充：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scale_fill_gradient2(low = <span class=\"string\">&quot;#000080&quot;</span>, mid = <span class=\"string\">&quot;white&quot;</span>, high = <span class=\"string\">&quot;#B22222&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>图例名称：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">labs(fill = <span class=\"string\">&#x27;Cor&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>坐标轴刻度长度：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme(axis.ticks.length.y = unit(<span class=\"number\">0</span>,<span class=\"string\">&#x27;mm&#x27;</span>))</span><br></pre></td></tr></table></figure></li>\n<li><p>颠倒X轴和Y轴：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">coord_flip()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"热图相关\"><a href=\"#热图相关\" class=\"headerlink\" title=\"热图相关\"></a>热图相关</h1><ol>\n<li><p><code>ComplexHeatmap</code>注释的颜色设置：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ann.right = HeatmapAnnotation(which = <span class=\"string\">&#x27;row&#x27;</span>,</span><br><span class=\"line\">                              gap = unit(<span class=\"number\">1.5</span>,<span class=\"string\">&#x27;mm&#x27;</span>),</span><br><span class=\"line\">                              `Class I` = res.cor.3$`Class I`,</span><br><span class=\"line\">                              annotation_name_side = <span class=\"string\">&#x27;top&#x27;</span>,</span><br><span class=\"line\">                              annotation_name_rot = <span class=\"number\">90</span>,</span><br><span class=\"line\">                              annotation_name_offset = unit(<span class=\"number\">2</span>,<span class=\"string\">&#x27;mm&#x27;</span>),</span><br><span class=\"line\">                              col = <span class=\"built_in\">list</span>(`Class I` = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Lipids&#x27;</span> = <span class=\"string\">&#x27;#DC143C&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Phenolic acids&#x27;</span> = <span class=\"string\">&#x27;#00FF00&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Alkaloids&#x27;</span> = <span class=\"string\">&#x27;#483D8B&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Terpenoids&#x27;</span> = <span class=\"string\">&#x27;#808000&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Organic acids&#x27;</span> = <span class=\"string\">&#x27;#FF8C00&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Others&#x27;</span> = <span class=\"string\">&#x27;#B22222&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Nucleotides&#x27;</span> = <span class=\"string\">&#x27;#000000&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Flavonoids&#x27;</span> = <span class=\"string\">&#x27;#006400&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Amino acids&#x27;</span> = <span class=\"string\">&#x27;#0000CD&#x27;</span>)))</span><br></pre></td></tr></table></figure></li>\n<li><p>调用<code>pheatmap</code>包中的函数解决<code>ComplexHeatmap::Heatmap</code>数据标准化问题：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.heatmap[,<span class=\"number\">1</span>:<span class=\"number\">6</span>] %&gt;% as.matrix() %&gt;%</span><br><span class=\"line\">  pheatmap:::scale_rows() %&gt;%</span><br><span class=\"line\">  ComplexHeatmap::Heatmap(name = <span class=\"string\">&#x27;相 对\\n表达量&#x27;</span>,</span><br><span class=\"line\">                          col = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;navy&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;firebrick3&quot;</span>),</span><br><span class=\"line\">                          show_row_names = <span class=\"literal\">FALSE</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>热图标注显著性：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p.cor = quickcor(design, mes, cor.test = <span class=\"literal\">TRUE</span>) +</span><br><span class=\"line\">  geom_colour() +</span><br><span class=\"line\">  geom_mark(r = <span class=\"literal\">NA</span>,sig.thres = <span class=\"number\">0.05</span>, </span><br><span class=\"line\">            size = <span class=\"number\">5</span>, color = <span class=\"string\">&#x27;black&#x27;</span>,</span><br><span class=\"line\">            nudge_x = <span class=\"number\">0</span>, nudge_y = <span class=\"number\">0</span>) +</span><br><span class=\"line\">  scale_fill_gradient2(low = <span class=\"string\">&quot;navy&quot;</span>, </span><br><span class=\"line\">                       mid = <span class=\"string\">&quot;white&quot;</span>, </span><br><span class=\"line\">                       high = <span class=\"string\">&quot;firebrick3&quot;</span>)+</span><br><span class=\"line\">  labs(fill = <span class=\"string\">&#x27;Cor&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggcor</code>绘制两个矩阵的热图：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">quickcor(df.dems.1, df.degs.1.down, cor.test = <span class=\"literal\">TRUE</span>, height = <span class=\"number\">10</span>) +</span><br><span class=\"line\">    geom_colour() +</span><br><span class=\"line\">    scale_fill_gradient2(low = <span class=\"string\">&quot;navy&quot;</span>, </span><br><span class=\"line\">                         mid = <span class=\"string\">&quot;white&quot;</span>, </span><br><span class=\"line\">                         high = <span class=\"string\">&quot;firebrick3&quot;</span>)+</span><br><span class=\"line\">    labs(fill = <span class=\"string\">&#x27;Cor&#x27;</span>)+</span><br><span class=\"line\">    remove_x_axis() +</span><br><span class=\"line\">    theme(axis.ticks.length.y = unit(<span class=\"number\">0</span>,<span class=\"string\">&#x27;mm&#x27;</span>),</span><br><span class=\"line\">          axis.text.y = element_text(size = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h1><ol>\n<li><p><code>dcast()</code>函数用法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reshape2::dcast(res.cor, gene ~ meta) <span class=\"comment\"># gene是行，meta是列</span></span><br><span class=\"line\"><span class=\"comment\"># acast()函数的话直接就生成rownames</span></span><br><span class=\"line\"><span class=\"comment\"># gene在第一列，meta在第二列，这样才能成功，我也不知道是为啥！</span></span><br></pre></td></tr></table></figure></li>\n<li><p>方差分析多重比较：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tuk.15 = glht(fit.15, linfct = mcp(donor = <span class=\"string\">&#x27;Tukey&#x27;</span>))</span><br><span class=\"line\">sig.15 = cld(tuk.15, level = <span class=\"number\">0.95</span>, decreasing = <span class=\"literal\">TRUE</span>)[[<span class=\"string\">&quot;mcletters&quot;</span>]][[<span class=\"string\">&quot;Letters&quot;</span>]] %&gt;%</span><br><span class=\"line\">        as.data.frame()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>经常要用到<code>R</code>，有些小技巧每次都要去查，比较麻烦，干脆记录一下。</p>","more":"<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><ol>\n<li><p>安装<code>Rtools</code>：</p>\n<ul>\n<li><p>安装 Rtools4.0，安装包：<a href=\"https://link.zhihu.com/?target=https://cran.r-project.org/bin/windows/Rtools/\">https://cran.r-project.org/bin/windows/Rtools/</a></p>\n</li>\n<li><p>配置环境</p>\n<ul>\n<li><p>在 RStudio 里面运行以下脚本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">writeLines(<span class=\"string\">&#x27;PATH=&quot;$&#123;RTOOLS40_HOME&#125;\\\\usr\\\\bin;$&#123;PATH&#125;&quot;&#x27;</span>, con = <span class=\"string\">&quot;~/.Renviron&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>重新启动 RStudio，然后运行以下代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sys.which(<span class=\"string\">&quot;make&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>会得到结果：”C:\\rtools40\\usr\\bin\\make.exe”（也就是 make.exe 的路径）</p>\n</li>\n<li><p>尝试安装一个包</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages(<span class=\"string\">&quot;jsonlite&quot;</span>, type = <span class=\"string\">&quot;source&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>RStudio</code>中文乱码：<br>菜单栏中的 <code>file-&gt;reopen with encoding-&gt;utf-8</code></p>\n</li>\n<li><p><code>Rshiny</code>上传文件大小限制：在<code>server.R</code>文件顶部加上下面这行代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options(shiny.maxRequestSize=<span class=\"number\">1000</span>*<span class=\"number\">1024</span>^<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>更新所有R包：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装包</span></span><br><span class=\"line\">install.packages(<span class=\"string\">&quot;rvcheck&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#加载包</span></span><br><span class=\"line\">library(rvcheck)</span><br><span class=\"line\"><span class=\"comment\">#检查R是否有更新</span></span><br><span class=\"line\">rvcheck::check_r()</span><br><span class=\"line\"><span class=\"comment\"># 更新所有R包</span></span><br><span class=\"line\">rvcheck::update_all(check_R = <span class=\"literal\">FALSE</span>,which = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;CRAN&quot;</span>,<span class=\"string\">&quot;BioC&quot;</span>,<span class=\"string\">&quot;github&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>更新R版本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(installr)</span><br><span class=\"line\">updateR()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"ggplot2\"><a href=\"#ggplot2\" class=\"headerlink\" title=\"ggplot2\"></a><code>ggplot2</code></h1><ol>\n<li><p><code>ggplot2</code>限制Y轴范围：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">coord_cartesian(ylim = <span class=\"built_in\">c</span>(<span class=\"number\">5</span>, <span class=\"number\">22</span>))</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>输出中文：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme_bw(base_family = <span class=\"string\">&quot;STKaiti&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>坐标轴文字角度：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axis.text.x = element_text(angle = <span class=\"number\">45</span>, hjust = <span class=\"number\">1</span>, vjust = <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>导出成<code>PPT</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export::graph2ppt(p2, width = <span class=\"number\">6</span>, height = <span class=\"number\">5</span>,</span><br><span class=\"line\">                  margins = <span class=\"built_in\">c</span>(top = <span class=\"number\">0.5</span>, right = <span class=\"number\">0.5</span>, </span><br><span class=\"line\">                                  bottom = <span class=\"number\">0.5</span>, left= <span class=\"number\">0.5</span>), </span><br><span class=\"line\">                  center = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">                  file = <span class=\"string\">&#x27;../results/PPT/稻瘟病发病情况（2020）.ppt&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggplot2</code>渐变色填充：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scale_fill_gradient2(low = <span class=\"string\">&quot;#000080&quot;</span>, mid = <span class=\"string\">&quot;white&quot;</span>, high = <span class=\"string\">&quot;#B22222&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>图例名称：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">labs(fill = <span class=\"string\">&#x27;Cor&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>坐标轴刻度长度：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme(axis.ticks.length.y = unit(<span class=\"number\">0</span>,<span class=\"string\">&#x27;mm&#x27;</span>))</span><br></pre></td></tr></table></figure></li>\n<li><p>颠倒X轴和Y轴：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">coord_flip()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"热图相关\"><a href=\"#热图相关\" class=\"headerlink\" title=\"热图相关\"></a>热图相关</h1><ol>\n<li><p><code>ComplexHeatmap</code>注释的颜色设置：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ann.right = HeatmapAnnotation(which = <span class=\"string\">&#x27;row&#x27;</span>,</span><br><span class=\"line\">                              gap = unit(<span class=\"number\">1.5</span>,<span class=\"string\">&#x27;mm&#x27;</span>),</span><br><span class=\"line\">                              `Class I` = res.cor.3$`Class I`,</span><br><span class=\"line\">                              annotation_name_side = <span class=\"string\">&#x27;top&#x27;</span>,</span><br><span class=\"line\">                              annotation_name_rot = <span class=\"number\">90</span>,</span><br><span class=\"line\">                              annotation_name_offset = unit(<span class=\"number\">2</span>,<span class=\"string\">&#x27;mm&#x27;</span>),</span><br><span class=\"line\">                              col = <span class=\"built_in\">list</span>(`Class I` = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;Lipids&#x27;</span> = <span class=\"string\">&#x27;#DC143C&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Phenolic acids&#x27;</span> = <span class=\"string\">&#x27;#00FF00&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Alkaloids&#x27;</span> = <span class=\"string\">&#x27;#483D8B&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Terpenoids&#x27;</span> = <span class=\"string\">&#x27;#808000&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Organic acids&#x27;</span> = <span class=\"string\">&#x27;#FF8C00&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Others&#x27;</span> = <span class=\"string\">&#x27;#B22222&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Nucleotides&#x27;</span> = <span class=\"string\">&#x27;#000000&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Flavonoids&#x27;</span> = <span class=\"string\">&#x27;#006400&#x27;</span>,</span><br><span class=\"line\">                                                      <span class=\"string\">&#x27;Amino acids&#x27;</span> = <span class=\"string\">&#x27;#0000CD&#x27;</span>)))</span><br></pre></td></tr></table></figure></li>\n<li><p>调用<code>pheatmap</code>包中的函数解决<code>ComplexHeatmap::Heatmap</code>数据标准化问题：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.heatmap[,<span class=\"number\">1</span>:<span class=\"number\">6</span>] %&gt;% as.matrix() %&gt;%</span><br><span class=\"line\">  pheatmap:::scale_rows() %&gt;%</span><br><span class=\"line\">  ComplexHeatmap::Heatmap(name = <span class=\"string\">&#x27;相 对\\n表达量&#x27;</span>,</span><br><span class=\"line\">                          col = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;navy&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;firebrick3&quot;</span>),</span><br><span class=\"line\">                          show_row_names = <span class=\"literal\">FALSE</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>热图标注显著性：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p.cor = quickcor(design, mes, cor.test = <span class=\"literal\">TRUE</span>) +</span><br><span class=\"line\">  geom_colour() +</span><br><span class=\"line\">  geom_mark(r = <span class=\"literal\">NA</span>,sig.thres = <span class=\"number\">0.05</span>, </span><br><span class=\"line\">            size = <span class=\"number\">5</span>, color = <span class=\"string\">&#x27;black&#x27;</span>,</span><br><span class=\"line\">            nudge_x = <span class=\"number\">0</span>, nudge_y = <span class=\"number\">0</span>) +</span><br><span class=\"line\">  scale_fill_gradient2(low = <span class=\"string\">&quot;navy&quot;</span>, </span><br><span class=\"line\">                       mid = <span class=\"string\">&quot;white&quot;</span>, </span><br><span class=\"line\">                       high = <span class=\"string\">&quot;firebrick3&quot;</span>)+</span><br><span class=\"line\">  labs(fill = <span class=\"string\">&#x27;Cor&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p><code>ggcor</code>绘制两个矩阵的热图：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">quickcor(df.dems.1, df.degs.1.down, cor.test = <span class=\"literal\">TRUE</span>, height = <span class=\"number\">10</span>) +</span><br><span class=\"line\">    geom_colour() +</span><br><span class=\"line\">    scale_fill_gradient2(low = <span class=\"string\">&quot;navy&quot;</span>, </span><br><span class=\"line\">                         mid = <span class=\"string\">&quot;white&quot;</span>, </span><br><span class=\"line\">                         high = <span class=\"string\">&quot;firebrick3&quot;</span>)+</span><br><span class=\"line\">    labs(fill = <span class=\"string\">&#x27;Cor&#x27;</span>)+</span><br><span class=\"line\">    remove_x_axis() +</span><br><span class=\"line\">    theme(axis.ticks.length.y = unit(<span class=\"number\">0</span>,<span class=\"string\">&#x27;mm&#x27;</span>),</span><br><span class=\"line\">          axis.text.y = element_text(size = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h1><ol>\n<li><p><code>dcast()</code>函数用法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reshape2::dcast(res.cor, gene ~ meta) <span class=\"comment\"># gene是行，meta是列</span></span><br><span class=\"line\"><span class=\"comment\"># acast()函数的话直接就生成rownames</span></span><br><span class=\"line\"><span class=\"comment\"># gene在第一列，meta在第二列，这样才能成功，我也不知道是为啥！</span></span><br></pre></td></tr></table></figure></li>\n<li><p>方差分析多重比较：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tuk.15 = glht(fit.15, linfct = mcp(donor = <span class=\"string\">&#x27;Tukey&#x27;</span>))</span><br><span class=\"line\">sig.15 = cld(tuk.15, level = <span class=\"number\">0.95</span>, decreasing = <span class=\"literal\">TRUE</span>)[[<span class=\"string\">&quot;mcletters&quot;</span>]][[<span class=\"string\">&quot;Letters&quot;</span>]] %&gt;%</span><br><span class=\"line\">        as.data.frame()</span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"Nature：PTI影响ETI","abbrlink":"52c7bdc4","date":"2021-06-18T06:12:46.000Z","_content":"\nCNS顶刊的文章，光看就很费劲，顶刊就是顶刊。\n\n这是特殊的一段时间，答辩+拍照+聚餐+其他=毕业。在这个特殊的时间段，总是不能收心好好学习，一篇**Nature**的文章看几天都看不完。研究生三年，断断续续看了一些文献，都不成章法，就用这篇文章来总结一下自己看文献的思路和流程吧。\n\n<!-- more -->\n\n# 阅读顺序\n\n我现在阅读文献的顺序基本是固定的，拿到文章先看标题，然后是摘要，要是看完摘要觉得有用的话再扫一眼图表，要是觉得都很OK，那就精读。精读的文献我会关注如下的内容：\n\n{% asset_img 01png %}\n\n每篇文献阅读完成呢我会关注如下的一些东西，包括文章内容有何不足之处、背景方面的积累、有什么新的研究方法、写作手法等。除此之外呢我还会关注文章中用到的软件、算法及特别吸引人的图表等。除了这些之外，文末的参考文献也是很值得关注的，从参考文献就能挖掘到不少东西。\n\n{% asset_img 0.png %}\n\n# 如何get最新文献\n\n现在对我来说就两个途径：微信公众号和Stork。微信公众号推送的文献会很及时，也会有关键的解读，文章质量也是结果筛选的；Stork推送的文献就很新，我通常是浏览标题，看到感兴趣的看看摘要，要是看了摘要还很OK的话就下载下来精读。\n\n# 我是这样看文献的\n\n下面就以**Pattern-recognition receptors are required for NLR-mediated plant immunity**为例，简单说说我的阅读过程。\n\n这个文献的最初是从微信公众号看到的，毕竟是***Nature***上的文章，而且还是经典之作。\n\n首先看标题，文章的标题其实就是文章的主要内容：NLR介导的植物免疫需要模式识别受体的参与。然后顺便扫一眼作者：\n\n>- [Minhang Yuan](https://www.nature.com/articles/s41586-021-03316-6#auth-Minhang-Yuan), \n>- [Zeyu Jiang](https://www.nature.com/articles/s41586-021-03316-6#auth-Zeyu-Jiang), \n>- [Guozhi Bi](https://www.nature.com/articles/s41586-021-03316-6#auth-Guozhi-Bi), \n>- [Kinya Nomura](https://www.nature.com/articles/s41586-021-03316-6#auth-Kinya-Nomura), \n>- [Menghui Liu](https://www.nature.com/articles/s41586-021-03316-6#auth-Menghui-Liu), \n>- [Yiping Wang](https://www.nature.com/articles/s41586-021-03316-6#auth-Yiping-Wang), \n>- [Boying Cai](https://www.nature.com/articles/s41586-021-03316-6#auth-Boying-Cai), \n>- [Jian-Min Zhou](https://www.nature.com/articles/s41586-021-03316-6#auth-Jian_Min-Zhou), \n>- [Sheng Yang He](https://www.nature.com/articles/s41586-021-03316-6#auth-Sheng_Yang-He) & \n>- [Xiu-Fang Xin](https://www.nature.com/articles/s41586-021-03316-6#auth-Xiu_Fang-Xin) \n\n至少看到了几个植物免疫领域的杰出科学家：周俭民老师和何胜洋老师。（PS：有时候看看作者就知道往后应该多关注哪些研究者/研究机构）。\n\n接下来是看摘要：\n\n{% asset_img 1.png %}\n\n首先说了植物免疫对作物生产的重要性，然后阐述植物免疫由PTI和ETI两部分组成，紧接着就说PTI和ETI是由什么诱导激发的，最后引用文献说明PTI和ETI的激发机制和信号级联途径是不一样的。在说完这些背景后，就开始阐述研究结果，最后下结论：这个研究结果有什么用。\n\n既然是精读的文章，那就从前言开始吧（PS：每个研究都是一个完整的故事，如果是跳跃阅读，那很可能无法把整个故事线串起来。）。\n\n>PRRs是具有胞外配体结合阈的类受体激酶和蛋白（RLKs和RLPs）。PRRs能够感知多类微生物保守的分子模式。与PRRs相反的是，NLRs（主要）是胞内的蛋白，能够识别病原物释放进入细胞内的效应子。这些NLRs可以根据其N端结构阈分成CC型、TIR型及CC$_R$型。PRRs和NLRs信号激发的下游细胞响应大部分是重叠的，如防御相关基因表达、ROS产生及胼胝质沉积等。但是呢细胞表面和内部感知系统之间潜在的信号合作机制还不清楚。\n\n顶刊的前言是真的短。从前言部分就能看出这个研究要解决的就是PTI和ETI之间的关系。\n\n选用拟南芥-丁香假单胞菌互作系统为整个研究的研究系统。\n\n先是选用一个无毒且能够激发野生型植株发生ETI的菌株DC3000(*avrRpt2*)。但是用这个菌侵染两个PRR/共受体突变体植株（不能有效识别细菌相关的分子模式）时，并没有激发有效的ETI（下图a）。这个图a怎么看呢？横坐标表示的是不同的植株，第一个是野生型，另外两个是突变体，不同颜色表示的是不同菌株。可以看出DC3000(*avrRpt2*)激发寄主的ETI后，侵染部位的菌量显著减少。但是在突变体中，DC3000(*avrRpt2*)侵染后侵染部位的菌量比野生型多很多。虽然和DC3000侵染后形成的菌量有显著差异，但是比野生型多很多。从这个结果能得到什么结论呢？是“PRR/共受体调控ETI”还是“PRR/共受体参与ETI”呢？似乎还只能说PRR/共受体可能参与了ETI。为了进一步说明这个结果，还做了更多的处理（下图b）。ETI期间的超敏反应会导致寄主细胞的快速死亡。从表型（下图c）可以看到的是，在野生型植株中，DC3000(*avrRpt2*)侵染后几乎所有的叶片都“塌陷”（tissue collapse）了；但是两个突变体植株的叶片的“塌陷”情况缓解了很多。\n\n{% asset_img 2.png %}\n\n那上面这些结果是想要表达什么呢？其实就是想说PRR/共受体影响ETI。到这里下一步该怎么办呢？是不是应该拿到更多更细的数据说明PRR/共受体确实影响了ETI呢？DC3000是研究拟南芥-细菌互作的模式菌株，研究其激发拟南芥ETI的机制。单是之前的研究发现野生型DC3000体内的36个效应子基因的效应子会干扰拟南芥的PTI和ETI。那就需要找一个完美的菌，也就是找个只能激发PTI和只能激发ETI的菌。选用的菌是D36E，这个菌没有DC3000的36个效应子基因，也没有冠菌素生物合成基因，只能激发寄主的PTI响应；而D36E(avrRpt2)只能合成分泌一个效应子AvrRpt2，不但能激发PTI，还能激发ETI。D36E毒性比DC3000若很多，但是D36E(avrRpt2)还是能显著地激发ETI（最左边的两个柱子）。但是在两个突变体中，D36E(avrRpt2)释放的效应子AvrRpt2激发的ETI几乎检测不到。其实这也再次说明当寄主没有PRR/共受体的时候，效应子激发的ETI是很弱的。\n\n{% asset_img 3.png %}\n\nPTI和ETI过程都会有大量ROS生成，ROS可以直接杀菌，也能作为信号物质激发下游更多的免疫响应。植物病原互作基本都会选择ROS作指标。这个研究也对ROS进行检测了。使用的植物材料很特殊，是*Dex:avrRpt2*，这个是啥意思呢？表示的是*avrRpt2*这个基因的表达会被一个由地塞米松诱导的启动子驱动表达，也就是说地塞米松能够诱导*avrRpt2*这个基因表达，从而激发ETI。用不同的激发子处理拟南芥叶片。从下图c可以看到的是flg22和flg22+地塞米松都能能够有效地激发ROS的生成，大概在35min的时候达到第一个峰值。地塞米松单独激发的情况下，第一个时间段并没有出现ROS峰值。flg22单独诱导的时候会出现第二个峰至，但是明显比flg+22激发的ROS少。这表明flg22激发的ROS（PTI$^{ROS}$）是在35min内生成的。flg22+地塞米松诱导生成的ROS简写为ETI$^{ROS}$。ETI$^{ROS}$大概在处理后2-3h发生，并且持续较长时间。比较有趣的是，单独地塞米松诱导激发的时候第二阶段产生的ROS很少，还没有 flg22激发的PTI在第二阶段产生的ROS多，但是flg22+地塞米松联合处理后，第二阶段产生的ROS超级多。那flg22+地塞米松诱导激发的ROS是不是被flg22激发的PTI的信号影响了呢？\n\n{% asset_img 4.png %}\n\n为了解决上述这个疑问，作者先用flg22+地塞米松处理叶片，然后在第35分钟的时候用双蒸水洗掉溶液中的是flg22和地塞米松，然后再分别加入双蒸水、flg22、地塞米松及flg22+地塞米松。在第二阶段，双蒸水处理和地塞米松处理长生的ROS的量及持续时间差不多，这说明当flg22被冲洗掉以后。但是单独flg22激发的ROS和flg22+地塞米松激发的ROS的量及持续时间类似。这个结果表明ETI$^{ROS}$的产生需要flg22的加入才能完成。\n\n{% asset_img 5.png %}\n\n除此之外，还利用突变体进行验证。在*bbc*突变体（没有PRR/共受体）中，flg22在第一阶段并没有激发ROS的爆发，而且也几乎没有ETI$^{ROS}$生成。\n\n{% asset_img 6.png %}\n\n上述这些结果要说明啥呢？主要就是说明ETI$^{ROS}$的生成需要PRR/共受体的参与。为什么呢？我的理解是，如果ETI$^{ROS}$的生成不需要PRR/共受体的参与，那地塞米松单独的诱导就应该能够激发ETI$^{ROS}$的生成，但是呢并没有；反而flg22+地塞米松共同诱导时，ETI$^{ROS}$才大量生成爆发。\n\n从上面这些结果，我能感受到的是，为了说明白一个现象，应该从多方面入手。首先要选择合适的材料，也就是要选择合适的突变体材料，不同的目的选择不同的材料。另外呢，不仅仅要从表型入手，还要从一定的衡量指标入手，比如ROS的爆发这个指标。\n\n似乎，到这里就卡住了。要是我，到这里就完全卡住了。作者下一步是去探究PTI、ETI相关的ROS在胞内爆发的位置是不是同一个位置。\n\n用荧光染料H$_2$DCFDA进行染色。发现D36E(*avrRpt2*)在侵染野生型植株5h后，在质外体空间有大量的ROS，在两个突变体中ROS的量都很少。这个结果就这样一句话。然后阐述的是两类酶：NADPH氧化酶和过氧化物酶。这类个酶有啥用呢？这两类酶参与了病原相关质外体ROS生成。然后呢是探究这两类酶中的哪一类和ETI$^{ROS}$的生成相关。\n\n{% asset_img 7.png %}\n\n怎么验证呢？那当然是使用化学抑制剂。选用的化学抑制剂是NADPH氧化酶抑制剂DPI（二苯基碘），过氧化物酶抑制剂SHAM（水杨基氧肟酸）和叠氮化钠（$NaN_3$）。从下图a看可以看出的是，DPI处理后第二阶段ROS的爆发显著减少，几乎没有。\n\n{% asset_img 8.png %}\n\n为了进一步确认DPI抑制了第二阶段ROS的爆发，在前处理的第40分钟加入这三个抑制剂。为什么要选择第40分钟呢？因为这个时间点刚好在PTI$^{ROS}$之后，在ETI$^{ROS}$之前。同样只有DPI处理后第二阶段的ROS爆发才被明显抑制。这两个结果就说明ETI$^{ROS}$是由NADPH氧化酶介导的。\n\n{% asset_img 9.png %}\n\nNADPH氧化酶不止一种，那研究哪种呢？在这个研究中选择的是RESPIRATORY BURST OXIDASE HOMOLOGUE D（RBOHD，呼吸爆发氧化酶同系物D）。D36E(*avrRpt2*)能够引起野生型植株质外体空间大量的ROS爆发，但是在*rbohd*突变体植株中几乎没有ROS的爆发。作者再找个地方的结论是RBOHD是连接PTI和ETI的关键分子节点。\n\n{% asset_img 10.png %}\n\n先梳理下前面的思路和流程。先是通过比较细菌的量发现ETI成功激活需要PRR/核心受体的参与。再用只能激发PTI的菌D36E和能够激发PTI+ETI的菌D36E(*avrRpt2*)，以野生型和突变体（没有PRR/共受体）为寄主材料，进一步探究细菌的菌量，在再一次验证的基础上又对ROS进行衡量，在确定ETI$^{ROS}$的爆发需要PTI信号参与后，再对影响ETI$^{ROS}$的酶进行探究（PS：个人觉得从这里开始就是机制探究了，前面的都属于“表型”确证）。探究的方法是通过使用化学抑制剂。通过化学抑制剂发现NADPH氧化酶是影响的ETI$^{ROS}$的关键酶，NADPH酶不止一个，那先哪个呢？作者选的是RBOHD这个酶（我猜他们做了很多酶，发现这个还好，就选这个进行后续的验证）。\n\n既然发现RBOHD是连接PTI和ETI的关键节点，那就应该对RBOHD进行更深入的研究。管它呢，转录组先安排上😂。从转录组（下图d）可以看到的是，野生型植株在被D36E和D36E(*avrRpt2*)侵染后，*RBOHD*的表达量都比CK的提高了，但是呢D36E(*avrRpt2*)侵染后*RBOHD*表达量更高。我们可以看到的是，在突变体*bbc*中，D36E几乎没有诱导*RBOHD*的表达，但是D36E(*avrRpt2*)侵染后，*bbc*这个突变体中*RBOHD*的表达量显著增强。这个地方就有点奇怪了。按理说在野生型植株中，D36E(*avrRpt2*)能够激发PTI+ETI，*RBOHD*的表达量确实会很高。但是在*bbc*突变体植株中，是没有PRR/共受体的，也就是没有PTI的发生的，但是*RBOHD*的表达量却比野生型的还高。作者从这个地方看出来的是在ETI过程中，PRR信号会导致*RBOHD*出现翻译后调控（修饰）。到这个地方这个结果就没有更多的解释了。下一步作者谈到的是ROS产生的过程中CPKs和BIK1等激酶会参与磷酸化RBOHD（PS：我觉得，蛋白质翻译后修饰的方式有很多种，磷酸化是最常见的，因此关注磷酸化）。\n\n{% asset_img 11.png %}\n\n下一步呢就对这两个激酶的功能进行验证，看看是谁在磷酸化RBOHD，从而影响ROS的合成。还是利用突变体进行染色，发现在突变体*bik1*中，ROS的生成明显减少，但是在*cpk*的突变体中ROS的生成和野生型差不多（下图）。\n\n{% asset_img 12.png %}\n\n在确定是BIK1在起作用后，就去看看在PTI和ETI的过程中，RBOHD磷酸化水平是不是有差异（下图）。可以看到的是，在野生型植株中，单独的地塞米松能够引起RNOHD轻微的磷酸化，flg22+地塞米松会引起RBOHD更强烈的磷酸化。但是在*bbc*突变体中没有观察到磷酸化。这也就说明PTI信号对RBOHD的磷酸化是重要的。*bbc*突变体没有PRR/共受体，那也就不能产生PTI信号，没有PTI信号刺激，没有发生磷酸化，那也就是说PTI信号影响RBOHD的磷酸化。如果RBOHD的磷酸化不需要PTI信号，那在*bbc*突变体中，地塞米松或者flg22+地塞米松处理下应该能够看到RBOHD的磷酸化。这个结果再次说明ETI过程中RBOHD磷酸化的发生需要PRR/共受体的参与才能完成。\n\n{% asset_img 13.png %}\n\n除此之外呢，还发现RBOHD的磷酸化需要BIK1的参与才能完成（下图）。\n\n{% asset_img 14.png %}\n\n从上面这几个结果得到一个结论：PTI和ETI都在影响RBOHD生成ROS，其中NLR信号影响了RBOHD的丰度，PRR-BIK1信号影响了RBOHD的全活性。其实也就是ETI信号影响RBOHD的多少，而PTI信号+ETI信号则影响着RBOHD的功能。\n\nRBOHD的激活需要PTI信号，而且在ETI期间，RBOHD的表达有限制的提高，这是不是意味着ETI不仅仅选择PTI通路中的某些成分作为其机制，还选择RBOHD作为其机制呢？说简单点就是ETI的过程中是不是PTI成分和RBOHD都参与了呢？\n\n{% asset_img 15.png %}\n\n怎么解决上面这个问题呢？还是转录组！\n\n{% asset_img 16.png %}\n\n从上图c可以看到的是，在D36E(*avrRpt2*)侵染后3小时，就已经有大量的基因的转录表达发生了变化。怎么看呢？D36E侵染后3小时，只有3820个基因发生变化；D36E(*avrRpt2*)侵染后3小时，有7967个基因发生变化。这也就说明3个小时内，c的效应子AvrRpt2就能够进入信号内激发ETI。值得注意的是，不管是在野生型还是突变体中，D36E(*avrRpt2*)侵染后，差异基因的表达模式类似（下图d最右边）。这个就很奇怪了啊，在*bbc*突变体中，按理说是没有PTI响应的，只有ETI，那PTI相关的那部分基因的表达就应该有表现出差异，但是并没有，反而是和ETI相关的基因的表达模式类似。这说明啥呢？这表明ETI在被激发后，能够重新影响PTI相关基因的全局表达。水杨酸、茉莉酸及乙烯相关的差异基因的表达模式也类似（下图e-g）。\n\n{% asset_img 17.png %}\n\n在这些差异基因中，从*bbc*这个突变体被D36E(*avrRpt2*)侵染后有272个差异基因。其中一些*WRKY*相关的基因表达下调，还有一个基因—*FRK1*（flg22激发的PTI过程中冠菌素的marker基因）的表达也下调（下图）了。这个结果能说明啥呢？说明WRKY-FRK1是免疫系统中一个独立的分支。\n\n{% asset_img 18.png %}\n\n从转录组的数据中他们还发现BIK1影响了*WRKY22*及*WRKY29*等相关基因的表达（下图）。这说明了啥呢？说明BIK1是ETI$^{ROS}$爆发的一个整合点，也是ETI过程中表达的一个基因集。\n\n{% asset_img 19.png %}\n\n再进一步对基因表达进行分析发现ETI确实增强了免疫相关基因的表达（下图）。\n\n{% asset_img 20.png %}\n\n似乎还不够😂。进一步对PTI信号西瓜基因进行分析。发现D36E能够诱导PTI相关基因的表达轻微上调（下图），但D36E(*avrRpt2*)的诱导效应更强。也就是说这些本来是和PTI相关的基因，却受到ETI的诱导调控（这就是另外一篇文章了😁）。\n\n{% asset_img 21.png %}\n\n不仅仅是对基因的转录水平进行比较，还对蛋白水平进行了比较：\n\n{% asset_img 22.png %}\n\n总的来说就是PTI信号能够很快地诱导PTI相关基因的表达。\n\n这篇文章主要的内容就是这些了。\n\n{% asset_img 23.png %}\n\n# 一句话总结\n\n有效的ETI激发需要PRR及其共受体的参与才能完成。\n\n# 阅读收获\n\n阅读文献必须要有收获才行，不然就白读了。我精读晚这篇文献，有如下这些收获：\n\n- 完善对植物免疫系统的认识；\n- 对突变体有了新认识，随着技术的发展，完全可以获得特定需求的突变体，尤其是地塞米松诱导ETI这个突变体，实在是太赞了，和flg22一样让我好奇；\n- 数据分析思路，包括生物学数据和转录组数据等等的分析，要从图中看到更多的信息，而不是简单的“谁高谁低，有没有差异”。\n\n阅读顶刊就是很累，需要不断查阅资料，下面这些是我在看这个文献时查阅的资料，还不包括浏览器浏览的。阅读顶刊是挑战，也是对自己的知识体系的更新和梳理。\n\n{% asset_img 24.png %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/Nature：PTI影响ETI.md","raw":"---\ntitle: Nature：PTI影响ETI\ntags: 文献\ncategories: 文献\nabbrlink: 52c7bdc4\ndate: 2021-06-18 14:12:46\n---\n\nCNS顶刊的文章，光看就很费劲，顶刊就是顶刊。\n\n这是特殊的一段时间，答辩+拍照+聚餐+其他=毕业。在这个特殊的时间段，总是不能收心好好学习，一篇**Nature**的文章看几天都看不完。研究生三年，断断续续看了一些文献，都不成章法，就用这篇文章来总结一下自己看文献的思路和流程吧。\n\n<!-- more -->\n\n# 阅读顺序\n\n我现在阅读文献的顺序基本是固定的，拿到文章先看标题，然后是摘要，要是看完摘要觉得有用的话再扫一眼图表，要是觉得都很OK，那就精读。精读的文献我会关注如下的内容：\n\n{% asset_img 01png %}\n\n每篇文献阅读完成呢我会关注如下的一些东西，包括文章内容有何不足之处、背景方面的积累、有什么新的研究方法、写作手法等。除此之外呢我还会关注文章中用到的软件、算法及特别吸引人的图表等。除了这些之外，文末的参考文献也是很值得关注的，从参考文献就能挖掘到不少东西。\n\n{% asset_img 0.png %}\n\n# 如何get最新文献\n\n现在对我来说就两个途径：微信公众号和Stork。微信公众号推送的文献会很及时，也会有关键的解读，文章质量也是结果筛选的；Stork推送的文献就很新，我通常是浏览标题，看到感兴趣的看看摘要，要是看了摘要还很OK的话就下载下来精读。\n\n# 我是这样看文献的\n\n下面就以**Pattern-recognition receptors are required for NLR-mediated plant immunity**为例，简单说说我的阅读过程。\n\n这个文献的最初是从微信公众号看到的，毕竟是***Nature***上的文章，而且还是经典之作。\n\n首先看标题，文章的标题其实就是文章的主要内容：NLR介导的植物免疫需要模式识别受体的参与。然后顺便扫一眼作者：\n\n>- [Minhang Yuan](https://www.nature.com/articles/s41586-021-03316-6#auth-Minhang-Yuan), \n>- [Zeyu Jiang](https://www.nature.com/articles/s41586-021-03316-6#auth-Zeyu-Jiang), \n>- [Guozhi Bi](https://www.nature.com/articles/s41586-021-03316-6#auth-Guozhi-Bi), \n>- [Kinya Nomura](https://www.nature.com/articles/s41586-021-03316-6#auth-Kinya-Nomura), \n>- [Menghui Liu](https://www.nature.com/articles/s41586-021-03316-6#auth-Menghui-Liu), \n>- [Yiping Wang](https://www.nature.com/articles/s41586-021-03316-6#auth-Yiping-Wang), \n>- [Boying Cai](https://www.nature.com/articles/s41586-021-03316-6#auth-Boying-Cai), \n>- [Jian-Min Zhou](https://www.nature.com/articles/s41586-021-03316-6#auth-Jian_Min-Zhou), \n>- [Sheng Yang He](https://www.nature.com/articles/s41586-021-03316-6#auth-Sheng_Yang-He) & \n>- [Xiu-Fang Xin](https://www.nature.com/articles/s41586-021-03316-6#auth-Xiu_Fang-Xin) \n\n至少看到了几个植物免疫领域的杰出科学家：周俭民老师和何胜洋老师。（PS：有时候看看作者就知道往后应该多关注哪些研究者/研究机构）。\n\n接下来是看摘要：\n\n{% asset_img 1.png %}\n\n首先说了植物免疫对作物生产的重要性，然后阐述植物免疫由PTI和ETI两部分组成，紧接着就说PTI和ETI是由什么诱导激发的，最后引用文献说明PTI和ETI的激发机制和信号级联途径是不一样的。在说完这些背景后，就开始阐述研究结果，最后下结论：这个研究结果有什么用。\n\n既然是精读的文章，那就从前言开始吧（PS：每个研究都是一个完整的故事，如果是跳跃阅读，那很可能无法把整个故事线串起来。）。\n\n>PRRs是具有胞外配体结合阈的类受体激酶和蛋白（RLKs和RLPs）。PRRs能够感知多类微生物保守的分子模式。与PRRs相反的是，NLRs（主要）是胞内的蛋白，能够识别病原物释放进入细胞内的效应子。这些NLRs可以根据其N端结构阈分成CC型、TIR型及CC$_R$型。PRRs和NLRs信号激发的下游细胞响应大部分是重叠的，如防御相关基因表达、ROS产生及胼胝质沉积等。但是呢细胞表面和内部感知系统之间潜在的信号合作机制还不清楚。\n\n顶刊的前言是真的短。从前言部分就能看出这个研究要解决的就是PTI和ETI之间的关系。\n\n选用拟南芥-丁香假单胞菌互作系统为整个研究的研究系统。\n\n先是选用一个无毒且能够激发野生型植株发生ETI的菌株DC3000(*avrRpt2*)。但是用这个菌侵染两个PRR/共受体突变体植株（不能有效识别细菌相关的分子模式）时，并没有激发有效的ETI（下图a）。这个图a怎么看呢？横坐标表示的是不同的植株，第一个是野生型，另外两个是突变体，不同颜色表示的是不同菌株。可以看出DC3000(*avrRpt2*)激发寄主的ETI后，侵染部位的菌量显著减少。但是在突变体中，DC3000(*avrRpt2*)侵染后侵染部位的菌量比野生型多很多。虽然和DC3000侵染后形成的菌量有显著差异，但是比野生型多很多。从这个结果能得到什么结论呢？是“PRR/共受体调控ETI”还是“PRR/共受体参与ETI”呢？似乎还只能说PRR/共受体可能参与了ETI。为了进一步说明这个结果，还做了更多的处理（下图b）。ETI期间的超敏反应会导致寄主细胞的快速死亡。从表型（下图c）可以看到的是，在野生型植株中，DC3000(*avrRpt2*)侵染后几乎所有的叶片都“塌陷”（tissue collapse）了；但是两个突变体植株的叶片的“塌陷”情况缓解了很多。\n\n{% asset_img 2.png %}\n\n那上面这些结果是想要表达什么呢？其实就是想说PRR/共受体影响ETI。到这里下一步该怎么办呢？是不是应该拿到更多更细的数据说明PRR/共受体确实影响了ETI呢？DC3000是研究拟南芥-细菌互作的模式菌株，研究其激发拟南芥ETI的机制。单是之前的研究发现野生型DC3000体内的36个效应子基因的效应子会干扰拟南芥的PTI和ETI。那就需要找一个完美的菌，也就是找个只能激发PTI和只能激发ETI的菌。选用的菌是D36E，这个菌没有DC3000的36个效应子基因，也没有冠菌素生物合成基因，只能激发寄主的PTI响应；而D36E(avrRpt2)只能合成分泌一个效应子AvrRpt2，不但能激发PTI，还能激发ETI。D36E毒性比DC3000若很多，但是D36E(avrRpt2)还是能显著地激发ETI（最左边的两个柱子）。但是在两个突变体中，D36E(avrRpt2)释放的效应子AvrRpt2激发的ETI几乎检测不到。其实这也再次说明当寄主没有PRR/共受体的时候，效应子激发的ETI是很弱的。\n\n{% asset_img 3.png %}\n\nPTI和ETI过程都会有大量ROS生成，ROS可以直接杀菌，也能作为信号物质激发下游更多的免疫响应。植物病原互作基本都会选择ROS作指标。这个研究也对ROS进行检测了。使用的植物材料很特殊，是*Dex:avrRpt2*，这个是啥意思呢？表示的是*avrRpt2*这个基因的表达会被一个由地塞米松诱导的启动子驱动表达，也就是说地塞米松能够诱导*avrRpt2*这个基因表达，从而激发ETI。用不同的激发子处理拟南芥叶片。从下图c可以看到的是flg22和flg22+地塞米松都能能够有效地激发ROS的生成，大概在35min的时候达到第一个峰值。地塞米松单独激发的情况下，第一个时间段并没有出现ROS峰值。flg22单独诱导的时候会出现第二个峰至，但是明显比flg+22激发的ROS少。这表明flg22激发的ROS（PTI$^{ROS}$）是在35min内生成的。flg22+地塞米松诱导生成的ROS简写为ETI$^{ROS}$。ETI$^{ROS}$大概在处理后2-3h发生，并且持续较长时间。比较有趣的是，单独地塞米松诱导激发的时候第二阶段产生的ROS很少，还没有 flg22激发的PTI在第二阶段产生的ROS多，但是flg22+地塞米松联合处理后，第二阶段产生的ROS超级多。那flg22+地塞米松诱导激发的ROS是不是被flg22激发的PTI的信号影响了呢？\n\n{% asset_img 4.png %}\n\n为了解决上述这个疑问，作者先用flg22+地塞米松处理叶片，然后在第35分钟的时候用双蒸水洗掉溶液中的是flg22和地塞米松，然后再分别加入双蒸水、flg22、地塞米松及flg22+地塞米松。在第二阶段，双蒸水处理和地塞米松处理长生的ROS的量及持续时间差不多，这说明当flg22被冲洗掉以后。但是单独flg22激发的ROS和flg22+地塞米松激发的ROS的量及持续时间类似。这个结果表明ETI$^{ROS}$的产生需要flg22的加入才能完成。\n\n{% asset_img 5.png %}\n\n除此之外，还利用突变体进行验证。在*bbc*突变体（没有PRR/共受体）中，flg22在第一阶段并没有激发ROS的爆发，而且也几乎没有ETI$^{ROS}$生成。\n\n{% asset_img 6.png %}\n\n上述这些结果要说明啥呢？主要就是说明ETI$^{ROS}$的生成需要PRR/共受体的参与。为什么呢？我的理解是，如果ETI$^{ROS}$的生成不需要PRR/共受体的参与，那地塞米松单独的诱导就应该能够激发ETI$^{ROS}$的生成，但是呢并没有；反而flg22+地塞米松共同诱导时，ETI$^{ROS}$才大量生成爆发。\n\n从上面这些结果，我能感受到的是，为了说明白一个现象，应该从多方面入手。首先要选择合适的材料，也就是要选择合适的突变体材料，不同的目的选择不同的材料。另外呢，不仅仅要从表型入手，还要从一定的衡量指标入手，比如ROS的爆发这个指标。\n\n似乎，到这里就卡住了。要是我，到这里就完全卡住了。作者下一步是去探究PTI、ETI相关的ROS在胞内爆发的位置是不是同一个位置。\n\n用荧光染料H$_2$DCFDA进行染色。发现D36E(*avrRpt2*)在侵染野生型植株5h后，在质外体空间有大量的ROS，在两个突变体中ROS的量都很少。这个结果就这样一句话。然后阐述的是两类酶：NADPH氧化酶和过氧化物酶。这类个酶有啥用呢？这两类酶参与了病原相关质外体ROS生成。然后呢是探究这两类酶中的哪一类和ETI$^{ROS}$的生成相关。\n\n{% asset_img 7.png %}\n\n怎么验证呢？那当然是使用化学抑制剂。选用的化学抑制剂是NADPH氧化酶抑制剂DPI（二苯基碘），过氧化物酶抑制剂SHAM（水杨基氧肟酸）和叠氮化钠（$NaN_3$）。从下图a看可以看出的是，DPI处理后第二阶段ROS的爆发显著减少，几乎没有。\n\n{% asset_img 8.png %}\n\n为了进一步确认DPI抑制了第二阶段ROS的爆发，在前处理的第40分钟加入这三个抑制剂。为什么要选择第40分钟呢？因为这个时间点刚好在PTI$^{ROS}$之后，在ETI$^{ROS}$之前。同样只有DPI处理后第二阶段的ROS爆发才被明显抑制。这两个结果就说明ETI$^{ROS}$是由NADPH氧化酶介导的。\n\n{% asset_img 9.png %}\n\nNADPH氧化酶不止一种，那研究哪种呢？在这个研究中选择的是RESPIRATORY BURST OXIDASE HOMOLOGUE D（RBOHD，呼吸爆发氧化酶同系物D）。D36E(*avrRpt2*)能够引起野生型植株质外体空间大量的ROS爆发，但是在*rbohd*突变体植株中几乎没有ROS的爆发。作者再找个地方的结论是RBOHD是连接PTI和ETI的关键分子节点。\n\n{% asset_img 10.png %}\n\n先梳理下前面的思路和流程。先是通过比较细菌的量发现ETI成功激活需要PRR/核心受体的参与。再用只能激发PTI的菌D36E和能够激发PTI+ETI的菌D36E(*avrRpt2*)，以野生型和突变体（没有PRR/共受体）为寄主材料，进一步探究细菌的菌量，在再一次验证的基础上又对ROS进行衡量，在确定ETI$^{ROS}$的爆发需要PTI信号参与后，再对影响ETI$^{ROS}$的酶进行探究（PS：个人觉得从这里开始就是机制探究了，前面的都属于“表型”确证）。探究的方法是通过使用化学抑制剂。通过化学抑制剂发现NADPH氧化酶是影响的ETI$^{ROS}$的关键酶，NADPH酶不止一个，那先哪个呢？作者选的是RBOHD这个酶（我猜他们做了很多酶，发现这个还好，就选这个进行后续的验证）。\n\n既然发现RBOHD是连接PTI和ETI的关键节点，那就应该对RBOHD进行更深入的研究。管它呢，转录组先安排上😂。从转录组（下图d）可以看到的是，野生型植株在被D36E和D36E(*avrRpt2*)侵染后，*RBOHD*的表达量都比CK的提高了，但是呢D36E(*avrRpt2*)侵染后*RBOHD*表达量更高。我们可以看到的是，在突变体*bbc*中，D36E几乎没有诱导*RBOHD*的表达，但是D36E(*avrRpt2*)侵染后，*bbc*这个突变体中*RBOHD*的表达量显著增强。这个地方就有点奇怪了。按理说在野生型植株中，D36E(*avrRpt2*)能够激发PTI+ETI，*RBOHD*的表达量确实会很高。但是在*bbc*突变体植株中，是没有PRR/共受体的，也就是没有PTI的发生的，但是*RBOHD*的表达量却比野生型的还高。作者从这个地方看出来的是在ETI过程中，PRR信号会导致*RBOHD*出现翻译后调控（修饰）。到这个地方这个结果就没有更多的解释了。下一步作者谈到的是ROS产生的过程中CPKs和BIK1等激酶会参与磷酸化RBOHD（PS：我觉得，蛋白质翻译后修饰的方式有很多种，磷酸化是最常见的，因此关注磷酸化）。\n\n{% asset_img 11.png %}\n\n下一步呢就对这两个激酶的功能进行验证，看看是谁在磷酸化RBOHD，从而影响ROS的合成。还是利用突变体进行染色，发现在突变体*bik1*中，ROS的生成明显减少，但是在*cpk*的突变体中ROS的生成和野生型差不多（下图）。\n\n{% asset_img 12.png %}\n\n在确定是BIK1在起作用后，就去看看在PTI和ETI的过程中，RBOHD磷酸化水平是不是有差异（下图）。可以看到的是，在野生型植株中，单独的地塞米松能够引起RNOHD轻微的磷酸化，flg22+地塞米松会引起RBOHD更强烈的磷酸化。但是在*bbc*突变体中没有观察到磷酸化。这也就说明PTI信号对RBOHD的磷酸化是重要的。*bbc*突变体没有PRR/共受体，那也就不能产生PTI信号，没有PTI信号刺激，没有发生磷酸化，那也就是说PTI信号影响RBOHD的磷酸化。如果RBOHD的磷酸化不需要PTI信号，那在*bbc*突变体中，地塞米松或者flg22+地塞米松处理下应该能够看到RBOHD的磷酸化。这个结果再次说明ETI过程中RBOHD磷酸化的发生需要PRR/共受体的参与才能完成。\n\n{% asset_img 13.png %}\n\n除此之外呢，还发现RBOHD的磷酸化需要BIK1的参与才能完成（下图）。\n\n{% asset_img 14.png %}\n\n从上面这几个结果得到一个结论：PTI和ETI都在影响RBOHD生成ROS，其中NLR信号影响了RBOHD的丰度，PRR-BIK1信号影响了RBOHD的全活性。其实也就是ETI信号影响RBOHD的多少，而PTI信号+ETI信号则影响着RBOHD的功能。\n\nRBOHD的激活需要PTI信号，而且在ETI期间，RBOHD的表达有限制的提高，这是不是意味着ETI不仅仅选择PTI通路中的某些成分作为其机制，还选择RBOHD作为其机制呢？说简单点就是ETI的过程中是不是PTI成分和RBOHD都参与了呢？\n\n{% asset_img 15.png %}\n\n怎么解决上面这个问题呢？还是转录组！\n\n{% asset_img 16.png %}\n\n从上图c可以看到的是，在D36E(*avrRpt2*)侵染后3小时，就已经有大量的基因的转录表达发生了变化。怎么看呢？D36E侵染后3小时，只有3820个基因发生变化；D36E(*avrRpt2*)侵染后3小时，有7967个基因发生变化。这也就说明3个小时内，c的效应子AvrRpt2就能够进入信号内激发ETI。值得注意的是，不管是在野生型还是突变体中，D36E(*avrRpt2*)侵染后，差异基因的表达模式类似（下图d最右边）。这个就很奇怪了啊，在*bbc*突变体中，按理说是没有PTI响应的，只有ETI，那PTI相关的那部分基因的表达就应该有表现出差异，但是并没有，反而是和ETI相关的基因的表达模式类似。这说明啥呢？这表明ETI在被激发后，能够重新影响PTI相关基因的全局表达。水杨酸、茉莉酸及乙烯相关的差异基因的表达模式也类似（下图e-g）。\n\n{% asset_img 17.png %}\n\n在这些差异基因中，从*bbc*这个突变体被D36E(*avrRpt2*)侵染后有272个差异基因。其中一些*WRKY*相关的基因表达下调，还有一个基因—*FRK1*（flg22激发的PTI过程中冠菌素的marker基因）的表达也下调（下图）了。这个结果能说明啥呢？说明WRKY-FRK1是免疫系统中一个独立的分支。\n\n{% asset_img 18.png %}\n\n从转录组的数据中他们还发现BIK1影响了*WRKY22*及*WRKY29*等相关基因的表达（下图）。这说明了啥呢？说明BIK1是ETI$^{ROS}$爆发的一个整合点，也是ETI过程中表达的一个基因集。\n\n{% asset_img 19.png %}\n\n再进一步对基因表达进行分析发现ETI确实增强了免疫相关基因的表达（下图）。\n\n{% asset_img 20.png %}\n\n似乎还不够😂。进一步对PTI信号西瓜基因进行分析。发现D36E能够诱导PTI相关基因的表达轻微上调（下图），但D36E(*avrRpt2*)的诱导效应更强。也就是说这些本来是和PTI相关的基因，却受到ETI的诱导调控（这就是另外一篇文章了😁）。\n\n{% asset_img 21.png %}\n\n不仅仅是对基因的转录水平进行比较，还对蛋白水平进行了比较：\n\n{% asset_img 22.png %}\n\n总的来说就是PTI信号能够很快地诱导PTI相关基因的表达。\n\n这篇文章主要的内容就是这些了。\n\n{% asset_img 23.png %}\n\n# 一句话总结\n\n有效的ETI激发需要PRR及其共受体的参与才能完成。\n\n# 阅读收获\n\n阅读文献必须要有收获才行，不然就白读了。我精读晚这篇文献，有如下这些收获：\n\n- 完善对植物免疫系统的认识；\n- 对突变体有了新认识，随着技术的发展，完全可以获得特定需求的突变体，尤其是地塞米松诱导ETI这个突变体，实在是太赞了，和flg22一样让我好奇；\n- 数据分析思路，包括生物学数据和转录组数据等等的分析，要从图中看到更多的信息，而不是简单的“谁高谁低，有没有差异”。\n\n阅读顶刊就是很累，需要不断查阅资料，下面这些是我在看这个文献时查阅的资料，还不包括浏览器浏览的。阅读顶刊是挑战，也是对自己的知识体系的更新和梳理。\n\n{% asset_img 24.png %}\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"Nature：PTI影响ETI","published":1,"updated":"2021-07-06T04:33:48.479Z","_id":"ckwbqwcf00027r0g0bpyr5ll0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>CNS顶刊的文章，光看就很费劲，顶刊就是顶刊。</p>\n<p>这是特殊的一段时间，答辩+拍照+聚餐+其他=毕业。在这个特殊的时间段，总是不能收心好好学习，一篇<strong>Nature</strong>的文章看几天都看不完。研究生三年，断断续续看了一些文献，都不成章法，就用这篇文章来总结一下自己看文献的思路和流程吧。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"阅读顺序\"><a href=\"#阅读顺序\" class=\"headerlink\" title=\"阅读顺序\"></a>阅读顺序</h1><p>我现在阅读文献的顺序基本是固定的，拿到文章先看标题，然后是摘要，要是看完摘要觉得有用的话再扫一眼图表，要是觉得都很OK，那就精读。精读的文献我会关注如下的内容：</p>\n\n\n<p>每篇文献阅读完成呢我会关注如下的一些东西，包括文章内容有何不足之处、背景方面的积累、有什么新的研究方法、写作手法等。除此之外呢我还会关注文章中用到的软件、算法及特别吸引人的图表等。除了这些之外，文末的参考文献也是很值得关注的，从参考文献就能挖掘到不少东西。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/0.png\" class=\"\">\n\n<h1 id=\"如何get最新文献\"><a href=\"#如何get最新文献\" class=\"headerlink\" title=\"如何get最新文献\"></a>如何get最新文献</h1><p>现在对我来说就两个途径：微信公众号和Stork。微信公众号推送的文献会很及时，也会有关键的解读，文章质量也是结果筛选的；Stork推送的文献就很新，我通常是浏览标题，看到感兴趣的看看摘要，要是看了摘要还很OK的话就下载下来精读。</p>\n<h1 id=\"我是这样看文献的\"><a href=\"#我是这样看文献的\" class=\"headerlink\" title=\"我是这样看文献的\"></a>我是这样看文献的</h1><p>下面就以<strong>Pattern-recognition receptors are required for NLR-mediated plant immunity</strong>为例，简单说说我的阅读过程。</p>\n<p>这个文献的最初是从微信公众号看到的，毕竟是<em><strong>Nature</strong></em>上的文章，而且还是经典之作。</p>\n<p>首先看标题，文章的标题其实就是文章的主要内容：NLR介导的植物免疫需要模式识别受体的参与。然后顺便扫一眼作者：</p>\n<blockquote>\n<ul>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Minhang-Yuan\">Minhang Yuan</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Zeyu-Jiang\">Zeyu Jiang</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Guozhi-Bi\">Guozhi Bi</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Kinya-Nomura\">Kinya Nomura</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Menghui-Liu\">Menghui Liu</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Yiping-Wang\">Yiping Wang</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Boying-Cai\">Boying Cai</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Jian_Min-Zhou\">Jian-Min Zhou</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Sheng_Yang-He\">Sheng Yang He</a> &amp; </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Xiu_Fang-Xin\">Xiu-Fang Xin</a> </li>\n</ul>\n</blockquote>\n<p>至少看到了几个植物免疫领域的杰出科学家：周俭民老师和何胜洋老师。（PS：有时候看看作者就知道往后应该多关注哪些研究者/研究机构）。</p>\n<p>接下来是看摘要：</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/1.png\" class=\"\">\n\n<p>首先说了植物免疫对作物生产的重要性，然后阐述植物免疫由PTI和ETI两部分组成，紧接着就说PTI和ETI是由什么诱导激发的，最后引用文献说明PTI和ETI的激发机制和信号级联途径是不一样的。在说完这些背景后，就开始阐述研究结果，最后下结论：这个研究结果有什么用。</p>\n<p>既然是精读的文章，那就从前言开始吧（PS：每个研究都是一个完整的故事，如果是跳跃阅读，那很可能无法把整个故事线串起来。）。</p>\n<blockquote>\n<p>PRRs是具有胞外配体结合阈的类受体激酶和蛋白（RLKs和RLPs）。PRRs能够感知多类微生物保守的分子模式。与PRRs相反的是，NLRs（主要）是胞内的蛋白，能够识别病原物释放进入细胞内的效应子。这些NLRs可以根据其N端结构阈分成CC型、TIR型及CC$_R$型。PRRs和NLRs信号激发的下游细胞响应大部分是重叠的，如防御相关基因表达、ROS产生及胼胝质沉积等。但是呢细胞表面和内部感知系统之间潜在的信号合作机制还不清楚。</p>\n</blockquote>\n<p>顶刊的前言是真的短。从前言部分就能看出这个研究要解决的就是PTI和ETI之间的关系。</p>\n<p>选用拟南芥-丁香假单胞菌互作系统为整个研究的研究系统。</p>\n<p>先是选用一个无毒且能够激发野生型植株发生ETI的菌株DC3000(<em>avrRpt2</em>)。但是用这个菌侵染两个PRR/共受体突变体植株（不能有效识别细菌相关的分子模式）时，并没有激发有效的ETI（下图a）。这个图a怎么看呢？横坐标表示的是不同的植株，第一个是野生型，另外两个是突变体，不同颜色表示的是不同菌株。可以看出DC3000(<em>avrRpt2</em>)激发寄主的ETI后，侵染部位的菌量显著减少。但是在突变体中，DC3000(<em>avrRpt2</em>)侵染后侵染部位的菌量比野生型多很多。虽然和DC3000侵染后形成的菌量有显著差异，但是比野生型多很多。从这个结果能得到什么结论呢？是“PRR/共受体调控ETI”还是“PRR/共受体参与ETI”呢？似乎还只能说PRR/共受体可能参与了ETI。为了进一步说明这个结果，还做了更多的处理（下图b）。ETI期间的超敏反应会导致寄主细胞的快速死亡。从表型（下图c）可以看到的是，在野生型植株中，DC3000(<em>avrRpt2</em>)侵染后几乎所有的叶片都“塌陷”（tissue collapse）了；但是两个突变体植株的叶片的“塌陷”情况缓解了很多。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/2.png\" class=\"\">\n\n<p>那上面这些结果是想要表达什么呢？其实就是想说PRR/共受体影响ETI。到这里下一步该怎么办呢？是不是应该拿到更多更细的数据说明PRR/共受体确实影响了ETI呢？DC3000是研究拟南芥-细菌互作的模式菌株，研究其激发拟南芥ETI的机制。单是之前的研究发现野生型DC3000体内的36个效应子基因的效应子会干扰拟南芥的PTI和ETI。那就需要找一个完美的菌，也就是找个只能激发PTI和只能激发ETI的菌。选用的菌是D36E，这个菌没有DC3000的36个效应子基因，也没有冠菌素生物合成基因，只能激发寄主的PTI响应；而D36E(avrRpt2)只能合成分泌一个效应子AvrRpt2，不但能激发PTI，还能激发ETI。D36E毒性比DC3000若很多，但是D36E(avrRpt2)还是能显著地激发ETI（最左边的两个柱子）。但是在两个突变体中，D36E(avrRpt2)释放的效应子AvrRpt2激发的ETI几乎检测不到。其实这也再次说明当寄主没有PRR/共受体的时候，效应子激发的ETI是很弱的。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/3.png\" class=\"\">\n\n<p>PTI和ETI过程都会有大量ROS生成，ROS可以直接杀菌，也能作为信号物质激发下游更多的免疫响应。植物病原互作基本都会选择ROS作指标。这个研究也对ROS进行检测了。使用的植物材料很特殊，是<em>Dex:avrRpt2</em>，这个是啥意思呢？表示的是<em>avrRpt2</em>这个基因的表达会被一个由地塞米松诱导的启动子驱动表达，也就是说地塞米松能够诱导<em>avrRpt2</em>这个基因表达，从而激发ETI。用不同的激发子处理拟南芥叶片。从下图c可以看到的是flg22和flg22+地塞米松都能能够有效地激发ROS的生成，大概在35min的时候达到第一个峰值。地塞米松单独激发的情况下，第一个时间段并没有出现ROS峰值。flg22单独诱导的时候会出现第二个峰至，但是明显比flg+22激发的ROS少。这表明flg22激发的ROS（PTI$^{ROS}$）是在35min内生成的。flg22+地塞米松诱导生成的ROS简写为ETI$^{ROS}$。ETI$^{ROS}$大概在处理后2-3h发生，并且持续较长时间。比较有趣的是，单独地塞米松诱导激发的时候第二阶段产生的ROS很少，还没有 flg22激发的PTI在第二阶段产生的ROS多，但是flg22+地塞米松联合处理后，第二阶段产生的ROS超级多。那flg22+地塞米松诱导激发的ROS是不是被flg22激发的PTI的信号影响了呢？</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/4.png\" class=\"\">\n\n<p>为了解决上述这个疑问，作者先用flg22+地塞米松处理叶片，然后在第35分钟的时候用双蒸水洗掉溶液中的是flg22和地塞米松，然后再分别加入双蒸水、flg22、地塞米松及flg22+地塞米松。在第二阶段，双蒸水处理和地塞米松处理长生的ROS的量及持续时间差不多，这说明当flg22被冲洗掉以后。但是单独flg22激发的ROS和flg22+地塞米松激发的ROS的量及持续时间类似。这个结果表明ETI$^{ROS}$的产生需要flg22的加入才能完成。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/5.png\" class=\"\">\n\n<p>除此之外，还利用突变体进行验证。在<em>bbc</em>突变体（没有PRR/共受体）中，flg22在第一阶段并没有激发ROS的爆发，而且也几乎没有ETI$^{ROS}$生成。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/6.png\" class=\"\">\n\n<p>上述这些结果要说明啥呢？主要就是说明ETI$^{ROS}$的生成需要PRR/共受体的参与。为什么呢？我的理解是，如果ETI$^{ROS}$的生成不需要PRR/共受体的参与，那地塞米松单独的诱导就应该能够激发ETI$^{ROS}$的生成，但是呢并没有；反而flg22+地塞米松共同诱导时，ETI$^{ROS}$才大量生成爆发。</p>\n<p>从上面这些结果，我能感受到的是，为了说明白一个现象，应该从多方面入手。首先要选择合适的材料，也就是要选择合适的突变体材料，不同的目的选择不同的材料。另外呢，不仅仅要从表型入手，还要从一定的衡量指标入手，比如ROS的爆发这个指标。</p>\n<p>似乎，到这里就卡住了。要是我，到这里就完全卡住了。作者下一步是去探究PTI、ETI相关的ROS在胞内爆发的位置是不是同一个位置。</p>\n<p>用荧光染料H$_2$DCFDA进行染色。发现D36E(<em>avrRpt2</em>)在侵染野生型植株5h后，在质外体空间有大量的ROS，在两个突变体中ROS的量都很少。这个结果就这样一句话。然后阐述的是两类酶：NADPH氧化酶和过氧化物酶。这类个酶有啥用呢？这两类酶参与了病原相关质外体ROS生成。然后呢是探究这两类酶中的哪一类和ETI$^{ROS}$的生成相关。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/7.png\" class=\"\">\n\n<p>怎么验证呢？那当然是使用化学抑制剂。选用的化学抑制剂是NADPH氧化酶抑制剂DPI（二苯基碘），过氧化物酶抑制剂SHAM（水杨基氧肟酸）和叠氮化钠（$NaN_3$）。从下图a看可以看出的是，DPI处理后第二阶段ROS的爆发显著减少，几乎没有。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/8.png\" class=\"\">\n\n<p>为了进一步确认DPI抑制了第二阶段ROS的爆发，在前处理的第40分钟加入这三个抑制剂。为什么要选择第40分钟呢？因为这个时间点刚好在PTI$^{ROS}$之后，在ETI$^{ROS}$之前。同样只有DPI处理后第二阶段的ROS爆发才被明显抑制。这两个结果就说明ETI$^{ROS}$是由NADPH氧化酶介导的。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/9.png\" class=\"\">\n\n<p>NADPH氧化酶不止一种，那研究哪种呢？在这个研究中选择的是RESPIRATORY BURST OXIDASE HOMOLOGUE D（RBOHD，呼吸爆发氧化酶同系物D）。D36E(<em>avrRpt2</em>)能够引起野生型植株质外体空间大量的ROS爆发，但是在<em>rbohd</em>突变体植株中几乎没有ROS的爆发。作者再找个地方的结论是RBOHD是连接PTI和ETI的关键分子节点。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/10.png\" class=\"\">\n\n<p>先梳理下前面的思路和流程。先是通过比较细菌的量发现ETI成功激活需要PRR/核心受体的参与。再用只能激发PTI的菌D36E和能够激发PTI+ETI的菌D36E(<em>avrRpt2</em>)，以野生型和突变体（没有PRR/共受体）为寄主材料，进一步探究细菌的菌量，在再一次验证的基础上又对ROS进行衡量，在确定ETI$^{ROS}$的爆发需要PTI信号参与后，再对影响ETI$^{ROS}$的酶进行探究（PS：个人觉得从这里开始就是机制探究了，前面的都属于“表型”确证）。探究的方法是通过使用化学抑制剂。通过化学抑制剂发现NADPH氧化酶是影响的ETI$^{ROS}$的关键酶，NADPH酶不止一个，那先哪个呢？作者选的是RBOHD这个酶（我猜他们做了很多酶，发现这个还好，就选这个进行后续的验证）。</p>\n<p>既然发现RBOHD是连接PTI和ETI的关键节点，那就应该对RBOHD进行更深入的研究。管它呢，转录组先安排上😂。从转录组（下图d）可以看到的是，野生型植株在被D36E和D36E(<em>avrRpt2</em>)侵染后，<em>RBOHD</em>的表达量都比CK的提高了，但是呢D36E(<em>avrRpt2</em>)侵染后<em>RBOHD</em>表达量更高。我们可以看到的是，在突变体<em>bbc</em>中，D36E几乎没有诱导<em>RBOHD</em>的表达，但是D36E(<em>avrRpt2</em>)侵染后，<em>bbc</em>这个突变体中<em>RBOHD</em>的表达量显著增强。这个地方就有点奇怪了。按理说在野生型植株中，D36E(<em>avrRpt2</em>)能够激发PTI+ETI，<em>RBOHD</em>的表达量确实会很高。但是在<em>bbc</em>突变体植株中，是没有PRR/共受体的，也就是没有PTI的发生的，但是<em>RBOHD</em>的表达量却比野生型的还高。作者从这个地方看出来的是在ETI过程中，PRR信号会导致<em>RBOHD</em>出现翻译后调控（修饰）。到这个地方这个结果就没有更多的解释了。下一步作者谈到的是ROS产生的过程中CPKs和BIK1等激酶会参与磷酸化RBOHD（PS：我觉得，蛋白质翻译后修饰的方式有很多种，磷酸化是最常见的，因此关注磷酸化）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/11.png\" class=\"\">\n\n<p>下一步呢就对这两个激酶的功能进行验证，看看是谁在磷酸化RBOHD，从而影响ROS的合成。还是利用突变体进行染色，发现在突变体<em>bik1</em>中，ROS的生成明显减少，但是在<em>cpk</em>的突变体中ROS的生成和野生型差不多（下图）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/12.png\" class=\"\">\n\n<p>在确定是BIK1在起作用后，就去看看在PTI和ETI的过程中，RBOHD磷酸化水平是不是有差异（下图）。可以看到的是，在野生型植株中，单独的地塞米松能够引起RNOHD轻微的磷酸化，flg22+地塞米松会引起RBOHD更强烈的磷酸化。但是在<em>bbc</em>突变体中没有观察到磷酸化。这也就说明PTI信号对RBOHD的磷酸化是重要的。<em>bbc</em>突变体没有PRR/共受体，那也就不能产生PTI信号，没有PTI信号刺激，没有发生磷酸化，那也就是说PTI信号影响RBOHD的磷酸化。如果RBOHD的磷酸化不需要PTI信号，那在<em>bbc</em>突变体中，地塞米松或者flg22+地塞米松处理下应该能够看到RBOHD的磷酸化。这个结果再次说明ETI过程中RBOHD磷酸化的发生需要PRR/共受体的参与才能完成。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/13.png\" class=\"\">\n\n<p>除此之外呢，还发现RBOHD的磷酸化需要BIK1的参与才能完成（下图）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/14.png\" class=\"\">\n\n<p>从上面这几个结果得到一个结论：PTI和ETI都在影响RBOHD生成ROS，其中NLR信号影响了RBOHD的丰度，PRR-BIK1信号影响了RBOHD的全活性。其实也就是ETI信号影响RBOHD的多少，而PTI信号+ETI信号则影响着RBOHD的功能。</p>\n<p>RBOHD的激活需要PTI信号，而且在ETI期间，RBOHD的表达有限制的提高，这是不是意味着ETI不仅仅选择PTI通路中的某些成分作为其机制，还选择RBOHD作为其机制呢？说简单点就是ETI的过程中是不是PTI成分和RBOHD都参与了呢？</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/15.png\" class=\"\">\n\n<p>怎么解决上面这个问题呢？还是转录组！</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/16.png\" class=\"\">\n\n<p>从上图c可以看到的是，在D36E(<em>avrRpt2</em>)侵染后3小时，就已经有大量的基因的转录表达发生了变化。怎么看呢？D36E侵染后3小时，只有3820个基因发生变化；D36E(<em>avrRpt2</em>)侵染后3小时，有7967个基因发生变化。这也就说明3个小时内，c的效应子AvrRpt2就能够进入信号内激发ETI。值得注意的是，不管是在野生型还是突变体中，D36E(<em>avrRpt2</em>)侵染后，差异基因的表达模式类似（下图d最右边）。这个就很奇怪了啊，在<em>bbc</em>突变体中，按理说是没有PTI响应的，只有ETI，那PTI相关的那部分基因的表达就应该有表现出差异，但是并没有，反而是和ETI相关的基因的表达模式类似。这说明啥呢？这表明ETI在被激发后，能够重新影响PTI相关基因的全局表达。水杨酸、茉莉酸及乙烯相关的差异基因的表达模式也类似（下图e-g）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/17.png\" class=\"\">\n\n<p>在这些差异基因中，从<em>bbc</em>这个突变体被D36E(<em>avrRpt2</em>)侵染后有272个差异基因。其中一些<em>WRKY</em>相关的基因表达下调，还有一个基因—<em>FRK1</em>（flg22激发的PTI过程中冠菌素的marker基因）的表达也下调（下图）了。这个结果能说明啥呢？说明WRKY-FRK1是免疫系统中一个独立的分支。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/18.png\" class=\"\">\n\n<p>从转录组的数据中他们还发现BIK1影响了<em>WRKY22</em>及<em>WRKY29</em>等相关基因的表达（下图）。这说明了啥呢？说明BIK1是ETI$^{ROS}$爆发的一个整合点，也是ETI过程中表达的一个基因集。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/19.png\" class=\"\">\n\n<p>再进一步对基因表达进行分析发现ETI确实增强了免疫相关基因的表达（下图）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/20.png\" class=\"\">\n\n<p>似乎还不够😂。进一步对PTI信号西瓜基因进行分析。发现D36E能够诱导PTI相关基因的表达轻微上调（下图），但D36E(<em>avrRpt2</em>)的诱导效应更强。也就是说这些本来是和PTI相关的基因，却受到ETI的诱导调控（这就是另外一篇文章了😁）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/21.png\" class=\"\">\n\n<p>不仅仅是对基因的转录水平进行比较，还对蛋白水平进行了比较：</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/22.png\" class=\"\">\n\n<p>总的来说就是PTI信号能够很快地诱导PTI相关基因的表达。</p>\n<p>这篇文章主要的内容就是这些了。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/23.png\" class=\"\">\n\n<h1 id=\"一句话总结\"><a href=\"#一句话总结\" class=\"headerlink\" title=\"一句话总结\"></a>一句话总结</h1><p>有效的ETI激发需要PRR及其共受体的参与才能完成。</p>\n<h1 id=\"阅读收获\"><a href=\"#阅读收获\" class=\"headerlink\" title=\"阅读收获\"></a>阅读收获</h1><p>阅读文献必须要有收获才行，不然就白读了。我精读晚这篇文献，有如下这些收获：</p>\n<ul>\n<li>完善对植物免疫系统的认识；</li>\n<li>对突变体有了新认识，随着技术的发展，完全可以获得特定需求的突变体，尤其是地塞米松诱导ETI这个突变体，实在是太赞了，和flg22一样让我好奇；</li>\n<li>数据分析思路，包括生物学数据和转录组数据等等的分析，要从图中看到更多的信息，而不是简单的“谁高谁低，有没有差异”。</li>\n</ul>\n<p>阅读顶刊就是很累，需要不断查阅资料，下面这些是我在看这个文献时查阅的资料，还不包括浏览器浏览的。阅读顶刊是挑战，也是对自己的知识体系的更新和梳理。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/24.png\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>CNS顶刊的文章，光看就很费劲，顶刊就是顶刊。</p>\n<p>这是特殊的一段时间，答辩+拍照+聚餐+其他=毕业。在这个特殊的时间段，总是不能收心好好学习，一篇<strong>Nature</strong>的文章看几天都看不完。研究生三年，断断续续看了一些文献，都不成章法，就用这篇文章来总结一下自己看文献的思路和流程吧。</p>","more":"<h1 id=\"阅读顺序\"><a href=\"#阅读顺序\" class=\"headerlink\" title=\"阅读顺序\"></a>阅读顺序</h1><p>我现在阅读文献的顺序基本是固定的，拿到文章先看标题，然后是摘要，要是看完摘要觉得有用的话再扫一眼图表，要是觉得都很OK，那就精读。精读的文献我会关注如下的内容：</p>\n\n\n<p>每篇文献阅读完成呢我会关注如下的一些东西，包括文章内容有何不足之处、背景方面的积累、有什么新的研究方法、写作手法等。除此之外呢我还会关注文章中用到的软件、算法及特别吸引人的图表等。除了这些之外，文末的参考文献也是很值得关注的，从参考文献就能挖掘到不少东西。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/0.png\" class=\"\">\n\n<h1 id=\"如何get最新文献\"><a href=\"#如何get最新文献\" class=\"headerlink\" title=\"如何get最新文献\"></a>如何get最新文献</h1><p>现在对我来说就两个途径：微信公众号和Stork。微信公众号推送的文献会很及时，也会有关键的解读，文章质量也是结果筛选的；Stork推送的文献就很新，我通常是浏览标题，看到感兴趣的看看摘要，要是看了摘要还很OK的话就下载下来精读。</p>\n<h1 id=\"我是这样看文献的\"><a href=\"#我是这样看文献的\" class=\"headerlink\" title=\"我是这样看文献的\"></a>我是这样看文献的</h1><p>下面就以<strong>Pattern-recognition receptors are required for NLR-mediated plant immunity</strong>为例，简单说说我的阅读过程。</p>\n<p>这个文献的最初是从微信公众号看到的，毕竟是<em><strong>Nature</strong></em>上的文章，而且还是经典之作。</p>\n<p>首先看标题，文章的标题其实就是文章的主要内容：NLR介导的植物免疫需要模式识别受体的参与。然后顺便扫一眼作者：</p>\n<blockquote>\n<ul>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Minhang-Yuan\">Minhang Yuan</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Zeyu-Jiang\">Zeyu Jiang</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Guozhi-Bi\">Guozhi Bi</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Kinya-Nomura\">Kinya Nomura</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Menghui-Liu\">Menghui Liu</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Yiping-Wang\">Yiping Wang</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Boying-Cai\">Boying Cai</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Jian_Min-Zhou\">Jian-Min Zhou</a>, </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Sheng_Yang-He\">Sheng Yang He</a> &amp; </li>\n<li><a href=\"https://www.nature.com/articles/s41586-021-03316-6#auth-Xiu_Fang-Xin\">Xiu-Fang Xin</a> </li>\n</ul>\n</blockquote>\n<p>至少看到了几个植物免疫领域的杰出科学家：周俭民老师和何胜洋老师。（PS：有时候看看作者就知道往后应该多关注哪些研究者/研究机构）。</p>\n<p>接下来是看摘要：</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/1.png\" class=\"\">\n\n<p>首先说了植物免疫对作物生产的重要性，然后阐述植物免疫由PTI和ETI两部分组成，紧接着就说PTI和ETI是由什么诱导激发的，最后引用文献说明PTI和ETI的激发机制和信号级联途径是不一样的。在说完这些背景后，就开始阐述研究结果，最后下结论：这个研究结果有什么用。</p>\n<p>既然是精读的文章，那就从前言开始吧（PS：每个研究都是一个完整的故事，如果是跳跃阅读，那很可能无法把整个故事线串起来。）。</p>\n<blockquote>\n<p>PRRs是具有胞外配体结合阈的类受体激酶和蛋白（RLKs和RLPs）。PRRs能够感知多类微生物保守的分子模式。与PRRs相反的是，NLRs（主要）是胞内的蛋白，能够识别病原物释放进入细胞内的效应子。这些NLRs可以根据其N端结构阈分成CC型、TIR型及CC$_R$型。PRRs和NLRs信号激发的下游细胞响应大部分是重叠的，如防御相关基因表达、ROS产生及胼胝质沉积等。但是呢细胞表面和内部感知系统之间潜在的信号合作机制还不清楚。</p>\n</blockquote>\n<p>顶刊的前言是真的短。从前言部分就能看出这个研究要解决的就是PTI和ETI之间的关系。</p>\n<p>选用拟南芥-丁香假单胞菌互作系统为整个研究的研究系统。</p>\n<p>先是选用一个无毒且能够激发野生型植株发生ETI的菌株DC3000(<em>avrRpt2</em>)。但是用这个菌侵染两个PRR/共受体突变体植株（不能有效识别细菌相关的分子模式）时，并没有激发有效的ETI（下图a）。这个图a怎么看呢？横坐标表示的是不同的植株，第一个是野生型，另外两个是突变体，不同颜色表示的是不同菌株。可以看出DC3000(<em>avrRpt2</em>)激发寄主的ETI后，侵染部位的菌量显著减少。但是在突变体中，DC3000(<em>avrRpt2</em>)侵染后侵染部位的菌量比野生型多很多。虽然和DC3000侵染后形成的菌量有显著差异，但是比野生型多很多。从这个结果能得到什么结论呢？是“PRR/共受体调控ETI”还是“PRR/共受体参与ETI”呢？似乎还只能说PRR/共受体可能参与了ETI。为了进一步说明这个结果，还做了更多的处理（下图b）。ETI期间的超敏反应会导致寄主细胞的快速死亡。从表型（下图c）可以看到的是，在野生型植株中，DC3000(<em>avrRpt2</em>)侵染后几乎所有的叶片都“塌陷”（tissue collapse）了；但是两个突变体植株的叶片的“塌陷”情况缓解了很多。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/2.png\" class=\"\">\n\n<p>那上面这些结果是想要表达什么呢？其实就是想说PRR/共受体影响ETI。到这里下一步该怎么办呢？是不是应该拿到更多更细的数据说明PRR/共受体确实影响了ETI呢？DC3000是研究拟南芥-细菌互作的模式菌株，研究其激发拟南芥ETI的机制。单是之前的研究发现野生型DC3000体内的36个效应子基因的效应子会干扰拟南芥的PTI和ETI。那就需要找一个完美的菌，也就是找个只能激发PTI和只能激发ETI的菌。选用的菌是D36E，这个菌没有DC3000的36个效应子基因，也没有冠菌素生物合成基因，只能激发寄主的PTI响应；而D36E(avrRpt2)只能合成分泌一个效应子AvrRpt2，不但能激发PTI，还能激发ETI。D36E毒性比DC3000若很多，但是D36E(avrRpt2)还是能显著地激发ETI（最左边的两个柱子）。但是在两个突变体中，D36E(avrRpt2)释放的效应子AvrRpt2激发的ETI几乎检测不到。其实这也再次说明当寄主没有PRR/共受体的时候，效应子激发的ETI是很弱的。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/3.png\" class=\"\">\n\n<p>PTI和ETI过程都会有大量ROS生成，ROS可以直接杀菌，也能作为信号物质激发下游更多的免疫响应。植物病原互作基本都会选择ROS作指标。这个研究也对ROS进行检测了。使用的植物材料很特殊，是<em>Dex:avrRpt2</em>，这个是啥意思呢？表示的是<em>avrRpt2</em>这个基因的表达会被一个由地塞米松诱导的启动子驱动表达，也就是说地塞米松能够诱导<em>avrRpt2</em>这个基因表达，从而激发ETI。用不同的激发子处理拟南芥叶片。从下图c可以看到的是flg22和flg22+地塞米松都能能够有效地激发ROS的生成，大概在35min的时候达到第一个峰值。地塞米松单独激发的情况下，第一个时间段并没有出现ROS峰值。flg22单独诱导的时候会出现第二个峰至，但是明显比flg+22激发的ROS少。这表明flg22激发的ROS（PTI$^{ROS}$）是在35min内生成的。flg22+地塞米松诱导生成的ROS简写为ETI$^{ROS}$。ETI$^{ROS}$大概在处理后2-3h发生，并且持续较长时间。比较有趣的是，单独地塞米松诱导激发的时候第二阶段产生的ROS很少，还没有 flg22激发的PTI在第二阶段产生的ROS多，但是flg22+地塞米松联合处理后，第二阶段产生的ROS超级多。那flg22+地塞米松诱导激发的ROS是不是被flg22激发的PTI的信号影响了呢？</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/4.png\" class=\"\">\n\n<p>为了解决上述这个疑问，作者先用flg22+地塞米松处理叶片，然后在第35分钟的时候用双蒸水洗掉溶液中的是flg22和地塞米松，然后再分别加入双蒸水、flg22、地塞米松及flg22+地塞米松。在第二阶段，双蒸水处理和地塞米松处理长生的ROS的量及持续时间差不多，这说明当flg22被冲洗掉以后。但是单独flg22激发的ROS和flg22+地塞米松激发的ROS的量及持续时间类似。这个结果表明ETI$^{ROS}$的产生需要flg22的加入才能完成。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/5.png\" class=\"\">\n\n<p>除此之外，还利用突变体进行验证。在<em>bbc</em>突变体（没有PRR/共受体）中，flg22在第一阶段并没有激发ROS的爆发，而且也几乎没有ETI$^{ROS}$生成。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/6.png\" class=\"\">\n\n<p>上述这些结果要说明啥呢？主要就是说明ETI$^{ROS}$的生成需要PRR/共受体的参与。为什么呢？我的理解是，如果ETI$^{ROS}$的生成不需要PRR/共受体的参与，那地塞米松单独的诱导就应该能够激发ETI$^{ROS}$的生成，但是呢并没有；反而flg22+地塞米松共同诱导时，ETI$^{ROS}$才大量生成爆发。</p>\n<p>从上面这些结果，我能感受到的是，为了说明白一个现象，应该从多方面入手。首先要选择合适的材料，也就是要选择合适的突变体材料，不同的目的选择不同的材料。另外呢，不仅仅要从表型入手，还要从一定的衡量指标入手，比如ROS的爆发这个指标。</p>\n<p>似乎，到这里就卡住了。要是我，到这里就完全卡住了。作者下一步是去探究PTI、ETI相关的ROS在胞内爆发的位置是不是同一个位置。</p>\n<p>用荧光染料H$_2$DCFDA进行染色。发现D36E(<em>avrRpt2</em>)在侵染野生型植株5h后，在质外体空间有大量的ROS，在两个突变体中ROS的量都很少。这个结果就这样一句话。然后阐述的是两类酶：NADPH氧化酶和过氧化物酶。这类个酶有啥用呢？这两类酶参与了病原相关质外体ROS生成。然后呢是探究这两类酶中的哪一类和ETI$^{ROS}$的生成相关。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/7.png\" class=\"\">\n\n<p>怎么验证呢？那当然是使用化学抑制剂。选用的化学抑制剂是NADPH氧化酶抑制剂DPI（二苯基碘），过氧化物酶抑制剂SHAM（水杨基氧肟酸）和叠氮化钠（$NaN_3$）。从下图a看可以看出的是，DPI处理后第二阶段ROS的爆发显著减少，几乎没有。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/8.png\" class=\"\">\n\n<p>为了进一步确认DPI抑制了第二阶段ROS的爆发，在前处理的第40分钟加入这三个抑制剂。为什么要选择第40分钟呢？因为这个时间点刚好在PTI$^{ROS}$之后，在ETI$^{ROS}$之前。同样只有DPI处理后第二阶段的ROS爆发才被明显抑制。这两个结果就说明ETI$^{ROS}$是由NADPH氧化酶介导的。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/9.png\" class=\"\">\n\n<p>NADPH氧化酶不止一种，那研究哪种呢？在这个研究中选择的是RESPIRATORY BURST OXIDASE HOMOLOGUE D（RBOHD，呼吸爆发氧化酶同系物D）。D36E(<em>avrRpt2</em>)能够引起野生型植株质外体空间大量的ROS爆发，但是在<em>rbohd</em>突变体植株中几乎没有ROS的爆发。作者再找个地方的结论是RBOHD是连接PTI和ETI的关键分子节点。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/10.png\" class=\"\">\n\n<p>先梳理下前面的思路和流程。先是通过比较细菌的量发现ETI成功激活需要PRR/核心受体的参与。再用只能激发PTI的菌D36E和能够激发PTI+ETI的菌D36E(<em>avrRpt2</em>)，以野生型和突变体（没有PRR/共受体）为寄主材料，进一步探究细菌的菌量，在再一次验证的基础上又对ROS进行衡量，在确定ETI$^{ROS}$的爆发需要PTI信号参与后，再对影响ETI$^{ROS}$的酶进行探究（PS：个人觉得从这里开始就是机制探究了，前面的都属于“表型”确证）。探究的方法是通过使用化学抑制剂。通过化学抑制剂发现NADPH氧化酶是影响的ETI$^{ROS}$的关键酶，NADPH酶不止一个，那先哪个呢？作者选的是RBOHD这个酶（我猜他们做了很多酶，发现这个还好，就选这个进行后续的验证）。</p>\n<p>既然发现RBOHD是连接PTI和ETI的关键节点，那就应该对RBOHD进行更深入的研究。管它呢，转录组先安排上😂。从转录组（下图d）可以看到的是，野生型植株在被D36E和D36E(<em>avrRpt2</em>)侵染后，<em>RBOHD</em>的表达量都比CK的提高了，但是呢D36E(<em>avrRpt2</em>)侵染后<em>RBOHD</em>表达量更高。我们可以看到的是，在突变体<em>bbc</em>中，D36E几乎没有诱导<em>RBOHD</em>的表达，但是D36E(<em>avrRpt2</em>)侵染后，<em>bbc</em>这个突变体中<em>RBOHD</em>的表达量显著增强。这个地方就有点奇怪了。按理说在野生型植株中，D36E(<em>avrRpt2</em>)能够激发PTI+ETI，<em>RBOHD</em>的表达量确实会很高。但是在<em>bbc</em>突变体植株中，是没有PRR/共受体的，也就是没有PTI的发生的，但是<em>RBOHD</em>的表达量却比野生型的还高。作者从这个地方看出来的是在ETI过程中，PRR信号会导致<em>RBOHD</em>出现翻译后调控（修饰）。到这个地方这个结果就没有更多的解释了。下一步作者谈到的是ROS产生的过程中CPKs和BIK1等激酶会参与磷酸化RBOHD（PS：我觉得，蛋白质翻译后修饰的方式有很多种，磷酸化是最常见的，因此关注磷酸化）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/11.png\" class=\"\">\n\n<p>下一步呢就对这两个激酶的功能进行验证，看看是谁在磷酸化RBOHD，从而影响ROS的合成。还是利用突变体进行染色，发现在突变体<em>bik1</em>中，ROS的生成明显减少，但是在<em>cpk</em>的突变体中ROS的生成和野生型差不多（下图）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/12.png\" class=\"\">\n\n<p>在确定是BIK1在起作用后，就去看看在PTI和ETI的过程中，RBOHD磷酸化水平是不是有差异（下图）。可以看到的是，在野生型植株中，单独的地塞米松能够引起RNOHD轻微的磷酸化，flg22+地塞米松会引起RBOHD更强烈的磷酸化。但是在<em>bbc</em>突变体中没有观察到磷酸化。这也就说明PTI信号对RBOHD的磷酸化是重要的。<em>bbc</em>突变体没有PRR/共受体，那也就不能产生PTI信号，没有PTI信号刺激，没有发生磷酸化，那也就是说PTI信号影响RBOHD的磷酸化。如果RBOHD的磷酸化不需要PTI信号，那在<em>bbc</em>突变体中，地塞米松或者flg22+地塞米松处理下应该能够看到RBOHD的磷酸化。这个结果再次说明ETI过程中RBOHD磷酸化的发生需要PRR/共受体的参与才能完成。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/13.png\" class=\"\">\n\n<p>除此之外呢，还发现RBOHD的磷酸化需要BIK1的参与才能完成（下图）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/14.png\" class=\"\">\n\n<p>从上面这几个结果得到一个结论：PTI和ETI都在影响RBOHD生成ROS，其中NLR信号影响了RBOHD的丰度，PRR-BIK1信号影响了RBOHD的全活性。其实也就是ETI信号影响RBOHD的多少，而PTI信号+ETI信号则影响着RBOHD的功能。</p>\n<p>RBOHD的激活需要PTI信号，而且在ETI期间，RBOHD的表达有限制的提高，这是不是意味着ETI不仅仅选择PTI通路中的某些成分作为其机制，还选择RBOHD作为其机制呢？说简单点就是ETI的过程中是不是PTI成分和RBOHD都参与了呢？</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/15.png\" class=\"\">\n\n<p>怎么解决上面这个问题呢？还是转录组！</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/16.png\" class=\"\">\n\n<p>从上图c可以看到的是，在D36E(<em>avrRpt2</em>)侵染后3小时，就已经有大量的基因的转录表达发生了变化。怎么看呢？D36E侵染后3小时，只有3820个基因发生变化；D36E(<em>avrRpt2</em>)侵染后3小时，有7967个基因发生变化。这也就说明3个小时内，c的效应子AvrRpt2就能够进入信号内激发ETI。值得注意的是，不管是在野生型还是突变体中，D36E(<em>avrRpt2</em>)侵染后，差异基因的表达模式类似（下图d最右边）。这个就很奇怪了啊，在<em>bbc</em>突变体中，按理说是没有PTI响应的，只有ETI，那PTI相关的那部分基因的表达就应该有表现出差异，但是并没有，反而是和ETI相关的基因的表达模式类似。这说明啥呢？这表明ETI在被激发后，能够重新影响PTI相关基因的全局表达。水杨酸、茉莉酸及乙烯相关的差异基因的表达模式也类似（下图e-g）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/17.png\" class=\"\">\n\n<p>在这些差异基因中，从<em>bbc</em>这个突变体被D36E(<em>avrRpt2</em>)侵染后有272个差异基因。其中一些<em>WRKY</em>相关的基因表达下调，还有一个基因—<em>FRK1</em>（flg22激发的PTI过程中冠菌素的marker基因）的表达也下调（下图）了。这个结果能说明啥呢？说明WRKY-FRK1是免疫系统中一个独立的分支。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/18.png\" class=\"\">\n\n<p>从转录组的数据中他们还发现BIK1影响了<em>WRKY22</em>及<em>WRKY29</em>等相关基因的表达（下图）。这说明了啥呢？说明BIK1是ETI$^{ROS}$爆发的一个整合点，也是ETI过程中表达的一个基因集。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/19.png\" class=\"\">\n\n<p>再进一步对基因表达进行分析发现ETI确实增强了免疫相关基因的表达（下图）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/20.png\" class=\"\">\n\n<p>似乎还不够😂。进一步对PTI信号西瓜基因进行分析。发现D36E能够诱导PTI相关基因的表达轻微上调（下图），但D36E(<em>avrRpt2</em>)的诱导效应更强。也就是说这些本来是和PTI相关的基因，却受到ETI的诱导调控（这就是另外一篇文章了😁）。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/21.png\" class=\"\">\n\n<p>不仅仅是对基因的转录水平进行比较，还对蛋白水平进行了比较：</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/22.png\" class=\"\">\n\n<p>总的来说就是PTI信号能够很快地诱导PTI相关基因的表达。</p>\n<p>这篇文章主要的内容就是这些了。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/23.png\" class=\"\">\n\n<h1 id=\"一句话总结\"><a href=\"#一句话总结\" class=\"headerlink\" title=\"一句话总结\"></a>一句话总结</h1><p>有效的ETI激发需要PRR及其共受体的参与才能完成。</p>\n<h1 id=\"阅读收获\"><a href=\"#阅读收获\" class=\"headerlink\" title=\"阅读收获\"></a>阅读收获</h1><p>阅读文献必须要有收获才行，不然就白读了。我精读晚这篇文献，有如下这些收获：</p>\n<ul>\n<li>完善对植物免疫系统的认识；</li>\n<li>对突变体有了新认识，随着技术的发展，完全可以获得特定需求的突变体，尤其是地塞米松诱导ETI这个突变体，实在是太赞了，和flg22一样让我好奇；</li>\n<li>数据分析思路，包括生物学数据和转录组数据等等的分析，要从图中看到更多的信息，而不是简单的“谁高谁低，有没有差异”。</li>\n</ul>\n<p>阅读顶刊就是很累，需要不断查阅资料，下面这些是我在看这个文献时查阅的资料，还不包括浏览器浏览的。阅读顶刊是挑战，也是对自己的知识体系的更新和梳理。</p>\n<img src=\"/2021/06/18/Nature%EF%BC%9APTI%E5%BD%B1%E5%93%8DETI/24.png\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"OPLS-DA在R语言中的实现","abbrlink":"3f4f7ea1","date":"2020-12-13T08:23:51.000Z","_content":"\n主成分分析（Principal Component Analysis，PCA）是一种无监督降维方法，能够有效对高维数据进行处理。但PCA对相关性较小的变量不敏感，而PLS-DA（Partial Least Squares-Discriminant Analysis，偏最小二乘判别分析）能够有效解决这个问题。而OPLS-DA（正交偏最小二乘判别分析）结合了正交信号和PLS-DA来筛选差异变量。\n\n<!-- more -->\n\n{% asset_img 0.png %} \n\n图片来自：https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/\n\n# 安装和加载包\n\n```R\n# install ropls\nif (F) {\n  if (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n  \n  BiocManager::install(\"ropls\")\n}\n\n# load  packages\nlibrary(ropls)\nlibrary(ggplot2)\nlibrary(ggsci)\nlibrary(Cairo)\nlibrary(tidyverse)\nlibrary(extrafont)\nloadfonts()\n```\n\n# 示例数据\n\n```R\n# load data\ndata(sacurine)\nnames(sacurine)\n\n# view data information\nattach(sacurine)\nstrF(dataMatrix)\nstrF(sampleMetadata)\nstrF(variableMetadata)\n```\n\n这个数据集是不同年龄、性别和BMI的183个人的尿液中109种代谢物的浓度差异$^{[1]}$。下面的分析主要以性别为变量来研究不同性别人群尿液种代谢物的差异。下面的分析主要包含PCA、PLS-DA和OPLS-DA。\n\n#　PCA分析\n\n```R\n# PCA analysis\npca = opls(dataMatrix)\ngenderFc = sampleMetadata[, \"gender\"]\n\npdf(file = 'figures/PCA.pdf', width = 5, height = 5)\nplot(pca, typeVc = \"x-score\",\n     parAsColFcVn = genderFc, parEllipsesL = TRUE)\ndev.off()\n```\n\n{% asset_img 1.jpg %}\n\n可以看到的是如果用PCA的话，不同性别的人群是混在一起的。\n\n# PLS-DA\n\n```R\n# PLSDA analysis\nplsda = opls(dataMatrix,genderFc)\n\n# sample scores plot\nsample.score = plsda@scoreMN %>% \n  as.data.frame() %>%\n  mutate(gender = sacurine[[\"sampleMetadata\"]][[\"gender\"]])\n  \np1 = ggplot(sample.score, aes(p1, p2, color = gender)) +\n  geom_hline(yintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_vline(xintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_point() +\n  geom_point(aes(-10,-10), color = 'white') +\n  labs(x = 'P1(10.0%)',y = 'P2(9%)') +\n  stat_ellipse(level = 0.95, linetype = 'solid', \n               size = 1, show.legend = FALSE) +\n  scale_color_manual(values = c('#008000','#FFA74F')) +\n  theme_bw() +\n  theme(legend.position = c(0.9,0.8),\n    legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n    axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n    axis.ticks = element_line(color = 'black'))\nggsave(p1, filename = 'figures/pls.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 2.jpg %}\n\n和PCA相比，PLS-DA的效果相对较好。PLS-DA分析的目的是找到差异变量（本例中的109种代谢物的某几种）。因此，需要找到VIP值大于1的变量（代谢物）：\n\n```R\n# VIP scores plot\nvip.score = as.data.frame(plsda@vipVn)\ncolnames(vip.score) = 'vip'\nvip.score$metabolites = rownames(vip.score)\nvip.score = vip.score[order(-vip.score$vip),]\nvip.score$metabolites = factor(vip.score$metabolites,\n                               levels = vip.score$metabolites)\n\nloading.score = plsda@loadingMN %>% as.data.frame()\nloading.score$metabolites = rownames(loading.score)\n\nall.score = merge(vip.score, loading.score, by = 'metabolites')\n\nall.score$cat = paste('A',1:nrow(all.score), sep = '')\n\np2 = ggplot(all.score[all.score$vip >= 1,], aes(cat, vip)) +\n  geom_segment(aes(x = cat, xend = cat,\n                   y = 0, yend = vip)) +\n  geom_point(shape = 21, size = 5, color = '#008000' ,fill = '#008000') +\n  geom_point(aes(1,2.5), color = 'white') +\n  geom_hline(yintercept = 1, linetype = 'dashed') +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = '', y = 'VIP value') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.text.x = element_text(angle = 90),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'),\n        axis.ticks.x = element_blank())\nggsave(p2, filename = 'figures/pls_VIP.pdf', \n       width = 8, height = 5, device = cairo_pdf)\n```\n\n下面这些物质就是差异代谢物（VIP值大于等于1）：\n\n```R\n [1] (gamma)Glu-Leu/Ile                                                                  \n [2] 2-acetamido-4-methylphenyl acetate                                                  \n [3] 2-Methylhippuric acid                                                               \n [4] 3-Methylcrotonylglycine                                                             \n [5] 3,4-Dihydroxybenzeneacetic acid                                                     \n [6] 3,5-dihydroxybenzoic acid/3,4-dihydroxybenzoic acid                                 \n [7] 4-Acetamidobutanoic acid isomer 3                                                   \n [8] 6-(carboxymethoxy)-hexanoic acid                                                    \n [9] Acetaminophen glucuronide                                                           \n[10] Acetylphenylalanine                                                                 \n[11] alpha-N-Phenylacetyl-glutamine                                                      \n[12] Asp-Leu/Ile isomer 1                                                                \n[13] Citric acid                                                                         \n[14] Dehydroepiandrosterone 3-glucuronide                                                \n[15] Dehydroepiandrosterone sulfate                                                      \n[16] Gluconic acid and/or isomers                                                        \n[17] Glucuronic acid and/or isomers                                                      \n[18] Glyceric acid                                                                       \n[19] Hippuric acid                                                                       \n[20] Hydroxybenzyl alcohol isomer                                                        \n[21] Malic acid                                                                          \n[22] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate\n[23] Monoethyl phthalate                                                                 \n[24] N-Acetyl-aspartic acid                                                              \n[25] Oxoglutaric acid                                                                    \n[26] p-Anisic acid                                                                       \n[27] p-Hydroxyhippuric acid                                                              \n[28] Pantothenic acid                                                                    \n[29] Pentose                                                                             \n[30] Phe-Tyr-Asp (and isomers)                                                           \n[31] Pyruvic acid                                                                        \n[32] Testosterone glucuronide                                                            \n[33] Threonic acid/Erythronic acid                                                       \n[34] Valerylglycine isomer 1                                                             \n[35] Valerylglycine isomer 2                                                              \n```\n\n将它们的VIP值得进行可视化（某些代谢物名称太长，进行转换表示）：\n\n{% asset_img 3.jpg %}\n\n# OPLS-DA分析\n\n```R\n# OPLS-DA analysis\noplsda = opls(dataMatrix, genderFc, predI = 1, orthoI = NA)\n\n# sample scores plot\nsample.score = oplsda@scoreMN %>% \n  as.data.frame() %>%\n  mutate(gender = sacurine[[\"sampleMetadata\"]][[\"gender\"]],\n         o1 = oplsda@orthoScoreMN[,1])\n\np3 = ggplot(sample.score, aes(p1, o1, color = gender)) +\n  geom_hline(yintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_vline(xintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_point() +\n  #geom_point(aes(-10,-10), color = 'white') +\n  labs(x = 'P1(5.0%)',y = 'to1') +\n  stat_ellipse(level = 0.95, linetype = 'solid', \n               size = 1, show.legend = FALSE) +\n  scale_color_manual(values = c('#008000','#FFA74F')) +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.85),\n        legend.title = element_blank(),\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'))\nggsave(p3, filename = 'figures/opls.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 4.jpg %}\n\n可以看到的是OPLS-DA的效果比PLS-DA更好一些。\n\n同样进行差异代谢物筛选：\n\n```R\n# VIP scores plot\nvip.score = as.data.frame(oplsda@vipVn)\ncolnames(vip.score) = 'vip'\nvip.score$metabolites = rownames(vip.score)\nvip.score = vip.score[order(-vip.score$vip),]\nvip.score$metabolites = factor(vip.score$metabolites,\n                               levels = vip.score$metabolites)\n\nloading.score = oplsda@loadingMN %>% as.data.frame()\nloading.score$metabolites = rownames(loading.score)\n\nall.score = merge(vip.score, loading.score, by = 'metabolites')\n\nall.score$cat = paste('A',1:nrow(all.score), sep = '')\n\np4 = ggplot(all.score[all.score$vip >= 1,], aes(cat, vip)) +\n  geom_segment(aes(x = cat, xend = cat,\n                   y = 0, yend = vip)) +\n  geom_point(shape = 21, size = 5, color = '#008000' ,fill = '#008000') +\n  geom_point(aes(1,2.5), color = 'white') +\n  geom_hline(yintercept = 1, linetype = 'dashed') +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = '', y = 'VIP value') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.text.x = element_text(angle = 90),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'),\n        axis.ticks.x = element_blank())\np4\nggsave(p4, filename = 'figures/opls_VIP.pdf', \n       width = 8, height = 5, device = cairo_pdf)\n```\n\n下面的的是差异代谢物：\n\n```R\n [1] (gamma)Glu-Leu/Ile                                                                  \n [2] 2-acetamido-4-methylphenyl acetate                                                  \n [3] 2-Methylhippuric acid                                                               \n [4] 3-Methylcrotonylglycine                                                             \n [5] 3,4-Dihydroxybenzeneacetic acid                                                     \n [6] 3,5-dihydroxybenzoic acid/3,4-dihydroxybenzoic acid                                 \n [7] 4-Acetamidobutanoic acid isomer 3                                                   \n [8] 6-(carboxymethoxy)-hexanoic acid                                                    \n [9] Acetaminophen glucuronide                                                           \n[10] Acetylphenylalanine                                                                 \n[11] alpha-N-Phenylacetyl-glutamine                                                      \n[12] Asp-Leu/Ile isomer 1                                                                \n[13] Citric acid                                                                         \n[14] Dehydroepiandrosterone 3-glucuronide                                                \n[15] Dehydroepiandrosterone sulfate                                                      \n[16] Gluconic acid and/or isomers                                                        \n[17] Glucuronic acid and/or isomers                                                      \n[18] Glyceric acid                                                                       \n[19] Hippuric acid                                                                       \n[20] Hydroxybenzyl alcohol isomer                                                        \n[21] Malic acid                                                                          \n[22] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate\n[23] Monoethyl phthalate                                                                 \n[24] N-Acetyl-aspartic acid                                                              \n[25] Oxoglutaric acid                                                                    \n[26] p-Anisic acid                                                                       \n[27] p-Hydroxyhippuric acid                                                              \n[28] Pantothenic acid                                                                    \n[29] Pentose                                                                             \n[30] Phe-Tyr-Asp (and isomers)                                                           \n[31] Pyruvic acid                                                                        \n[32] Testosterone glucuronide                                                            \n[33] Threonic acid/Erythronic acid                                                       \n[34] Valerylglycine isomer 1                                                             \n[35] Valerylglycine isomer 2                                                             \n```\n\n{% asset_img 5.jpg %}\n\n# 模型训练与预测\n\n这些降维的方法都属于机器学习算法，那就可以对模型进行训练，并用这个模型去预测未知的数据。\n\n模型训练很简单：\n\n```R\n# model training\noplsda.2 = opls(dataMatrix, genderFc, predI = 1, orthoI = NA,subset = \"odd\") \n```\n\n```R\nOPLS-DA\n92 samples x 109 variables and 1 response\nstandard scaling of predictors and response(s)\n      R2X(cum) R2Y(cum) Q2(cum)\nTotal     0.26    0.825   0.608\n      RMSEE RMSEP pre ort\nTotal 0.213 0.341   1   2\nWarning message:\n'permI' set to 0 because train/test partition is selected.\n```\n\n可以看到使用了92个样本进行训练。\n\n先看看模型在训练集上的准确率：\n\n```R\n# 模型在训练集上的准确率\ntrainVi = getSubsetVi(oplsda.2)\ntab = table(genderFc[trainVi], fitted(oplsda.2))\nprint(paste('模型准确率：',round(sum(diag(tab))/sum(tab)*100, 2),'%', sep = ''))\n```\n\n```R\n   M  F\n  M 50  0\n  F  0 42\n[1] \"模型准确率：100%\"\n```\n\n看模型在训练集上的准确率是没有什么意义的，要是在训练集的表现都不好，那模型一定不好。那看看模型在未知数据上的预测准确率吧：\n\n```R\n# model on test data\ntab2 = table(genderFc[-trainVi],predict(oplsda.2, dataMatrix[-trainVi, ]))\nprint(paste('模型准确率：',round(sum(diag(tab2))/sum(tab2)*100, 2),'%', sep = ''))\n```\n\n```R\n     M  F\n  M 43  7\n  F  7 34\n[1] \"模型准确率：84.62%\"\n```\n\n这个准确率已经很棒了。\n\n# 差异代谢物其他筛选方法\n\n除了用(O)PLS-DA中的VIP值对代谢物进行筛选，还可以用别的方法进行筛选，如`log2FC`等。通常是绘制火山图。\n\n```R\n# volcano plot\ndf = dataMatrix %>% as.data.frame()\ndf$gender = sacurine[[\"sampleMetadata\"]][[\"gender\"]]\ndf = df[order(df$gender),]\ndf = df[,-110]\n\nM.mean = apply(df[1:100,],2,FUN = mean)\nF.mean = apply(df[101:183,],2,FUN = mean)\n\nFC = M.mean / F.mean\nlog2FC = log(FC,2)\n\npvalue = apply(df, 2, function(x)\n  {t.test(x[1:100],x[101:183])$p.value})\n\np.adj = p.adjust(pvalue, method = 'BH')\np.adj.log = -log10(p.adj)\n\ncolcano.df = data.frame(log2FC,p.adj, p.adj.log)\ncolcano.df$cat = ifelse(colcano.df$log2FC >= 1 & colcano.df$p.adj < 0.05,'Up',\n                        ifelse(colcano.df$log2FC <= -1 & colcano.df$p.adj < 0.05,'Down','NS'))\n\np5 = ggplot(colcano.df, aes(log2FC, p.adj.log)) +\n  geom_point() +\n  labs(y = '-log10(p-value.adj)') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.text.x = element_text(angle = 90),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'),\n        axis.ticks.x = element_blank())\np5\nggsave(p5, filename = '20201214PLSDA分析/figures/volcano.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 6.jpg %}\n\n可能是这个例子中的代谢物太少了，导致算完以后都没有差异代谢物了。\n\n# 参考文献\n\n>[1] Thévenot E A, Roux A, Xu Y, et al. Analysis of the human adult urinary metabolome variations with age, body mass index, and gender by implementing a comprehensive workflow for univariate and OPLS statistical analyses[J]. ***Journal of proteome research***, 2015, 14(8): 3322-3335.\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/OPLS-DA在R语言中的实现.md","raw":"---\ntitle: OPLS-DA在R语言中的实现\ntags: R语言\ncategories: R语言\nabbrlink: 3f4f7ea1\ndate: 2020-12-13 16:23:51\n---\n\n主成分分析（Principal Component Analysis，PCA）是一种无监督降维方法，能够有效对高维数据进行处理。但PCA对相关性较小的变量不敏感，而PLS-DA（Partial Least Squares-Discriminant Analysis，偏最小二乘判别分析）能够有效解决这个问题。而OPLS-DA（正交偏最小二乘判别分析）结合了正交信号和PLS-DA来筛选差异变量。\n\n<!-- more -->\n\n{% asset_img 0.png %} \n\n图片来自：https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/\n\n# 安装和加载包\n\n```R\n# install ropls\nif (F) {\n  if (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n  \n  BiocManager::install(\"ropls\")\n}\n\n# load  packages\nlibrary(ropls)\nlibrary(ggplot2)\nlibrary(ggsci)\nlibrary(Cairo)\nlibrary(tidyverse)\nlibrary(extrafont)\nloadfonts()\n```\n\n# 示例数据\n\n```R\n# load data\ndata(sacurine)\nnames(sacurine)\n\n# view data information\nattach(sacurine)\nstrF(dataMatrix)\nstrF(sampleMetadata)\nstrF(variableMetadata)\n```\n\n这个数据集是不同年龄、性别和BMI的183个人的尿液中109种代谢物的浓度差异$^{[1]}$。下面的分析主要以性别为变量来研究不同性别人群尿液种代谢物的差异。下面的分析主要包含PCA、PLS-DA和OPLS-DA。\n\n#　PCA分析\n\n```R\n# PCA analysis\npca = opls(dataMatrix)\ngenderFc = sampleMetadata[, \"gender\"]\n\npdf(file = 'figures/PCA.pdf', width = 5, height = 5)\nplot(pca, typeVc = \"x-score\",\n     parAsColFcVn = genderFc, parEllipsesL = TRUE)\ndev.off()\n```\n\n{% asset_img 1.jpg %}\n\n可以看到的是如果用PCA的话，不同性别的人群是混在一起的。\n\n# PLS-DA\n\n```R\n# PLSDA analysis\nplsda = opls(dataMatrix,genderFc)\n\n# sample scores plot\nsample.score = plsda@scoreMN %>% \n  as.data.frame() %>%\n  mutate(gender = sacurine[[\"sampleMetadata\"]][[\"gender\"]])\n  \np1 = ggplot(sample.score, aes(p1, p2, color = gender)) +\n  geom_hline(yintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_vline(xintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_point() +\n  geom_point(aes(-10,-10), color = 'white') +\n  labs(x = 'P1(10.0%)',y = 'P2(9%)') +\n  stat_ellipse(level = 0.95, linetype = 'solid', \n               size = 1, show.legend = FALSE) +\n  scale_color_manual(values = c('#008000','#FFA74F')) +\n  theme_bw() +\n  theme(legend.position = c(0.9,0.8),\n    legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n    panel.background = element_blank(),\n    panel.grid = element_blank(),\n    axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n    axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n    axis.ticks = element_line(color = 'black'))\nggsave(p1, filename = 'figures/pls.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 2.jpg %}\n\n和PCA相比，PLS-DA的效果相对较好。PLS-DA分析的目的是找到差异变量（本例中的109种代谢物的某几种）。因此，需要找到VIP值大于1的变量（代谢物）：\n\n```R\n# VIP scores plot\nvip.score = as.data.frame(plsda@vipVn)\ncolnames(vip.score) = 'vip'\nvip.score$metabolites = rownames(vip.score)\nvip.score = vip.score[order(-vip.score$vip),]\nvip.score$metabolites = factor(vip.score$metabolites,\n                               levels = vip.score$metabolites)\n\nloading.score = plsda@loadingMN %>% as.data.frame()\nloading.score$metabolites = rownames(loading.score)\n\nall.score = merge(vip.score, loading.score, by = 'metabolites')\n\nall.score$cat = paste('A',1:nrow(all.score), sep = '')\n\np2 = ggplot(all.score[all.score$vip >= 1,], aes(cat, vip)) +\n  geom_segment(aes(x = cat, xend = cat,\n                   y = 0, yend = vip)) +\n  geom_point(shape = 21, size = 5, color = '#008000' ,fill = '#008000') +\n  geom_point(aes(1,2.5), color = 'white') +\n  geom_hline(yintercept = 1, linetype = 'dashed') +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = '', y = 'VIP value') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.text.x = element_text(angle = 90),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'),\n        axis.ticks.x = element_blank())\nggsave(p2, filename = 'figures/pls_VIP.pdf', \n       width = 8, height = 5, device = cairo_pdf)\n```\n\n下面这些物质就是差异代谢物（VIP值大于等于1）：\n\n```R\n [1] (gamma)Glu-Leu/Ile                                                                  \n [2] 2-acetamido-4-methylphenyl acetate                                                  \n [3] 2-Methylhippuric acid                                                               \n [4] 3-Methylcrotonylglycine                                                             \n [5] 3,4-Dihydroxybenzeneacetic acid                                                     \n [6] 3,5-dihydroxybenzoic acid/3,4-dihydroxybenzoic acid                                 \n [7] 4-Acetamidobutanoic acid isomer 3                                                   \n [8] 6-(carboxymethoxy)-hexanoic acid                                                    \n [9] Acetaminophen glucuronide                                                           \n[10] Acetylphenylalanine                                                                 \n[11] alpha-N-Phenylacetyl-glutamine                                                      \n[12] Asp-Leu/Ile isomer 1                                                                \n[13] Citric acid                                                                         \n[14] Dehydroepiandrosterone 3-glucuronide                                                \n[15] Dehydroepiandrosterone sulfate                                                      \n[16] Gluconic acid and/or isomers                                                        \n[17] Glucuronic acid and/or isomers                                                      \n[18] Glyceric acid                                                                       \n[19] Hippuric acid                                                                       \n[20] Hydroxybenzyl alcohol isomer                                                        \n[21] Malic acid                                                                          \n[22] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate\n[23] Monoethyl phthalate                                                                 \n[24] N-Acetyl-aspartic acid                                                              \n[25] Oxoglutaric acid                                                                    \n[26] p-Anisic acid                                                                       \n[27] p-Hydroxyhippuric acid                                                              \n[28] Pantothenic acid                                                                    \n[29] Pentose                                                                             \n[30] Phe-Tyr-Asp (and isomers)                                                           \n[31] Pyruvic acid                                                                        \n[32] Testosterone glucuronide                                                            \n[33] Threonic acid/Erythronic acid                                                       \n[34] Valerylglycine isomer 1                                                             \n[35] Valerylglycine isomer 2                                                              \n```\n\n将它们的VIP值得进行可视化（某些代谢物名称太长，进行转换表示）：\n\n{% asset_img 3.jpg %}\n\n# OPLS-DA分析\n\n```R\n# OPLS-DA analysis\noplsda = opls(dataMatrix, genderFc, predI = 1, orthoI = NA)\n\n# sample scores plot\nsample.score = oplsda@scoreMN %>% \n  as.data.frame() %>%\n  mutate(gender = sacurine[[\"sampleMetadata\"]][[\"gender\"]],\n         o1 = oplsda@orthoScoreMN[,1])\n\np3 = ggplot(sample.score, aes(p1, o1, color = gender)) +\n  geom_hline(yintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_vline(xintercept = 0, linetype = 'dashed', size = 0.5) +\n  geom_point() +\n  #geom_point(aes(-10,-10), color = 'white') +\n  labs(x = 'P1(5.0%)',y = 'to1') +\n  stat_ellipse(level = 0.95, linetype = 'solid', \n               size = 1, show.legend = FALSE) +\n  scale_color_manual(values = c('#008000','#FFA74F')) +\n  theme_bw() +\n  theme(legend.position = c(0.1,0.85),\n        legend.title = element_blank(),\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'))\nggsave(p3, filename = 'figures/opls.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 4.jpg %}\n\n可以看到的是OPLS-DA的效果比PLS-DA更好一些。\n\n同样进行差异代谢物筛选：\n\n```R\n# VIP scores plot\nvip.score = as.data.frame(oplsda@vipVn)\ncolnames(vip.score) = 'vip'\nvip.score$metabolites = rownames(vip.score)\nvip.score = vip.score[order(-vip.score$vip),]\nvip.score$metabolites = factor(vip.score$metabolites,\n                               levels = vip.score$metabolites)\n\nloading.score = oplsda@loadingMN %>% as.data.frame()\nloading.score$metabolites = rownames(loading.score)\n\nall.score = merge(vip.score, loading.score, by = 'metabolites')\n\nall.score$cat = paste('A',1:nrow(all.score), sep = '')\n\np4 = ggplot(all.score[all.score$vip >= 1,], aes(cat, vip)) +\n  geom_segment(aes(x = cat, xend = cat,\n                   y = 0, yend = vip)) +\n  geom_point(shape = 21, size = 5, color = '#008000' ,fill = '#008000') +\n  geom_point(aes(1,2.5), color = 'white') +\n  geom_hline(yintercept = 1, linetype = 'dashed') +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = '', y = 'VIP value') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.text.x = element_text(angle = 90),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'),\n        axis.ticks.x = element_blank())\np4\nggsave(p4, filename = 'figures/opls_VIP.pdf', \n       width = 8, height = 5, device = cairo_pdf)\n```\n\n下面的的是差异代谢物：\n\n```R\n [1] (gamma)Glu-Leu/Ile                                                                  \n [2] 2-acetamido-4-methylphenyl acetate                                                  \n [3] 2-Methylhippuric acid                                                               \n [4] 3-Methylcrotonylglycine                                                             \n [5] 3,4-Dihydroxybenzeneacetic acid                                                     \n [6] 3,5-dihydroxybenzoic acid/3,4-dihydroxybenzoic acid                                 \n [7] 4-Acetamidobutanoic acid isomer 3                                                   \n [8] 6-(carboxymethoxy)-hexanoic acid                                                    \n [9] Acetaminophen glucuronide                                                           \n[10] Acetylphenylalanine                                                                 \n[11] alpha-N-Phenylacetyl-glutamine                                                      \n[12] Asp-Leu/Ile isomer 1                                                                \n[13] Citric acid                                                                         \n[14] Dehydroepiandrosterone 3-glucuronide                                                \n[15] Dehydroepiandrosterone sulfate                                                      \n[16] Gluconic acid and/or isomers                                                        \n[17] Glucuronic acid and/or isomers                                                      \n[18] Glyceric acid                                                                       \n[19] Hippuric acid                                                                       \n[20] Hydroxybenzyl alcohol isomer                                                        \n[21] Malic acid                                                                          \n[22] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate\n[23] Monoethyl phthalate                                                                 \n[24] N-Acetyl-aspartic acid                                                              \n[25] Oxoglutaric acid                                                                    \n[26] p-Anisic acid                                                                       \n[27] p-Hydroxyhippuric acid                                                              \n[28] Pantothenic acid                                                                    \n[29] Pentose                                                                             \n[30] Phe-Tyr-Asp (and isomers)                                                           \n[31] Pyruvic acid                                                                        \n[32] Testosterone glucuronide                                                            \n[33] Threonic acid/Erythronic acid                                                       \n[34] Valerylglycine isomer 1                                                             \n[35] Valerylglycine isomer 2                                                             \n```\n\n{% asset_img 5.jpg %}\n\n# 模型训练与预测\n\n这些降维的方法都属于机器学习算法，那就可以对模型进行训练，并用这个模型去预测未知的数据。\n\n模型训练很简单：\n\n```R\n# model training\noplsda.2 = opls(dataMatrix, genderFc, predI = 1, orthoI = NA,subset = \"odd\") \n```\n\n```R\nOPLS-DA\n92 samples x 109 variables and 1 response\nstandard scaling of predictors and response(s)\n      R2X(cum) R2Y(cum) Q2(cum)\nTotal     0.26    0.825   0.608\n      RMSEE RMSEP pre ort\nTotal 0.213 0.341   1   2\nWarning message:\n'permI' set to 0 because train/test partition is selected.\n```\n\n可以看到使用了92个样本进行训练。\n\n先看看模型在训练集上的准确率：\n\n```R\n# 模型在训练集上的准确率\ntrainVi = getSubsetVi(oplsda.2)\ntab = table(genderFc[trainVi], fitted(oplsda.2))\nprint(paste('模型准确率：',round(sum(diag(tab))/sum(tab)*100, 2),'%', sep = ''))\n```\n\n```R\n   M  F\n  M 50  0\n  F  0 42\n[1] \"模型准确率：100%\"\n```\n\n看模型在训练集上的准确率是没有什么意义的，要是在训练集的表现都不好，那模型一定不好。那看看模型在未知数据上的预测准确率吧：\n\n```R\n# model on test data\ntab2 = table(genderFc[-trainVi],predict(oplsda.2, dataMatrix[-trainVi, ]))\nprint(paste('模型准确率：',round(sum(diag(tab2))/sum(tab2)*100, 2),'%', sep = ''))\n```\n\n```R\n     M  F\n  M 43  7\n  F  7 34\n[1] \"模型准确率：84.62%\"\n```\n\n这个准确率已经很棒了。\n\n# 差异代谢物其他筛选方法\n\n除了用(O)PLS-DA中的VIP值对代谢物进行筛选，还可以用别的方法进行筛选，如`log2FC`等。通常是绘制火山图。\n\n```R\n# volcano plot\ndf = dataMatrix %>% as.data.frame()\ndf$gender = sacurine[[\"sampleMetadata\"]][[\"gender\"]]\ndf = df[order(df$gender),]\ndf = df[,-110]\n\nM.mean = apply(df[1:100,],2,FUN = mean)\nF.mean = apply(df[101:183,],2,FUN = mean)\n\nFC = M.mean / F.mean\nlog2FC = log(FC,2)\n\npvalue = apply(df, 2, function(x)\n  {t.test(x[1:100],x[101:183])$p.value})\n\np.adj = p.adjust(pvalue, method = 'BH')\np.adj.log = -log10(p.adj)\n\ncolcano.df = data.frame(log2FC,p.adj, p.adj.log)\ncolcano.df$cat = ifelse(colcano.df$log2FC >= 1 & colcano.df$p.adj < 0.05,'Up',\n                        ifelse(colcano.df$log2FC <= -1 & colcano.df$p.adj < 0.05,'Down','NS'))\n\np5 = ggplot(colcano.df, aes(log2FC, p.adj.log)) +\n  geom_point() +\n  labs(y = '-log10(p-value.adj)') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.text.x = element_text(angle = 90),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'),\n        axis.ticks.x = element_blank())\np5\nggsave(p5, filename = '20201214PLSDA分析/figures/volcano.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 6.jpg %}\n\n可能是这个例子中的代谢物太少了，导致算完以后都没有差异代谢物了。\n\n# 参考文献\n\n>[1] Thévenot E A, Roux A, Xu Y, et al. Analysis of the human adult urinary metabolome variations with age, body mass index, and gender by implementing a comprehensive workflow for univariate and OPLS statistical analyses[J]. ***Journal of proteome research***, 2015, 14(8): 3322-3335.\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"OPLS-DA在R语言中的实现","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwcf10029r0g02wte77wc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>主成分分析（Principal Component Analysis，PCA）是一种无监督降维方法，能够有效对高维数据进行处理。但PCA对相关性较小的变量不敏感，而PLS-DA（Partial Least Squares-Discriminant Analysis，偏最小二乘判别分析）能够有效解决这个问题。而OPLS-DA（正交偏最小二乘判别分析）结合了正交信号和PLS-DA来筛选差异变量。</p>\n<span id=\"more\"></span>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/0.png\" class=\"\"> \n\n<p>图片来自：<a href=\"https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/\">https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/</a></p>\n<h1 id=\"安装和加载包\"><a href=\"#安装和加载包\" class=\"headerlink\" title=\"安装和加载包\"></a>安装和加载包</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install ropls</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">F</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!requireNamespace(<span class=\"string\">&quot;BiocManager&quot;</span>, quietly = <span class=\"literal\">TRUE</span>))</span><br><span class=\"line\">    install.packages(<span class=\"string\">&quot;BiocManager&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  BiocManager::install(<span class=\"string\">&quot;ropls&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load  packages</span></span><br><span class=\"line\">library(ropls)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(Cairo)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"示例数据\"><a href=\"#示例数据\" class=\"headerlink\" title=\"示例数据\"></a>示例数据</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># load data</span></span><br><span class=\"line\">data(sacurine)</span><br><span class=\"line\"><span class=\"built_in\">names</span>(sacurine)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># view data information</span></span><br><span class=\"line\">attach(sacurine)</span><br><span class=\"line\">strF(dataMatrix)</span><br><span class=\"line\">strF(sampleMetadata)</span><br><span class=\"line\">strF(variableMetadata)</span><br></pre></td></tr></table></figure>\n\n<p>这个数据集是不同年龄、性别和BMI的183个人的尿液中109种代谢物的浓度差异$^{[1]}$。下面的分析主要以性别为变量来研究不同性别人群尿液种代谢物的差异。下面的分析主要包含PCA、PLS-DA和OPLS-DA。</p>\n<h1 id=\"PCA分析\"><a href=\"#PCA分析\" class=\"headerlink\" title=\"PCA分析\"></a>PCA分析</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PCA analysis</span></span><br><span class=\"line\">pca = opls(dataMatrix)</span><br><span class=\"line\">genderFc = sampleMetadata[, <span class=\"string\">&quot;gender&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;figures/PCA.pdf&#x27;</span>, width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\">plot(pca, typeVc = <span class=\"string\">&quot;x-score&quot;</span>,</span><br><span class=\"line\">     parAsColFcVn = genderFc, parEllipsesL = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\">dev.off()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/1.jpg\" class=\"\">\n\n<p>可以看到的是如果用PCA的话，不同性别的人群是混在一起的。</p>\n<h1 id=\"PLS-DA\"><a href=\"#PLS-DA\" class=\"headerlink\" title=\"PLS-DA\"></a>PLS-DA</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PLSDA analysis</span></span><br><span class=\"line\">plsda = opls(dataMatrix,genderFc)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sample scores plot</span></span><br><span class=\"line\">sample.score = plsda@scoreMN %&gt;% </span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(gender = sacurine[[<span class=\"string\">&quot;sampleMetadata&quot;</span>]][[<span class=\"string\">&quot;gender&quot;</span>]])</span><br><span class=\"line\">  </span><br><span class=\"line\">p1 = ggplot(sample.score, aes(p1, p2, color = gender)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  geom_point(aes(-<span class=\"number\">10</span>,-<span class=\"number\">10</span>), color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;P1(10.0%)&#x27;</span>,y = <span class=\"string\">&#x27;P2(9%)&#x27;</span>) +</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.95</span>, linetype = <span class=\"string\">&#x27;solid&#x27;</span>, </span><br><span class=\"line\">               size = <span class=\"number\">1</span>, show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;#008000&#x27;</span>,<span class=\"string\">&#x27;#FFA74F&#x27;</span>)) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.9</span>,<span class=\"number\">0.8</span>),</span><br><span class=\"line\">    legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">    panel.background = element_blank(),</span><br><span class=\"line\">    panel.grid = element_blank(),</span><br><span class=\"line\">    axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">    axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">    axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;figures/pls.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/2.jpg\" class=\"\">\n\n<p>和PCA相比，PLS-DA的效果相对较好。PLS-DA分析的目的是找到差异变量（本例中的109种代谢物的某几种）。因此，需要找到VIP值大于1的变量（代谢物）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># VIP scores plot</span></span><br><span class=\"line\">vip.score = as.data.frame(plsda@vipVn)</span><br><span class=\"line\">colnames(vip.score) = <span class=\"string\">&#x27;vip&#x27;</span></span><br><span class=\"line\">vip.score$metabolites = rownames(vip.score)</span><br><span class=\"line\">vip.score = vip.score[order(-vip.score$vip),]</span><br><span class=\"line\">vip.score$metabolites = factor(vip.score$metabolites,</span><br><span class=\"line\">                               levels = vip.score$metabolites)</span><br><span class=\"line\"></span><br><span class=\"line\">loading.score = plsda@loadingMN %&gt;% as.data.frame()</span><br><span class=\"line\">loading.score$metabolites = rownames(loading.score)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score = merge(vip.score, loading.score, by = <span class=\"string\">&#x27;metabolites&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score$cat = paste(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"number\">1</span>:nrow(all.score), sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggplot(all.score[all.score$vip &gt;= <span class=\"number\">1</span>,], aes(cat, vip)) +</span><br><span class=\"line\">  geom_segment(aes(x = cat, xend = cat,</span><br><span class=\"line\">                   y = <span class=\"number\">0</span>, yend = vip)) +</span><br><span class=\"line\">  geom_point(shape = <span class=\"number\">21</span>, size = <span class=\"number\">5</span>, color = <span class=\"string\">&#x27;#008000&#x27;</span> ,fill = <span class=\"string\">&#x27;#008000&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(<span class=\"number\">1</span>,<span class=\"number\">2.5</span>), color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">1</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;VIP value&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.text.x = element_text(angle = <span class=\"number\">90</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks.x = element_blank())</span><br><span class=\"line\">ggsave(p2, filename = <span class=\"string\">&#x27;figures/pls_VIP.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<p>下面这些物质就是差异代谢物（VIP值大于等于1）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [<span class=\"number\">1</span>] (<span class=\"built_in\">gamma</span>)Glu-Leu/Ile                                                                  </span><br><span class=\"line\"> [<span class=\"number\">2</span>] <span class=\"number\">2</span>-acetamido-<span class=\"number\">4</span>-methylphenyl acetate                                                  </span><br><span class=\"line\"> [<span class=\"number\">3</span>] <span class=\"number\">2</span>-Methylhippuric acid                                                               </span><br><span class=\"line\"> [<span class=\"number\">4</span>] <span class=\"number\">3</span>-Methylcrotonylglycine                                                             </span><br><span class=\"line\"> [<span class=\"number\">5</span>] <span class=\"number\">3</span>,<span class=\"number\">4</span>-Dihydroxybenzeneacetic acid                                                     </span><br><span class=\"line\"> [<span class=\"number\">6</span>] <span class=\"number\">3</span>,<span class=\"number\">5</span>-dihydroxybenzoic acid/<span class=\"number\">3</span>,<span class=\"number\">4</span>-dihydroxybenzoic acid                                 </span><br><span class=\"line\"> [<span class=\"number\">7</span>] <span class=\"number\">4</span>-Acetamidobutanoic acid isomer <span class=\"number\">3</span>                                                   </span><br><span class=\"line\"> [<span class=\"number\">8</span>] <span class=\"number\">6</span>-(carboxymethoxy)-hexanoic acid                                                    </span><br><span class=\"line\"> [<span class=\"number\">9</span>] Acetaminophen glucuronide                                                           </span><br><span class=\"line\">[<span class=\"number\">10</span>] Acetylphenylalanine                                                                 </span><br><span class=\"line\">[<span class=\"number\">11</span>] alpha-N-Phenylacetyl-glutamine                                                      </span><br><span class=\"line\">[<span class=\"number\">12</span>] Asp-Leu/Ile isomer <span class=\"number\">1</span>                                                                </span><br><span class=\"line\">[<span class=\"number\">13</span>] Citric acid                                                                         </span><br><span class=\"line\">[<span class=\"number\">14</span>] Dehydroepiandrosterone <span class=\"number\">3</span>-glucuronide                                                </span><br><span class=\"line\">[<span class=\"number\">15</span>] Dehydroepiandrosterone sulfate                                                      </span><br><span class=\"line\">[<span class=\"number\">16</span>] Gluconic acid and/or isomers                                                        </span><br><span class=\"line\">[<span class=\"number\">17</span>] Glucuronic acid and/or isomers                                                      </span><br><span class=\"line\">[<span class=\"number\">18</span>] Glyceric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">19</span>] Hippuric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">20</span>] Hydroxybenzyl alcohol isomer                                                        </span><br><span class=\"line\">[<span class=\"number\">21</span>] Malic acid                                                                          </span><br><span class=\"line\">[<span class=\"number\">22</span>] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate</span><br><span class=\"line\">[<span class=\"number\">23</span>] Monoethyl phthalate                                                                 </span><br><span class=\"line\">[<span class=\"number\">24</span>] N-Acetyl-aspartic acid                                                              </span><br><span class=\"line\">[<span class=\"number\">25</span>] Oxoglutaric acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">26</span>] p-Anisic acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">27</span>] p-Hydroxyhippuric acid                                                              </span><br><span class=\"line\">[<span class=\"number\">28</span>] Pantothenic acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">29</span>] Pentose                                                                             </span><br><span class=\"line\">[<span class=\"number\">30</span>] Phe-Tyr-Asp (and isomers)                                                           </span><br><span class=\"line\">[<span class=\"number\">31</span>] Pyruvic acid                                                                        </span><br><span class=\"line\">[<span class=\"number\">32</span>] Testosterone glucuronide                                                            </span><br><span class=\"line\">[<span class=\"number\">33</span>] Threonic acid/Erythronic acid                                                       </span><br><span class=\"line\">[<span class=\"number\">34</span>] Valerylglycine isomer <span class=\"number\">1</span>                                                             </span><br><span class=\"line\">[<span class=\"number\">35</span>] Valerylglycine isomer <span class=\"number\">2</span>                                                              </span><br></pre></td></tr></table></figure>\n\n<p>将它们的VIP值得进行可视化（某些代谢物名称太长，进行转换表示）：</p>\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/3.jpg\" class=\"\">\n\n<h1 id=\"OPLS-DA分析\"><a href=\"#OPLS-DA分析\" class=\"headerlink\" title=\"OPLS-DA分析\"></a>OPLS-DA分析</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># OPLS-DA analysis</span></span><br><span class=\"line\">oplsda = opls(dataMatrix, genderFc, predI = <span class=\"number\">1</span>, orthoI = <span class=\"literal\">NA</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sample scores plot</span></span><br><span class=\"line\">sample.score = oplsda@scoreMN %&gt;% </span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(gender = sacurine[[<span class=\"string\">&quot;sampleMetadata&quot;</span>]][[<span class=\"string\">&quot;gender&quot;</span>]],</span><br><span class=\"line\">         o1 = oplsda@orthoScoreMN[,<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggplot(sample.score, aes(p1, o1, color = gender)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  <span class=\"comment\">#geom_point(aes(-10,-10), color = &#x27;white&#x27;) +</span></span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;P1(5.0%)&#x27;</span>,y = <span class=\"string\">&#x27;to1&#x27;</span>) +</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.95</span>, linetype = <span class=\"string\">&#x27;solid&#x27;</span>, </span><br><span class=\"line\">               size = <span class=\"number\">1</span>, show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;#008000&#x27;</span>,<span class=\"string\">&#x27;#FFA74F&#x27;</span>)) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.85</span>),</span><br><span class=\"line\">        legend.title = element_blank(),</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">ggsave(p3, filename = <span class=\"string\">&#x27;figures/opls.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/4.jpg\" class=\"\">\n\n<p>可以看到的是OPLS-DA的效果比PLS-DA更好一些。</p>\n<p>同样进行差异代谢物筛选：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># VIP scores plot</span></span><br><span class=\"line\">vip.score = as.data.frame(oplsda@vipVn)</span><br><span class=\"line\">colnames(vip.score) = <span class=\"string\">&#x27;vip&#x27;</span></span><br><span class=\"line\">vip.score$metabolites = rownames(vip.score)</span><br><span class=\"line\">vip.score = vip.score[order(-vip.score$vip),]</span><br><span class=\"line\">vip.score$metabolites = factor(vip.score$metabolites,</span><br><span class=\"line\">                               levels = vip.score$metabolites)</span><br><span class=\"line\"></span><br><span class=\"line\">loading.score = oplsda@loadingMN %&gt;% as.data.frame()</span><br><span class=\"line\">loading.score$metabolites = rownames(loading.score)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score = merge(vip.score, loading.score, by = <span class=\"string\">&#x27;metabolites&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score$cat = paste(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"number\">1</span>:nrow(all.score), sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p4 = ggplot(all.score[all.score$vip &gt;= <span class=\"number\">1</span>,], aes(cat, vip)) +</span><br><span class=\"line\">  geom_segment(aes(x = cat, xend = cat,</span><br><span class=\"line\">                   y = <span class=\"number\">0</span>, yend = vip)) +</span><br><span class=\"line\">  geom_point(shape = <span class=\"number\">21</span>, size = <span class=\"number\">5</span>, color = <span class=\"string\">&#x27;#008000&#x27;</span> ,fill = <span class=\"string\">&#x27;#008000&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(<span class=\"number\">1</span>,<span class=\"number\">2.5</span>), color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">1</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;VIP value&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.text.x = element_text(angle = <span class=\"number\">90</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks.x = element_blank())</span><br><span class=\"line\">p4</span><br><span class=\"line\">ggsave(p4, filename = <span class=\"string\">&#x27;figures/opls_VIP.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<p>下面的的是差异代谢物：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [<span class=\"number\">1</span>] (<span class=\"built_in\">gamma</span>)Glu-Leu/Ile                                                                  </span><br><span class=\"line\"> [<span class=\"number\">2</span>] <span class=\"number\">2</span>-acetamido-<span class=\"number\">4</span>-methylphenyl acetate                                                  </span><br><span class=\"line\"> [<span class=\"number\">3</span>] <span class=\"number\">2</span>-Methylhippuric acid                                                               </span><br><span class=\"line\"> [<span class=\"number\">4</span>] <span class=\"number\">3</span>-Methylcrotonylglycine                                                             </span><br><span class=\"line\"> [<span class=\"number\">5</span>] <span class=\"number\">3</span>,<span class=\"number\">4</span>-Dihydroxybenzeneacetic acid                                                     </span><br><span class=\"line\"> [<span class=\"number\">6</span>] <span class=\"number\">3</span>,<span class=\"number\">5</span>-dihydroxybenzoic acid/<span class=\"number\">3</span>,<span class=\"number\">4</span>-dihydroxybenzoic acid                                 </span><br><span class=\"line\"> [<span class=\"number\">7</span>] <span class=\"number\">4</span>-Acetamidobutanoic acid isomer <span class=\"number\">3</span>                                                   </span><br><span class=\"line\"> [<span class=\"number\">8</span>] <span class=\"number\">6</span>-(carboxymethoxy)-hexanoic acid                                                    </span><br><span class=\"line\"> [<span class=\"number\">9</span>] Acetaminophen glucuronide                                                           </span><br><span class=\"line\">[<span class=\"number\">10</span>] Acetylphenylalanine                                                                 </span><br><span class=\"line\">[<span class=\"number\">11</span>] alpha-N-Phenylacetyl-glutamine                                                      </span><br><span class=\"line\">[<span class=\"number\">12</span>] Asp-Leu/Ile isomer <span class=\"number\">1</span>                                                                </span><br><span class=\"line\">[<span class=\"number\">13</span>] Citric acid                                                                         </span><br><span class=\"line\">[<span class=\"number\">14</span>] Dehydroepiandrosterone <span class=\"number\">3</span>-glucuronide                                                </span><br><span class=\"line\">[<span class=\"number\">15</span>] Dehydroepiandrosterone sulfate                                                      </span><br><span class=\"line\">[<span class=\"number\">16</span>] Gluconic acid and/or isomers                                                        </span><br><span class=\"line\">[<span class=\"number\">17</span>] Glucuronic acid and/or isomers                                                      </span><br><span class=\"line\">[<span class=\"number\">18</span>] Glyceric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">19</span>] Hippuric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">20</span>] Hydroxybenzyl alcohol isomer                                                        </span><br><span class=\"line\">[<span class=\"number\">21</span>] Malic acid                                                                          </span><br><span class=\"line\">[<span class=\"number\">22</span>] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate</span><br><span class=\"line\">[<span class=\"number\">23</span>] Monoethyl phthalate                                                                 </span><br><span class=\"line\">[<span class=\"number\">24</span>] N-Acetyl-aspartic acid                                                              </span><br><span class=\"line\">[<span class=\"number\">25</span>] Oxoglutaric acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">26</span>] p-Anisic acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">27</span>] p-Hydroxyhippuric acid                                                              </span><br><span class=\"line\">[<span class=\"number\">28</span>] Pantothenic acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">29</span>] Pentose                                                                             </span><br><span class=\"line\">[<span class=\"number\">30</span>] Phe-Tyr-Asp (and isomers)                                                           </span><br><span class=\"line\">[<span class=\"number\">31</span>] Pyruvic acid                                                                        </span><br><span class=\"line\">[<span class=\"number\">32</span>] Testosterone glucuronide                                                            </span><br><span class=\"line\">[<span class=\"number\">33</span>] Threonic acid/Erythronic acid                                                       </span><br><span class=\"line\">[<span class=\"number\">34</span>] Valerylglycine isomer <span class=\"number\">1</span>                                                             </span><br><span class=\"line\">[<span class=\"number\">35</span>] Valerylglycine isomer <span class=\"number\">2</span>                                                             </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/5.jpg\" class=\"\">\n\n<h1 id=\"模型训练与预测\"><a href=\"#模型训练与预测\" class=\"headerlink\" title=\"模型训练与预测\"></a>模型训练与预测</h1><p>这些降维的方法都属于机器学习算法，那就可以对模型进行训练，并用这个模型去预测未知的数据。</p>\n<p>模型训练很简单：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># model training</span></span><br><span class=\"line\">oplsda.2 = opls(dataMatrix, genderFc, predI = <span class=\"number\">1</span>, orthoI = <span class=\"literal\">NA</span>,subset = <span class=\"string\">&quot;odd&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OPLS-DA</span><br><span class=\"line\"><span class=\"number\">92</span> samples x <span class=\"number\">109</span> variables and <span class=\"number\">1</span> response</span><br><span class=\"line\">standard scaling of predictors and response(s)</span><br><span class=\"line\">      R2X(cum) R2Y(cum) Q2(cum)</span><br><span class=\"line\">Total     <span class=\"number\">0.26</span>    <span class=\"number\">0.825</span>   <span class=\"number\">0.608</span></span><br><span class=\"line\">      RMSEE RMSEP pre ort</span><br><span class=\"line\">Total <span class=\"number\">0.213</span> <span class=\"number\">0.341</span>   <span class=\"number\">1</span>   <span class=\"number\">2</span></span><br><span class=\"line\">Warning message:</span><br><span class=\"line\"><span class=\"string\">&#x27;permI&#x27;</span> set to <span class=\"number\">0</span> because train/test partition is selected.</span><br></pre></td></tr></table></figure>\n\n<p>可以看到使用了92个样本进行训练。</p>\n<p>先看看模型在训练集上的准确率：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 模型在训练集上的准确率</span></span><br><span class=\"line\">trainVi = getSubsetVi(oplsda.2)</span><br><span class=\"line\">tab = table(genderFc[trainVi], fitted(oplsda.2))</span><br><span class=\"line\">print(paste(<span class=\"string\">&#x27;模型准确率：&#x27;</span>,<span class=\"built_in\">round</span>(<span class=\"built_in\">sum</span>(diag(tab))/<span class=\"built_in\">sum</span>(tab)*<span class=\"number\">100</span>, <span class=\"number\">2</span>),<span class=\"string\">&#x27;%&#x27;</span>, sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   M  <span class=\"built_in\">F</span></span><br><span class=\"line\">  M <span class=\"number\">50</span>  <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"built_in\">F</span>  <span class=\"number\">0</span> <span class=\"number\">42</span></span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;模型准确率：100%&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>看模型在训练集上的准确率是没有什么意义的，要是在训练集的表现都不好，那模型一定不好。那看看模型在未知数据上的预测准确率吧：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># model on test data</span></span><br><span class=\"line\">tab2 = table(genderFc[-trainVi],predict(oplsda.2, dataMatrix[-trainVi, ]))</span><br><span class=\"line\">print(paste(<span class=\"string\">&#x27;模型准确率：&#x27;</span>,<span class=\"built_in\">round</span>(<span class=\"built_in\">sum</span>(diag(tab2))/<span class=\"built_in\">sum</span>(tab2)*<span class=\"number\">100</span>, <span class=\"number\">2</span>),<span class=\"string\">&#x27;%&#x27;</span>, sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     M  <span class=\"built_in\">F</span></span><br><span class=\"line\">  M <span class=\"number\">43</span>  <span class=\"number\">7</span></span><br><span class=\"line\">  <span class=\"built_in\">F</span>  <span class=\"number\">7</span> <span class=\"number\">34</span></span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;模型准确率：84.62%&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个准确率已经很棒了。</p>\n<h1 id=\"差异代谢物其他筛选方法\"><a href=\"#差异代谢物其他筛选方法\" class=\"headerlink\" title=\"差异代谢物其他筛选方法\"></a>差异代谢物其他筛选方法</h1><p>除了用(O)PLS-DA中的VIP值对代谢物进行筛选，还可以用别的方法进行筛选，如<code>log2FC</code>等。通常是绘制火山图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># volcano plot</span></span><br><span class=\"line\">df = dataMatrix %&gt;% as.data.frame()</span><br><span class=\"line\">df$gender = sacurine[[<span class=\"string\">&quot;sampleMetadata&quot;</span>]][[<span class=\"string\">&quot;gender&quot;</span>]]</span><br><span class=\"line\">df = df[order(df$gender),]</span><br><span class=\"line\">df = df[,-<span class=\"number\">110</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">M.mean = apply(df[<span class=\"number\">1</span>:<span class=\"number\">100</span>,],<span class=\"number\">2</span>,FUN = mean)</span><br><span class=\"line\">F.mean = apply(df[<span class=\"number\">101</span>:<span class=\"number\">183</span>,],<span class=\"number\">2</span>,FUN = mean)</span><br><span class=\"line\"></span><br><span class=\"line\">FC = M.mean / F.mean</span><br><span class=\"line\">log2FC = <span class=\"built_in\">log</span>(FC,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pvalue = apply(df, <span class=\"number\">2</span>, <span class=\"keyword\">function</span>(x)</span><br><span class=\"line\">  &#123;t.test(x[<span class=\"number\">1</span>:<span class=\"number\">100</span>],x[<span class=\"number\">101</span>:<span class=\"number\">183</span>])$p.value&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.adj = p.adjust(pvalue, method = <span class=\"string\">&#x27;BH&#x27;</span>)</span><br><span class=\"line\">p.adj.log = -log10(p.adj)</span><br><span class=\"line\"></span><br><span class=\"line\">colcano.df = data.frame(log2FC,p.adj, p.adj.log)</span><br><span class=\"line\">colcano.df$cat = ifelse(colcano.df$log2FC &gt;= <span class=\"number\">1</span> &amp; colcano.df$p.adj &lt; <span class=\"number\">0.05</span>,<span class=\"string\">&#x27;Up&#x27;</span>,</span><br><span class=\"line\">                        ifelse(colcano.df$log2FC &lt;= -<span class=\"number\">1</span> &amp; colcano.df$p.adj &lt; <span class=\"number\">0.05</span>,<span class=\"string\">&#x27;Down&#x27;</span>,<span class=\"string\">&#x27;NS&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p5 = ggplot(colcano.df, aes(log2FC, p.adj.log)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  labs(y = <span class=\"string\">&#x27;-log10(p-value.adj)&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.text.x = element_text(angle = <span class=\"number\">90</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks.x = element_blank())</span><br><span class=\"line\">p5</span><br><span class=\"line\">ggsave(p5, filename = <span class=\"string\">&#x27;20201214PLSDA分析/figures/volcano.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/6.jpg\" class=\"\">\n\n<p>可能是这个例子中的代谢物太少了，导致算完以后都没有差异代谢物了。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Thévenot E A, Roux A, Xu Y, et al. Analysis of the human adult urinary metabolome variations with age, body mass index, and gender by implementing a comprehensive workflow for univariate and OPLS statistical analyses[J]. <em><strong>Journal of proteome research</strong></em>, 2015, 14(8): 3322-3335.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>主成分分析（Principal Component Analysis，PCA）是一种无监督降维方法，能够有效对高维数据进行处理。但PCA对相关性较小的变量不敏感，而PLS-DA（Partial Least Squares-Discriminant Analysis，偏最小二乘判别分析）能够有效解决这个问题。而OPLS-DA（正交偏最小二乘判别分析）结合了正交信号和PLS-DA来筛选差异变量。</p>","more":"<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/0.png\" class=\"\"> \n\n<p>图片来自：<a href=\"https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/\">https://www.r-bloggers.com/2013/07/orthogonal-partial-least-squares-opls-in-r/</a></p>\n<h1 id=\"安装和加载包\"><a href=\"#安装和加载包\" class=\"headerlink\" title=\"安装和加载包\"></a>安装和加载包</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># install ropls</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">F</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!requireNamespace(<span class=\"string\">&quot;BiocManager&quot;</span>, quietly = <span class=\"literal\">TRUE</span>))</span><br><span class=\"line\">    install.packages(<span class=\"string\">&quot;BiocManager&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  BiocManager::install(<span class=\"string\">&quot;ropls&quot;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load  packages</span></span><br><span class=\"line\">library(ropls)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(Cairo)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"示例数据\"><a href=\"#示例数据\" class=\"headerlink\" title=\"示例数据\"></a>示例数据</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># load data</span></span><br><span class=\"line\">data(sacurine)</span><br><span class=\"line\"><span class=\"built_in\">names</span>(sacurine)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># view data information</span></span><br><span class=\"line\">attach(sacurine)</span><br><span class=\"line\">strF(dataMatrix)</span><br><span class=\"line\">strF(sampleMetadata)</span><br><span class=\"line\">strF(variableMetadata)</span><br></pre></td></tr></table></figure>\n\n<p>这个数据集是不同年龄、性别和BMI的183个人的尿液中109种代谢物的浓度差异$^{[1]}$。下面的分析主要以性别为变量来研究不同性别人群尿液种代谢物的差异。下面的分析主要包含PCA、PLS-DA和OPLS-DA。</p>\n<h1 id=\"PCA分析\"><a href=\"#PCA分析\" class=\"headerlink\" title=\"PCA分析\"></a>PCA分析</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PCA analysis</span></span><br><span class=\"line\">pca = opls(dataMatrix)</span><br><span class=\"line\">genderFc = sampleMetadata[, <span class=\"string\">&quot;gender&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;figures/PCA.pdf&#x27;</span>, width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>)</span><br><span class=\"line\">plot(pca, typeVc = <span class=\"string\">&quot;x-score&quot;</span>,</span><br><span class=\"line\">     parAsColFcVn = genderFc, parEllipsesL = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\">dev.off()</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/1.jpg\" class=\"\">\n\n<p>可以看到的是如果用PCA的话，不同性别的人群是混在一起的。</p>\n<h1 id=\"PLS-DA\"><a href=\"#PLS-DA\" class=\"headerlink\" title=\"PLS-DA\"></a>PLS-DA</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PLSDA analysis</span></span><br><span class=\"line\">plsda = opls(dataMatrix,genderFc)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sample scores plot</span></span><br><span class=\"line\">sample.score = plsda@scoreMN %&gt;% </span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(gender = sacurine[[<span class=\"string\">&quot;sampleMetadata&quot;</span>]][[<span class=\"string\">&quot;gender&quot;</span>]])</span><br><span class=\"line\">  </span><br><span class=\"line\">p1 = ggplot(sample.score, aes(p1, p2, color = gender)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  geom_point(aes(-<span class=\"number\">10</span>,-<span class=\"number\">10</span>), color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;P1(10.0%)&#x27;</span>,y = <span class=\"string\">&#x27;P2(9%)&#x27;</span>) +</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.95</span>, linetype = <span class=\"string\">&#x27;solid&#x27;</span>, </span><br><span class=\"line\">               size = <span class=\"number\">1</span>, show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;#008000&#x27;</span>,<span class=\"string\">&#x27;#FFA74F&#x27;</span>)) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.9</span>,<span class=\"number\">0.8</span>),</span><br><span class=\"line\">    legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">    panel.background = element_blank(),</span><br><span class=\"line\">    panel.grid = element_blank(),</span><br><span class=\"line\">    axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">    axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">    axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">ggsave(p1, filename = <span class=\"string\">&#x27;figures/pls.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/2.jpg\" class=\"\">\n\n<p>和PCA相比，PLS-DA的效果相对较好。PLS-DA分析的目的是找到差异变量（本例中的109种代谢物的某几种）。因此，需要找到VIP值大于1的变量（代谢物）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># VIP scores plot</span></span><br><span class=\"line\">vip.score = as.data.frame(plsda@vipVn)</span><br><span class=\"line\">colnames(vip.score) = <span class=\"string\">&#x27;vip&#x27;</span></span><br><span class=\"line\">vip.score$metabolites = rownames(vip.score)</span><br><span class=\"line\">vip.score = vip.score[order(-vip.score$vip),]</span><br><span class=\"line\">vip.score$metabolites = factor(vip.score$metabolites,</span><br><span class=\"line\">                               levels = vip.score$metabolites)</span><br><span class=\"line\"></span><br><span class=\"line\">loading.score = plsda@loadingMN %&gt;% as.data.frame()</span><br><span class=\"line\">loading.score$metabolites = rownames(loading.score)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score = merge(vip.score, loading.score, by = <span class=\"string\">&#x27;metabolites&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score$cat = paste(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"number\">1</span>:nrow(all.score), sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p2 = ggplot(all.score[all.score$vip &gt;= <span class=\"number\">1</span>,], aes(cat, vip)) +</span><br><span class=\"line\">  geom_segment(aes(x = cat, xend = cat,</span><br><span class=\"line\">                   y = <span class=\"number\">0</span>, yend = vip)) +</span><br><span class=\"line\">  geom_point(shape = <span class=\"number\">21</span>, size = <span class=\"number\">5</span>, color = <span class=\"string\">&#x27;#008000&#x27;</span> ,fill = <span class=\"string\">&#x27;#008000&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(<span class=\"number\">1</span>,<span class=\"number\">2.5</span>), color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">1</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;VIP value&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.text.x = element_text(angle = <span class=\"number\">90</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks.x = element_blank())</span><br><span class=\"line\">ggsave(p2, filename = <span class=\"string\">&#x27;figures/pls_VIP.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<p>下面这些物质就是差异代谢物（VIP值大于等于1）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [<span class=\"number\">1</span>] (<span class=\"built_in\">gamma</span>)Glu-Leu/Ile                                                                  </span><br><span class=\"line\"> [<span class=\"number\">2</span>] <span class=\"number\">2</span>-acetamido-<span class=\"number\">4</span>-methylphenyl acetate                                                  </span><br><span class=\"line\"> [<span class=\"number\">3</span>] <span class=\"number\">2</span>-Methylhippuric acid                                                               </span><br><span class=\"line\"> [<span class=\"number\">4</span>] <span class=\"number\">3</span>-Methylcrotonylglycine                                                             </span><br><span class=\"line\"> [<span class=\"number\">5</span>] <span class=\"number\">3</span>,<span class=\"number\">4</span>-Dihydroxybenzeneacetic acid                                                     </span><br><span class=\"line\"> [<span class=\"number\">6</span>] <span class=\"number\">3</span>,<span class=\"number\">5</span>-dihydroxybenzoic acid/<span class=\"number\">3</span>,<span class=\"number\">4</span>-dihydroxybenzoic acid                                 </span><br><span class=\"line\"> [<span class=\"number\">7</span>] <span class=\"number\">4</span>-Acetamidobutanoic acid isomer <span class=\"number\">3</span>                                                   </span><br><span class=\"line\"> [<span class=\"number\">8</span>] <span class=\"number\">6</span>-(carboxymethoxy)-hexanoic acid                                                    </span><br><span class=\"line\"> [<span class=\"number\">9</span>] Acetaminophen glucuronide                                                           </span><br><span class=\"line\">[<span class=\"number\">10</span>] Acetylphenylalanine                                                                 </span><br><span class=\"line\">[<span class=\"number\">11</span>] alpha-N-Phenylacetyl-glutamine                                                      </span><br><span class=\"line\">[<span class=\"number\">12</span>] Asp-Leu/Ile isomer <span class=\"number\">1</span>                                                                </span><br><span class=\"line\">[<span class=\"number\">13</span>] Citric acid                                                                         </span><br><span class=\"line\">[<span class=\"number\">14</span>] Dehydroepiandrosterone <span class=\"number\">3</span>-glucuronide                                                </span><br><span class=\"line\">[<span class=\"number\">15</span>] Dehydroepiandrosterone sulfate                                                      </span><br><span class=\"line\">[<span class=\"number\">16</span>] Gluconic acid and/or isomers                                                        </span><br><span class=\"line\">[<span class=\"number\">17</span>] Glucuronic acid and/or isomers                                                      </span><br><span class=\"line\">[<span class=\"number\">18</span>] Glyceric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">19</span>] Hippuric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">20</span>] Hydroxybenzyl alcohol isomer                                                        </span><br><span class=\"line\">[<span class=\"number\">21</span>] Malic acid                                                                          </span><br><span class=\"line\">[<span class=\"number\">22</span>] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate</span><br><span class=\"line\">[<span class=\"number\">23</span>] Monoethyl phthalate                                                                 </span><br><span class=\"line\">[<span class=\"number\">24</span>] N-Acetyl-aspartic acid                                                              </span><br><span class=\"line\">[<span class=\"number\">25</span>] Oxoglutaric acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">26</span>] p-Anisic acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">27</span>] p-Hydroxyhippuric acid                                                              </span><br><span class=\"line\">[<span class=\"number\">28</span>] Pantothenic acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">29</span>] Pentose                                                                             </span><br><span class=\"line\">[<span class=\"number\">30</span>] Phe-Tyr-Asp (and isomers)                                                           </span><br><span class=\"line\">[<span class=\"number\">31</span>] Pyruvic acid                                                                        </span><br><span class=\"line\">[<span class=\"number\">32</span>] Testosterone glucuronide                                                            </span><br><span class=\"line\">[<span class=\"number\">33</span>] Threonic acid/Erythronic acid                                                       </span><br><span class=\"line\">[<span class=\"number\">34</span>] Valerylglycine isomer <span class=\"number\">1</span>                                                             </span><br><span class=\"line\">[<span class=\"number\">35</span>] Valerylglycine isomer <span class=\"number\">2</span>                                                              </span><br></pre></td></tr></table></figure>\n\n<p>将它们的VIP值得进行可视化（某些代谢物名称太长，进行转换表示）：</p>\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/3.jpg\" class=\"\">\n\n<h1 id=\"OPLS-DA分析\"><a href=\"#OPLS-DA分析\" class=\"headerlink\" title=\"OPLS-DA分析\"></a>OPLS-DA分析</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># OPLS-DA analysis</span></span><br><span class=\"line\">oplsda = opls(dataMatrix, genderFc, predI = <span class=\"number\">1</span>, orthoI = <span class=\"literal\">NA</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sample scores plot</span></span><br><span class=\"line\">sample.score = oplsda@scoreMN %&gt;% </span><br><span class=\"line\">  as.data.frame() %&gt;%</span><br><span class=\"line\">  mutate(gender = sacurine[[<span class=\"string\">&quot;sampleMetadata&quot;</span>]][[<span class=\"string\">&quot;gender&quot;</span>]],</span><br><span class=\"line\">         o1 = oplsda@orthoScoreMN[,<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">p3 = ggplot(sample.score, aes(p1, o1, color = gender)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>, size = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  <span class=\"comment\">#geom_point(aes(-10,-10), color = &#x27;white&#x27;) +</span></span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;P1(5.0%)&#x27;</span>,y = <span class=\"string\">&#x27;to1&#x27;</span>) +</span><br><span class=\"line\">  stat_ellipse(level = <span class=\"number\">0.95</span>, linetype = <span class=\"string\">&#x27;solid&#x27;</span>, </span><br><span class=\"line\">               size = <span class=\"number\">1</span>, show.legend = <span class=\"literal\">FALSE</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;#008000&#x27;</span>,<span class=\"string\">&#x27;#FFA74F&#x27;</span>)) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.85</span>),</span><br><span class=\"line\">        legend.title = element_blank(),</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">ggsave(p3, filename = <span class=\"string\">&#x27;figures/opls.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/4.jpg\" class=\"\">\n\n<p>可以看到的是OPLS-DA的效果比PLS-DA更好一些。</p>\n<p>同样进行差异代谢物筛选：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># VIP scores plot</span></span><br><span class=\"line\">vip.score = as.data.frame(oplsda@vipVn)</span><br><span class=\"line\">colnames(vip.score) = <span class=\"string\">&#x27;vip&#x27;</span></span><br><span class=\"line\">vip.score$metabolites = rownames(vip.score)</span><br><span class=\"line\">vip.score = vip.score[order(-vip.score$vip),]</span><br><span class=\"line\">vip.score$metabolites = factor(vip.score$metabolites,</span><br><span class=\"line\">                               levels = vip.score$metabolites)</span><br><span class=\"line\"></span><br><span class=\"line\">loading.score = oplsda@loadingMN %&gt;% as.data.frame()</span><br><span class=\"line\">loading.score$metabolites = rownames(loading.score)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score = merge(vip.score, loading.score, by = <span class=\"string\">&#x27;metabolites&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">all.score$cat = paste(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"number\">1</span>:nrow(all.score), sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p4 = ggplot(all.score[all.score$vip &gt;= <span class=\"number\">1</span>,], aes(cat, vip)) +</span><br><span class=\"line\">  geom_segment(aes(x = cat, xend = cat,</span><br><span class=\"line\">                   y = <span class=\"number\">0</span>, yend = vip)) +</span><br><span class=\"line\">  geom_point(shape = <span class=\"number\">21</span>, size = <span class=\"number\">5</span>, color = <span class=\"string\">&#x27;#008000&#x27;</span> ,fill = <span class=\"string\">&#x27;#008000&#x27;</span>) +</span><br><span class=\"line\">  geom_point(aes(<span class=\"number\">1</span>,<span class=\"number\">2.5</span>), color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">1</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;VIP value&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.text.x = element_text(angle = <span class=\"number\">90</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks.x = element_blank())</span><br><span class=\"line\">p4</span><br><span class=\"line\">ggsave(p4, filename = <span class=\"string\">&#x27;figures/opls_VIP.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<p>下面的的是差异代谢物：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> [<span class=\"number\">1</span>] (<span class=\"built_in\">gamma</span>)Glu-Leu/Ile                                                                  </span><br><span class=\"line\"> [<span class=\"number\">2</span>] <span class=\"number\">2</span>-acetamido-<span class=\"number\">4</span>-methylphenyl acetate                                                  </span><br><span class=\"line\"> [<span class=\"number\">3</span>] <span class=\"number\">2</span>-Methylhippuric acid                                                               </span><br><span class=\"line\"> [<span class=\"number\">4</span>] <span class=\"number\">3</span>-Methylcrotonylglycine                                                             </span><br><span class=\"line\"> [<span class=\"number\">5</span>] <span class=\"number\">3</span>,<span class=\"number\">4</span>-Dihydroxybenzeneacetic acid                                                     </span><br><span class=\"line\"> [<span class=\"number\">6</span>] <span class=\"number\">3</span>,<span class=\"number\">5</span>-dihydroxybenzoic acid/<span class=\"number\">3</span>,<span class=\"number\">4</span>-dihydroxybenzoic acid                                 </span><br><span class=\"line\"> [<span class=\"number\">7</span>] <span class=\"number\">4</span>-Acetamidobutanoic acid isomer <span class=\"number\">3</span>                                                   </span><br><span class=\"line\"> [<span class=\"number\">8</span>] <span class=\"number\">6</span>-(carboxymethoxy)-hexanoic acid                                                    </span><br><span class=\"line\"> [<span class=\"number\">9</span>] Acetaminophen glucuronide                                                           </span><br><span class=\"line\">[<span class=\"number\">10</span>] Acetylphenylalanine                                                                 </span><br><span class=\"line\">[<span class=\"number\">11</span>] alpha-N-Phenylacetyl-glutamine                                                      </span><br><span class=\"line\">[<span class=\"number\">12</span>] Asp-Leu/Ile isomer <span class=\"number\">1</span>                                                                </span><br><span class=\"line\">[<span class=\"number\">13</span>] Citric acid                                                                         </span><br><span class=\"line\">[<span class=\"number\">14</span>] Dehydroepiandrosterone <span class=\"number\">3</span>-glucuronide                                                </span><br><span class=\"line\">[<span class=\"number\">15</span>] Dehydroepiandrosterone sulfate                                                      </span><br><span class=\"line\">[<span class=\"number\">16</span>] Gluconic acid and/or isomers                                                        </span><br><span class=\"line\">[<span class=\"number\">17</span>] Glucuronic acid and/or isomers                                                      </span><br><span class=\"line\">[<span class=\"number\">18</span>] Glyceric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">19</span>] Hippuric acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">20</span>] Hydroxybenzyl alcohol isomer                                                        </span><br><span class=\"line\">[<span class=\"number\">21</span>] Malic acid                                                                          </span><br><span class=\"line\">[<span class=\"number\">22</span>] Methyl (hydroxymethyl)pyrrolidine-carboxylate/Methyl (hydroxy)piperidine-carboxylate</span><br><span class=\"line\">[<span class=\"number\">23</span>] Monoethyl phthalate                                                                 </span><br><span class=\"line\">[<span class=\"number\">24</span>] N-Acetyl-aspartic acid                                                              </span><br><span class=\"line\">[<span class=\"number\">25</span>] Oxoglutaric acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">26</span>] p-Anisic acid                                                                       </span><br><span class=\"line\">[<span class=\"number\">27</span>] p-Hydroxyhippuric acid                                                              </span><br><span class=\"line\">[<span class=\"number\">28</span>] Pantothenic acid                                                                    </span><br><span class=\"line\">[<span class=\"number\">29</span>] Pentose                                                                             </span><br><span class=\"line\">[<span class=\"number\">30</span>] Phe-Tyr-Asp (and isomers)                                                           </span><br><span class=\"line\">[<span class=\"number\">31</span>] Pyruvic acid                                                                        </span><br><span class=\"line\">[<span class=\"number\">32</span>] Testosterone glucuronide                                                            </span><br><span class=\"line\">[<span class=\"number\">33</span>] Threonic acid/Erythronic acid                                                       </span><br><span class=\"line\">[<span class=\"number\">34</span>] Valerylglycine isomer <span class=\"number\">1</span>                                                             </span><br><span class=\"line\">[<span class=\"number\">35</span>] Valerylglycine isomer <span class=\"number\">2</span>                                                             </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/5.jpg\" class=\"\">\n\n<h1 id=\"模型训练与预测\"><a href=\"#模型训练与预测\" class=\"headerlink\" title=\"模型训练与预测\"></a>模型训练与预测</h1><p>这些降维的方法都属于机器学习算法，那就可以对模型进行训练，并用这个模型去预测未知的数据。</p>\n<p>模型训练很简单：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># model training</span></span><br><span class=\"line\">oplsda.2 = opls(dataMatrix, genderFc, predI = <span class=\"number\">1</span>, orthoI = <span class=\"literal\">NA</span>,subset = <span class=\"string\">&quot;odd&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OPLS-DA</span><br><span class=\"line\"><span class=\"number\">92</span> samples x <span class=\"number\">109</span> variables and <span class=\"number\">1</span> response</span><br><span class=\"line\">standard scaling of predictors and response(s)</span><br><span class=\"line\">      R2X(cum) R2Y(cum) Q2(cum)</span><br><span class=\"line\">Total     <span class=\"number\">0.26</span>    <span class=\"number\">0.825</span>   <span class=\"number\">0.608</span></span><br><span class=\"line\">      RMSEE RMSEP pre ort</span><br><span class=\"line\">Total <span class=\"number\">0.213</span> <span class=\"number\">0.341</span>   <span class=\"number\">1</span>   <span class=\"number\">2</span></span><br><span class=\"line\">Warning message:</span><br><span class=\"line\"><span class=\"string\">&#x27;permI&#x27;</span> set to <span class=\"number\">0</span> because train/test partition is selected.</span><br></pre></td></tr></table></figure>\n\n<p>可以看到使用了92个样本进行训练。</p>\n<p>先看看模型在训练集上的准确率：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 模型在训练集上的准确率</span></span><br><span class=\"line\">trainVi = getSubsetVi(oplsda.2)</span><br><span class=\"line\">tab = table(genderFc[trainVi], fitted(oplsda.2))</span><br><span class=\"line\">print(paste(<span class=\"string\">&#x27;模型准确率：&#x27;</span>,<span class=\"built_in\">round</span>(<span class=\"built_in\">sum</span>(diag(tab))/<span class=\"built_in\">sum</span>(tab)*<span class=\"number\">100</span>, <span class=\"number\">2</span>),<span class=\"string\">&#x27;%&#x27;</span>, sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   M  <span class=\"built_in\">F</span></span><br><span class=\"line\">  M <span class=\"number\">50</span>  <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"built_in\">F</span>  <span class=\"number\">0</span> <span class=\"number\">42</span></span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;模型准确率：100%&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>看模型在训练集上的准确率是没有什么意义的，要是在训练集的表现都不好，那模型一定不好。那看看模型在未知数据上的预测准确率吧：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># model on test data</span></span><br><span class=\"line\">tab2 = table(genderFc[-trainVi],predict(oplsda.2, dataMatrix[-trainVi, ]))</span><br><span class=\"line\">print(paste(<span class=\"string\">&#x27;模型准确率：&#x27;</span>,<span class=\"built_in\">round</span>(<span class=\"built_in\">sum</span>(diag(tab2))/<span class=\"built_in\">sum</span>(tab2)*<span class=\"number\">100</span>, <span class=\"number\">2</span>),<span class=\"string\">&#x27;%&#x27;</span>, sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     M  <span class=\"built_in\">F</span></span><br><span class=\"line\">  M <span class=\"number\">43</span>  <span class=\"number\">7</span></span><br><span class=\"line\">  <span class=\"built_in\">F</span>  <span class=\"number\">7</span> <span class=\"number\">34</span></span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;模型准确率：84.62%&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个准确率已经很棒了。</p>\n<h1 id=\"差异代谢物其他筛选方法\"><a href=\"#差异代谢物其他筛选方法\" class=\"headerlink\" title=\"差异代谢物其他筛选方法\"></a>差异代谢物其他筛选方法</h1><p>除了用(O)PLS-DA中的VIP值对代谢物进行筛选，还可以用别的方法进行筛选，如<code>log2FC</code>等。通常是绘制火山图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># volcano plot</span></span><br><span class=\"line\">df = dataMatrix %&gt;% as.data.frame()</span><br><span class=\"line\">df$gender = sacurine[[<span class=\"string\">&quot;sampleMetadata&quot;</span>]][[<span class=\"string\">&quot;gender&quot;</span>]]</span><br><span class=\"line\">df = df[order(df$gender),]</span><br><span class=\"line\">df = df[,-<span class=\"number\">110</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">M.mean = apply(df[<span class=\"number\">1</span>:<span class=\"number\">100</span>,],<span class=\"number\">2</span>,FUN = mean)</span><br><span class=\"line\">F.mean = apply(df[<span class=\"number\">101</span>:<span class=\"number\">183</span>,],<span class=\"number\">2</span>,FUN = mean)</span><br><span class=\"line\"></span><br><span class=\"line\">FC = M.mean / F.mean</span><br><span class=\"line\">log2FC = <span class=\"built_in\">log</span>(FC,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pvalue = apply(df, <span class=\"number\">2</span>, <span class=\"keyword\">function</span>(x)</span><br><span class=\"line\">  &#123;t.test(x[<span class=\"number\">1</span>:<span class=\"number\">100</span>],x[<span class=\"number\">101</span>:<span class=\"number\">183</span>])$p.value&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">p.adj = p.adjust(pvalue, method = <span class=\"string\">&#x27;BH&#x27;</span>)</span><br><span class=\"line\">p.adj.log = -log10(p.adj)</span><br><span class=\"line\"></span><br><span class=\"line\">colcano.df = data.frame(log2FC,p.adj, p.adj.log)</span><br><span class=\"line\">colcano.df$cat = ifelse(colcano.df$log2FC &gt;= <span class=\"number\">1</span> &amp; colcano.df$p.adj &lt; <span class=\"number\">0.05</span>,<span class=\"string\">&#x27;Up&#x27;</span>,</span><br><span class=\"line\">                        ifelse(colcano.df$log2FC &lt;= -<span class=\"number\">1</span> &amp; colcano.df$p.adj &lt; <span class=\"number\">0.05</span>,<span class=\"string\">&#x27;Down&#x27;</span>,<span class=\"string\">&#x27;NS&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p5 = ggplot(colcano.df, aes(log2FC, p.adj.log)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  labs(y = <span class=\"string\">&#x27;-log10(p-value.adj)&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.text.x = element_text(angle = <span class=\"number\">90</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>),</span><br><span class=\"line\">        axis.ticks.x = element_blank())</span><br><span class=\"line\">p5</span><br><span class=\"line\">ggsave(p5, filename = <span class=\"string\">&#x27;20201214PLSDA分析/figures/volcano.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/13/OPLS-DA%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/6.jpg\" class=\"\">\n\n<p>可能是这个例子中的代谢物太少了，导致算完以后都没有差异代谢物了。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Thévenot E A, Roux A, Xu Y, et al. Analysis of the human adult urinary metabolome variations with age, body mass index, and gender by implementing a comprehensive workflow for univariate and OPLS statistical analyses[J]. <em><strong>Journal of proteome research</strong></em>, 2015, 14(8): 3322-3335.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"PTI中的信号网络","abbrlink":"39370b8f","date":"2020-12-27T04:38:40.000Z","_content":"\n# 摘要\n\n在自然环境下，植物时时刻刻都在面对病原物的入侵。然而，由于植物具有有效的免疫系统，植物病害很少发生。病原物被两层不同的识别系统识别：PTI和ETI。PTI和ETI都具有能够阻止病原入侵的诱导防御系统。本综述主要讨论PTI中的信号通路网络，主要聚焦于丝裂原活化蛋白激酶。\n\n<!-- more -->\n\n# Introduction\n\n植物能够将光变成糖类，因此植物成为了包括微生物（尤其是以植物地上地下部分为寄主的微生物）在内的大量生物的碳水源和能量来源。植物病原物根据其侵染方式和取食策略，可以分成活体营养型（如*Hyaloperonospora arabidopsidis*）、半活体营养型（如*Pseudomonas syringae*）和死体营养型（如*Botrytis cinerea*）。植物病原物能够降低植物的生物量、降低植物的育性、影响作物的产量和质量，甚至在是杀死植物，从而引起人们的关注。\n\n植物通常能够抵御大多数病原物的侵染，这种现象叫非寄主抗性（non-host resistance）。表皮和细胞壁是植物抵御病原菌侵染的第一层物理屏障。除开第一层物理屏障外，植物持续分泌的抗菌物质也能有效的抵御病原菌的侵染。陆生植物最外层都有由角质和蜡质组成的表皮。表皮在植物生理上有着重要的作用，如较少水分散失、抗UV辐射等。表皮同样能够有效抵御植物病原菌侵染和昆虫的取食（真菌能够通过机械压力来穿透表皮或者是通过分泌能够水解角质聚酯的角质来透过表皮）。此外，包裹在植物细胞周围的外骨骼——植物细胞壁，由纤维素微纤维、果胶、半纤维素、蛋白质及木质素等组成。细胞壁在完整性维护机制的控制下给细胞提供了结构支撑的同时能够有效应对（非）生物胁迫。某些真菌能够穿透表皮和细胞壁，但是细菌不能直接地穿透植物表皮。细菌需要借助一些自然孔口才能进入植物体内，这些自然孔口包括the hydathodes, the nectarthodes, the lenticels，最重要的孔口是气孔。此外，昆虫取食、食草动物、风、暴雨等造成的植物伤口也是病原物侵染植物的有效途径。除了利用物理屏障抵御病原菌的侵染外，植物还能持续稳定地合成并分泌抗菌物质来抑制病原菌的生长。一些代谢物和蛋白都具有这种抗菌活性，如十字花科植物的此生代谢产物芥子油甘及其衍生物。那些成功穿过植物物理屏障的病原物在进入植物细胞后需要卖你对的是植物的免疫系统。植物的免疫系统包括了两部分：病原物识别和病原物防御。\n\n植物免疫系统的第一层是PAMPs（病原相关分子模式）/PRRs（病原/模式识别受体）。PAMPs通常也来自非致病菌，因此它们被优先命名成MAMPs（微生物相关分子模式）。植物识别到MAMPs后会诱导PAMP激发的免疫，或者是诱导病原激活的免疫或者是模式激发的免疫，也就是PTI。植物同样能够感知到损伤相关的分子模式（DAMPs），这些DAMPs是植物在遭受病原菌侵染后降解的产物。DAMPs激发的免疫和响应和PTI响应类似。植物也可以通过感知病原物效应子（病原物合成后释放到植物的胞外空间或胞内来增强病原物的适应性）来感知病原的入侵。 不能正常感知到这些效应子的植物对该病原菌表现为感病，从而导致由效应子激发的易感性；而能够通过R蛋白来识别这些效应子的植物则会激发ETI。植物和病原在共进化的过程中形成了**Z**型模型。\n\n{% asset_img 2.png %}\n\n在成功识别病原物后，植物会启动一系列的防御机制，如关闭气孔阻止细菌的进入、控制营养物质从细胞质到质外体的转运来限制细菌的增殖、合成并分泌camalexin等植保素、合成分泌PR1等防御相关的蛋白或多肽、在被侵染部位合成与过敏反应相关的活性氧（ROS）。\n\n病原识别机制中涉及到了复杂的信号网络。本篇综述重点关注的是PTI过程中的信号网络及丝裂原活化蛋白激酶（MAMPs）参与途径。主要以拟南芥-细菌互作系统进行描述。\n\n# MAMP/DAMP识别\n\n植物能够识别对微生物很重要的MAMPs。MAMPs包括蛋白（如细菌鞭毛蛋白和延伸因子Tu）、碳水化合物(如真菌的几丁质)及脂多糖等。DAMPs是病原菌侵染过程中植物的降解产物（如角质素单体）、细胞壁受损产物或者AtPep1等内源肽。PRRs通常是质膜结合类受体激酶（RLKs）或者是有着胞外结构域的类受体蛋白。已经鉴定到了一些PRR/DAMP对，如拟南芥中能够识别细菌鞭毛（铜绿假单胞菌的22个氨基酸长的抗原决定簇flg22为代表）的N端的flagellin-sensitive 2（FLS2）（图2）、拟南芥中的EF-Tu受体（EFR）。在DAMPs中，RLK蛋白PERR1是DAMP AtPep1的受体。\n\n{% asset_img 3.png %}\n\n此外，一些蛋白与PRRs组成了免疫受体复合物，而且这些蛋白对正常的MAMP识别和信号转导是至关重要的。MAMP感知不仅能够快速（几秒）诱导质膜上免疫受体复合物的形成，还能诱导不同的自磷酸化和反磷酸化。和BRI1相关的受体激酶1（BAK1）能够和FLS2互作，BAK1缺失会导致早期依赖flg22响应的下降。BAK1实际上可以与不同的PRR相互作用，并与FLS2互作结合flg22，因此可以被看成共受体。除了BAK1外，受体样胞质激酶葡萄孢菌诱导的激酶1（BIK1）和相关的PBL激酶能够与FLS2及EFR互作，在MAMP结合后迅速被磷酸化并从PRR复合物中释放。\n\n# Ca$^{2+}$爆发\n\n植物在感知到MAMP/DAMP后，最早的物理响应之一就是胞外Ca$^{2+}$的内流，发生的时间在0.5-2min，4-6min达到峰值。BIK1以及其他BIK1家族蛋白正向调控Ca$^{2+}$的内流。Ca$^{2+}$的内流导致H$^{+}$内流、K$^{+}$和NO$_3^{+}$外流，从而使得胞外空间碱化（1min左右）及质膜去极化（1-3min）。正常情况下，细胞质中Ca$^{2+}$的浓度受质膜和膜内Ca$^{2+}$通道调节；但是涉及到MAMP/DAMP识别和信号转导相关的分子物质还尚不清楚。值得注意的是，在MAMP响应中，拟南芥脂膜上的能与FLS2及ACA8互作的拟南芥自抑制Ca$^{2+}$ATP激酶8和其同系物ACA10参与了Ca$^{2+}$水平调节。MAMP识别过程中除了Ca$^{2+}$会快速流入细胞质外，Nomura等发现在叶绿体基质中自由Ca$^{2+}$水平会持续更长时间。研究人员还观察到使用丝氨酸/苏氨酸蛋白激酶和MAPK激酶抑制剂可减少细胞质和间质Ca$^{2+}$的浓度变化，说明MAPK在Ca$^{2+}$信号的产生过程中可能有着相关的级联反应。考虑到MAMP/DAMP识别中质外体快算碱化，很可能质膜上H$^{+}$-ATP酶的抑制也影响着阴离子外流和质子内流。\n\n# ROS爆发\n\n由MAMP时，2-3min后胞外空间通常会发生活性氧爆发并在10-14min达到峰值。在拟南芥中，质膜上的NADPH氧化酶RBOHD和MAMP诱导的ROS爆发相关。有趣的是，***P. syringae***在拟南芥中引起的ROS爆发水平受到FLS PRR的调控，而且要在20min左右才能检测到ROS，在35-40min才达到峰值。波动的幅度也比flg22诱导的低。这些数据表明，鞭毛蛋白是在感染后80分钟内检测到的主要MAMP/DAMP，鞭毛蛋白的数量和/或可及性相对较弱。在MAMP感知中，RBOHD可以和FLS2及EFR关联，完全激活NADPH氧化酶需要Ca$^{2+}$诱导的钙依赖性蛋白激酶（CDPK）和BIK1对不同残基进行磷酸化。Ca$^{2+}$本身也能调控RBOHD。RBOHD能在质外体中产生不透膜的超氧化物O$_2^-$，该物质能够通过超氧化物歧化酶催化后变成H$_2$O$_2$。H$_2$O$_2$具有膜透性，从而能够进入到细胞质和不同的器官中。H$_2$O$_2$等活性氧也会影响胞内Ca$^{2+}$水平。MAMP/DAMP诱导的活性氧爆发对胞内Ca$^{2+}$水平有正反馈调节作用，从而导致二次峰值（flg22诱导后5min左右）。有趣的是，依赖于CDPK的RBOHD的磷酸化在ROS的刺激下也会发生。依赖MPK3/MPK6的MAMP/DAMP诱导的ROS爆发有着矛盾的结果。如，Zhang等发现细菌效应子HopAI1（能够使MPK3和MPK6失活）的诱导表达完全抑制了flg22诱导的ROS爆发，这个结果表明MPK3/MPK6作用在ROS爆发的上游。但是这种方法不能区分每个MAPK的特定贡献。后面又发现HopAI1还能抑制MPK4的活性。因为一些病原菌的效应子能够以不同的信号元件为靶标（如HopF2能够以多个MKKs和BAK1为靶标），因此HopAI1也有可能作用于位于ROS爆发上游的由flg22激发的信号的其他成分。Ranf等利用*mpk*的单突变体研究发现用flg22处理两个不同的*mpk3*突变体表现出更长时间的ROS爆发，*mpk6*突变体和野生型类似，所以MPK3负向调节由flg22诱导的ROS的爆发。Galletti等研究发现flg22诱导的ROS爆发在两个AP2C1（一个能够使MPK3和MPK6失活的MAPK磷酸化酶）过表达株系中没有受到影响，这个结果表明ROS爆发对于MPK3/MPK6来说是独立发生的。此外，他们也发现MPK4以AP2C1为靶标。最佳，Xu等发现*mpk3*与*mpk6*的双重突变体中ROS爆发与野生型类似，这表明ROS爆发与MPK3/MPK6无关。同样，由MAMP/DAMP诱导的依赖于MPK4的ROS爆发也有矛盾的结果。Zhang等发现flg22诱导的ROS爆发与MEKK1-MKK1/MKK2-MPK4级联反应无关。然而，与野生型相比，MPK4株系中ROS爆发水平降低了，突变体*mpk4*中ROS爆发水平上调了，这表明MPK4负向调节ROS爆发。目前比较清楚的是，MAMP诱导的ROS爆发是由RBOHD引起的；其他RBOH蛋白参与了不同的信号通路。然而，NADPH氧化酶并不是植物细胞中唯一的ROS源；越来越清楚的是，植物中的ROS源（叶绿体、过氧化物酶、线粒体及质膜）有着复杂的时空变化，而且ROS其他信号之间也是及其复杂的。\n\n# 其他小信号分子：RNO和脂类\n\n除了Ca$^{2+}$和ROS外，MAMP信号中还有其他的小分子。被统称为活性氮的NO及其衍生物参与了信号转导的不同步骤，如通过半胱氨酸亚硝化调控*PR* genes 1（调控防御基因的表达）的非表达体的聚合状态，或者是通过半胱氨酸亚硝化抑制RBOHD。这些结果表明寄主在响应病原菌的过程中ROS和NO之间有着紧密的关系。NO在生成过程中有个滞后期，在此期间，隐球菌素和壳聚糖能够在几分钟内诱导NO的生成。壳聚糖能够持续诱导NO的生成（直到60min左右）。病原菌诱导的Ca$^{2+}$内流或激活钙调蛋白和/或类钙调蛋白，从而激活下游的NO合成。但是NO的生物合成还有很多不清楚的地方。\n\n磷脂酸（PA）和神经酰类等脂类也被认为是植物响应病原物过程中的信号分子。在flg22或真菌的诱导子上，番茄细胞中PA会被快速诱导合成并在数分钟内达到峰值（对flg22来说是8min左右）；与此同时，PA的前体物质PIP2和PIP的含量在2min开始降低，DGPP（PA的磷酸化产物）的含量开始升高。MAMP诱导的NO的合成部分需要PA参与才能完成，这个过程中涉及到两个通路：磷脂酶D（PLD）和磷脂酶C/二酰基甘油激酶（PLC/DGK）。PA可以与免疫信号转导的已知成分（如CDPKs、PDK1、RBOHD/F等）相互作用并调节其活性。外源PA能在几秒内诱导烟草细胞发生ROS爆发并在6min左右达到峰值；PA还能诱导已悬浮培养2min的大豆细胞中的MAPK。PA能从多个层面上调控信号转导，如ROS、MAPK活性、SA，还可能是ET。\n\n# 异三聚体G蛋白\n\n拟南芥有一个典型的G$\\alpha$亚基（GPA1）、一个G$\\beta$亚基（AGB1）和三个G$\\gamma$基（AGG1、AGG2和AGG3）。和动物相反的是，植物的G蛋白独立于G蛋白偶联的受体，并且似乎是自我激活的。虽然GPA1没有参与到对*P. syringae* 的基础抗性中，对细胞死亡或MAMP诱导的MPK3/MPK6活性也没有明显的影响，但是AGB1、AGG1和AGG2却有着重要的作用。如，MAMP或*P. syringae* 诱导的ROS合成在*agb1* 突变体中就降低了。虽然*agg1* 和*agg2* 单突变体没有表现出明显的表型，但是它们的双重突变体对*P. syringae* 更敏感，并且成对的flg22/slf18及几丁质诱导的抗性也降低了。*agb1* 或*agg1 agg2* 中MPK3和MPK6的活性没有受到影响，但是MPK4的活性略微下降了一些。总之，这些结果表明除开GAP1外，AGB1、AGG1、AGG2都是MAMP诱导的免疫响应所需要的。这些G蛋白也部分参与了MAMP诱导的ROS爆发，但是MAMP诱导的MPK3、MPK4及MPK6的活性与G蛋白无关。AGB1-AGG1／２二连体是如何被RLKs激活的还尚不清楚。AGB1-AGG1／２二连体调控下游反应的精确通路也还不清楚。\n\n# 14-3-3蛋白\n\n14-3-3蛋白也参与了免疫信号转导。拟南芥中的14-3-3基因家族有15个成员，14-3-3蛋白通常与磷酸化蛋白互作来完善这些磷酸化蛋白的活性。在不同的植物中都有关于14-3-3蛋白但与抗病反应的研究报道，而且这些蛋白在这些抗病反应中通常具有正向调节作用。14-3-3蛋白能与免疫信号转导的已知成分互作并调节它们的活性，如玉米质膜上的H$^+$-ATP酶、NtRBOHD 、番茄中的MAPKKKalpha和MKK2、拟南芥因子CPK-1、PA、PDK1及一些参与ET生物合成的1-氨基环丙烷-1-羧酸合成酶。这些不同研究表明14-3-3既参与了PTI也参与了ETI。最近的一个研究阐述了14-3-3蛋白在PTI中的作用。利用5 -氨基咪唑- 4 -甲酰胺- 1 - b - D -呋喃核苷对14-3-3蛋白进行化学破胞后再与互作蛋白进行互作后发现再拟南芥和本氏烟中由MAMP诱导的ROS爆发明显降低了。*P. syringae* 的效应子HopM1会使14-3-3蛋白GRF/AtMIN10失稳。Lozano-Duran等的研究结果表明AICAR能够恢复不具有效应子HopM1的*P. syringae* 的毒力，这个结果进一步确定了14-3-3蛋白在免疫响应中的作用。也由研究发现本氏烟的同源物GFR8/AtMIN10在番茄敲除系中由MAMP诱导的ROS爆发降低了。目前为止的研究表明14-3-3蛋白能与磷酸化蛋白互作，参与到植物免疫信号转导的不同步骤，但是更多的具体的机制还有待研究。\n\n# 蛋白激酶\n\n由蛋白质激酶介导并由蛋白质磷酸酶清除的蛋白质磷酸化是真核生物中最常见的翻译后修饰，并且在信号转导中具有重要作用。蛋白质磷酸化会影响蛋白稳定性、酶活性及亚细胞定位等。在MAMP识别中发生着大量的磷酸化事件，磷酸化蛋白质组能够精确定位到磷酸化的位点。MAMP处理后磷酸化位点丰度降低表明磷酸化酶在PTI信号中有着及其重要的功能。\n\n除开之前提到的在MAMP识别中除了免疫受体复合物会马上自磷酸化和反磷酸化外，其他的蛋白激酶也快速被激活。这些蛋白激酶大多数属于CDPK、MAPK及AGC蛋白激酶家族，它们也是调控转录因子、代谢酶、质膜蛋白及细胞骨架蛋白等大量蛋白靶标的关键。\n\n## CDPKs\n\n拟南芥基因组编辑34个CDPKs。CDPKs有个N端丝氨酸/苏氨酸蛋白激酶结构域和一个C端类CaM结构域（EF-hand结合位点，大多数都要依赖于Ca$^{2+}$）。CPK4、CPK5、CPK6及CPK11等一些CDPKs会被flg22暂时（5-30min）地激活。*P. syringae* 侵染后，CPK4/5/6/11参与了由flg22介导的ROS爆发、flg22介导的转录重编程和flg22诱导的抗性。一些CDPK底物被鉴定到，如CPK5的第五RBOHD、番茄中CDPK2的底物ACS2。除了Ca$^{2+}$，CDPKs也会被其他参与信号转导的分子（如脂类、14-3-3蛋白）调控。\n\n## AGC及其相关激酶\n\nAGC蛋白激酶参与了植物免疫响应并调控病原菌诱导的MAPK级联反应。在拟南芥中，AGC激酶家族有39个成员。通过H$_2$O$_2$、纤维素酶处理、抵御*Hyaloperonospora arabidopsidis* 和 *P. syringae* 侵染完全激活MPK3和MPK6需要AGC2-1（也叫OXI1）的参与才能完成。MAMPs和DAMPs（flg22、纤维素酶、H$_2$O$_2$）能够快速诱导根叶部OXI1的基因表达和酶活性。有趣的是，在RBOHD突变体或用NADPH氧化酶抑制剂二苯基碘处理后，拟南芥中OXI1的转录诱导下降。MAMPs处理或半活体营养型病原菌侵染后的ROS爆发与RBOHD相关，这表明在植物-病原互作中RBOHD介导的XOI1诱导会导致ROS合成。OXI1调控一类蛋白激酶，如Pti1-1到Pti1-4。*in vivo* 发现受胁迫诱导的Pti1-4能与MPK6互作。对其他的AGC激酶来说，OXI1活性受到AGC激酶PDK1的调控，PA能以依赖PDK1的方式激活OXI1。然而，Pti1激酶活性在flg22和H$_2$O$_2$条件下不依赖于PDK1，但是依赖于OXI1，这个结果表明在受到ROS或MAMP刺激时其他蛋白激酶作用于OXI1的上游。\n\n## MAPKs\n\n拟南芥基因组编码20个MAPKs、10个MAPKKs和60个MAPKKKs。MAPKKKs、MAPKKs和MAPKs都含有能够将胞外刺激转化成适当响应的功能信号模块。这些MAPKs在植物-病原互作研究中被广泛关注。flg22和其他MAMP处理后，MAPK3/4/6/11在1-2min内被激活并在10-15分钟达到峰值，之后迅速下降。MKK4/MKK5组成的信号模块通过磷酸化和MPK4上游的MEKK1-MKK1/MKK2激活MPK3/MPK6（图4）。最开始的研究认为MEKK1是MKK4/MKK5-MPK3/MPK6上游的MAPKKK。然而，在flg22处理后*mekk1* 突变体后，MPK3和MPK6被激活，这个结果表明MEKK1并不是这个模块上有的MAPKKK，或者至少一个其他MAPKKK扮演多余的角色。有意思的是，参与气孔发育及花序结构的MAPK模块由YODA下游的MKK4 / MKK5- MPK3 / MPK6组成，即MAPKKK。然而，由MAMP激发的MPK3和MPK6的活性在*yoda* 突变体中是正常的。免疫反应中MKK4/MKK5-MPK3/MPK6上游的MAPKKK(s)的鉴定还不清楚。MKK4/MKK5-MPK3/MPK6模块正向调节防御响应。*mekk1*突变体的MEKK1激酶受损后半矮化程度降低，这表明MEKK1在其酶活性之外还有个独立的结构性功能，但是仍然不能完全排除此MEKK1激酶受损版本具有残留活性。酵母双杂分析发现MEKK1直接与MPK4互作。然而，没有更多的数据来支撑这个结果。首先，MEKK1-MKK1/MKK2-MPK4模块被认为会负向调控防御响应（级联模块突变体有着本构防御响应，如H$_2$O$_2$积累、*PR*基因的本构表达等，并且对病原菌的抗性增强了）。然而，最近的研究表明在*mkk1 mkk2*中这个MAPK模块实际上能够正向调节防御响应，而且被*R* 蛋白抑制子保护着。\n\n{% asset_img 4.png %}\n\nPRR免疫复合物和下游的MAPKKKs之间的分子连接仍旧不清楚。一些数据表明flg22诱导的MPK3/4/6的活性部分依赖于Ca$^{2+}$爆发，但是在*cpk5 cpk 6 cpk11* 三重突变体中，flg22诱导的MPK3/4/6的活性并没有变化。在*rbohd* 突变体中flg22诱导的MPK3/4/6的活性和野生型类似，这说明ROS爆发不需要MAPK激活就能完成。此外，在*bik1 pnl1* 双重突变体中flg22诱导后MPK3/4/6的活性正常，这说明它们的激活不需要BIK1和PBL1就能完成；但是细菌AvrAC效应子表达的情况下flg22诱导的MAPK活性降低了，这表明额外的BIK1相关蛋白可能激活MAPK。此外，利用四重突变体研究发现flg22诱导的MPK3/MPK6激活与野生型是有差异的，这表明MAPK激活与SA、JA及ET信号通路是无关的。\n\n# MAPK 底物\n\n当前在生物学中重要挑战是将给定的蛋白激酶与其真实的底物进行高度关联，尤其是在信号转导研究中。在PTI中，MAPK底物是被研究得最多的。已经利用多种方法鉴定到了多个底物。\n\n##  转录因子\n\n免疫MAPK底物半数都是转录因子，说明在免疫响应中免疫MAPKs在转录重编程中有着重要作用。*in vitro* 时MPK3、MPK4及MPK6不够磷酸化转录因子WRKY33，*in vivo* 条件下MPK3和MPK6引发的磷酸化也有相关研究进行报道。遗传分析表明在不同病原菌侵染时和MPK3/MPK6信号通路中WRKY33对camalexin的生物合成是至关重要的。在突变体WRKY33$^{SA}$中WRKY33中5个潜在的MAPK磷酸化位点被突变。WRKY33$^{SA}$中并没有*wrky33* 突变的表型，而且值得注意的是camalexin生物合成相关基因的激活效率更低。此外，WRKY33能和*PAD3* 的启动子进行结合，这表明WRKY33能够直接激活camalexin合成相关基因的表达。有趣的是，MPK3/MPK6信号调控*WRKY33* 的表达，WRKY33能够与其启动子结合，这表明在*WRKY33*  的表达中存在循坏调节。总之，camalexin的生物合成被MPK3/MPK6信号通过对WRKY33转录及转录后的调节明显地诱导。事实上，WRKY33还能与MPK4互作来控制camalexin的生物合成。WRKY33与MPK4和MKS1形成核复合物。flg22诱导或细菌侵染后，由MPK4引发的MKS1的磷酸化诱导MKS1-WRKY33复合物从MPK4中释放出来，从而激活*PAD3* 基因表达。此外，MKS1能够识别WRKY33中与DNA结合的WRKY结构域，刺激其与DNA的结合。然而，在突变体*mks1* 受到病原菌侵染后仍有camalexin的积累；*PAD3* 在*mpk4* 中表达稳，但在*mks1*中却被病原菌诱导表达。*mks4* 突变体中MKS1沉默表达后，矮化减轻。总之，MPK3/MPK6和MPK4-MKS1信号通过调节WRKY33来影响camalexin的生物合成，但是具体的crosstalk机制还不清楚。\n\n*in vivo* 时MPK3与bZIP转录因子VIP1互作，而且在*in vito* 时能将其磷酸化。用不同的表达系VIP1、VIP1$^{S79A}$或VIP1$^{S79D}$试验表明VIP1和VIP1$^{S79A}$定位在细胞质和细胞核中，VIP1$^{S79D}$主要定位在细胞核中。flg22处理后，VIP1定位在细胞核中，但是VIP1$^{S79A}$没有定位在细胞核中。进一步的试验表明细胞核中的VUP1激活*PR1* 基因表达。这些结果表明flg22处理后，MPK3将VIP1磷酸化，这表明这个蛋白重定位到了细胞核中，然后激活*PR1* 基因表达。\n\nMPK6能与ET响应因子家族中的ERF104互作，但是在flg22处理5-15min后这种互作关系就消失了。有意思的是，这个蛋白复合物的破裂需要MPK6活性和ET信号才能完成。*in vitro* 中MPK6磷酸化ERF104的C端结构域。ERF104过表达系转录组分析发现某些胁迫相关基因的表达上调了，尤其是防御素基因*PDF1.2* 。总之这些结果表明flg22处理后MPK6能够磷酸化ERF104，从而诱导ERF104的释放并激活其防御基因的表达。ERF104似乎是MPK6的一个特定的底物，但是ERF6等其他的ERF转录因子能够被MPK3和MPK6磷酸化。*in vitro*, 磷酸化主要发生在S266和/或S269；*in vivo* 分析发现*B. cinerea* 侵染时ERF6能够被S266和S269磷酸化。此外，活性烟草NtMEK2的诱导也能使拟南芥ERF6 S266和S269残基发生磷酸化，这表明MPK3和MPK6磷酸化了这些位点 *in vivo*。ERF6的硫酸化减弱了蛋白酶体介导的ERF6的降解。*B. cinerea* 侵染强烈诱导了ERF6的表达，这种诱导效应部分依赖于MPK3/MPK6信号，但是和ET信号无关。一个模拟磷酸化的突变体植株和野生型相比对*B. cinerea* 表现出更强的抗性，同时表现出不同于*mpk4* 突变体的严重的矮化。与此相反的是，一个dominant-negative ERF6突变体植株比野生型植株对*B. cinerea*表现出了更高的敏感性。他们研究还发现ERF6能作用于MPK3/MPK6信号的下游，诱导*PDF1.1*、*PDF1.2a* 等几个防御素基因的表达。总之，这些数据表明ERF6是MPK3和MPK6的一个底物，参与激活防御基因表达和真菌对病原菌的抗性。\n\n## 其他底物\n\n除了转录因子意外，还有一些具有多种细胞功能的免疫MAPK底物被鉴定到。*in vitro*，MPK6磷酸化ET生物合成限速酶1-氨基环丙烷-1-羧酸合酶的两种同工型：ACS2和ACS6。在ACS6中被磷酸化的位点是S480、S483和S488。SCA6的一个更稳定的突变体ACS6$^{S480D/S483D/S488D}$能导致细胞ACS活性和ET生物合成增加。此外，遗传分析发现激活MPK6后，ACS2和ACS6都是生成高水平ET所必须的。同一研究组后来还发现MPK3也参与了同样的反应，并且发现其磷酸化的精确机制，进而通过泛素化-蛋白酶体机制来解释ACS蛋白的稳定性或降解机制。这个研究的数据表明MPK3和MPK6通过ACS2和ACS6的磷酸化来调节ET的生物合成。有趣的是，WRKY33能够与*ACS2* 和*ACS6* 的启动子直接结合 *in vivo* ，MPK3/MPK6信号很大程度上依赖WRKY33来诱导*ACS2* 和*ACS6* 的基因表达。因此，与WRKY33调控camalexin生物合成类似，MPK3/MPK6信号通过对ACS2和ACS6的转录级转录后的调节来调控ET的合成。\n\n研究者利用蛋白质芯片筛选将串联锌指蛋白9（TZF9）鉴定为MPK3和MPK6的底物。Maldonado-Donilla等的研究进一步确证了这个结果，而且进一步表明MPK3和MPK6能够与TZF9在细胞质和细胞核中互作。TZF9原生质体顺势表达发现TZF9在flg22处理后发生磷酸化，磷酸化以后TZF9的蛋白稳定性可能发生变化。*tzf9* 突变体对MAMP诱导的抗性有部分衰减：ROA爆发降低、MAPK活性降低、*FRK1* 和*NHL10*防御表达降低。这些数据表明植物防御期间，MPK3和MPK6能够磷酸化TZF9，进而破坏蛋白稳定性、改变其可能参与的转录后的调控。\n\nMPK6和MPK3（可能）与LIP5互作，都能磷酸化LIP5。病原菌侵染或MPK3/MPK6信号下，LIP5也会被磷酸化。*lip5* 突变体中flg22诱导的防御响应是正常的，但是对*P. syringae* 的基础抗性受损。LIP5中MAPK潜在的磷酸化位点突变会降低LIP5的稳定性。受到*P. syringae* 侵染后植株需要LIP5来增加多囊泡体的形成。总之，这些结果表明MPK3和MPK6磷酸化LIP5，磷酸化后的蛋白更稳定并且能够正向调节多囊泡体铁路，从而导致防御相关分子的重定位。\n\nPHOS32和相关蛋白PHOS34在flg22处理后能够被迅速磷酸化，PHOS32中的磷酸化位点是S21。*in vitro* 激酶分析发现MPK3和MPK6能够磷酸化PHOS32，尤其是S21这个位点；进一步的免疫耗竭实验发现MPK3和MPK6是磷酸化这个位点的主要蛋白激酶。PHOS32和PHOS34都含有一个普遍的应激蛋白A结构域。但是PHOS32和PHOS34在植物防御中的具体功能、MPK3和MPK6引发的磷酸化的作用还没有新概念报道。\n\n除了MPK3/4/6外，还有MPK11也有一定的功能。MPK11能与GRF6互作。 烟草共表达等试验发现MPK11磷酸化GRF6的丝氨酸残基。MPK11与GRF6共表达后GRF6的丰度降低，这表明MPK11会影响GRF的稳定性。此外，抗泛素化抗体试验发现GRF6会被泛素-蛋白酶系统降解。在水痘病毒李痘病毒（PPV）侵染后，*mpk11* 和*grf6* 分别表现更高的敏感性和抗性。总之，这些结果表明MPK11磷酸化GRF6从而导致其泛素-蛋白酶退化，对PPV抗性降低。\n\n## 其他的MAPK底物\n\n在其他条件下（病原侵染、非生物胁迫级其他）也鉴定到了MPK3/4/6的其他底物。这些底物中的一半以上都是转录因子。这些蛋白是转录因子EIN3、硝酸还原酶NIA2、ｂHLH转录因子SPCH、ｍRNA酶DCP1、转录因子MYB4和MYB44、转录因子HSFA2和HSFA4A、脂类转运蛋白相关的杂交富脯氨酸蛋白AZI1、ｂＨＬＨ转录因子MYC2、MAPK酸化酶MPK1、细胞骨架蛋白MAP65-1、C2H2型转录因子ZAT6及ZAT10。\n\n## 中高通量分析中推定的MAPK底物\n\n上述的MAPK底物主要是通过candidate approaches鉴定到的。与之相反的是，许多推定的底物都是从中/高通量分析中得到的，但是大多数都还需要进一步的实验来验证。Feiler等开发了包含1690个拟南芥蛋白的芯片，并将其与MPK3和MPK6进行孵育。得到48个MPK3的潜在底物、39个MPK6的潜在底物，有26个底物是共有的，其中是ACS6就是MPK3和MPK6的底物。其他的潜在底物是转录因子、核糖体蛋白、组蛋白及其他蛋白。Popescu等人利用含有2158个拟南芥蛋白的芯片并借助GO分析发现推定的底物中50.4% 是潜在的转录因子、35%是推定的核酸结合蛋白、16%是蛋白激酶。测试了10个不同的MAPKs后，发现570个蛋白是潜在的底物。\n\n## 病原效应子靶向的MAPK模块\n\n病原菌释放大量的效应子到寄主细胞中来抑制寄主免疫响应，MAPK模块是这些效应子主要的靶标。前面提到的HopAI1以MPK3/4/6为靶标。HopAI1通过其磷酸化酶活性来刺激这些MAPKs。*P. syringae* 的效应子与MPK4互作，诱导磷酸化并激活MPK4。此外，MPK4直接与RIN4互作并将其磷酸化。\n\n# 文献信息\n\n>Title：Signaling Mechanisms in Pattern-Triggered Immunity (PTI)\n>\n>译名：PTI中的信号机制\n>\n>期刊：***Molecular Plant***\n>\n>IF：12\n>\n>链接：https://doi.org/10.1016/j.molp.2014.12.022\n>\n>通讯作者：Heribert Hirt\n>\n>主要单位：King Abdullah University of Science and Technology\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/PTI中的信号网络.md","raw":"---\ntitle: PTI中的信号网络\ntags: 文献\ncategories: 文献\nabbrlink: 39370b8f\ndate: 2020-12-27 12:38:40\n---\n\n# 摘要\n\n在自然环境下，植物时时刻刻都在面对病原物的入侵。然而，由于植物具有有效的免疫系统，植物病害很少发生。病原物被两层不同的识别系统识别：PTI和ETI。PTI和ETI都具有能够阻止病原入侵的诱导防御系统。本综述主要讨论PTI中的信号通路网络，主要聚焦于丝裂原活化蛋白激酶。\n\n<!-- more -->\n\n# Introduction\n\n植物能够将光变成糖类，因此植物成为了包括微生物（尤其是以植物地上地下部分为寄主的微生物）在内的大量生物的碳水源和能量来源。植物病原物根据其侵染方式和取食策略，可以分成活体营养型（如*Hyaloperonospora arabidopsidis*）、半活体营养型（如*Pseudomonas syringae*）和死体营养型（如*Botrytis cinerea*）。植物病原物能够降低植物的生物量、降低植物的育性、影响作物的产量和质量，甚至在是杀死植物，从而引起人们的关注。\n\n植物通常能够抵御大多数病原物的侵染，这种现象叫非寄主抗性（non-host resistance）。表皮和细胞壁是植物抵御病原菌侵染的第一层物理屏障。除开第一层物理屏障外，植物持续分泌的抗菌物质也能有效的抵御病原菌的侵染。陆生植物最外层都有由角质和蜡质组成的表皮。表皮在植物生理上有着重要的作用，如较少水分散失、抗UV辐射等。表皮同样能够有效抵御植物病原菌侵染和昆虫的取食（真菌能够通过机械压力来穿透表皮或者是通过分泌能够水解角质聚酯的角质来透过表皮）。此外，包裹在植物细胞周围的外骨骼——植物细胞壁，由纤维素微纤维、果胶、半纤维素、蛋白质及木质素等组成。细胞壁在完整性维护机制的控制下给细胞提供了结构支撑的同时能够有效应对（非）生物胁迫。某些真菌能够穿透表皮和细胞壁，但是细菌不能直接地穿透植物表皮。细菌需要借助一些自然孔口才能进入植物体内，这些自然孔口包括the hydathodes, the nectarthodes, the lenticels，最重要的孔口是气孔。此外，昆虫取食、食草动物、风、暴雨等造成的植物伤口也是病原物侵染植物的有效途径。除了利用物理屏障抵御病原菌的侵染外，植物还能持续稳定地合成并分泌抗菌物质来抑制病原菌的生长。一些代谢物和蛋白都具有这种抗菌活性，如十字花科植物的此生代谢产物芥子油甘及其衍生物。那些成功穿过植物物理屏障的病原物在进入植物细胞后需要卖你对的是植物的免疫系统。植物的免疫系统包括了两部分：病原物识别和病原物防御。\n\n植物免疫系统的第一层是PAMPs（病原相关分子模式）/PRRs（病原/模式识别受体）。PAMPs通常也来自非致病菌，因此它们被优先命名成MAMPs（微生物相关分子模式）。植物识别到MAMPs后会诱导PAMP激发的免疫，或者是诱导病原激活的免疫或者是模式激发的免疫，也就是PTI。植物同样能够感知到损伤相关的分子模式（DAMPs），这些DAMPs是植物在遭受病原菌侵染后降解的产物。DAMPs激发的免疫和响应和PTI响应类似。植物也可以通过感知病原物效应子（病原物合成后释放到植物的胞外空间或胞内来增强病原物的适应性）来感知病原的入侵。 不能正常感知到这些效应子的植物对该病原菌表现为感病，从而导致由效应子激发的易感性；而能够通过R蛋白来识别这些效应子的植物则会激发ETI。植物和病原在共进化的过程中形成了**Z**型模型。\n\n{% asset_img 2.png %}\n\n在成功识别病原物后，植物会启动一系列的防御机制，如关闭气孔阻止细菌的进入、控制营养物质从细胞质到质外体的转运来限制细菌的增殖、合成并分泌camalexin等植保素、合成分泌PR1等防御相关的蛋白或多肽、在被侵染部位合成与过敏反应相关的活性氧（ROS）。\n\n病原识别机制中涉及到了复杂的信号网络。本篇综述重点关注的是PTI过程中的信号网络及丝裂原活化蛋白激酶（MAMPs）参与途径。主要以拟南芥-细菌互作系统进行描述。\n\n# MAMP/DAMP识别\n\n植物能够识别对微生物很重要的MAMPs。MAMPs包括蛋白（如细菌鞭毛蛋白和延伸因子Tu）、碳水化合物(如真菌的几丁质)及脂多糖等。DAMPs是病原菌侵染过程中植物的降解产物（如角质素单体）、细胞壁受损产物或者AtPep1等内源肽。PRRs通常是质膜结合类受体激酶（RLKs）或者是有着胞外结构域的类受体蛋白。已经鉴定到了一些PRR/DAMP对，如拟南芥中能够识别细菌鞭毛（铜绿假单胞菌的22个氨基酸长的抗原决定簇flg22为代表）的N端的flagellin-sensitive 2（FLS2）（图2）、拟南芥中的EF-Tu受体（EFR）。在DAMPs中，RLK蛋白PERR1是DAMP AtPep1的受体。\n\n{% asset_img 3.png %}\n\n此外，一些蛋白与PRRs组成了免疫受体复合物，而且这些蛋白对正常的MAMP识别和信号转导是至关重要的。MAMP感知不仅能够快速（几秒）诱导质膜上免疫受体复合物的形成，还能诱导不同的自磷酸化和反磷酸化。和BRI1相关的受体激酶1（BAK1）能够和FLS2互作，BAK1缺失会导致早期依赖flg22响应的下降。BAK1实际上可以与不同的PRR相互作用，并与FLS2互作结合flg22，因此可以被看成共受体。除了BAK1外，受体样胞质激酶葡萄孢菌诱导的激酶1（BIK1）和相关的PBL激酶能够与FLS2及EFR互作，在MAMP结合后迅速被磷酸化并从PRR复合物中释放。\n\n# Ca$^{2+}$爆发\n\n植物在感知到MAMP/DAMP后，最早的物理响应之一就是胞外Ca$^{2+}$的内流，发生的时间在0.5-2min，4-6min达到峰值。BIK1以及其他BIK1家族蛋白正向调控Ca$^{2+}$的内流。Ca$^{2+}$的内流导致H$^{+}$内流、K$^{+}$和NO$_3^{+}$外流，从而使得胞外空间碱化（1min左右）及质膜去极化（1-3min）。正常情况下，细胞质中Ca$^{2+}$的浓度受质膜和膜内Ca$^{2+}$通道调节；但是涉及到MAMP/DAMP识别和信号转导相关的分子物质还尚不清楚。值得注意的是，在MAMP响应中，拟南芥脂膜上的能与FLS2及ACA8互作的拟南芥自抑制Ca$^{2+}$ATP激酶8和其同系物ACA10参与了Ca$^{2+}$水平调节。MAMP识别过程中除了Ca$^{2+}$会快速流入细胞质外，Nomura等发现在叶绿体基质中自由Ca$^{2+}$水平会持续更长时间。研究人员还观察到使用丝氨酸/苏氨酸蛋白激酶和MAPK激酶抑制剂可减少细胞质和间质Ca$^{2+}$的浓度变化，说明MAPK在Ca$^{2+}$信号的产生过程中可能有着相关的级联反应。考虑到MAMP/DAMP识别中质外体快算碱化，很可能质膜上H$^{+}$-ATP酶的抑制也影响着阴离子外流和质子内流。\n\n# ROS爆发\n\n由MAMP时，2-3min后胞外空间通常会发生活性氧爆发并在10-14min达到峰值。在拟南芥中，质膜上的NADPH氧化酶RBOHD和MAMP诱导的ROS爆发相关。有趣的是，***P. syringae***在拟南芥中引起的ROS爆发水平受到FLS PRR的调控，而且要在20min左右才能检测到ROS，在35-40min才达到峰值。波动的幅度也比flg22诱导的低。这些数据表明，鞭毛蛋白是在感染后80分钟内检测到的主要MAMP/DAMP，鞭毛蛋白的数量和/或可及性相对较弱。在MAMP感知中，RBOHD可以和FLS2及EFR关联，完全激活NADPH氧化酶需要Ca$^{2+}$诱导的钙依赖性蛋白激酶（CDPK）和BIK1对不同残基进行磷酸化。Ca$^{2+}$本身也能调控RBOHD。RBOHD能在质外体中产生不透膜的超氧化物O$_2^-$，该物质能够通过超氧化物歧化酶催化后变成H$_2$O$_2$。H$_2$O$_2$具有膜透性，从而能够进入到细胞质和不同的器官中。H$_2$O$_2$等活性氧也会影响胞内Ca$^{2+}$水平。MAMP/DAMP诱导的活性氧爆发对胞内Ca$^{2+}$水平有正反馈调节作用，从而导致二次峰值（flg22诱导后5min左右）。有趣的是，依赖于CDPK的RBOHD的磷酸化在ROS的刺激下也会发生。依赖MPK3/MPK6的MAMP/DAMP诱导的ROS爆发有着矛盾的结果。如，Zhang等发现细菌效应子HopAI1（能够使MPK3和MPK6失活）的诱导表达完全抑制了flg22诱导的ROS爆发，这个结果表明MPK3/MPK6作用在ROS爆发的上游。但是这种方法不能区分每个MAPK的特定贡献。后面又发现HopAI1还能抑制MPK4的活性。因为一些病原菌的效应子能够以不同的信号元件为靶标（如HopF2能够以多个MKKs和BAK1为靶标），因此HopAI1也有可能作用于位于ROS爆发上游的由flg22激发的信号的其他成分。Ranf等利用*mpk*的单突变体研究发现用flg22处理两个不同的*mpk3*突变体表现出更长时间的ROS爆发，*mpk6*突变体和野生型类似，所以MPK3负向调节由flg22诱导的ROS的爆发。Galletti等研究发现flg22诱导的ROS爆发在两个AP2C1（一个能够使MPK3和MPK6失活的MAPK磷酸化酶）过表达株系中没有受到影响，这个结果表明ROS爆发对于MPK3/MPK6来说是独立发生的。此外，他们也发现MPK4以AP2C1为靶标。最佳，Xu等发现*mpk3*与*mpk6*的双重突变体中ROS爆发与野生型类似，这表明ROS爆发与MPK3/MPK6无关。同样，由MAMP/DAMP诱导的依赖于MPK4的ROS爆发也有矛盾的结果。Zhang等发现flg22诱导的ROS爆发与MEKK1-MKK1/MKK2-MPK4级联反应无关。然而，与野生型相比，MPK4株系中ROS爆发水平降低了，突变体*mpk4*中ROS爆发水平上调了，这表明MPK4负向调节ROS爆发。目前比较清楚的是，MAMP诱导的ROS爆发是由RBOHD引起的；其他RBOH蛋白参与了不同的信号通路。然而，NADPH氧化酶并不是植物细胞中唯一的ROS源；越来越清楚的是，植物中的ROS源（叶绿体、过氧化物酶、线粒体及质膜）有着复杂的时空变化，而且ROS其他信号之间也是及其复杂的。\n\n# 其他小信号分子：RNO和脂类\n\n除了Ca$^{2+}$和ROS外，MAMP信号中还有其他的小分子。被统称为活性氮的NO及其衍生物参与了信号转导的不同步骤，如通过半胱氨酸亚硝化调控*PR* genes 1（调控防御基因的表达）的非表达体的聚合状态，或者是通过半胱氨酸亚硝化抑制RBOHD。这些结果表明寄主在响应病原菌的过程中ROS和NO之间有着紧密的关系。NO在生成过程中有个滞后期，在此期间，隐球菌素和壳聚糖能够在几分钟内诱导NO的生成。壳聚糖能够持续诱导NO的生成（直到60min左右）。病原菌诱导的Ca$^{2+}$内流或激活钙调蛋白和/或类钙调蛋白，从而激活下游的NO合成。但是NO的生物合成还有很多不清楚的地方。\n\n磷脂酸（PA）和神经酰类等脂类也被认为是植物响应病原物过程中的信号分子。在flg22或真菌的诱导子上，番茄细胞中PA会被快速诱导合成并在数分钟内达到峰值（对flg22来说是8min左右）；与此同时，PA的前体物质PIP2和PIP的含量在2min开始降低，DGPP（PA的磷酸化产物）的含量开始升高。MAMP诱导的NO的合成部分需要PA参与才能完成，这个过程中涉及到两个通路：磷脂酶D（PLD）和磷脂酶C/二酰基甘油激酶（PLC/DGK）。PA可以与免疫信号转导的已知成分（如CDPKs、PDK1、RBOHD/F等）相互作用并调节其活性。外源PA能在几秒内诱导烟草细胞发生ROS爆发并在6min左右达到峰值；PA还能诱导已悬浮培养2min的大豆细胞中的MAPK。PA能从多个层面上调控信号转导，如ROS、MAPK活性、SA，还可能是ET。\n\n# 异三聚体G蛋白\n\n拟南芥有一个典型的G$\\alpha$亚基（GPA1）、一个G$\\beta$亚基（AGB1）和三个G$\\gamma$基（AGG1、AGG2和AGG3）。和动物相反的是，植物的G蛋白独立于G蛋白偶联的受体，并且似乎是自我激活的。虽然GPA1没有参与到对*P. syringae* 的基础抗性中，对细胞死亡或MAMP诱导的MPK3/MPK6活性也没有明显的影响，但是AGB1、AGG1和AGG2却有着重要的作用。如，MAMP或*P. syringae* 诱导的ROS合成在*agb1* 突变体中就降低了。虽然*agg1* 和*agg2* 单突变体没有表现出明显的表型，但是它们的双重突变体对*P. syringae* 更敏感，并且成对的flg22/slf18及几丁质诱导的抗性也降低了。*agb1* 或*agg1 agg2* 中MPK3和MPK6的活性没有受到影响，但是MPK4的活性略微下降了一些。总之，这些结果表明除开GAP1外，AGB1、AGG1、AGG2都是MAMP诱导的免疫响应所需要的。这些G蛋白也部分参与了MAMP诱导的ROS爆发，但是MAMP诱导的MPK3、MPK4及MPK6的活性与G蛋白无关。AGB1-AGG1／２二连体是如何被RLKs激活的还尚不清楚。AGB1-AGG1／２二连体调控下游反应的精确通路也还不清楚。\n\n# 14-3-3蛋白\n\n14-3-3蛋白也参与了免疫信号转导。拟南芥中的14-3-3基因家族有15个成员，14-3-3蛋白通常与磷酸化蛋白互作来完善这些磷酸化蛋白的活性。在不同的植物中都有关于14-3-3蛋白但与抗病反应的研究报道，而且这些蛋白在这些抗病反应中通常具有正向调节作用。14-3-3蛋白能与免疫信号转导的已知成分互作并调节它们的活性，如玉米质膜上的H$^+$-ATP酶、NtRBOHD 、番茄中的MAPKKKalpha和MKK2、拟南芥因子CPK-1、PA、PDK1及一些参与ET生物合成的1-氨基环丙烷-1-羧酸合成酶。这些不同研究表明14-3-3既参与了PTI也参与了ETI。最近的一个研究阐述了14-3-3蛋白在PTI中的作用。利用5 -氨基咪唑- 4 -甲酰胺- 1 - b - D -呋喃核苷对14-3-3蛋白进行化学破胞后再与互作蛋白进行互作后发现再拟南芥和本氏烟中由MAMP诱导的ROS爆发明显降低了。*P. syringae* 的效应子HopM1会使14-3-3蛋白GRF/AtMIN10失稳。Lozano-Duran等的研究结果表明AICAR能够恢复不具有效应子HopM1的*P. syringae* 的毒力，这个结果进一步确定了14-3-3蛋白在免疫响应中的作用。也由研究发现本氏烟的同源物GFR8/AtMIN10在番茄敲除系中由MAMP诱导的ROS爆发降低了。目前为止的研究表明14-3-3蛋白能与磷酸化蛋白互作，参与到植物免疫信号转导的不同步骤，但是更多的具体的机制还有待研究。\n\n# 蛋白激酶\n\n由蛋白质激酶介导并由蛋白质磷酸酶清除的蛋白质磷酸化是真核生物中最常见的翻译后修饰，并且在信号转导中具有重要作用。蛋白质磷酸化会影响蛋白稳定性、酶活性及亚细胞定位等。在MAMP识别中发生着大量的磷酸化事件，磷酸化蛋白质组能够精确定位到磷酸化的位点。MAMP处理后磷酸化位点丰度降低表明磷酸化酶在PTI信号中有着及其重要的功能。\n\n除开之前提到的在MAMP识别中除了免疫受体复合物会马上自磷酸化和反磷酸化外，其他的蛋白激酶也快速被激活。这些蛋白激酶大多数属于CDPK、MAPK及AGC蛋白激酶家族，它们也是调控转录因子、代谢酶、质膜蛋白及细胞骨架蛋白等大量蛋白靶标的关键。\n\n## CDPKs\n\n拟南芥基因组编辑34个CDPKs。CDPKs有个N端丝氨酸/苏氨酸蛋白激酶结构域和一个C端类CaM结构域（EF-hand结合位点，大多数都要依赖于Ca$^{2+}$）。CPK4、CPK5、CPK6及CPK11等一些CDPKs会被flg22暂时（5-30min）地激活。*P. syringae* 侵染后，CPK4/5/6/11参与了由flg22介导的ROS爆发、flg22介导的转录重编程和flg22诱导的抗性。一些CDPK底物被鉴定到，如CPK5的第五RBOHD、番茄中CDPK2的底物ACS2。除了Ca$^{2+}$，CDPKs也会被其他参与信号转导的分子（如脂类、14-3-3蛋白）调控。\n\n## AGC及其相关激酶\n\nAGC蛋白激酶参与了植物免疫响应并调控病原菌诱导的MAPK级联反应。在拟南芥中，AGC激酶家族有39个成员。通过H$_2$O$_2$、纤维素酶处理、抵御*Hyaloperonospora arabidopsidis* 和 *P. syringae* 侵染完全激活MPK3和MPK6需要AGC2-1（也叫OXI1）的参与才能完成。MAMPs和DAMPs（flg22、纤维素酶、H$_2$O$_2$）能够快速诱导根叶部OXI1的基因表达和酶活性。有趣的是，在RBOHD突变体或用NADPH氧化酶抑制剂二苯基碘处理后，拟南芥中OXI1的转录诱导下降。MAMPs处理或半活体营养型病原菌侵染后的ROS爆发与RBOHD相关，这表明在植物-病原互作中RBOHD介导的XOI1诱导会导致ROS合成。OXI1调控一类蛋白激酶，如Pti1-1到Pti1-4。*in vivo* 发现受胁迫诱导的Pti1-4能与MPK6互作。对其他的AGC激酶来说，OXI1活性受到AGC激酶PDK1的调控，PA能以依赖PDK1的方式激活OXI1。然而，Pti1激酶活性在flg22和H$_2$O$_2$条件下不依赖于PDK1，但是依赖于OXI1，这个结果表明在受到ROS或MAMP刺激时其他蛋白激酶作用于OXI1的上游。\n\n## MAPKs\n\n拟南芥基因组编码20个MAPKs、10个MAPKKs和60个MAPKKKs。MAPKKKs、MAPKKs和MAPKs都含有能够将胞外刺激转化成适当响应的功能信号模块。这些MAPKs在植物-病原互作研究中被广泛关注。flg22和其他MAMP处理后，MAPK3/4/6/11在1-2min内被激活并在10-15分钟达到峰值，之后迅速下降。MKK4/MKK5组成的信号模块通过磷酸化和MPK4上游的MEKK1-MKK1/MKK2激活MPK3/MPK6（图4）。最开始的研究认为MEKK1是MKK4/MKK5-MPK3/MPK6上游的MAPKKK。然而，在flg22处理后*mekk1* 突变体后，MPK3和MPK6被激活，这个结果表明MEKK1并不是这个模块上有的MAPKKK，或者至少一个其他MAPKKK扮演多余的角色。有意思的是，参与气孔发育及花序结构的MAPK模块由YODA下游的MKK4 / MKK5- MPK3 / MPK6组成，即MAPKKK。然而，由MAMP激发的MPK3和MPK6的活性在*yoda* 突变体中是正常的。免疫反应中MKK4/MKK5-MPK3/MPK6上游的MAPKKK(s)的鉴定还不清楚。MKK4/MKK5-MPK3/MPK6模块正向调节防御响应。*mekk1*突变体的MEKK1激酶受损后半矮化程度降低，这表明MEKK1在其酶活性之外还有个独立的结构性功能，但是仍然不能完全排除此MEKK1激酶受损版本具有残留活性。酵母双杂分析发现MEKK1直接与MPK4互作。然而，没有更多的数据来支撑这个结果。首先，MEKK1-MKK1/MKK2-MPK4模块被认为会负向调控防御响应（级联模块突变体有着本构防御响应，如H$_2$O$_2$积累、*PR*基因的本构表达等，并且对病原菌的抗性增强了）。然而，最近的研究表明在*mkk1 mkk2*中这个MAPK模块实际上能够正向调节防御响应，而且被*R* 蛋白抑制子保护着。\n\n{% asset_img 4.png %}\n\nPRR免疫复合物和下游的MAPKKKs之间的分子连接仍旧不清楚。一些数据表明flg22诱导的MPK3/4/6的活性部分依赖于Ca$^{2+}$爆发，但是在*cpk5 cpk 6 cpk11* 三重突变体中，flg22诱导的MPK3/4/6的活性并没有变化。在*rbohd* 突变体中flg22诱导的MPK3/4/6的活性和野生型类似，这说明ROS爆发不需要MAPK激活就能完成。此外，在*bik1 pnl1* 双重突变体中flg22诱导后MPK3/4/6的活性正常，这说明它们的激活不需要BIK1和PBL1就能完成；但是细菌AvrAC效应子表达的情况下flg22诱导的MAPK活性降低了，这表明额外的BIK1相关蛋白可能激活MAPK。此外，利用四重突变体研究发现flg22诱导的MPK3/MPK6激活与野生型是有差异的，这表明MAPK激活与SA、JA及ET信号通路是无关的。\n\n# MAPK 底物\n\n当前在生物学中重要挑战是将给定的蛋白激酶与其真实的底物进行高度关联，尤其是在信号转导研究中。在PTI中，MAPK底物是被研究得最多的。已经利用多种方法鉴定到了多个底物。\n\n##  转录因子\n\n免疫MAPK底物半数都是转录因子，说明在免疫响应中免疫MAPKs在转录重编程中有着重要作用。*in vitro* 时MPK3、MPK4及MPK6不够磷酸化转录因子WRKY33，*in vivo* 条件下MPK3和MPK6引发的磷酸化也有相关研究进行报道。遗传分析表明在不同病原菌侵染时和MPK3/MPK6信号通路中WRKY33对camalexin的生物合成是至关重要的。在突变体WRKY33$^{SA}$中WRKY33中5个潜在的MAPK磷酸化位点被突变。WRKY33$^{SA}$中并没有*wrky33* 突变的表型，而且值得注意的是camalexin生物合成相关基因的激活效率更低。此外，WRKY33能和*PAD3* 的启动子进行结合，这表明WRKY33能够直接激活camalexin合成相关基因的表达。有趣的是，MPK3/MPK6信号调控*WRKY33* 的表达，WRKY33能够与其启动子结合，这表明在*WRKY33*  的表达中存在循坏调节。总之，camalexin的生物合成被MPK3/MPK6信号通过对WRKY33转录及转录后的调节明显地诱导。事实上，WRKY33还能与MPK4互作来控制camalexin的生物合成。WRKY33与MPK4和MKS1形成核复合物。flg22诱导或细菌侵染后，由MPK4引发的MKS1的磷酸化诱导MKS1-WRKY33复合物从MPK4中释放出来，从而激活*PAD3* 基因表达。此外，MKS1能够识别WRKY33中与DNA结合的WRKY结构域，刺激其与DNA的结合。然而，在突变体*mks1* 受到病原菌侵染后仍有camalexin的积累；*PAD3* 在*mpk4* 中表达稳，但在*mks1*中却被病原菌诱导表达。*mks4* 突变体中MKS1沉默表达后，矮化减轻。总之，MPK3/MPK6和MPK4-MKS1信号通过调节WRKY33来影响camalexin的生物合成，但是具体的crosstalk机制还不清楚。\n\n*in vivo* 时MPK3与bZIP转录因子VIP1互作，而且在*in vito* 时能将其磷酸化。用不同的表达系VIP1、VIP1$^{S79A}$或VIP1$^{S79D}$试验表明VIP1和VIP1$^{S79A}$定位在细胞质和细胞核中，VIP1$^{S79D}$主要定位在细胞核中。flg22处理后，VIP1定位在细胞核中，但是VIP1$^{S79A}$没有定位在细胞核中。进一步的试验表明细胞核中的VUP1激活*PR1* 基因表达。这些结果表明flg22处理后，MPK3将VIP1磷酸化，这表明这个蛋白重定位到了细胞核中，然后激活*PR1* 基因表达。\n\nMPK6能与ET响应因子家族中的ERF104互作，但是在flg22处理5-15min后这种互作关系就消失了。有意思的是，这个蛋白复合物的破裂需要MPK6活性和ET信号才能完成。*in vitro* 中MPK6磷酸化ERF104的C端结构域。ERF104过表达系转录组分析发现某些胁迫相关基因的表达上调了，尤其是防御素基因*PDF1.2* 。总之这些结果表明flg22处理后MPK6能够磷酸化ERF104，从而诱导ERF104的释放并激活其防御基因的表达。ERF104似乎是MPK6的一个特定的底物，但是ERF6等其他的ERF转录因子能够被MPK3和MPK6磷酸化。*in vitro*, 磷酸化主要发生在S266和/或S269；*in vivo* 分析发现*B. cinerea* 侵染时ERF6能够被S266和S269磷酸化。此外，活性烟草NtMEK2的诱导也能使拟南芥ERF6 S266和S269残基发生磷酸化，这表明MPK3和MPK6磷酸化了这些位点 *in vivo*。ERF6的硫酸化减弱了蛋白酶体介导的ERF6的降解。*B. cinerea* 侵染强烈诱导了ERF6的表达，这种诱导效应部分依赖于MPK3/MPK6信号，但是和ET信号无关。一个模拟磷酸化的突变体植株和野生型相比对*B. cinerea* 表现出更强的抗性，同时表现出不同于*mpk4* 突变体的严重的矮化。与此相反的是，一个dominant-negative ERF6突变体植株比野生型植株对*B. cinerea*表现出了更高的敏感性。他们研究还发现ERF6能作用于MPK3/MPK6信号的下游，诱导*PDF1.1*、*PDF1.2a* 等几个防御素基因的表达。总之，这些数据表明ERF6是MPK3和MPK6的一个底物，参与激活防御基因表达和真菌对病原菌的抗性。\n\n## 其他底物\n\n除了转录因子意外，还有一些具有多种细胞功能的免疫MAPK底物被鉴定到。*in vitro*，MPK6磷酸化ET生物合成限速酶1-氨基环丙烷-1-羧酸合酶的两种同工型：ACS2和ACS6。在ACS6中被磷酸化的位点是S480、S483和S488。SCA6的一个更稳定的突变体ACS6$^{S480D/S483D/S488D}$能导致细胞ACS活性和ET生物合成增加。此外，遗传分析发现激活MPK6后，ACS2和ACS6都是生成高水平ET所必须的。同一研究组后来还发现MPK3也参与了同样的反应，并且发现其磷酸化的精确机制，进而通过泛素化-蛋白酶体机制来解释ACS蛋白的稳定性或降解机制。这个研究的数据表明MPK3和MPK6通过ACS2和ACS6的磷酸化来调节ET的生物合成。有趣的是，WRKY33能够与*ACS2* 和*ACS6* 的启动子直接结合 *in vivo* ，MPK3/MPK6信号很大程度上依赖WRKY33来诱导*ACS2* 和*ACS6* 的基因表达。因此，与WRKY33调控camalexin生物合成类似，MPK3/MPK6信号通过对ACS2和ACS6的转录级转录后的调节来调控ET的合成。\n\n研究者利用蛋白质芯片筛选将串联锌指蛋白9（TZF9）鉴定为MPK3和MPK6的底物。Maldonado-Donilla等的研究进一步确证了这个结果，而且进一步表明MPK3和MPK6能够与TZF9在细胞质和细胞核中互作。TZF9原生质体顺势表达发现TZF9在flg22处理后发生磷酸化，磷酸化以后TZF9的蛋白稳定性可能发生变化。*tzf9* 突变体对MAMP诱导的抗性有部分衰减：ROA爆发降低、MAPK活性降低、*FRK1* 和*NHL10*防御表达降低。这些数据表明植物防御期间，MPK3和MPK6能够磷酸化TZF9，进而破坏蛋白稳定性、改变其可能参与的转录后的调控。\n\nMPK6和MPK3（可能）与LIP5互作，都能磷酸化LIP5。病原菌侵染或MPK3/MPK6信号下，LIP5也会被磷酸化。*lip5* 突变体中flg22诱导的防御响应是正常的，但是对*P. syringae* 的基础抗性受损。LIP5中MAPK潜在的磷酸化位点突变会降低LIP5的稳定性。受到*P. syringae* 侵染后植株需要LIP5来增加多囊泡体的形成。总之，这些结果表明MPK3和MPK6磷酸化LIP5，磷酸化后的蛋白更稳定并且能够正向调节多囊泡体铁路，从而导致防御相关分子的重定位。\n\nPHOS32和相关蛋白PHOS34在flg22处理后能够被迅速磷酸化，PHOS32中的磷酸化位点是S21。*in vitro* 激酶分析发现MPK3和MPK6能够磷酸化PHOS32，尤其是S21这个位点；进一步的免疫耗竭实验发现MPK3和MPK6是磷酸化这个位点的主要蛋白激酶。PHOS32和PHOS34都含有一个普遍的应激蛋白A结构域。但是PHOS32和PHOS34在植物防御中的具体功能、MPK3和MPK6引发的磷酸化的作用还没有新概念报道。\n\n除了MPK3/4/6外，还有MPK11也有一定的功能。MPK11能与GRF6互作。 烟草共表达等试验发现MPK11磷酸化GRF6的丝氨酸残基。MPK11与GRF6共表达后GRF6的丰度降低，这表明MPK11会影响GRF的稳定性。此外，抗泛素化抗体试验发现GRF6会被泛素-蛋白酶系统降解。在水痘病毒李痘病毒（PPV）侵染后，*mpk11* 和*grf6* 分别表现更高的敏感性和抗性。总之，这些结果表明MPK11磷酸化GRF6从而导致其泛素-蛋白酶退化，对PPV抗性降低。\n\n## 其他的MAPK底物\n\n在其他条件下（病原侵染、非生物胁迫级其他）也鉴定到了MPK3/4/6的其他底物。这些底物中的一半以上都是转录因子。这些蛋白是转录因子EIN3、硝酸还原酶NIA2、ｂHLH转录因子SPCH、ｍRNA酶DCP1、转录因子MYB4和MYB44、转录因子HSFA2和HSFA4A、脂类转运蛋白相关的杂交富脯氨酸蛋白AZI1、ｂＨＬＨ转录因子MYC2、MAPK酸化酶MPK1、细胞骨架蛋白MAP65-1、C2H2型转录因子ZAT6及ZAT10。\n\n## 中高通量分析中推定的MAPK底物\n\n上述的MAPK底物主要是通过candidate approaches鉴定到的。与之相反的是，许多推定的底物都是从中/高通量分析中得到的，但是大多数都还需要进一步的实验来验证。Feiler等开发了包含1690个拟南芥蛋白的芯片，并将其与MPK3和MPK6进行孵育。得到48个MPK3的潜在底物、39个MPK6的潜在底物，有26个底物是共有的，其中是ACS6就是MPK3和MPK6的底物。其他的潜在底物是转录因子、核糖体蛋白、组蛋白及其他蛋白。Popescu等人利用含有2158个拟南芥蛋白的芯片并借助GO分析发现推定的底物中50.4% 是潜在的转录因子、35%是推定的核酸结合蛋白、16%是蛋白激酶。测试了10个不同的MAPKs后，发现570个蛋白是潜在的底物。\n\n## 病原效应子靶向的MAPK模块\n\n病原菌释放大量的效应子到寄主细胞中来抑制寄主免疫响应，MAPK模块是这些效应子主要的靶标。前面提到的HopAI1以MPK3/4/6为靶标。HopAI1通过其磷酸化酶活性来刺激这些MAPKs。*P. syringae* 的效应子与MPK4互作，诱导磷酸化并激活MPK4。此外，MPK4直接与RIN4互作并将其磷酸化。\n\n# 文献信息\n\n>Title：Signaling Mechanisms in Pattern-Triggered Immunity (PTI)\n>\n>译名：PTI中的信号机制\n>\n>期刊：***Molecular Plant***\n>\n>IF：12\n>\n>链接：https://doi.org/10.1016/j.molp.2014.12.022\n>\n>通讯作者：Heribert Hirt\n>\n>主要单位：King Abdullah University of Science and Technology\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"PTI中的信号网络","published":1,"updated":"2021-02-02T07:38:44.088Z","_id":"ckwbqwcfp002cr0g03vhx0mbi","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>在自然环境下，植物时时刻刻都在面对病原物的入侵。然而，由于植物具有有效的免疫系统，植物病害很少发生。病原物被两层不同的识别系统识别：PTI和ETI。PTI和ETI都具有能够阻止病原入侵的诱导防御系统。本综述主要讨论PTI中的信号通路网络，主要聚焦于丝裂原活化蛋白激酶。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>植物能够将光变成糖类，因此植物成为了包括微生物（尤其是以植物地上地下部分为寄主的微生物）在内的大量生物的碳水源和能量来源。植物病原物根据其侵染方式和取食策略，可以分成活体营养型（如<em>Hyaloperonospora arabidopsidis</em>）、半活体营养型（如<em>Pseudomonas syringae</em>）和死体营养型（如<em>Botrytis cinerea</em>）。植物病原物能够降低植物的生物量、降低植物的育性、影响作物的产量和质量，甚至在是杀死植物，从而引起人们的关注。</p>\n<p>植物通常能够抵御大多数病原物的侵染，这种现象叫非寄主抗性（non-host resistance）。表皮和细胞壁是植物抵御病原菌侵染的第一层物理屏障。除开第一层物理屏障外，植物持续分泌的抗菌物质也能有效的抵御病原菌的侵染。陆生植物最外层都有由角质和蜡质组成的表皮。表皮在植物生理上有着重要的作用，如较少水分散失、抗UV辐射等。表皮同样能够有效抵御植物病原菌侵染和昆虫的取食（真菌能够通过机械压力来穿透表皮或者是通过分泌能够水解角质聚酯的角质来透过表皮）。此外，包裹在植物细胞周围的外骨骼——植物细胞壁，由纤维素微纤维、果胶、半纤维素、蛋白质及木质素等组成。细胞壁在完整性维护机制的控制下给细胞提供了结构支撑的同时能够有效应对（非）生物胁迫。某些真菌能够穿透表皮和细胞壁，但是细菌不能直接地穿透植物表皮。细菌需要借助一些自然孔口才能进入植物体内，这些自然孔口包括the hydathodes, the nectarthodes, the lenticels，最重要的孔口是气孔。此外，昆虫取食、食草动物、风、暴雨等造成的植物伤口也是病原物侵染植物的有效途径。除了利用物理屏障抵御病原菌的侵染外，植物还能持续稳定地合成并分泌抗菌物质来抑制病原菌的生长。一些代谢物和蛋白都具有这种抗菌活性，如十字花科植物的此生代谢产物芥子油甘及其衍生物。那些成功穿过植物物理屏障的病原物在进入植物细胞后需要卖你对的是植物的免疫系统。植物的免疫系统包括了两部分：病原物识别和病原物防御。</p>\n<p>植物免疫系统的第一层是PAMPs（病原相关分子模式）/PRRs（病原/模式识别受体）。PAMPs通常也来自非致病菌，因此它们被优先命名成MAMPs（微生物相关分子模式）。植物识别到MAMPs后会诱导PAMP激发的免疫，或者是诱导病原激活的免疫或者是模式激发的免疫，也就是PTI。植物同样能够感知到损伤相关的分子模式（DAMPs），这些DAMPs是植物在遭受病原菌侵染后降解的产物。DAMPs激发的免疫和响应和PTI响应类似。植物也可以通过感知病原物效应子（病原物合成后释放到植物的胞外空间或胞内来增强病原物的适应性）来感知病原的入侵。 不能正常感知到这些效应子的植物对该病原菌表现为感病，从而导致由效应子激发的易感性；而能够通过R蛋白来识别这些效应子的植物则会激发ETI。植物和病原在共进化的过程中形成了<strong>Z</strong>型模型。</p>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/2.png\" class=\"\">\n\n<p>在成功识别病原物后，植物会启动一系列的防御机制，如关闭气孔阻止细菌的进入、控制营养物质从细胞质到质外体的转运来限制细菌的增殖、合成并分泌camalexin等植保素、合成分泌PR1等防御相关的蛋白或多肽、在被侵染部位合成与过敏反应相关的活性氧（ROS）。</p>\n<p>病原识别机制中涉及到了复杂的信号网络。本篇综述重点关注的是PTI过程中的信号网络及丝裂原活化蛋白激酶（MAMPs）参与途径。主要以拟南芥-细菌互作系统进行描述。</p>\n<h1 id=\"MAMP-DAMP识别\"><a href=\"#MAMP-DAMP识别\" class=\"headerlink\" title=\"MAMP/DAMP识别\"></a>MAMP/DAMP识别</h1><p>植物能够识别对微生物很重要的MAMPs。MAMPs包括蛋白（如细菌鞭毛蛋白和延伸因子Tu）、碳水化合物(如真菌的几丁质)及脂多糖等。DAMPs是病原菌侵染过程中植物的降解产物（如角质素单体）、细胞壁受损产物或者AtPep1等内源肽。PRRs通常是质膜结合类受体激酶（RLKs）或者是有着胞外结构域的类受体蛋白。已经鉴定到了一些PRR/DAMP对，如拟南芥中能够识别细菌鞭毛（铜绿假单胞菌的22个氨基酸长的抗原决定簇flg22为代表）的N端的flagellin-sensitive 2（FLS2）（图2）、拟南芥中的EF-Tu受体（EFR）。在DAMPs中，RLK蛋白PERR1是DAMP AtPep1的受体。</p>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/3.png\" class=\"\">\n\n<p>此外，一些蛋白与PRRs组成了免疫受体复合物，而且这些蛋白对正常的MAMP识别和信号转导是至关重要的。MAMP感知不仅能够快速（几秒）诱导质膜上免疫受体复合物的形成，还能诱导不同的自磷酸化和反磷酸化。和BRI1相关的受体激酶1（BAK1）能够和FLS2互作，BAK1缺失会导致早期依赖flg22响应的下降。BAK1实际上可以与不同的PRR相互作用，并与FLS2互作结合flg22，因此可以被看成共受体。除了BAK1外，受体样胞质激酶葡萄孢菌诱导的激酶1（BIK1）和相关的PBL激酶能够与FLS2及EFR互作，在MAMP结合后迅速被磷酸化并从PRR复合物中释放。</p>\n<h1 id=\"Ca-2-爆发\"><a href=\"#Ca-2-爆发\" class=\"headerlink\" title=\"Ca$^{2+}$爆发\"></a>Ca$^{2+}$爆发</h1><p>植物在感知到MAMP/DAMP后，最早的物理响应之一就是胞外Ca$^{2+}$的内流，发生的时间在0.5-2min，4-6min达到峰值。BIK1以及其他BIK1家族蛋白正向调控Ca$^{2+}$的内流。Ca$^{2+}$的内流导致H$^{+}$内流、K$^{+}$和NO$_3^{+}$外流，从而使得胞外空间碱化（1min左右）及质膜去极化（1-3min）。正常情况下，细胞质中Ca$^{2+}$的浓度受质膜和膜内Ca$^{2+}$通道调节；但是涉及到MAMP/DAMP识别和信号转导相关的分子物质还尚不清楚。值得注意的是，在MAMP响应中，拟南芥脂膜上的能与FLS2及ACA8互作的拟南芥自抑制Ca$^{2+}$ATP激酶8和其同系物ACA10参与了Ca$^{2+}$水平调节。MAMP识别过程中除了Ca$^{2+}$会快速流入细胞质外，Nomura等发现在叶绿体基质中自由Ca$^{2+}$水平会持续更长时间。研究人员还观察到使用丝氨酸/苏氨酸蛋白激酶和MAPK激酶抑制剂可减少细胞质和间质Ca$^{2+}$的浓度变化，说明MAPK在Ca$^{2+}$信号的产生过程中可能有着相关的级联反应。考虑到MAMP/DAMP识别中质外体快算碱化，很可能质膜上H$^{+}$-ATP酶的抑制也影响着阴离子外流和质子内流。</p>\n<h1 id=\"ROS爆发\"><a href=\"#ROS爆发\" class=\"headerlink\" title=\"ROS爆发\"></a>ROS爆发</h1><p>由MAMP时，2-3min后胞外空间通常会发生活性氧爆发并在10-14min达到峰值。在拟南芥中，质膜上的NADPH氧化酶RBOHD和MAMP诱导的ROS爆发相关。有趣的是，<em><strong>P. syringae</strong></em>在拟南芥中引起的ROS爆发水平受到FLS PRR的调控，而且要在20min左右才能检测到ROS，在35-40min才达到峰值。波动的幅度也比flg22诱导的低。这些数据表明，鞭毛蛋白是在感染后80分钟内检测到的主要MAMP/DAMP，鞭毛蛋白的数量和/或可及性相对较弱。在MAMP感知中，RBOHD可以和FLS2及EFR关联，完全激活NADPH氧化酶需要Ca$^{2+}$诱导的钙依赖性蛋白激酶（CDPK）和BIK1对不同残基进行磷酸化。Ca$^{2+}$本身也能调控RBOHD。RBOHD能在质外体中产生不透膜的超氧化物O$_2^-$，该物质能够通过超氧化物歧化酶催化后变成H$_2$O$_2$。H$_2$O$_2$具有膜透性，从而能够进入到细胞质和不同的器官中。H$_2$O$_2$等活性氧也会影响胞内Ca$^{2+}$水平。MAMP/DAMP诱导的活性氧爆发对胞内Ca$^{2+}$水平有正反馈调节作用，从而导致二次峰值（flg22诱导后5min左右）。有趣的是，依赖于CDPK的RBOHD的磷酸化在ROS的刺激下也会发生。依赖MPK3/MPK6的MAMP/DAMP诱导的ROS爆发有着矛盾的结果。如，Zhang等发现细菌效应子HopAI1（能够使MPK3和MPK6失活）的诱导表达完全抑制了flg22诱导的ROS爆发，这个结果表明MPK3/MPK6作用在ROS爆发的上游。但是这种方法不能区分每个MAPK的特定贡献。后面又发现HopAI1还能抑制MPK4的活性。因为一些病原菌的效应子能够以不同的信号元件为靶标（如HopF2能够以多个MKKs和BAK1为靶标），因此HopAI1也有可能作用于位于ROS爆发上游的由flg22激发的信号的其他成分。Ranf等利用<em>mpk</em>的单突变体研究发现用flg22处理两个不同的<em>mpk3</em>突变体表现出更长时间的ROS爆发，<em>mpk6</em>突变体和野生型类似，所以MPK3负向调节由flg22诱导的ROS的爆发。Galletti等研究发现flg22诱导的ROS爆发在两个AP2C1（一个能够使MPK3和MPK6失活的MAPK磷酸化酶）过表达株系中没有受到影响，这个结果表明ROS爆发对于MPK3/MPK6来说是独立发生的。此外，他们也发现MPK4以AP2C1为靶标。最佳，Xu等发现<em>mpk3</em>与<em>mpk6</em>的双重突变体中ROS爆发与野生型类似，这表明ROS爆发与MPK3/MPK6无关。同样，由MAMP/DAMP诱导的依赖于MPK4的ROS爆发也有矛盾的结果。Zhang等发现flg22诱导的ROS爆发与MEKK1-MKK1/MKK2-MPK4级联反应无关。然而，与野生型相比，MPK4株系中ROS爆发水平降低了，突变体<em>mpk4</em>中ROS爆发水平上调了，这表明MPK4负向调节ROS爆发。目前比较清楚的是，MAMP诱导的ROS爆发是由RBOHD引起的；其他RBOH蛋白参与了不同的信号通路。然而，NADPH氧化酶并不是植物细胞中唯一的ROS源；越来越清楚的是，植物中的ROS源（叶绿体、过氧化物酶、线粒体及质膜）有着复杂的时空变化，而且ROS其他信号之间也是及其复杂的。</p>\n<h1 id=\"其他小信号分子：RNO和脂类\"><a href=\"#其他小信号分子：RNO和脂类\" class=\"headerlink\" title=\"其他小信号分子：RNO和脂类\"></a>其他小信号分子：RNO和脂类</h1><p>除了Ca$^{2+}$和ROS外，MAMP信号中还有其他的小分子。被统称为活性氮的NO及其衍生物参与了信号转导的不同步骤，如通过半胱氨酸亚硝化调控<em>PR</em> genes 1（调控防御基因的表达）的非表达体的聚合状态，或者是通过半胱氨酸亚硝化抑制RBOHD。这些结果表明寄主在响应病原菌的过程中ROS和NO之间有着紧密的关系。NO在生成过程中有个滞后期，在此期间，隐球菌素和壳聚糖能够在几分钟内诱导NO的生成。壳聚糖能够持续诱导NO的生成（直到60min左右）。病原菌诱导的Ca$^{2+}$内流或激活钙调蛋白和/或类钙调蛋白，从而激活下游的NO合成。但是NO的生物合成还有很多不清楚的地方。</p>\n<p>磷脂酸（PA）和神经酰类等脂类也被认为是植物响应病原物过程中的信号分子。在flg22或真菌的诱导子上，番茄细胞中PA会被快速诱导合成并在数分钟内达到峰值（对flg22来说是8min左右）；与此同时，PA的前体物质PIP2和PIP的含量在2min开始降低，DGPP（PA的磷酸化产物）的含量开始升高。MAMP诱导的NO的合成部分需要PA参与才能完成，这个过程中涉及到两个通路：磷脂酶D（PLD）和磷脂酶C/二酰基甘油激酶（PLC/DGK）。PA可以与免疫信号转导的已知成分（如CDPKs、PDK1、RBOHD/F等）相互作用并调节其活性。外源PA能在几秒内诱导烟草细胞发生ROS爆发并在6min左右达到峰值；PA还能诱导已悬浮培养2min的大豆细胞中的MAPK。PA能从多个层面上调控信号转导，如ROS、MAPK活性、SA，还可能是ET。</p>\n<h1 id=\"异三聚体G蛋白\"><a href=\"#异三聚体G蛋白\" class=\"headerlink\" title=\"异三聚体G蛋白\"></a>异三聚体G蛋白</h1><p>拟南芥有一个典型的G$\\alpha$亚基（GPA1）、一个G$\\beta$亚基（AGB1）和三个G$\\gamma$基（AGG1、AGG2和AGG3）。和动物相反的是，植物的G蛋白独立于G蛋白偶联的受体，并且似乎是自我激活的。虽然GPA1没有参与到对<em>P. syringae</em> 的基础抗性中，对细胞死亡或MAMP诱导的MPK3/MPK6活性也没有明显的影响，但是AGB1、AGG1和AGG2却有着重要的作用。如，MAMP或<em>P. syringae</em> 诱导的ROS合成在<em>agb1</em> 突变体中就降低了。虽然<em>agg1</em> 和<em>agg2</em> 单突变体没有表现出明显的表型，但是它们的双重突变体对<em>P. syringae</em> 更敏感，并且成对的flg22/slf18及几丁质诱导的抗性也降低了。<em>agb1</em> 或<em>agg1 agg2</em> 中MPK3和MPK6的活性没有受到影响，但是MPK4的活性略微下降了一些。总之，这些结果表明除开GAP1外，AGB1、AGG1、AGG2都是MAMP诱导的免疫响应所需要的。这些G蛋白也部分参与了MAMP诱导的ROS爆发，但是MAMP诱导的MPK3、MPK4及MPK6的活性与G蛋白无关。AGB1-AGG1／２二连体是如何被RLKs激活的还尚不清楚。AGB1-AGG1／２二连体调控下游反应的精确通路也还不清楚。</p>\n<h1 id=\"14-3-3蛋白\"><a href=\"#14-3-3蛋白\" class=\"headerlink\" title=\"14-3-3蛋白\"></a>14-3-3蛋白</h1><p>14-3-3蛋白也参与了免疫信号转导。拟南芥中的14-3-3基因家族有15个成员，14-3-3蛋白通常与磷酸化蛋白互作来完善这些磷酸化蛋白的活性。在不同的植物中都有关于14-3-3蛋白但与抗病反应的研究报道，而且这些蛋白在这些抗病反应中通常具有正向调节作用。14-3-3蛋白能与免疫信号转导的已知成分互作并调节它们的活性，如玉米质膜上的H$^+$-ATP酶、NtRBOHD 、番茄中的MAPKKKalpha和MKK2、拟南芥因子CPK-1、PA、PDK1及一些参与ET生物合成的1-氨基环丙烷-1-羧酸合成酶。这些不同研究表明14-3-3既参与了PTI也参与了ETI。最近的一个研究阐述了14-3-3蛋白在PTI中的作用。利用5 -氨基咪唑- 4 -甲酰胺- 1 - b - D -呋喃核苷对14-3-3蛋白进行化学破胞后再与互作蛋白进行互作后发现再拟南芥和本氏烟中由MAMP诱导的ROS爆发明显降低了。<em>P. syringae</em> 的效应子HopM1会使14-3-3蛋白GRF/AtMIN10失稳。Lozano-Duran等的研究结果表明AICAR能够恢复不具有效应子HopM1的<em>P. syringae</em> 的毒力，这个结果进一步确定了14-3-3蛋白在免疫响应中的作用。也由研究发现本氏烟的同源物GFR8/AtMIN10在番茄敲除系中由MAMP诱导的ROS爆发降低了。目前为止的研究表明14-3-3蛋白能与磷酸化蛋白互作，参与到植物免疫信号转导的不同步骤，但是更多的具体的机制还有待研究。</p>\n<h1 id=\"蛋白激酶\"><a href=\"#蛋白激酶\" class=\"headerlink\" title=\"蛋白激酶\"></a>蛋白激酶</h1><p>由蛋白质激酶介导并由蛋白质磷酸酶清除的蛋白质磷酸化是真核生物中最常见的翻译后修饰，并且在信号转导中具有重要作用。蛋白质磷酸化会影响蛋白稳定性、酶活性及亚细胞定位等。在MAMP识别中发生着大量的磷酸化事件，磷酸化蛋白质组能够精确定位到磷酸化的位点。MAMP处理后磷酸化位点丰度降低表明磷酸化酶在PTI信号中有着及其重要的功能。</p>\n<p>除开之前提到的在MAMP识别中除了免疫受体复合物会马上自磷酸化和反磷酸化外，其他的蛋白激酶也快速被激活。这些蛋白激酶大多数属于CDPK、MAPK及AGC蛋白激酶家族，它们也是调控转录因子、代谢酶、质膜蛋白及细胞骨架蛋白等大量蛋白靶标的关键。</p>\n<h2 id=\"CDPKs\"><a href=\"#CDPKs\" class=\"headerlink\" title=\"CDPKs\"></a>CDPKs</h2><p>拟南芥基因组编辑34个CDPKs。CDPKs有个N端丝氨酸/苏氨酸蛋白激酶结构域和一个C端类CaM结构域（EF-hand结合位点，大多数都要依赖于Ca$^{2+}$）。CPK4、CPK5、CPK6及CPK11等一些CDPKs会被flg22暂时（5-30min）地激活。<em>P. syringae</em> 侵染后，CPK4/5/6/11参与了由flg22介导的ROS爆发、flg22介导的转录重编程和flg22诱导的抗性。一些CDPK底物被鉴定到，如CPK5的第五RBOHD、番茄中CDPK2的底物ACS2。除了Ca$^{2+}$，CDPKs也会被其他参与信号转导的分子（如脂类、14-3-3蛋白）调控。</p>\n<h2 id=\"AGC及其相关激酶\"><a href=\"#AGC及其相关激酶\" class=\"headerlink\" title=\"AGC及其相关激酶\"></a>AGC及其相关激酶</h2><p>AGC蛋白激酶参与了植物免疫响应并调控病原菌诱导的MAPK级联反应。在拟南芥中，AGC激酶家族有39个成员。通过H$_2$O$_2$、纤维素酶处理、抵御<em>Hyaloperonospora arabidopsidis</em> 和 <em>P. syringae</em> 侵染完全激活MPK3和MPK6需要AGC2-1（也叫OXI1）的参与才能完成。MAMPs和DAMPs（flg22、纤维素酶、H$_2$O$_2$）能够快速诱导根叶部OXI1的基因表达和酶活性。有趣的是，在RBOHD突变体或用NADPH氧化酶抑制剂二苯基碘处理后，拟南芥中OXI1的转录诱导下降。MAMPs处理或半活体营养型病原菌侵染后的ROS爆发与RBOHD相关，这表明在植物-病原互作中RBOHD介导的XOI1诱导会导致ROS合成。OXI1调控一类蛋白激酶，如Pti1-1到Pti1-4。<em>in vivo</em> 发现受胁迫诱导的Pti1-4能与MPK6互作。对其他的AGC激酶来说，OXI1活性受到AGC激酶PDK1的调控，PA能以依赖PDK1的方式激活OXI1。然而，Pti1激酶活性在flg22和H$_2$O$_2$条件下不依赖于PDK1，但是依赖于OXI1，这个结果表明在受到ROS或MAMP刺激时其他蛋白激酶作用于OXI1的上游。</p>\n<h2 id=\"MAPKs\"><a href=\"#MAPKs\" class=\"headerlink\" title=\"MAPKs\"></a>MAPKs</h2><p>拟南芥基因组编码20个MAPKs、10个MAPKKs和60个MAPKKKs。MAPKKKs、MAPKKs和MAPKs都含有能够将胞外刺激转化成适当响应的功能信号模块。这些MAPKs在植物-病原互作研究中被广泛关注。flg22和其他MAMP处理后，MAPK3/4/6/11在1-2min内被激活并在10-15分钟达到峰值，之后迅速下降。MKK4/MKK5组成的信号模块通过磷酸化和MPK4上游的MEKK1-MKK1/MKK2激活MPK3/MPK6（图4）。最开始的研究认为MEKK1是MKK4/MKK5-MPK3/MPK6上游的MAPKKK。然而，在flg22处理后<em>mekk1</em> 突变体后，MPK3和MPK6被激活，这个结果表明MEKK1并不是这个模块上有的MAPKKK，或者至少一个其他MAPKKK扮演多余的角色。有意思的是，参与气孔发育及花序结构的MAPK模块由YODA下游的MKK4 / MKK5- MPK3 / MPK6组成，即MAPKKK。然而，由MAMP激发的MPK3和MPK6的活性在<em>yoda</em> 突变体中是正常的。免疫反应中MKK4/MKK5-MPK3/MPK6上游的MAPKKK(s)的鉴定还不清楚。MKK4/MKK5-MPK3/MPK6模块正向调节防御响应。<em>mekk1</em>突变体的MEKK1激酶受损后半矮化程度降低，这表明MEKK1在其酶活性之外还有个独立的结构性功能，但是仍然不能完全排除此MEKK1激酶受损版本具有残留活性。酵母双杂分析发现MEKK1直接与MPK4互作。然而，没有更多的数据来支撑这个结果。首先，MEKK1-MKK1/MKK2-MPK4模块被认为会负向调控防御响应（级联模块突变体有着本构防御响应，如H$_2$O$_2$积累、<em>PR</em>基因的本构表达等，并且对病原菌的抗性增强了）。然而，最近的研究表明在<em>mkk1 mkk2</em>中这个MAPK模块实际上能够正向调节防御响应，而且被<em>R</em> 蛋白抑制子保护着。</p>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/4.png\" class=\"\">\n\n<p>PRR免疫复合物和下游的MAPKKKs之间的分子连接仍旧不清楚。一些数据表明flg22诱导的MPK3/4/6的活性部分依赖于Ca$^{2+}$爆发，但是在<em>cpk5 cpk 6 cpk11</em> 三重突变体中，flg22诱导的MPK3/4/6的活性并没有变化。在<em>rbohd</em> 突变体中flg22诱导的MPK3/4/6的活性和野生型类似，这说明ROS爆发不需要MAPK激活就能完成。此外，在<em>bik1 pnl1</em> 双重突变体中flg22诱导后MPK3/4/6的活性正常，这说明它们的激活不需要BIK1和PBL1就能完成；但是细菌AvrAC效应子表达的情况下flg22诱导的MAPK活性降低了，这表明额外的BIK1相关蛋白可能激活MAPK。此外，利用四重突变体研究发现flg22诱导的MPK3/MPK6激活与野生型是有差异的，这表明MAPK激活与SA、JA及ET信号通路是无关的。</p>\n<h1 id=\"MAPK-底物\"><a href=\"#MAPK-底物\" class=\"headerlink\" title=\"MAPK 底物\"></a>MAPK 底物</h1><p>当前在生物学中重要挑战是将给定的蛋白激酶与其真实的底物进行高度关联，尤其是在信号转导研究中。在PTI中，MAPK底物是被研究得最多的。已经利用多种方法鉴定到了多个底物。</p>\n<h2 id=\"转录因子\"><a href=\"#转录因子\" class=\"headerlink\" title=\"转录因子\"></a>转录因子</h2><p>免疫MAPK底物半数都是转录因子，说明在免疫响应中免疫MAPKs在转录重编程中有着重要作用。<em>in vitro</em> 时MPK3、MPK4及MPK6不够磷酸化转录因子WRKY33，<em>in vivo</em> 条件下MPK3和MPK6引发的磷酸化也有相关研究进行报道。遗传分析表明在不同病原菌侵染时和MPK3/MPK6信号通路中WRKY33对camalexin的生物合成是至关重要的。在突变体WRKY33$^{SA}$中WRKY33中5个潜在的MAPK磷酸化位点被突变。WRKY33$^{SA}$中并没有<em>wrky33</em> 突变的表型，而且值得注意的是camalexin生物合成相关基因的激活效率更低。此外，WRKY33能和<em>PAD3</em> 的启动子进行结合，这表明WRKY33能够直接激活camalexin合成相关基因的表达。有趣的是，MPK3/MPK6信号调控<em>WRKY33</em> 的表达，WRKY33能够与其启动子结合，这表明在<em>WRKY33</em>  的表达中存在循坏调节。总之，camalexin的生物合成被MPK3/MPK6信号通过对WRKY33转录及转录后的调节明显地诱导。事实上，WRKY33还能与MPK4互作来控制camalexin的生物合成。WRKY33与MPK4和MKS1形成核复合物。flg22诱导或细菌侵染后，由MPK4引发的MKS1的磷酸化诱导MKS1-WRKY33复合物从MPK4中释放出来，从而激活<em>PAD3</em> 基因表达。此外，MKS1能够识别WRKY33中与DNA结合的WRKY结构域，刺激其与DNA的结合。然而，在突变体<em>mks1</em> 受到病原菌侵染后仍有camalexin的积累；<em>PAD3</em> 在<em>mpk4</em> 中表达稳，但在<em>mks1</em>中却被病原菌诱导表达。<em>mks4</em> 突变体中MKS1沉默表达后，矮化减轻。总之，MPK3/MPK6和MPK4-MKS1信号通过调节WRKY33来影响camalexin的生物合成，但是具体的crosstalk机制还不清楚。</p>\n<p><em>in vivo</em> 时MPK3与bZIP转录因子VIP1互作，而且在<em>in vito</em> 时能将其磷酸化。用不同的表达系VIP1、VIP1$^{S79A}$或VIP1$^{S79D}$试验表明VIP1和VIP1$^{S79A}$定位在细胞质和细胞核中，VIP1$^{S79D}$主要定位在细胞核中。flg22处理后，VIP1定位在细胞核中，但是VIP1$^{S79A}$没有定位在细胞核中。进一步的试验表明细胞核中的VUP1激活<em>PR1</em> 基因表达。这些结果表明flg22处理后，MPK3将VIP1磷酸化，这表明这个蛋白重定位到了细胞核中，然后激活<em>PR1</em> 基因表达。</p>\n<p>MPK6能与ET响应因子家族中的ERF104互作，但是在flg22处理5-15min后这种互作关系就消失了。有意思的是，这个蛋白复合物的破裂需要MPK6活性和ET信号才能完成。<em>in vitro</em> 中MPK6磷酸化ERF104的C端结构域。ERF104过表达系转录组分析发现某些胁迫相关基因的表达上调了，尤其是防御素基因<em>PDF1.2</em> 。总之这些结果表明flg22处理后MPK6能够磷酸化ERF104，从而诱导ERF104的释放并激活其防御基因的表达。ERF104似乎是MPK6的一个特定的底物，但是ERF6等其他的ERF转录因子能够被MPK3和MPK6磷酸化。<em>in vitro</em>, 磷酸化主要发生在S266和/或S269；<em>in vivo</em> 分析发现<em>B. cinerea</em> 侵染时ERF6能够被S266和S269磷酸化。此外，活性烟草NtMEK2的诱导也能使拟南芥ERF6 S266和S269残基发生磷酸化，这表明MPK3和MPK6磷酸化了这些位点 <em>in vivo</em>。ERF6的硫酸化减弱了蛋白酶体介导的ERF6的降解。<em>B. cinerea</em> 侵染强烈诱导了ERF6的表达，这种诱导效应部分依赖于MPK3/MPK6信号，但是和ET信号无关。一个模拟磷酸化的突变体植株和野生型相比对<em>B. cinerea</em> 表现出更强的抗性，同时表现出不同于<em>mpk4</em> 突变体的严重的矮化。与此相反的是，一个dominant-negative ERF6突变体植株比野生型植株对<em>B. cinerea</em>表现出了更高的敏感性。他们研究还发现ERF6能作用于MPK3/MPK6信号的下游，诱导<em>PDF1.1</em>、<em>PDF1.2a</em> 等几个防御素基因的表达。总之，这些数据表明ERF6是MPK3和MPK6的一个底物，参与激活防御基因表达和真菌对病原菌的抗性。</p>\n<h2 id=\"其他底物\"><a href=\"#其他底物\" class=\"headerlink\" title=\"其他底物\"></a>其他底物</h2><p>除了转录因子意外，还有一些具有多种细胞功能的免疫MAPK底物被鉴定到。<em>in vitro</em>，MPK6磷酸化ET生物合成限速酶1-氨基环丙烷-1-羧酸合酶的两种同工型：ACS2和ACS6。在ACS6中被磷酸化的位点是S480、S483和S488。SCA6的一个更稳定的突变体ACS6$^{S480D/S483D/S488D}$能导致细胞ACS活性和ET生物合成增加。此外，遗传分析发现激活MPK6后，ACS2和ACS6都是生成高水平ET所必须的。同一研究组后来还发现MPK3也参与了同样的反应，并且发现其磷酸化的精确机制，进而通过泛素化-蛋白酶体机制来解释ACS蛋白的稳定性或降解机制。这个研究的数据表明MPK3和MPK6通过ACS2和ACS6的磷酸化来调节ET的生物合成。有趣的是，WRKY33能够与<em>ACS2</em> 和<em>ACS6</em> 的启动子直接结合 <em>in vivo</em> ，MPK3/MPK6信号很大程度上依赖WRKY33来诱导<em>ACS2</em> 和<em>ACS6</em> 的基因表达。因此，与WRKY33调控camalexin生物合成类似，MPK3/MPK6信号通过对ACS2和ACS6的转录级转录后的调节来调控ET的合成。</p>\n<p>研究者利用蛋白质芯片筛选将串联锌指蛋白9（TZF9）鉴定为MPK3和MPK6的底物。Maldonado-Donilla等的研究进一步确证了这个结果，而且进一步表明MPK3和MPK6能够与TZF9在细胞质和细胞核中互作。TZF9原生质体顺势表达发现TZF9在flg22处理后发生磷酸化，磷酸化以后TZF9的蛋白稳定性可能发生变化。<em>tzf9</em> 突变体对MAMP诱导的抗性有部分衰减：ROA爆发降低、MAPK活性降低、<em>FRK1</em> 和<em>NHL10</em>防御表达降低。这些数据表明植物防御期间，MPK3和MPK6能够磷酸化TZF9，进而破坏蛋白稳定性、改变其可能参与的转录后的调控。</p>\n<p>MPK6和MPK3（可能）与LIP5互作，都能磷酸化LIP5。病原菌侵染或MPK3/MPK6信号下，LIP5也会被磷酸化。<em>lip5</em> 突变体中flg22诱导的防御响应是正常的，但是对<em>P. syringae</em> 的基础抗性受损。LIP5中MAPK潜在的磷酸化位点突变会降低LIP5的稳定性。受到<em>P. syringae</em> 侵染后植株需要LIP5来增加多囊泡体的形成。总之，这些结果表明MPK3和MPK6磷酸化LIP5，磷酸化后的蛋白更稳定并且能够正向调节多囊泡体铁路，从而导致防御相关分子的重定位。</p>\n<p>PHOS32和相关蛋白PHOS34在flg22处理后能够被迅速磷酸化，PHOS32中的磷酸化位点是S21。<em>in vitro</em> 激酶分析发现MPK3和MPK6能够磷酸化PHOS32，尤其是S21这个位点；进一步的免疫耗竭实验发现MPK3和MPK6是磷酸化这个位点的主要蛋白激酶。PHOS32和PHOS34都含有一个普遍的应激蛋白A结构域。但是PHOS32和PHOS34在植物防御中的具体功能、MPK3和MPK6引发的磷酸化的作用还没有新概念报道。</p>\n<p>除了MPK3/4/6外，还有MPK11也有一定的功能。MPK11能与GRF6互作。 烟草共表达等试验发现MPK11磷酸化GRF6的丝氨酸残基。MPK11与GRF6共表达后GRF6的丰度降低，这表明MPK11会影响GRF的稳定性。此外，抗泛素化抗体试验发现GRF6会被泛素-蛋白酶系统降解。在水痘病毒李痘病毒（PPV）侵染后，<em>mpk11</em> 和<em>grf6</em> 分别表现更高的敏感性和抗性。总之，这些结果表明MPK11磷酸化GRF6从而导致其泛素-蛋白酶退化，对PPV抗性降低。</p>\n<h2 id=\"其他的MAPK底物\"><a href=\"#其他的MAPK底物\" class=\"headerlink\" title=\"其他的MAPK底物\"></a>其他的MAPK底物</h2><p>在其他条件下（病原侵染、非生物胁迫级其他）也鉴定到了MPK3/4/6的其他底物。这些底物中的一半以上都是转录因子。这些蛋白是转录因子EIN3、硝酸还原酶NIA2、ｂHLH转录因子SPCH、ｍRNA酶DCP1、转录因子MYB4和MYB44、转录因子HSFA2和HSFA4A、脂类转运蛋白相关的杂交富脯氨酸蛋白AZI1、ｂＨＬＨ转录因子MYC2、MAPK酸化酶MPK1、细胞骨架蛋白MAP65-1、C2H2型转录因子ZAT6及ZAT10。</p>\n<h2 id=\"中高通量分析中推定的MAPK底物\"><a href=\"#中高通量分析中推定的MAPK底物\" class=\"headerlink\" title=\"中高通量分析中推定的MAPK底物\"></a>中高通量分析中推定的MAPK底物</h2><p>上述的MAPK底物主要是通过candidate approaches鉴定到的。与之相反的是，许多推定的底物都是从中/高通量分析中得到的，但是大多数都还需要进一步的实验来验证。Feiler等开发了包含1690个拟南芥蛋白的芯片，并将其与MPK3和MPK6进行孵育。得到48个MPK3的潜在底物、39个MPK6的潜在底物，有26个底物是共有的，其中是ACS6就是MPK3和MPK6的底物。其他的潜在底物是转录因子、核糖体蛋白、组蛋白及其他蛋白。Popescu等人利用含有2158个拟南芥蛋白的芯片并借助GO分析发现推定的底物中50.4% 是潜在的转录因子、35%是推定的核酸结合蛋白、16%是蛋白激酶。测试了10个不同的MAPKs后，发现570个蛋白是潜在的底物。</p>\n<h2 id=\"病原效应子靶向的MAPK模块\"><a href=\"#病原效应子靶向的MAPK模块\" class=\"headerlink\" title=\"病原效应子靶向的MAPK模块\"></a>病原效应子靶向的MAPK模块</h2><p>病原菌释放大量的效应子到寄主细胞中来抑制寄主免疫响应，MAPK模块是这些效应子主要的靶标。前面提到的HopAI1以MPK3/4/6为靶标。HopAI1通过其磷酸化酶活性来刺激这些MAPKs。<em>P. syringae</em> 的效应子与MPK4互作，诱导磷酸化并激活MPK4。此外，MPK4直接与RIN4互作并将其磷酸化。</p>\n<h1 id=\"文献信息\"><a href=\"#文献信息\" class=\"headerlink\" title=\"文献信息\"></a>文献信息</h1><blockquote>\n<p>Title：Signaling Mechanisms in Pattern-Triggered Immunity (PTI)</p>\n<p>译名：PTI中的信号机制</p>\n<p>期刊：<em><strong>Molecular Plant</strong></em></p>\n<p>IF：12</p>\n<p>链接：<a href=\"https://doi.org/10.1016/j.molp.2014.12.022\">https://doi.org/10.1016/j.molp.2014.12.022</a></p>\n<p>通讯作者：Heribert Hirt</p>\n<p>主要单位：King Abdullah University of Science and Technology</p>\n</blockquote>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>在自然环境下，植物时时刻刻都在面对病原物的入侵。然而，由于植物具有有效的免疫系统，植物病害很少发生。病原物被两层不同的识别系统识别：PTI和ETI。PTI和ETI都具有能够阻止病原入侵的诱导防御系统。本综述主要讨论PTI中的信号通路网络，主要聚焦于丝裂原活化蛋白激酶。</p>","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>植物能够将光变成糖类，因此植物成为了包括微生物（尤其是以植物地上地下部分为寄主的微生物）在内的大量生物的碳水源和能量来源。植物病原物根据其侵染方式和取食策略，可以分成活体营养型（如<em>Hyaloperonospora arabidopsidis</em>）、半活体营养型（如<em>Pseudomonas syringae</em>）和死体营养型（如<em>Botrytis cinerea</em>）。植物病原物能够降低植物的生物量、降低植物的育性、影响作物的产量和质量，甚至在是杀死植物，从而引起人们的关注。</p>\n<p>植物通常能够抵御大多数病原物的侵染，这种现象叫非寄主抗性（non-host resistance）。表皮和细胞壁是植物抵御病原菌侵染的第一层物理屏障。除开第一层物理屏障外，植物持续分泌的抗菌物质也能有效的抵御病原菌的侵染。陆生植物最外层都有由角质和蜡质组成的表皮。表皮在植物生理上有着重要的作用，如较少水分散失、抗UV辐射等。表皮同样能够有效抵御植物病原菌侵染和昆虫的取食（真菌能够通过机械压力来穿透表皮或者是通过分泌能够水解角质聚酯的角质来透过表皮）。此外，包裹在植物细胞周围的外骨骼——植物细胞壁，由纤维素微纤维、果胶、半纤维素、蛋白质及木质素等组成。细胞壁在完整性维护机制的控制下给细胞提供了结构支撑的同时能够有效应对（非）生物胁迫。某些真菌能够穿透表皮和细胞壁，但是细菌不能直接地穿透植物表皮。细菌需要借助一些自然孔口才能进入植物体内，这些自然孔口包括the hydathodes, the nectarthodes, the lenticels，最重要的孔口是气孔。此外，昆虫取食、食草动物、风、暴雨等造成的植物伤口也是病原物侵染植物的有效途径。除了利用物理屏障抵御病原菌的侵染外，植物还能持续稳定地合成并分泌抗菌物质来抑制病原菌的生长。一些代谢物和蛋白都具有这种抗菌活性，如十字花科植物的此生代谢产物芥子油甘及其衍生物。那些成功穿过植物物理屏障的病原物在进入植物细胞后需要卖你对的是植物的免疫系统。植物的免疫系统包括了两部分：病原物识别和病原物防御。</p>\n<p>植物免疫系统的第一层是PAMPs（病原相关分子模式）/PRRs（病原/模式识别受体）。PAMPs通常也来自非致病菌，因此它们被优先命名成MAMPs（微生物相关分子模式）。植物识别到MAMPs后会诱导PAMP激发的免疫，或者是诱导病原激活的免疫或者是模式激发的免疫，也就是PTI。植物同样能够感知到损伤相关的分子模式（DAMPs），这些DAMPs是植物在遭受病原菌侵染后降解的产物。DAMPs激发的免疫和响应和PTI响应类似。植物也可以通过感知病原物效应子（病原物合成后释放到植物的胞外空间或胞内来增强病原物的适应性）来感知病原的入侵。 不能正常感知到这些效应子的植物对该病原菌表现为感病，从而导致由效应子激发的易感性；而能够通过R蛋白来识别这些效应子的植物则会激发ETI。植物和病原在共进化的过程中形成了<strong>Z</strong>型模型。</p>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/2.png\" class=\"\">\n\n<p>在成功识别病原物后，植物会启动一系列的防御机制，如关闭气孔阻止细菌的进入、控制营养物质从细胞质到质外体的转运来限制细菌的增殖、合成并分泌camalexin等植保素、合成分泌PR1等防御相关的蛋白或多肽、在被侵染部位合成与过敏反应相关的活性氧（ROS）。</p>\n<p>病原识别机制中涉及到了复杂的信号网络。本篇综述重点关注的是PTI过程中的信号网络及丝裂原活化蛋白激酶（MAMPs）参与途径。主要以拟南芥-细菌互作系统进行描述。</p>\n<h1 id=\"MAMP-DAMP识别\"><a href=\"#MAMP-DAMP识别\" class=\"headerlink\" title=\"MAMP/DAMP识别\"></a>MAMP/DAMP识别</h1><p>植物能够识别对微生物很重要的MAMPs。MAMPs包括蛋白（如细菌鞭毛蛋白和延伸因子Tu）、碳水化合物(如真菌的几丁质)及脂多糖等。DAMPs是病原菌侵染过程中植物的降解产物（如角质素单体）、细胞壁受损产物或者AtPep1等内源肽。PRRs通常是质膜结合类受体激酶（RLKs）或者是有着胞外结构域的类受体蛋白。已经鉴定到了一些PRR/DAMP对，如拟南芥中能够识别细菌鞭毛（铜绿假单胞菌的22个氨基酸长的抗原决定簇flg22为代表）的N端的flagellin-sensitive 2（FLS2）（图2）、拟南芥中的EF-Tu受体（EFR）。在DAMPs中，RLK蛋白PERR1是DAMP AtPep1的受体。</p>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/3.png\" class=\"\">\n\n<p>此外，一些蛋白与PRRs组成了免疫受体复合物，而且这些蛋白对正常的MAMP识别和信号转导是至关重要的。MAMP感知不仅能够快速（几秒）诱导质膜上免疫受体复合物的形成，还能诱导不同的自磷酸化和反磷酸化。和BRI1相关的受体激酶1（BAK1）能够和FLS2互作，BAK1缺失会导致早期依赖flg22响应的下降。BAK1实际上可以与不同的PRR相互作用，并与FLS2互作结合flg22，因此可以被看成共受体。除了BAK1外，受体样胞质激酶葡萄孢菌诱导的激酶1（BIK1）和相关的PBL激酶能够与FLS2及EFR互作，在MAMP结合后迅速被磷酸化并从PRR复合物中释放。</p>\n<h1 id=\"Ca-2-爆发\"><a href=\"#Ca-2-爆发\" class=\"headerlink\" title=\"Ca$^{2+}$爆发\"></a>Ca$^{2+}$爆发</h1><p>植物在感知到MAMP/DAMP后，最早的物理响应之一就是胞外Ca$^{2+}$的内流，发生的时间在0.5-2min，4-6min达到峰值。BIK1以及其他BIK1家族蛋白正向调控Ca$^{2+}$的内流。Ca$^{2+}$的内流导致H$^{+}$内流、K$^{+}$和NO$_3^{+}$外流，从而使得胞外空间碱化（1min左右）及质膜去极化（1-3min）。正常情况下，细胞质中Ca$^{2+}$的浓度受质膜和膜内Ca$^{2+}$通道调节；但是涉及到MAMP/DAMP识别和信号转导相关的分子物质还尚不清楚。值得注意的是，在MAMP响应中，拟南芥脂膜上的能与FLS2及ACA8互作的拟南芥自抑制Ca$^{2+}$ATP激酶8和其同系物ACA10参与了Ca$^{2+}$水平调节。MAMP识别过程中除了Ca$^{2+}$会快速流入细胞质外，Nomura等发现在叶绿体基质中自由Ca$^{2+}$水平会持续更长时间。研究人员还观察到使用丝氨酸/苏氨酸蛋白激酶和MAPK激酶抑制剂可减少细胞质和间质Ca$^{2+}$的浓度变化，说明MAPK在Ca$^{2+}$信号的产生过程中可能有着相关的级联反应。考虑到MAMP/DAMP识别中质外体快算碱化，很可能质膜上H$^{+}$-ATP酶的抑制也影响着阴离子外流和质子内流。</p>\n<h1 id=\"ROS爆发\"><a href=\"#ROS爆发\" class=\"headerlink\" title=\"ROS爆发\"></a>ROS爆发</h1><p>由MAMP时，2-3min后胞外空间通常会发生活性氧爆发并在10-14min达到峰值。在拟南芥中，质膜上的NADPH氧化酶RBOHD和MAMP诱导的ROS爆发相关。有趣的是，<em><strong>P. syringae</strong></em>在拟南芥中引起的ROS爆发水平受到FLS PRR的调控，而且要在20min左右才能检测到ROS，在35-40min才达到峰值。波动的幅度也比flg22诱导的低。这些数据表明，鞭毛蛋白是在感染后80分钟内检测到的主要MAMP/DAMP，鞭毛蛋白的数量和/或可及性相对较弱。在MAMP感知中，RBOHD可以和FLS2及EFR关联，完全激活NADPH氧化酶需要Ca$^{2+}$诱导的钙依赖性蛋白激酶（CDPK）和BIK1对不同残基进行磷酸化。Ca$^{2+}$本身也能调控RBOHD。RBOHD能在质外体中产生不透膜的超氧化物O$_2^-$，该物质能够通过超氧化物歧化酶催化后变成H$_2$O$_2$。H$_2$O$_2$具有膜透性，从而能够进入到细胞质和不同的器官中。H$_2$O$_2$等活性氧也会影响胞内Ca$^{2+}$水平。MAMP/DAMP诱导的活性氧爆发对胞内Ca$^{2+}$水平有正反馈调节作用，从而导致二次峰值（flg22诱导后5min左右）。有趣的是，依赖于CDPK的RBOHD的磷酸化在ROS的刺激下也会发生。依赖MPK3/MPK6的MAMP/DAMP诱导的ROS爆发有着矛盾的结果。如，Zhang等发现细菌效应子HopAI1（能够使MPK3和MPK6失活）的诱导表达完全抑制了flg22诱导的ROS爆发，这个结果表明MPK3/MPK6作用在ROS爆发的上游。但是这种方法不能区分每个MAPK的特定贡献。后面又发现HopAI1还能抑制MPK4的活性。因为一些病原菌的效应子能够以不同的信号元件为靶标（如HopF2能够以多个MKKs和BAK1为靶标），因此HopAI1也有可能作用于位于ROS爆发上游的由flg22激发的信号的其他成分。Ranf等利用<em>mpk</em>的单突变体研究发现用flg22处理两个不同的<em>mpk3</em>突变体表现出更长时间的ROS爆发，<em>mpk6</em>突变体和野生型类似，所以MPK3负向调节由flg22诱导的ROS的爆发。Galletti等研究发现flg22诱导的ROS爆发在两个AP2C1（一个能够使MPK3和MPK6失活的MAPK磷酸化酶）过表达株系中没有受到影响，这个结果表明ROS爆发对于MPK3/MPK6来说是独立发生的。此外，他们也发现MPK4以AP2C1为靶标。最佳，Xu等发现<em>mpk3</em>与<em>mpk6</em>的双重突变体中ROS爆发与野生型类似，这表明ROS爆发与MPK3/MPK6无关。同样，由MAMP/DAMP诱导的依赖于MPK4的ROS爆发也有矛盾的结果。Zhang等发现flg22诱导的ROS爆发与MEKK1-MKK1/MKK2-MPK4级联反应无关。然而，与野生型相比，MPK4株系中ROS爆发水平降低了，突变体<em>mpk4</em>中ROS爆发水平上调了，这表明MPK4负向调节ROS爆发。目前比较清楚的是，MAMP诱导的ROS爆发是由RBOHD引起的；其他RBOH蛋白参与了不同的信号通路。然而，NADPH氧化酶并不是植物细胞中唯一的ROS源；越来越清楚的是，植物中的ROS源（叶绿体、过氧化物酶、线粒体及质膜）有着复杂的时空变化，而且ROS其他信号之间也是及其复杂的。</p>\n<h1 id=\"其他小信号分子：RNO和脂类\"><a href=\"#其他小信号分子：RNO和脂类\" class=\"headerlink\" title=\"其他小信号分子：RNO和脂类\"></a>其他小信号分子：RNO和脂类</h1><p>除了Ca$^{2+}$和ROS外，MAMP信号中还有其他的小分子。被统称为活性氮的NO及其衍生物参与了信号转导的不同步骤，如通过半胱氨酸亚硝化调控<em>PR</em> genes 1（调控防御基因的表达）的非表达体的聚合状态，或者是通过半胱氨酸亚硝化抑制RBOHD。这些结果表明寄主在响应病原菌的过程中ROS和NO之间有着紧密的关系。NO在生成过程中有个滞后期，在此期间，隐球菌素和壳聚糖能够在几分钟内诱导NO的生成。壳聚糖能够持续诱导NO的生成（直到60min左右）。病原菌诱导的Ca$^{2+}$内流或激活钙调蛋白和/或类钙调蛋白，从而激活下游的NO合成。但是NO的生物合成还有很多不清楚的地方。</p>\n<p>磷脂酸（PA）和神经酰类等脂类也被认为是植物响应病原物过程中的信号分子。在flg22或真菌的诱导子上，番茄细胞中PA会被快速诱导合成并在数分钟内达到峰值（对flg22来说是8min左右）；与此同时，PA的前体物质PIP2和PIP的含量在2min开始降低，DGPP（PA的磷酸化产物）的含量开始升高。MAMP诱导的NO的合成部分需要PA参与才能完成，这个过程中涉及到两个通路：磷脂酶D（PLD）和磷脂酶C/二酰基甘油激酶（PLC/DGK）。PA可以与免疫信号转导的已知成分（如CDPKs、PDK1、RBOHD/F等）相互作用并调节其活性。外源PA能在几秒内诱导烟草细胞发生ROS爆发并在6min左右达到峰值；PA还能诱导已悬浮培养2min的大豆细胞中的MAPK。PA能从多个层面上调控信号转导，如ROS、MAPK活性、SA，还可能是ET。</p>\n<h1 id=\"异三聚体G蛋白\"><a href=\"#异三聚体G蛋白\" class=\"headerlink\" title=\"异三聚体G蛋白\"></a>异三聚体G蛋白</h1><p>拟南芥有一个典型的G$\\alpha$亚基（GPA1）、一个G$\\beta$亚基（AGB1）和三个G$\\gamma$基（AGG1、AGG2和AGG3）。和动物相反的是，植物的G蛋白独立于G蛋白偶联的受体，并且似乎是自我激活的。虽然GPA1没有参与到对<em>P. syringae</em> 的基础抗性中，对细胞死亡或MAMP诱导的MPK3/MPK6活性也没有明显的影响，但是AGB1、AGG1和AGG2却有着重要的作用。如，MAMP或<em>P. syringae</em> 诱导的ROS合成在<em>agb1</em> 突变体中就降低了。虽然<em>agg1</em> 和<em>agg2</em> 单突变体没有表现出明显的表型，但是它们的双重突变体对<em>P. syringae</em> 更敏感，并且成对的flg22/slf18及几丁质诱导的抗性也降低了。<em>agb1</em> 或<em>agg1 agg2</em> 中MPK3和MPK6的活性没有受到影响，但是MPK4的活性略微下降了一些。总之，这些结果表明除开GAP1外，AGB1、AGG1、AGG2都是MAMP诱导的免疫响应所需要的。这些G蛋白也部分参与了MAMP诱导的ROS爆发，但是MAMP诱导的MPK3、MPK4及MPK6的活性与G蛋白无关。AGB1-AGG1／２二连体是如何被RLKs激活的还尚不清楚。AGB1-AGG1／２二连体调控下游反应的精确通路也还不清楚。</p>\n<h1 id=\"14-3-3蛋白\"><a href=\"#14-3-3蛋白\" class=\"headerlink\" title=\"14-3-3蛋白\"></a>14-3-3蛋白</h1><p>14-3-3蛋白也参与了免疫信号转导。拟南芥中的14-3-3基因家族有15个成员，14-3-3蛋白通常与磷酸化蛋白互作来完善这些磷酸化蛋白的活性。在不同的植物中都有关于14-3-3蛋白但与抗病反应的研究报道，而且这些蛋白在这些抗病反应中通常具有正向调节作用。14-3-3蛋白能与免疫信号转导的已知成分互作并调节它们的活性，如玉米质膜上的H$^+$-ATP酶、NtRBOHD 、番茄中的MAPKKKalpha和MKK2、拟南芥因子CPK-1、PA、PDK1及一些参与ET生物合成的1-氨基环丙烷-1-羧酸合成酶。这些不同研究表明14-3-3既参与了PTI也参与了ETI。最近的一个研究阐述了14-3-3蛋白在PTI中的作用。利用5 -氨基咪唑- 4 -甲酰胺- 1 - b - D -呋喃核苷对14-3-3蛋白进行化学破胞后再与互作蛋白进行互作后发现再拟南芥和本氏烟中由MAMP诱导的ROS爆发明显降低了。<em>P. syringae</em> 的效应子HopM1会使14-3-3蛋白GRF/AtMIN10失稳。Lozano-Duran等的研究结果表明AICAR能够恢复不具有效应子HopM1的<em>P. syringae</em> 的毒力，这个结果进一步确定了14-3-3蛋白在免疫响应中的作用。也由研究发现本氏烟的同源物GFR8/AtMIN10在番茄敲除系中由MAMP诱导的ROS爆发降低了。目前为止的研究表明14-3-3蛋白能与磷酸化蛋白互作，参与到植物免疫信号转导的不同步骤，但是更多的具体的机制还有待研究。</p>\n<h1 id=\"蛋白激酶\"><a href=\"#蛋白激酶\" class=\"headerlink\" title=\"蛋白激酶\"></a>蛋白激酶</h1><p>由蛋白质激酶介导并由蛋白质磷酸酶清除的蛋白质磷酸化是真核生物中最常见的翻译后修饰，并且在信号转导中具有重要作用。蛋白质磷酸化会影响蛋白稳定性、酶活性及亚细胞定位等。在MAMP识别中发生着大量的磷酸化事件，磷酸化蛋白质组能够精确定位到磷酸化的位点。MAMP处理后磷酸化位点丰度降低表明磷酸化酶在PTI信号中有着及其重要的功能。</p>\n<p>除开之前提到的在MAMP识别中除了免疫受体复合物会马上自磷酸化和反磷酸化外，其他的蛋白激酶也快速被激活。这些蛋白激酶大多数属于CDPK、MAPK及AGC蛋白激酶家族，它们也是调控转录因子、代谢酶、质膜蛋白及细胞骨架蛋白等大量蛋白靶标的关键。</p>\n<h2 id=\"CDPKs\"><a href=\"#CDPKs\" class=\"headerlink\" title=\"CDPKs\"></a>CDPKs</h2><p>拟南芥基因组编辑34个CDPKs。CDPKs有个N端丝氨酸/苏氨酸蛋白激酶结构域和一个C端类CaM结构域（EF-hand结合位点，大多数都要依赖于Ca$^{2+}$）。CPK4、CPK5、CPK6及CPK11等一些CDPKs会被flg22暂时（5-30min）地激活。<em>P. syringae</em> 侵染后，CPK4/5/6/11参与了由flg22介导的ROS爆发、flg22介导的转录重编程和flg22诱导的抗性。一些CDPK底物被鉴定到，如CPK5的第五RBOHD、番茄中CDPK2的底物ACS2。除了Ca$^{2+}$，CDPKs也会被其他参与信号转导的分子（如脂类、14-3-3蛋白）调控。</p>\n<h2 id=\"AGC及其相关激酶\"><a href=\"#AGC及其相关激酶\" class=\"headerlink\" title=\"AGC及其相关激酶\"></a>AGC及其相关激酶</h2><p>AGC蛋白激酶参与了植物免疫响应并调控病原菌诱导的MAPK级联反应。在拟南芥中，AGC激酶家族有39个成员。通过H$_2$O$_2$、纤维素酶处理、抵御<em>Hyaloperonospora arabidopsidis</em> 和 <em>P. syringae</em> 侵染完全激活MPK3和MPK6需要AGC2-1（也叫OXI1）的参与才能完成。MAMPs和DAMPs（flg22、纤维素酶、H$_2$O$_2$）能够快速诱导根叶部OXI1的基因表达和酶活性。有趣的是，在RBOHD突变体或用NADPH氧化酶抑制剂二苯基碘处理后，拟南芥中OXI1的转录诱导下降。MAMPs处理或半活体营养型病原菌侵染后的ROS爆发与RBOHD相关，这表明在植物-病原互作中RBOHD介导的XOI1诱导会导致ROS合成。OXI1调控一类蛋白激酶，如Pti1-1到Pti1-4。<em>in vivo</em> 发现受胁迫诱导的Pti1-4能与MPK6互作。对其他的AGC激酶来说，OXI1活性受到AGC激酶PDK1的调控，PA能以依赖PDK1的方式激活OXI1。然而，Pti1激酶活性在flg22和H$_2$O$_2$条件下不依赖于PDK1，但是依赖于OXI1，这个结果表明在受到ROS或MAMP刺激时其他蛋白激酶作用于OXI1的上游。</p>\n<h2 id=\"MAPKs\"><a href=\"#MAPKs\" class=\"headerlink\" title=\"MAPKs\"></a>MAPKs</h2><p>拟南芥基因组编码20个MAPKs、10个MAPKKs和60个MAPKKKs。MAPKKKs、MAPKKs和MAPKs都含有能够将胞外刺激转化成适当响应的功能信号模块。这些MAPKs在植物-病原互作研究中被广泛关注。flg22和其他MAMP处理后，MAPK3/4/6/11在1-2min内被激活并在10-15分钟达到峰值，之后迅速下降。MKK4/MKK5组成的信号模块通过磷酸化和MPK4上游的MEKK1-MKK1/MKK2激活MPK3/MPK6（图4）。最开始的研究认为MEKK1是MKK4/MKK5-MPK3/MPK6上游的MAPKKK。然而，在flg22处理后<em>mekk1</em> 突变体后，MPK3和MPK6被激活，这个结果表明MEKK1并不是这个模块上有的MAPKKK，或者至少一个其他MAPKKK扮演多余的角色。有意思的是，参与气孔发育及花序结构的MAPK模块由YODA下游的MKK4 / MKK5- MPK3 / MPK6组成，即MAPKKK。然而，由MAMP激发的MPK3和MPK6的活性在<em>yoda</em> 突变体中是正常的。免疫反应中MKK4/MKK5-MPK3/MPK6上游的MAPKKK(s)的鉴定还不清楚。MKK4/MKK5-MPK3/MPK6模块正向调节防御响应。<em>mekk1</em>突变体的MEKK1激酶受损后半矮化程度降低，这表明MEKK1在其酶活性之外还有个独立的结构性功能，但是仍然不能完全排除此MEKK1激酶受损版本具有残留活性。酵母双杂分析发现MEKK1直接与MPK4互作。然而，没有更多的数据来支撑这个结果。首先，MEKK1-MKK1/MKK2-MPK4模块被认为会负向调控防御响应（级联模块突变体有着本构防御响应，如H$_2$O$_2$积累、<em>PR</em>基因的本构表达等，并且对病原菌的抗性增强了）。然而，最近的研究表明在<em>mkk1 mkk2</em>中这个MAPK模块实际上能够正向调节防御响应，而且被<em>R</em> 蛋白抑制子保护着。</p>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/4.png\" class=\"\">\n\n<p>PRR免疫复合物和下游的MAPKKKs之间的分子连接仍旧不清楚。一些数据表明flg22诱导的MPK3/4/6的活性部分依赖于Ca$^{2+}$爆发，但是在<em>cpk5 cpk 6 cpk11</em> 三重突变体中，flg22诱导的MPK3/4/6的活性并没有变化。在<em>rbohd</em> 突变体中flg22诱导的MPK3/4/6的活性和野生型类似，这说明ROS爆发不需要MAPK激活就能完成。此外，在<em>bik1 pnl1</em> 双重突变体中flg22诱导后MPK3/4/6的活性正常，这说明它们的激活不需要BIK1和PBL1就能完成；但是细菌AvrAC效应子表达的情况下flg22诱导的MAPK活性降低了，这表明额外的BIK1相关蛋白可能激活MAPK。此外，利用四重突变体研究发现flg22诱导的MPK3/MPK6激活与野生型是有差异的，这表明MAPK激活与SA、JA及ET信号通路是无关的。</p>\n<h1 id=\"MAPK-底物\"><a href=\"#MAPK-底物\" class=\"headerlink\" title=\"MAPK 底物\"></a>MAPK 底物</h1><p>当前在生物学中重要挑战是将给定的蛋白激酶与其真实的底物进行高度关联，尤其是在信号转导研究中。在PTI中，MAPK底物是被研究得最多的。已经利用多种方法鉴定到了多个底物。</p>\n<h2 id=\"转录因子\"><a href=\"#转录因子\" class=\"headerlink\" title=\"转录因子\"></a>转录因子</h2><p>免疫MAPK底物半数都是转录因子，说明在免疫响应中免疫MAPKs在转录重编程中有着重要作用。<em>in vitro</em> 时MPK3、MPK4及MPK6不够磷酸化转录因子WRKY33，<em>in vivo</em> 条件下MPK3和MPK6引发的磷酸化也有相关研究进行报道。遗传分析表明在不同病原菌侵染时和MPK3/MPK6信号通路中WRKY33对camalexin的生物合成是至关重要的。在突变体WRKY33$^{SA}$中WRKY33中5个潜在的MAPK磷酸化位点被突变。WRKY33$^{SA}$中并没有<em>wrky33</em> 突变的表型，而且值得注意的是camalexin生物合成相关基因的激活效率更低。此外，WRKY33能和<em>PAD3</em> 的启动子进行结合，这表明WRKY33能够直接激活camalexin合成相关基因的表达。有趣的是，MPK3/MPK6信号调控<em>WRKY33</em> 的表达，WRKY33能够与其启动子结合，这表明在<em>WRKY33</em>  的表达中存在循坏调节。总之，camalexin的生物合成被MPK3/MPK6信号通过对WRKY33转录及转录后的调节明显地诱导。事实上，WRKY33还能与MPK4互作来控制camalexin的生物合成。WRKY33与MPK4和MKS1形成核复合物。flg22诱导或细菌侵染后，由MPK4引发的MKS1的磷酸化诱导MKS1-WRKY33复合物从MPK4中释放出来，从而激活<em>PAD3</em> 基因表达。此外，MKS1能够识别WRKY33中与DNA结合的WRKY结构域，刺激其与DNA的结合。然而，在突变体<em>mks1</em> 受到病原菌侵染后仍有camalexin的积累；<em>PAD3</em> 在<em>mpk4</em> 中表达稳，但在<em>mks1</em>中却被病原菌诱导表达。<em>mks4</em> 突变体中MKS1沉默表达后，矮化减轻。总之，MPK3/MPK6和MPK4-MKS1信号通过调节WRKY33来影响camalexin的生物合成，但是具体的crosstalk机制还不清楚。</p>\n<p><em>in vivo</em> 时MPK3与bZIP转录因子VIP1互作，而且在<em>in vito</em> 时能将其磷酸化。用不同的表达系VIP1、VIP1$^{S79A}$或VIP1$^{S79D}$试验表明VIP1和VIP1$^{S79A}$定位在细胞质和细胞核中，VIP1$^{S79D}$主要定位在细胞核中。flg22处理后，VIP1定位在细胞核中，但是VIP1$^{S79A}$没有定位在细胞核中。进一步的试验表明细胞核中的VUP1激活<em>PR1</em> 基因表达。这些结果表明flg22处理后，MPK3将VIP1磷酸化，这表明这个蛋白重定位到了细胞核中，然后激活<em>PR1</em> 基因表达。</p>\n<p>MPK6能与ET响应因子家族中的ERF104互作，但是在flg22处理5-15min后这种互作关系就消失了。有意思的是，这个蛋白复合物的破裂需要MPK6活性和ET信号才能完成。<em>in vitro</em> 中MPK6磷酸化ERF104的C端结构域。ERF104过表达系转录组分析发现某些胁迫相关基因的表达上调了，尤其是防御素基因<em>PDF1.2</em> 。总之这些结果表明flg22处理后MPK6能够磷酸化ERF104，从而诱导ERF104的释放并激活其防御基因的表达。ERF104似乎是MPK6的一个特定的底物，但是ERF6等其他的ERF转录因子能够被MPK3和MPK6磷酸化。<em>in vitro</em>, 磷酸化主要发生在S266和/或S269；<em>in vivo</em> 分析发现<em>B. cinerea</em> 侵染时ERF6能够被S266和S269磷酸化。此外，活性烟草NtMEK2的诱导也能使拟南芥ERF6 S266和S269残基发生磷酸化，这表明MPK3和MPK6磷酸化了这些位点 <em>in vivo</em>。ERF6的硫酸化减弱了蛋白酶体介导的ERF6的降解。<em>B. cinerea</em> 侵染强烈诱导了ERF6的表达，这种诱导效应部分依赖于MPK3/MPK6信号，但是和ET信号无关。一个模拟磷酸化的突变体植株和野生型相比对<em>B. cinerea</em> 表现出更强的抗性，同时表现出不同于<em>mpk4</em> 突变体的严重的矮化。与此相反的是，一个dominant-negative ERF6突变体植株比野生型植株对<em>B. cinerea</em>表现出了更高的敏感性。他们研究还发现ERF6能作用于MPK3/MPK6信号的下游，诱导<em>PDF1.1</em>、<em>PDF1.2a</em> 等几个防御素基因的表达。总之，这些数据表明ERF6是MPK3和MPK6的一个底物，参与激活防御基因表达和真菌对病原菌的抗性。</p>\n<h2 id=\"其他底物\"><a href=\"#其他底物\" class=\"headerlink\" title=\"其他底物\"></a>其他底物</h2><p>除了转录因子意外，还有一些具有多种细胞功能的免疫MAPK底物被鉴定到。<em>in vitro</em>，MPK6磷酸化ET生物合成限速酶1-氨基环丙烷-1-羧酸合酶的两种同工型：ACS2和ACS6。在ACS6中被磷酸化的位点是S480、S483和S488。SCA6的一个更稳定的突变体ACS6$^{S480D/S483D/S488D}$能导致细胞ACS活性和ET生物合成增加。此外，遗传分析发现激活MPK6后，ACS2和ACS6都是生成高水平ET所必须的。同一研究组后来还发现MPK3也参与了同样的反应，并且发现其磷酸化的精确机制，进而通过泛素化-蛋白酶体机制来解释ACS蛋白的稳定性或降解机制。这个研究的数据表明MPK3和MPK6通过ACS2和ACS6的磷酸化来调节ET的生物合成。有趣的是，WRKY33能够与<em>ACS2</em> 和<em>ACS6</em> 的启动子直接结合 <em>in vivo</em> ，MPK3/MPK6信号很大程度上依赖WRKY33来诱导<em>ACS2</em> 和<em>ACS6</em> 的基因表达。因此，与WRKY33调控camalexin生物合成类似，MPK3/MPK6信号通过对ACS2和ACS6的转录级转录后的调节来调控ET的合成。</p>\n<p>研究者利用蛋白质芯片筛选将串联锌指蛋白9（TZF9）鉴定为MPK3和MPK6的底物。Maldonado-Donilla等的研究进一步确证了这个结果，而且进一步表明MPK3和MPK6能够与TZF9在细胞质和细胞核中互作。TZF9原生质体顺势表达发现TZF9在flg22处理后发生磷酸化，磷酸化以后TZF9的蛋白稳定性可能发生变化。<em>tzf9</em> 突变体对MAMP诱导的抗性有部分衰减：ROA爆发降低、MAPK活性降低、<em>FRK1</em> 和<em>NHL10</em>防御表达降低。这些数据表明植物防御期间，MPK3和MPK6能够磷酸化TZF9，进而破坏蛋白稳定性、改变其可能参与的转录后的调控。</p>\n<p>MPK6和MPK3（可能）与LIP5互作，都能磷酸化LIP5。病原菌侵染或MPK3/MPK6信号下，LIP5也会被磷酸化。<em>lip5</em> 突变体中flg22诱导的防御响应是正常的，但是对<em>P. syringae</em> 的基础抗性受损。LIP5中MAPK潜在的磷酸化位点突变会降低LIP5的稳定性。受到<em>P. syringae</em> 侵染后植株需要LIP5来增加多囊泡体的形成。总之，这些结果表明MPK3和MPK6磷酸化LIP5，磷酸化后的蛋白更稳定并且能够正向调节多囊泡体铁路，从而导致防御相关分子的重定位。</p>\n<p>PHOS32和相关蛋白PHOS34在flg22处理后能够被迅速磷酸化，PHOS32中的磷酸化位点是S21。<em>in vitro</em> 激酶分析发现MPK3和MPK6能够磷酸化PHOS32，尤其是S21这个位点；进一步的免疫耗竭实验发现MPK3和MPK6是磷酸化这个位点的主要蛋白激酶。PHOS32和PHOS34都含有一个普遍的应激蛋白A结构域。但是PHOS32和PHOS34在植物防御中的具体功能、MPK3和MPK6引发的磷酸化的作用还没有新概念报道。</p>\n<p>除了MPK3/4/6外，还有MPK11也有一定的功能。MPK11能与GRF6互作。 烟草共表达等试验发现MPK11磷酸化GRF6的丝氨酸残基。MPK11与GRF6共表达后GRF6的丰度降低，这表明MPK11会影响GRF的稳定性。此外，抗泛素化抗体试验发现GRF6会被泛素-蛋白酶系统降解。在水痘病毒李痘病毒（PPV）侵染后，<em>mpk11</em> 和<em>grf6</em> 分别表现更高的敏感性和抗性。总之，这些结果表明MPK11磷酸化GRF6从而导致其泛素-蛋白酶退化，对PPV抗性降低。</p>\n<h2 id=\"其他的MAPK底物\"><a href=\"#其他的MAPK底物\" class=\"headerlink\" title=\"其他的MAPK底物\"></a>其他的MAPK底物</h2><p>在其他条件下（病原侵染、非生物胁迫级其他）也鉴定到了MPK3/4/6的其他底物。这些底物中的一半以上都是转录因子。这些蛋白是转录因子EIN3、硝酸还原酶NIA2、ｂHLH转录因子SPCH、ｍRNA酶DCP1、转录因子MYB4和MYB44、转录因子HSFA2和HSFA4A、脂类转运蛋白相关的杂交富脯氨酸蛋白AZI1、ｂＨＬＨ转录因子MYC2、MAPK酸化酶MPK1、细胞骨架蛋白MAP65-1、C2H2型转录因子ZAT6及ZAT10。</p>\n<h2 id=\"中高通量分析中推定的MAPK底物\"><a href=\"#中高通量分析中推定的MAPK底物\" class=\"headerlink\" title=\"中高通量分析中推定的MAPK底物\"></a>中高通量分析中推定的MAPK底物</h2><p>上述的MAPK底物主要是通过candidate approaches鉴定到的。与之相反的是，许多推定的底物都是从中/高通量分析中得到的，但是大多数都还需要进一步的实验来验证。Feiler等开发了包含1690个拟南芥蛋白的芯片，并将其与MPK3和MPK6进行孵育。得到48个MPK3的潜在底物、39个MPK6的潜在底物，有26个底物是共有的，其中是ACS6就是MPK3和MPK6的底物。其他的潜在底物是转录因子、核糖体蛋白、组蛋白及其他蛋白。Popescu等人利用含有2158个拟南芥蛋白的芯片并借助GO分析发现推定的底物中50.4% 是潜在的转录因子、35%是推定的核酸结合蛋白、16%是蛋白激酶。测试了10个不同的MAPKs后，发现570个蛋白是潜在的底物。</p>\n<h2 id=\"病原效应子靶向的MAPK模块\"><a href=\"#病原效应子靶向的MAPK模块\" class=\"headerlink\" title=\"病原效应子靶向的MAPK模块\"></a>病原效应子靶向的MAPK模块</h2><p>病原菌释放大量的效应子到寄主细胞中来抑制寄主免疫响应，MAPK模块是这些效应子主要的靶标。前面提到的HopAI1以MPK3/4/6为靶标。HopAI1通过其磷酸化酶活性来刺激这些MAPKs。<em>P. syringae</em> 的效应子与MPK4互作，诱导磷酸化并激活MPK4。此外，MPK4直接与RIN4互作并将其磷酸化。</p>\n<h1 id=\"文献信息\"><a href=\"#文献信息\" class=\"headerlink\" title=\"文献信息\"></a>文献信息</h1><blockquote>\n<p>Title：Signaling Mechanisms in Pattern-Triggered Immunity (PTI)</p>\n<p>译名：PTI中的信号机制</p>\n<p>期刊：<em><strong>Molecular Plant</strong></em></p>\n<p>IF：12</p>\n<p>链接：<a href=\"https://doi.org/10.1016/j.molp.2014.12.022\">https://doi.org/10.1016/j.molp.2014.12.022</a></p>\n<p>通讯作者：Heribert Hirt</p>\n<p>主要单位：King Abdullah University of Science and Technology</p>\n</blockquote>\n<img src=\"/2020/12/27/PTI%E4%B8%AD%E7%9A%84%E4%BF%A1%E5%8F%B7%E7%BD%91%E7%BB%9C/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#x33;&#64;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"R语言批量合并Excel文件","abbrlink":"923787f","date":"2020-01-07T10:55:17.000Z","_content":"\n离开实验室的时候一个同学在合并他们班的某个汇总表。常规操作，一个一个的复制粘贴的。我就想，这个肯定可以用编程搞定啊，Python或者R都行。回来就 R写了个代码，编了10000个文件用于代码测试。`代码如下`。\n\n<!-- more -->\n\n```R\n# 清空当前变量\nrm(list = ls())\n\n# 计算程序开始时间\nt1 = proc.time()\n\n# 加载数据清洗包\nlibrary(tidyverse)\n\n# 提取需要合并的10000个文件名\ndirs = dir('test/')[1:10000]\n\n# 查看需要合并的文件综述\ndirnum = length(dirs)\n\n# 读取第一个数据转换成空的例表\ndata_raw = suppressMessages(read_excel(paste('test/',dirs[1],sep = ''),sheet = '高校研究生学生信息录入')[c(6,8),1:23] %>%\n                              as.data.frame())\n\ncolnames(data_raw) = data_raw[1,]\ndata_raw = data_raw[-c(1,2),]\n\n# for循环依次读取并合并数据\nfor (i in dirs) {\n  filename = paste('test/',i,sep = '')\n  \n  data = suppressMessages(read_excel(filename)[c(6,8),1:23] %>%\n                            as.data.frame())\n  colnames(data) = data[1,]\n  data = data[-1,]\n  data_raw = rbind(data_raw,data)\n  \n  if (nrow(data_raw) < dirnum | nrow(data_raw) == dirnum) {\n    print(paste('成功合并',nrow(data_raw),'条',sep = ''))\n  }\n  \n  if (nrow(data_raw) == dirnum) {\n    write.csv(data_raw, file = 'all_csv.csv')\n    print('合并完成！')\n  }\n}\n\n# 计算程序运行完的时间\nprint(round(proc.time()-t1,6))\n\n```\n---\n**康康最后的结果：**\n{% asset_img 1.png %}\n\n**155.72秒合并10000个文件！！！**\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/R语言批量合并Excel文件.md","raw":"---\ntitle: R语言批量合并Excel文件\ntags: R语言\ncategories: R语言\nabbrlink: 923787f\ndate: 2020-01-07 18:55:17\n---\n\n离开实验室的时候一个同学在合并他们班的某个汇总表。常规操作，一个一个的复制粘贴的。我就想，这个肯定可以用编程搞定啊，Python或者R都行。回来就 R写了个代码，编了10000个文件用于代码测试。`代码如下`。\n\n<!-- more -->\n\n```R\n# 清空当前变量\nrm(list = ls())\n\n# 计算程序开始时间\nt1 = proc.time()\n\n# 加载数据清洗包\nlibrary(tidyverse)\n\n# 提取需要合并的10000个文件名\ndirs = dir('test/')[1:10000]\n\n# 查看需要合并的文件综述\ndirnum = length(dirs)\n\n# 读取第一个数据转换成空的例表\ndata_raw = suppressMessages(read_excel(paste('test/',dirs[1],sep = ''),sheet = '高校研究生学生信息录入')[c(6,8),1:23] %>%\n                              as.data.frame())\n\ncolnames(data_raw) = data_raw[1,]\ndata_raw = data_raw[-c(1,2),]\n\n# for循环依次读取并合并数据\nfor (i in dirs) {\n  filename = paste('test/',i,sep = '')\n  \n  data = suppressMessages(read_excel(filename)[c(6,8),1:23] %>%\n                            as.data.frame())\n  colnames(data) = data[1,]\n  data = data[-1,]\n  data_raw = rbind(data_raw,data)\n  \n  if (nrow(data_raw) < dirnum | nrow(data_raw) == dirnum) {\n    print(paste('成功合并',nrow(data_raw),'条',sep = ''))\n  }\n  \n  if (nrow(data_raw) == dirnum) {\n    write.csv(data_raw, file = 'all_csv.csv')\n    print('合并完成！')\n  }\n}\n\n# 计算程序运行完的时间\nprint(round(proc.time()-t1,6))\n\n```\n---\n**康康最后的结果：**\n{% asset_img 1.png %}\n\n**155.72秒合并10000个文件！！！**\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"R语言批量合并Excel文件","published":1,"updated":"2021-02-02T07:38:44.098Z","_id":"ckwbqwcio002mr0g01iq78pja","comments":1,"layout":"post","photos":[],"link":"","content":"<p>离开实验室的时候一个同学在合并他们班的某个汇总表。常规操作，一个一个的复制粘贴的。我就想，这个肯定可以用编程搞定啊，Python或者R都行。回来就 R写了个代码，编了10000个文件用于代码测试。<code>代码如下</code>。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清空当前变量</span></span><br><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算程序开始时间</span></span><br><span class=\"line\">t1 = <span class=\"built_in\">proc.time</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载数据清洗包</span></span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提取需要合并的10000个文件名</span></span><br><span class=\"line\">dirs = dir(<span class=\"string\">&#x27;test/&#x27;</span>)[<span class=\"number\">1</span>:<span class=\"number\">10000</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看需要合并的文件综述</span></span><br><span class=\"line\">dirnum = <span class=\"built_in\">length</span>(dirs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取第一个数据转换成空的例表</span></span><br><span class=\"line\">data_raw = suppressMessages(read_excel(paste(<span class=\"string\">&#x27;test/&#x27;</span>,dirs[<span class=\"number\">1</span>],sep = <span class=\"string\">&#x27;&#x27;</span>),sheet = <span class=\"string\">&#x27;高校研究生学生信息录入&#x27;</span>)[<span class=\"built_in\">c</span>(<span class=\"number\">6</span>,<span class=\"number\">8</span>),<span class=\"number\">1</span>:<span class=\"number\">23</span>] %&gt;%</span><br><span class=\"line\">                              as.data.frame())</span><br><span class=\"line\"></span><br><span class=\"line\">colnames(data_raw) = data_raw[<span class=\"number\">1</span>,]</span><br><span class=\"line\">data_raw = data_raw[-<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>),]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for循环依次读取并合并数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> dirs) &#123;</span><br><span class=\"line\">  filename = paste(<span class=\"string\">&#x27;test/&#x27;</span>,i,sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  data = suppressMessages(read_excel(filename)[<span class=\"built_in\">c</span>(<span class=\"number\">6</span>,<span class=\"number\">8</span>),<span class=\"number\">1</span>:<span class=\"number\">23</span>] %&gt;%</span><br><span class=\"line\">                            as.data.frame())</span><br><span class=\"line\">  colnames(data) = data[<span class=\"number\">1</span>,]</span><br><span class=\"line\">  data = data[-<span class=\"number\">1</span>,]</span><br><span class=\"line\">  data_raw = rbind(data_raw,data)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nrow(data_raw) &lt; dirnum | nrow(data_raw) == dirnum) &#123;</span><br><span class=\"line\">    print(paste(<span class=\"string\">&#x27;成功合并&#x27;</span>,nrow(data_raw),<span class=\"string\">&#x27;条&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nrow(data_raw) == dirnum) &#123;</span><br><span class=\"line\">    write.csv(data_raw, file = <span class=\"string\">&#x27;all_csv.csv&#x27;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;合并完成！&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算程序运行完的时间</span></span><br><span class=\"line\">print(<span class=\"built_in\">round</span>(<span class=\"built_in\">proc.time</span>()-t1,<span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>康康最后的结果：</strong></p>\n<img src=\"/2020/01/07/R%E8%AF%AD%E8%A8%80%E6%89%B9%E9%87%8F%E5%90%88%E5%B9%B6Excel%E6%96%87%E4%BB%B6/1.png\" class=\"\">\n\n<p><strong>155.72秒合并10000个文件！！！</strong></p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>离开实验室的时候一个同学在合并他们班的某个汇总表。常规操作，一个一个的复制粘贴的。我就想，这个肯定可以用编程搞定啊，Python或者R都行。回来就 R写了个代码，编了10000个文件用于代码测试。<code>代码如下</code>。</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清空当前变量</span></span><br><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算程序开始时间</span></span><br><span class=\"line\">t1 = <span class=\"built_in\">proc.time</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载数据清洗包</span></span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提取需要合并的10000个文件名</span></span><br><span class=\"line\">dirs = dir(<span class=\"string\">&#x27;test/&#x27;</span>)[<span class=\"number\">1</span>:<span class=\"number\">10000</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看需要合并的文件综述</span></span><br><span class=\"line\">dirnum = <span class=\"built_in\">length</span>(dirs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取第一个数据转换成空的例表</span></span><br><span class=\"line\">data_raw = suppressMessages(read_excel(paste(<span class=\"string\">&#x27;test/&#x27;</span>,dirs[<span class=\"number\">1</span>],sep = <span class=\"string\">&#x27;&#x27;</span>),sheet = <span class=\"string\">&#x27;高校研究生学生信息录入&#x27;</span>)[<span class=\"built_in\">c</span>(<span class=\"number\">6</span>,<span class=\"number\">8</span>),<span class=\"number\">1</span>:<span class=\"number\">23</span>] %&gt;%</span><br><span class=\"line\">                              as.data.frame())</span><br><span class=\"line\"></span><br><span class=\"line\">colnames(data_raw) = data_raw[<span class=\"number\">1</span>,]</span><br><span class=\"line\">data_raw = data_raw[-<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>),]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for循环依次读取并合并数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> dirs) &#123;</span><br><span class=\"line\">  filename = paste(<span class=\"string\">&#x27;test/&#x27;</span>,i,sep = <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  data = suppressMessages(read_excel(filename)[<span class=\"built_in\">c</span>(<span class=\"number\">6</span>,<span class=\"number\">8</span>),<span class=\"number\">1</span>:<span class=\"number\">23</span>] %&gt;%</span><br><span class=\"line\">                            as.data.frame())</span><br><span class=\"line\">  colnames(data) = data[<span class=\"number\">1</span>,]</span><br><span class=\"line\">  data = data[-<span class=\"number\">1</span>,]</span><br><span class=\"line\">  data_raw = rbind(data_raw,data)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nrow(data_raw) &lt; dirnum | nrow(data_raw) == dirnum) &#123;</span><br><span class=\"line\">    print(paste(<span class=\"string\">&#x27;成功合并&#x27;</span>,nrow(data_raw),<span class=\"string\">&#x27;条&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (nrow(data_raw) == dirnum) &#123;</span><br><span class=\"line\">    write.csv(data_raw, file = <span class=\"string\">&#x27;all_csv.csv&#x27;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;合并完成！&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算程序运行完的时间</span></span><br><span class=\"line\">print(<span class=\"built_in\">round</span>(<span class=\"built_in\">proc.time</span>()-t1,<span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>康康最后的结果：</strong></p>\n<img src=\"/2020/01/07/R%E8%AF%AD%E8%A8%80%E6%89%B9%E9%87%8F%E5%90%88%E5%B9%B6Excel%E6%96%87%E4%BB%B6/1.png\" class=\"\">\n\n<p><strong>155.72秒合并10000个文件！！！</strong></p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"tidyHeatmap学习笔记","abbrlink":"4de9add","date":"2021-02-04T11:49:12.000Z","_content":"\n相当惊艳的一个包，简单学习了下。<!-- more -->\n\n```R\n#devtools::install_github(\"stemangiola/tidyHeatmap\")\n\nlibrary(tidyHeatmap)\nlibrary(tidyverse)\n\nmtcars_tidy <- \n  mtcars %>% \n  as_tibble(rownames=\"Car name\") %>% \n  \n  # Scale 除开那些行，剩下的行进行标准化\n  mutate_at(vars(-`Car name`, -hp, -vs), scale) %>%\n  \n  # tidyfy 转换成长数据，保证3个变量不变，剩下的转换成长数据\n  pivot_longer(cols = -c(`Car name`, hp, vs), names_to = \"Property\", values_to = \"Value\")\n\nmtcars_tidy\n\n# plot\nmtcars_heatmap <- \n  mtcars_tidy %>% \n  heatmap(`Car name`, # 行\n          Property, # 列\n          Value ) %>%\n  add_tile(hp) # 行注释\n\nmtcars_heatmap\n\n# save\nmtcars_heatmap %>% save_pdf(\"mtcars_heatmap.pdf\")\n\n# grouping\nmtcars_tidy %>% \n  group_by(vs) %>% # 按照vs这个变量进行分组\n  heatmap(`Car name`, Property, Value ) %>%\n  add_tile(hp)\n\n# 自定义颜色\nmtcars_tidy %>% \n  heatmap(\n    `Car name`, \n    Property, \n    Value,\n    palette_value = c(\"red\", \"white\", \"blue\")\n  )\n\nmtcars_tidy %>% \n  heatmap(\n    `Car name`, \n    Property, \n    Value,\n    palette_value = circlize::colorRamp2(c(-2, -1, 0, 1, 2), viridis::magma(5))\n  )\n\n# Multiple groupings and annotations\ntidyHeatmap::pasilla %>%\n  group_by(location, type) %>%\n  heatmap(\n    .column = sample,\n    .row = symbol,\n    .value = `count normalised adjusted`\n  ) %>%\n  add_tile(condition) %>%\n  add_tile(activation)\n\n# Annotation types\n\n# Create some more data points\npasilla_plus <- \n  tidyHeatmap::pasilla %>%\n  dplyr::mutate(act = activation) %>% \n  tidyr::nest(data = -sample) %>% #创建list\n  dplyr::mutate(size = rnorm(n(), 4,0.5)) %>%\n  dplyr::mutate(age = runif(n(), 50, 200)) %>%\n  tidyr::unnest(data) \n\n# Plot\npasilla_plus %>%\n  heatmap(\n    .column = sample,\n    .row = symbol,\n    .value = `count normalised adjusted`\n  ) %>%\n  add_tile(condition) %>%\n  add_point(activation) %>%\n  add_tile(act) %>%\n  add_bar(size) %>%\n  add_line(age)\n```\n\n{% asset_img 1.png %}\n\n---\n\n>>💌lixiang117423@foxmail.com\n>\n>>💌lixiang117423@gmail.com\n\n","source":"_posts/tidyHeatmap学习笔记.md","raw":"---\ntitle: tidyHeatmap学习笔记\ntags: R语言\ncategories: R语言\nabbrlink: 4de9add\ndate: 2021-02-04 19:49:12\n---\n\n相当惊艳的一个包，简单学习了下。<!-- more -->\n\n```R\n#devtools::install_github(\"stemangiola/tidyHeatmap\")\n\nlibrary(tidyHeatmap)\nlibrary(tidyverse)\n\nmtcars_tidy <- \n  mtcars %>% \n  as_tibble(rownames=\"Car name\") %>% \n  \n  # Scale 除开那些行，剩下的行进行标准化\n  mutate_at(vars(-`Car name`, -hp, -vs), scale) %>%\n  \n  # tidyfy 转换成长数据，保证3个变量不变，剩下的转换成长数据\n  pivot_longer(cols = -c(`Car name`, hp, vs), names_to = \"Property\", values_to = \"Value\")\n\nmtcars_tidy\n\n# plot\nmtcars_heatmap <- \n  mtcars_tidy %>% \n  heatmap(`Car name`, # 行\n          Property, # 列\n          Value ) %>%\n  add_tile(hp) # 行注释\n\nmtcars_heatmap\n\n# save\nmtcars_heatmap %>% save_pdf(\"mtcars_heatmap.pdf\")\n\n# grouping\nmtcars_tidy %>% \n  group_by(vs) %>% # 按照vs这个变量进行分组\n  heatmap(`Car name`, Property, Value ) %>%\n  add_tile(hp)\n\n# 自定义颜色\nmtcars_tidy %>% \n  heatmap(\n    `Car name`, \n    Property, \n    Value,\n    palette_value = c(\"red\", \"white\", \"blue\")\n  )\n\nmtcars_tidy %>% \n  heatmap(\n    `Car name`, \n    Property, \n    Value,\n    palette_value = circlize::colorRamp2(c(-2, -1, 0, 1, 2), viridis::magma(5))\n  )\n\n# Multiple groupings and annotations\ntidyHeatmap::pasilla %>%\n  group_by(location, type) %>%\n  heatmap(\n    .column = sample,\n    .row = symbol,\n    .value = `count normalised adjusted`\n  ) %>%\n  add_tile(condition) %>%\n  add_tile(activation)\n\n# Annotation types\n\n# Create some more data points\npasilla_plus <- \n  tidyHeatmap::pasilla %>%\n  dplyr::mutate(act = activation) %>% \n  tidyr::nest(data = -sample) %>% #创建list\n  dplyr::mutate(size = rnorm(n(), 4,0.5)) %>%\n  dplyr::mutate(age = runif(n(), 50, 200)) %>%\n  tidyr::unnest(data) \n\n# Plot\npasilla_plus %>%\n  heatmap(\n    .column = sample,\n    .row = symbol,\n    .value = `count normalised adjusted`\n  ) %>%\n  add_tile(condition) %>%\n  add_point(activation) %>%\n  add_tile(act) %>%\n  add_bar(size) %>%\n  add_line(age)\n```\n\n{% asset_img 1.png %}\n\n---\n\n>>💌lixiang117423@foxmail.com\n>\n>>💌lixiang117423@gmail.com\n\n","slug":"tidyHeatmap学习笔记","published":1,"updated":"2021-02-04T11:53:43.261Z","_id":"ckwbqwcio002nr0g0cc235yqt","comments":1,"layout":"post","photos":[],"link":"","content":"<p>相当惊艳的一个包，简单学习了下。<span id=\"more\"></span></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#devtools::install_github(&quot;stemangiola/tidyHeatmap&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library(tidyHeatmap)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_tidy &lt;- </span><br><span class=\"line\">  mtcars %&gt;% </span><br><span class=\"line\">  as_tibble(rownames=<span class=\"string\">&quot;Car name&quot;</span>) %&gt;% </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Scale 除开那些行，剩下的行进行标准化</span></span><br><span class=\"line\">  mutate_at(vars(-`Car name`, -hp, -vs), scale) %&gt;%</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># tidyfy 转换成长数据，保证3个变量不变，剩下的转换成长数据</span></span><br><span class=\"line\">  pivot_longer(cols = -<span class=\"built_in\">c</span>(`Car name`, hp, vs), names_to = <span class=\"string\">&quot;Property&quot;</span>, values_to = <span class=\"string\">&quot;Value&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_tidy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot</span></span><br><span class=\"line\">mtcars_heatmap &lt;- </span><br><span class=\"line\">  mtcars_tidy %&gt;% </span><br><span class=\"line\">  heatmap(`Car name`, <span class=\"comment\"># 行</span></span><br><span class=\"line\">          Property, <span class=\"comment\"># 列</span></span><br><span class=\"line\">          Value ) %&gt;%</span><br><span class=\"line\">  add_tile(hp) <span class=\"comment\"># 行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_heatmap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># save</span></span><br><span class=\"line\">mtcars_heatmap %&gt;% save_pdf(<span class=\"string\">&quot;mtcars_heatmap.pdf&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># grouping</span></span><br><span class=\"line\">mtcars_tidy %&gt;% </span><br><span class=\"line\">  group_by(vs) %&gt;% <span class=\"comment\"># 按照vs这个变量进行分组</span></span><br><span class=\"line\">  heatmap(`Car name`, Property, Value ) %&gt;%</span><br><span class=\"line\">  add_tile(hp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自定义颜色</span></span><br><span class=\"line\">mtcars_tidy %&gt;% </span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    `Car name`, </span><br><span class=\"line\">    Property, </span><br><span class=\"line\">    Value,</span><br><span class=\"line\">    palette_value = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;blue&quot;</span>)</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_tidy %&gt;% </span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    `Car name`, </span><br><span class=\"line\">    Property, </span><br><span class=\"line\">    Value,</span><br><span class=\"line\">    palette_value = circlize::colorRamp2(<span class=\"built_in\">c</span>(-<span class=\"number\">2</span>, -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>), viridis::magma(<span class=\"number\">5</span>))</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Multiple groupings and annotations</span></span><br><span class=\"line\">tidyHeatmap::pasilla %&gt;%</span><br><span class=\"line\">  group_by(location, type) %&gt;%</span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    .column = sample,</span><br><span class=\"line\">    .row = symbol,</span><br><span class=\"line\">    .value = `count normalised adjusted`</span><br><span class=\"line\">  ) %&gt;%</span><br><span class=\"line\">  add_tile(condition) %&gt;%</span><br><span class=\"line\">  add_tile(activation)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Annotation types</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create some more data points</span></span><br><span class=\"line\">pasilla_plus &lt;- </span><br><span class=\"line\">  tidyHeatmap::pasilla %&gt;%</span><br><span class=\"line\">  dplyr::mutate(act = activation) %&gt;% </span><br><span class=\"line\">  tidyr::nest(data = -sample) %&gt;% <span class=\"comment\">#创建list</span></span><br><span class=\"line\">  dplyr::mutate(size = rnorm(n(), <span class=\"number\">4</span>,<span class=\"number\">0.5</span>)) %&gt;%</span><br><span class=\"line\">  dplyr::mutate(age = runif(n(), <span class=\"number\">50</span>, <span class=\"number\">200</span>)) %&gt;%</span><br><span class=\"line\">  tidyr::unnest(data) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Plot</span></span><br><span class=\"line\">pasilla_plus %&gt;%</span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    .column = sample,</span><br><span class=\"line\">    .row = symbol,</span><br><span class=\"line\">    .value = `count normalised adjusted`</span><br><span class=\"line\">  ) %&gt;%</span><br><span class=\"line\">  add_tile(condition) %&gt;%</span><br><span class=\"line\">  add_point(activation) %&gt;%</span><br><span class=\"line\">  add_tile(act) %&gt;%</span><br><span class=\"line\">  add_bar(size) %&gt;%</span><br><span class=\"line\">  add_line(age)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/04/tidyHeatmap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>相当惊艳的一个包，简单学习了下。","more":"</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#devtools::install_github(&quot;stemangiola/tidyHeatmap&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library(tidyHeatmap)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_tidy &lt;- </span><br><span class=\"line\">  mtcars %&gt;% </span><br><span class=\"line\">  as_tibble(rownames=<span class=\"string\">&quot;Car name&quot;</span>) %&gt;% </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Scale 除开那些行，剩下的行进行标准化</span></span><br><span class=\"line\">  mutate_at(vars(-`Car name`, -hp, -vs), scale) %&gt;%</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># tidyfy 转换成长数据，保证3个变量不变，剩下的转换成长数据</span></span><br><span class=\"line\">  pivot_longer(cols = -<span class=\"built_in\">c</span>(`Car name`, hp, vs), names_to = <span class=\"string\">&quot;Property&quot;</span>, values_to = <span class=\"string\">&quot;Value&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_tidy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot</span></span><br><span class=\"line\">mtcars_heatmap &lt;- </span><br><span class=\"line\">  mtcars_tidy %&gt;% </span><br><span class=\"line\">  heatmap(`Car name`, <span class=\"comment\"># 行</span></span><br><span class=\"line\">          Property, <span class=\"comment\"># 列</span></span><br><span class=\"line\">          Value ) %&gt;%</span><br><span class=\"line\">  add_tile(hp) <span class=\"comment\"># 行注释</span></span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_heatmap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># save</span></span><br><span class=\"line\">mtcars_heatmap %&gt;% save_pdf(<span class=\"string\">&quot;mtcars_heatmap.pdf&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># grouping</span></span><br><span class=\"line\">mtcars_tidy %&gt;% </span><br><span class=\"line\">  group_by(vs) %&gt;% <span class=\"comment\"># 按照vs这个变量进行分组</span></span><br><span class=\"line\">  heatmap(`Car name`, Property, Value ) %&gt;%</span><br><span class=\"line\">  add_tile(hp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自定义颜色</span></span><br><span class=\"line\">mtcars_tidy %&gt;% </span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    `Car name`, </span><br><span class=\"line\">    Property, </span><br><span class=\"line\">    Value,</span><br><span class=\"line\">    palette_value = <span class=\"built_in\">c</span>(<span class=\"string\">&quot;red&quot;</span>, <span class=\"string\">&quot;white&quot;</span>, <span class=\"string\">&quot;blue&quot;</span>)</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">mtcars_tidy %&gt;% </span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    `Car name`, </span><br><span class=\"line\">    Property, </span><br><span class=\"line\">    Value,</span><br><span class=\"line\">    palette_value = circlize::colorRamp2(<span class=\"built_in\">c</span>(-<span class=\"number\">2</span>, -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>), viridis::magma(<span class=\"number\">5</span>))</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Multiple groupings and annotations</span></span><br><span class=\"line\">tidyHeatmap::pasilla %&gt;%</span><br><span class=\"line\">  group_by(location, type) %&gt;%</span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    .column = sample,</span><br><span class=\"line\">    .row = symbol,</span><br><span class=\"line\">    .value = `count normalised adjusted`</span><br><span class=\"line\">  ) %&gt;%</span><br><span class=\"line\">  add_tile(condition) %&gt;%</span><br><span class=\"line\">  add_tile(activation)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Annotation types</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create some more data points</span></span><br><span class=\"line\">pasilla_plus &lt;- </span><br><span class=\"line\">  tidyHeatmap::pasilla %&gt;%</span><br><span class=\"line\">  dplyr::mutate(act = activation) %&gt;% </span><br><span class=\"line\">  tidyr::nest(data = -sample) %&gt;% <span class=\"comment\">#创建list</span></span><br><span class=\"line\">  dplyr::mutate(size = rnorm(n(), <span class=\"number\">4</span>,<span class=\"number\">0.5</span>)) %&gt;%</span><br><span class=\"line\">  dplyr::mutate(age = runif(n(), <span class=\"number\">50</span>, <span class=\"number\">200</span>)) %&gt;%</span><br><span class=\"line\">  tidyr::unnest(data) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Plot</span></span><br><span class=\"line\">pasilla_plus %&gt;%</span><br><span class=\"line\">  heatmap(</span><br><span class=\"line\">    .column = sample,</span><br><span class=\"line\">    .row = symbol,</span><br><span class=\"line\">    .value = `count normalised adjusted`</span><br><span class=\"line\">  ) %&gt;%</span><br><span class=\"line\">  add_tile(condition) %&gt;%</span><br><span class=\"line\">  add_point(activation) %&gt;%</span><br><span class=\"line\">  add_tile(act) %&gt;%</span><br><span class=\"line\">  add_bar(size) %&gt;%</span><br><span class=\"line\">  add_line(age)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/02/04/tidyHeatmap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;</a></p>\n</blockquote>\n</blockquote>"},{"title":"Tools4You教程2:相关性分析","abbrlink":"b370ab0f","date":"2021-01-18T12:10:07.000Z","_content":"\n相关性分析是一种常见的数据分析方法。本教程演示如何利用`Tools4You`来完成相关性分析。\n\n<!-- more -->\n\n# 界面\n\n打开`Tools4You`界面，在`统计&分析`下选择`相关分析`，然后就能看到如下的软件界面：\n\n{%asset_img 1.png %}\n\n从左到右依次是树`数据上传参数设置区域`、`绘图区域`、`相关性结果表格`和`绘图参数区域`。\n\n# 数据上传+参数设置\n\n支持的数据格式如下图所示。每个单独的指标为一列，每个指标之间的数据量需要相等，**不需要有行名称**。\n\n{%asset_img 2.png %}\n\n相关性计算方法部分有三中方法，分别是`pearson`、`spearman`和`kendall`。选择不同的计算方法，后面的绘图结果和表格展示的结果也就不相同。\n\n支持多种格式的图片进行下载，默认是`PDF`格式，相关性表格默认的是`Excel`表格。\n\n图片的长和宽都默认是5cm，可自行调节。\n\n设置完这些参数后可以点击`点击提交`按钮，先看看结果，如果没有报错，便可以对绘图参数进行设置。\n\n{%asset_img 3.png %}\n\n# 绘图参数设置\n\n第一个参数`绘图结果展示`有三种选择：**全部展示**、**上半部分**和**下半部分**，所对应的图形如下图所示：\n\n{%asset_img 4.png %}\n\n第二个参数`选择可视化方法`指的是用什么形状来展示相关性大小，有4种选择，每种选择对应的图形如下：\n\n{%asset_img 5.png %}\n\n第三个参数`是否展示数值`指的是是否把相关性的数值展示在图中，默认是`是`，如果选择`否`，就不会在图形中将相关性展示出来。\n\n第四个参数`是否展示显著性`指的是是否在图中展示出某两个指标相关性的显著性，如果选择`是`，且具有显著性的话就会在图中标注出对应的显著性，显著是`*`，极显著是`**`，再往上就是`***`。\n\n第五个和第六个参数控制第三个、第四个参数的颜色和大小，如果不填，则按默认的进行绘图。\n\n第七个参数`相关性底色`指的是相关性最低的那个值的颜色，如果没有，就默认是红色。\n\n第八个参数`相关性顶色`指的是相关性最高的那个值的颜色，如果没有，就默认是蓝色。\n\n设置完所有的参数，就可以再次点击`点击提交`按钮，就会根据选择或输入的参数进行计算和绘图。\n\n# 结果保存\n\n保存图片请点击最左下角的`相关性图`，保存结果请点击最左下角的`下载表格`。\n\n{%asset_img 6.png %}\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","source":"_posts/Tools4You教程2-相关性分析.md","raw":"---\ntitle: 'Tools4You教程2:相关性分析'\ntags: Tools4You\ncategories: Tools4You\nabbrlink: b370ab0f\ndate: 2021-01-18 20:10:07\n---\n\n相关性分析是一种常见的数据分析方法。本教程演示如何利用`Tools4You`来完成相关性分析。\n\n<!-- more -->\n\n# 界面\n\n打开`Tools4You`界面，在`统计&分析`下选择`相关分析`，然后就能看到如下的软件界面：\n\n{%asset_img 1.png %}\n\n从左到右依次是树`数据上传参数设置区域`、`绘图区域`、`相关性结果表格`和`绘图参数区域`。\n\n# 数据上传+参数设置\n\n支持的数据格式如下图所示。每个单独的指标为一列，每个指标之间的数据量需要相等，**不需要有行名称**。\n\n{%asset_img 2.png %}\n\n相关性计算方法部分有三中方法，分别是`pearson`、`spearman`和`kendall`。选择不同的计算方法，后面的绘图结果和表格展示的结果也就不相同。\n\n支持多种格式的图片进行下载，默认是`PDF`格式，相关性表格默认的是`Excel`表格。\n\n图片的长和宽都默认是5cm，可自行调节。\n\n设置完这些参数后可以点击`点击提交`按钮，先看看结果，如果没有报错，便可以对绘图参数进行设置。\n\n{%asset_img 3.png %}\n\n# 绘图参数设置\n\n第一个参数`绘图结果展示`有三种选择：**全部展示**、**上半部分**和**下半部分**，所对应的图形如下图所示：\n\n{%asset_img 4.png %}\n\n第二个参数`选择可视化方法`指的是用什么形状来展示相关性大小，有4种选择，每种选择对应的图形如下：\n\n{%asset_img 5.png %}\n\n第三个参数`是否展示数值`指的是是否把相关性的数值展示在图中，默认是`是`，如果选择`否`，就不会在图形中将相关性展示出来。\n\n第四个参数`是否展示显著性`指的是是否在图中展示出某两个指标相关性的显著性，如果选择`是`，且具有显著性的话就会在图中标注出对应的显著性，显著是`*`，极显著是`**`，再往上就是`***`。\n\n第五个和第六个参数控制第三个、第四个参数的颜色和大小，如果不填，则按默认的进行绘图。\n\n第七个参数`相关性底色`指的是相关性最低的那个值的颜色，如果没有，就默认是红色。\n\n第八个参数`相关性顶色`指的是相关性最高的那个值的颜色，如果没有，就默认是蓝色。\n\n设置完所有的参数，就可以再次点击`点击提交`按钮，就会根据选择或输入的参数进行计算和绘图。\n\n# 结果保存\n\n保存图片请点击最左下角的`相关性图`，保存结果请点击最左下角的`下载表格`。\n\n{%asset_img 6.png %}\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","slug":"Tools4You教程2-相关性分析","published":1,"updated":"2021-02-03T05:22:19.660Z","_id":"ckwbqwcip002pr0g0b2gn51mw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>相关性分析是一种常见的数据分析方法。本教程演示如何利用<code>Tools4You</code>来完成相关性分析。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"界面\"><a href=\"#界面\" class=\"headerlink\" title=\"界面\"></a>界面</h1><p>打开<code>Tools4You</code>界面，在<code>统计&amp;分析</code>下选择<code>相关分析</code>，然后就能看到如下的软件界面：</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>从左到右依次是树<code>数据上传参数设置区域</code>、<code>绘图区域</code>、<code>相关性结果表格</code>和<code>绘图参数区域</code>。</p>\n<h1 id=\"数据上传-参数设置\"><a href=\"#数据上传-参数设置\" class=\"headerlink\" title=\"数据上传+参数设置\"></a>数据上传+参数设置</h1><p>支持的数据格式如下图所示。每个单独的指标为一列，每个指标之间的数据量需要相等，<strong>不需要有行名称</strong>。</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>相关性计算方法部分有三中方法，分别是<code>pearson</code>、<code>spearman</code>和<code>kendall</code>。选择不同的计算方法，后面的绘图结果和表格展示的结果也就不相同。</p>\n<p>支持多种格式的图片进行下载，默认是<code>PDF</code>格式，相关性表格默认的是<code>Excel</code>表格。</p>\n<p>图片的长和宽都默认是5cm，可自行调节。</p>\n<p>设置完这些参数后可以点击<code>点击提交</code>按钮，先看看结果，如果没有报错，便可以对绘图参数进行设置。</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<h1 id=\"绘图参数设置\"><a href=\"#绘图参数设置\" class=\"headerlink\" title=\"绘图参数设置\"></a>绘图参数设置</h1><p>第一个参数<code>绘图结果展示</code>有三种选择：<strong>全部展示</strong>、<strong>上半部分</strong>和<strong>下半部分</strong>，所对应的图形如下图所示：</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<p>第二个参数<code>选择可视化方法</code>指的是用什么形状来展示相关性大小，有4种选择，每种选择对应的图形如下：</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<p>第三个参数<code>是否展示数值</code>指的是是否把相关性的数值展示在图中，默认是<code>是</code>，如果选择<code>否</code>，就不会在图形中将相关性展示出来。</p>\n<p>第四个参数<code>是否展示显著性</code>指的是是否在图中展示出某两个指标相关性的显著性，如果选择<code>是</code>，且具有显著性的话就会在图中标注出对应的显著性，显著是<code>*</code>，极显著是<code>**</code>，再往上就是<code>***</code>。</p>\n<p>第五个和第六个参数控制第三个、第四个参数的颜色和大小，如果不填，则按默认的进行绘图。</p>\n<p>第七个参数<code>相关性底色</code>指的是相关性最低的那个值的颜色，如果没有，就默认是红色。</p>\n<p>第八个参数<code>相关性顶色</code>指的是相关性最高的那个值的颜色，如果没有，就默认是蓝色。</p>\n<p>设置完所有的参数，就可以再次点击<code>点击提交</code>按钮，就会根据选择或输入的参数进行计算和绘图。</p>\n<h1 id=\"结果保存\"><a href=\"#结果保存\" class=\"headerlink\" title=\"结果保存\"></a>结果保存</h1><p>保存图片请点击最左下角的<code>相关性图</code>，保存结果请点击最左下角的<code>下载表格</code>。</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/6.png\" class=\"\">\n\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#55;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#55;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>相关性分析是一种常见的数据分析方法。本教程演示如何利用<code>Tools4You</code>来完成相关性分析。</p>","more":"<h1 id=\"界面\"><a href=\"#界面\" class=\"headerlink\" title=\"界面\"></a>界面</h1><p>打开<code>Tools4You</code>界面，在<code>统计&amp;分析</code>下选择<code>相关分析</code>，然后就能看到如下的软件界面：</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<p>从左到右依次是树<code>数据上传参数设置区域</code>、<code>绘图区域</code>、<code>相关性结果表格</code>和<code>绘图参数区域</code>。</p>\n<h1 id=\"数据上传-参数设置\"><a href=\"#数据上传-参数设置\" class=\"headerlink\" title=\"数据上传+参数设置\"></a>数据上传+参数设置</h1><p>支持的数据格式如下图所示。每个单独的指标为一列，每个指标之间的数据量需要相等，<strong>不需要有行名称</strong>。</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>相关性计算方法部分有三中方法，分别是<code>pearson</code>、<code>spearman</code>和<code>kendall</code>。选择不同的计算方法，后面的绘图结果和表格展示的结果也就不相同。</p>\n<p>支持多种格式的图片进行下载，默认是<code>PDF</code>格式，相关性表格默认的是<code>Excel</code>表格。</p>\n<p>图片的长和宽都默认是5cm，可自行调节。</p>\n<p>设置完这些参数后可以点击<code>点击提交</code>按钮，先看看结果，如果没有报错，便可以对绘图参数进行设置。</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<h1 id=\"绘图参数设置\"><a href=\"#绘图参数设置\" class=\"headerlink\" title=\"绘图参数设置\"></a>绘图参数设置</h1><p>第一个参数<code>绘图结果展示</code>有三种选择：<strong>全部展示</strong>、<strong>上半部分</strong>和<strong>下半部分</strong>，所对应的图形如下图所示：</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<p>第二个参数<code>选择可视化方法</code>指的是用什么形状来展示相关性大小，有4种选择，每种选择对应的图形如下：</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<p>第三个参数<code>是否展示数值</code>指的是是否把相关性的数值展示在图中，默认是<code>是</code>，如果选择<code>否</code>，就不会在图形中将相关性展示出来。</p>\n<p>第四个参数<code>是否展示显著性</code>指的是是否在图中展示出某两个指标相关性的显著性，如果选择<code>是</code>，且具有显著性的话就会在图中标注出对应的显著性，显著是<code>*</code>，极显著是<code>**</code>，再往上就是<code>***</code>。</p>\n<p>第五个和第六个参数控制第三个、第四个参数的颜色和大小，如果不填，则按默认的进行绘图。</p>\n<p>第七个参数<code>相关性底色</code>指的是相关性最低的那个值的颜色，如果没有，就默认是红色。</p>\n<p>第八个参数<code>相关性顶色</code>指的是相关性最高的那个值的颜色，如果没有，就默认是蓝色。</p>\n<p>设置完所有的参数，就可以再次点击<code>点击提交</code>按钮，就会根据选择或输入的参数进行计算和绘图。</p>\n<h1 id=\"结果保存\"><a href=\"#结果保存\" class=\"headerlink\" title=\"结果保存\"></a>结果保存</h1><p>保存图片请点击最左下角的<code>相关性图</code>，保存结果请点击最左下角的<code>下载表格</code>。</p>\n<img src=\"/2021/01/18/Tools4You%E6%95%99%E7%A8%8B2-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/6.png\" class=\"\">\n\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#55;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#55;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"Tools4You教程1：关于Tools4You + t检验","abbrlink":"c5bde688","date":"2021-01-15T13:00:36.000Z","_content":"\n# `Tools4You`是什么\n\n`Tools4You`是一个基于`R shiny`的网页工具，能够完成常见的统计分析及数据可视化。\n\n<!-- more -->\n\n# `Tools4You`的开发初衷\n\n作为`R`语言的重度使用者，自从习惯用`R`以后，我就很少用那些破解版的付费软件，如`SPSS`、`OriginLab`等。我们课题组相对比较大，总是有同学在找各种软件的破解包来进行统计分析或者是绘图。使用盗版（破解）软件有些不足之处，比如说破解的版本经常无法使用，或者说在投稿的时候因为破解版软件影响到文章等。相比之下，`R`作为一个完全开源免费的软件，在生命科学领域正在大放异彩，囊括了从统计分析到数据可视化的各种功能，不乏`CNS`级别的文章都使用`R`进行统计和绘图。但是要从头学习一个语言是比较困难的，虽然`R`的学习曲线相对来说不是很陡峭，但是对于我们农学口的研究生来说，要拿出大把的时间学习`R`也是比较困难的。很感谢我的导师，从我本科毕业开始就让我往生信方向走，从那时候开始学习`R`，现在也快两年半了，算不上精通`R`，我认为我只是熟悉`R`。在研三这个特殊的时期，我突然决定以`R shiny`为基础开发一个网页版工具，供实验室的同学使用，如果能够帮助到其他学校/研究所的同学，那我将倍感荣幸。\n\n`Tools4You`目前预计功能模块有30个左右，总代码量达到1.5~2.0W行。由于目前完全是我一个人在开发，临近毕业需要写毕业论文+做实验，所以进度较慢，预计一周能够更新1-2个功能模块；一个人开发，免不了代码不规范、代码冗余，暂时的目标是搭建好一个基本的可使用的框架，更多细节留在后面慢慢调试。\n\n>目前`Tools4You`托管在阿里云服务器上，由于服务器内存只有2G，访问的时候加载时间大概是10秒左右，还请耐心等待。\n>\n>如果遇到报错或者是有任何的建议意见，欢迎联系我们：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n#  访问`Tools4You`\n\n浏览器访问网址http://shinyapp.top:3838/Tools4You/，手机端暂不兼容。\n\n访问连接成功后便是如下界面：\n\n{% asset_img 1.png %}\n\n主要分为3个大的功能模块：\t\n\n- `常用小工具`：分组求均值，数据正态性检验，方差齐性检验等；\n- `统计&分析`：常见的统计分析方法；\n- `数据可视化`：生命科学研究中常见的图形。\n\n点开每个大的功能模块下会有具体的功能模块。\n\n# `t`检验\n\n{% asset_img 2.png %}\n\n使用流程：\n\n1. `上传数据`：目前只支持`.csv`格式文件的上传，**检验先下载示例数据，按照示例数据的格式整理数据，然后上传分析**；\n2. `选择统计检验的置信度`，通常是0.99或者0.55，默认的是0.99；\n3. 下方的`单尾/双尾`和`方差相等`通常都是默认值；\n4. `配对数据`：如果数据是配对的，选择`是`，否则就是默认`否`；\n5. `误差棒数据`：选择柱状图误差棒是用`标准误`还是`标准差`，默认是`标准差`；\n6. `下载参数设置`：下载统计分析结果的文件格式，默认的是'Excel'文件，图片下载格式默认的是`PDF`，下面是图片的长度和宽度设置；\n7. `绘图参数设置`：坐标轴及图片名称等，**需要注意的是，如果没有输入在那个分组上标注显著性，则默认在两个柱子上都标注显著性**；\n8. 将所有参数设置完成后，点击`点击提交`即可；\n9. 如果需要调整某个参数，则在调整完参数后再次点击`点击提交`；\n10. 完成后下载对应的表格结果和图片即可。\n\n{% asset_img 3.png %}\n\n注：展示的图片长宽和下载的图片长款是没有关系的，如果需要更进一步的细节修改，可以使用`AI`等软件进行调整，也可以在后续我们更新相关模块后进行细调整。\n\n# `t`检验结果解读\n\n{% asset_img 4.png %}\n\n这是`t检验`的结果，从左到右分别表示：分组名称、重复数量、和、均值、标准差、标准误、*P* 值和显著性。\n\n{% asset_img 5.png %}\n\n这个是导出的绘图结果，基本能用。\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n----\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/Tools4You教程1-0——关于Tools4You.md","raw":"---\ntitle: Tools4You教程1：关于Tools4You + t检验\ntags: Tools4You\ncategories: Tools4You\nabbrlink: c5bde688\ndate: 2021-01-15 21:00:36\n---\n\n# `Tools4You`是什么\n\n`Tools4You`是一个基于`R shiny`的网页工具，能够完成常见的统计分析及数据可视化。\n\n<!-- more -->\n\n# `Tools4You`的开发初衷\n\n作为`R`语言的重度使用者，自从习惯用`R`以后，我就很少用那些破解版的付费软件，如`SPSS`、`OriginLab`等。我们课题组相对比较大，总是有同学在找各种软件的破解包来进行统计分析或者是绘图。使用盗版（破解）软件有些不足之处，比如说破解的版本经常无法使用，或者说在投稿的时候因为破解版软件影响到文章等。相比之下，`R`作为一个完全开源免费的软件，在生命科学领域正在大放异彩，囊括了从统计分析到数据可视化的各种功能，不乏`CNS`级别的文章都使用`R`进行统计和绘图。但是要从头学习一个语言是比较困难的，虽然`R`的学习曲线相对来说不是很陡峭，但是对于我们农学口的研究生来说，要拿出大把的时间学习`R`也是比较困难的。很感谢我的导师，从我本科毕业开始就让我往生信方向走，从那时候开始学习`R`，现在也快两年半了，算不上精通`R`，我认为我只是熟悉`R`。在研三这个特殊的时期，我突然决定以`R shiny`为基础开发一个网页版工具，供实验室的同学使用，如果能够帮助到其他学校/研究所的同学，那我将倍感荣幸。\n\n`Tools4You`目前预计功能模块有30个左右，总代码量达到1.5~2.0W行。由于目前完全是我一个人在开发，临近毕业需要写毕业论文+做实验，所以进度较慢，预计一周能够更新1-2个功能模块；一个人开发，免不了代码不规范、代码冗余，暂时的目标是搭建好一个基本的可使用的框架，更多细节留在后面慢慢调试。\n\n>目前`Tools4You`托管在阿里云服务器上，由于服务器内存只有2G，访问的时候加载时间大概是10秒左右，还请耐心等待。\n>\n>如果遇到报错或者是有任何的建议意见，欢迎联系我们：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n#  访问`Tools4You`\n\n浏览器访问网址http://shinyapp.top:3838/Tools4You/，手机端暂不兼容。\n\n访问连接成功后便是如下界面：\n\n{% asset_img 1.png %}\n\n主要分为3个大的功能模块：\t\n\n- `常用小工具`：分组求均值，数据正态性检验，方差齐性检验等；\n- `统计&分析`：常见的统计分析方法；\n- `数据可视化`：生命科学研究中常见的图形。\n\n点开每个大的功能模块下会有具体的功能模块。\n\n# `t`检验\n\n{% asset_img 2.png %}\n\n使用流程：\n\n1. `上传数据`：目前只支持`.csv`格式文件的上传，**检验先下载示例数据，按照示例数据的格式整理数据，然后上传分析**；\n2. `选择统计检验的置信度`，通常是0.99或者0.55，默认的是0.99；\n3. 下方的`单尾/双尾`和`方差相等`通常都是默认值；\n4. `配对数据`：如果数据是配对的，选择`是`，否则就是默认`否`；\n5. `误差棒数据`：选择柱状图误差棒是用`标准误`还是`标准差`，默认是`标准差`；\n6. `下载参数设置`：下载统计分析结果的文件格式，默认的是'Excel'文件，图片下载格式默认的是`PDF`，下面是图片的长度和宽度设置；\n7. `绘图参数设置`：坐标轴及图片名称等，**需要注意的是，如果没有输入在那个分组上标注显著性，则默认在两个柱子上都标注显著性**；\n8. 将所有参数设置完成后，点击`点击提交`即可；\n9. 如果需要调整某个参数，则在调整完参数后再次点击`点击提交`；\n10. 完成后下载对应的表格结果和图片即可。\n\n{% asset_img 3.png %}\n\n注：展示的图片长宽和下载的图片长款是没有关系的，如果需要更进一步的细节修改，可以使用`AI`等软件进行调整，也可以在后续我们更新相关模块后进行细调整。\n\n# `t`检验结果解读\n\n{% asset_img 4.png %}\n\n这是`t检验`的结果，从左到右分别表示：分组名称、重复数量、和、均值、标准差、标准误、*P* 值和显著性。\n\n{% asset_img 5.png %}\n\n这个是导出的绘图结果，基本能用。\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n----\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"Tools4You教程1-0——关于Tools4You","published":1,"updated":"2021-02-03T05:21:13.961Z","_id":"ckwbqwcjh002rr0g0ad1mhqn0","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Tools4You是什么\"><a href=\"#Tools4You是什么\" class=\"headerlink\" title=\"Tools4You是什么\"></a><code>Tools4You</code>是什么</h1><p><code>Tools4You</code>是一个基于<code>R shiny</code>的网页工具，能够完成常见的统计分析及数据可视化。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Tools4You的开发初衷\"><a href=\"#Tools4You的开发初衷\" class=\"headerlink\" title=\"Tools4You的开发初衷\"></a><code>Tools4You</code>的开发初衷</h1><p>作为<code>R</code>语言的重度使用者，自从习惯用<code>R</code>以后，我就很少用那些破解版的付费软件，如<code>SPSS</code>、<code>OriginLab</code>等。我们课题组相对比较大，总是有同学在找各种软件的破解包来进行统计分析或者是绘图。使用盗版（破解）软件有些不足之处，比如说破解的版本经常无法使用，或者说在投稿的时候因为破解版软件影响到文章等。相比之下，<code>R</code>作为一个完全开源免费的软件，在生命科学领域正在大放异彩，囊括了从统计分析到数据可视化的各种功能，不乏<code>CNS</code>级别的文章都使用<code>R</code>进行统计和绘图。但是要从头学习一个语言是比较困难的，虽然<code>R</code>的学习曲线相对来说不是很陡峭，但是对于我们农学口的研究生来说，要拿出大把的时间学习<code>R</code>也是比较困难的。很感谢我的导师，从我本科毕业开始就让我往生信方向走，从那时候开始学习<code>R</code>，现在也快两年半了，算不上精通<code>R</code>，我认为我只是熟悉<code>R</code>。在研三这个特殊的时期，我突然决定以<code>R shiny</code>为基础开发一个网页版工具，供实验室的同学使用，如果能够帮助到其他学校/研究所的同学，那我将倍感荣幸。</p>\n<p><code>Tools4You</code>目前预计功能模块有30个左右，总代码量达到1.5~2.0W行。由于目前完全是我一个人在开发，临近毕业需要写毕业论文+做实验，所以进度较慢，预计一周能够更新1-2个功能模块；一个人开发，免不了代码不规范、代码冗余，暂时的目标是搭建好一个基本的可使用的框架，更多细节留在后面慢慢调试。</p>\n<blockquote>\n<p>目前<code>Tools4You</code>托管在阿里云服务器上，由于服务器内存只有2G，访问的时候加载时间大概是10秒左右，还请耐心等待。</p>\n<p>如果遇到报错或者是有任何的建议意见，欢迎联系我们：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n<h1 id=\"访问Tools4You\"><a href=\"#访问Tools4You\" class=\"headerlink\" title=\"访问Tools4You\"></a>访问<code>Tools4You</code></h1><p>浏览器访问网址<a href=\"http://shinyapp.top:3838/Tools4You/%EF%BC%8C%E6%89%8B%E6%9C%BA%E7%AB%AF%E6%9A%82%E4%B8%8D%E5%85%BC%E5%AE%B9%E3%80%82\">http://shinyapp.top:3838/Tools4You/，手机端暂不兼容。</a></p>\n<p>访问连接成功后便是如下界面：</p>\n<img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/1.png\" class=\"\">\n\n<p>主要分为3个大的功能模块：    </p>\n<ul>\n<li><code>常用小工具</code>：分组求均值，数据正态性检验，方差齐性检验等；</li>\n<li><code>统计&amp;分析</code>：常见的统计分析方法；</li>\n<li><code>数据可视化</code>：生命科学研究中常见的图形。</li>\n</ul>\n<p>点开每个大的功能模块下会有具体的功能模块。</p>\n<h1 id=\"t检验\"><a href=\"#t检验\" class=\"headerlink\" title=\"t检验\"></a><code>t</code>检验</h1><img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/2.png\" class=\"\">\n\n<p>使用流程：</p>\n<ol>\n<li><code>上传数据</code>：目前只支持<code>.csv</code>格式文件的上传，<strong>检验先下载示例数据，按照示例数据的格式整理数据，然后上传分析</strong>；</li>\n<li><code>选择统计检验的置信度</code>，通常是0.99或者0.55，默认的是0.99；</li>\n<li>下方的<code>单尾/双尾</code>和<code>方差相等</code>通常都是默认值；</li>\n<li><code>配对数据</code>：如果数据是配对的，选择<code>是</code>，否则就是默认<code>否</code>；</li>\n<li><code>误差棒数据</code>：选择柱状图误差棒是用<code>标准误</code>还是<code>标准差</code>，默认是<code>标准差</code>；</li>\n<li><code>下载参数设置</code>：下载统计分析结果的文件格式，默认的是’Excel’文件，图片下载格式默认的是<code>PDF</code>，下面是图片的长度和宽度设置；</li>\n<li><code>绘图参数设置</code>：坐标轴及图片名称等，<strong>需要注意的是，如果没有输入在那个分组上标注显著性，则默认在两个柱子上都标注显著性</strong>；</li>\n<li>将所有参数设置完成后，点击<code>点击提交</code>即可；</li>\n<li>如果需要调整某个参数，则在调整完参数后再次点击<code>点击提交</code>；</li>\n<li>完成后下载对应的表格结果和图片即可。</li>\n</ol>\n<img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/3.png\" class=\"\">\n\n<p>注：展示的图片长宽和下载的图片长款是没有关系的，如果需要更进一步的细节修改，可以使用<code>AI</code>等软件进行调整，也可以在后续我们更新相关模块后进行细调整。</p>\n<h1 id=\"t检验结果解读\"><a href=\"#t检验结果解读\" class=\"headerlink\" title=\"t检验结果解读\"></a><code>t</code>检验结果解读</h1><img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/4.png\" class=\"\">\n\n<p>这是<code>t检验</code>的结果，从左到右分别表示：分组名称、重复数量、和、均值、标准差、标准误、<em>P</em> 值和显著性。</p>\n<img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/5.png\" class=\"\">\n\n<p>这个是导出的绘图结果，基本能用。</p>\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"Tools4You是什么\"><a href=\"#Tools4You是什么\" class=\"headerlink\" title=\"Tools4You是什么\"></a><code>Tools4You</code>是什么</h1><p><code>Tools4You</code>是一个基于<code>R shiny</code>的网页工具，能够完成常见的统计分析及数据可视化。</p>","more":"<h1 id=\"Tools4You的开发初衷\"><a href=\"#Tools4You的开发初衷\" class=\"headerlink\" title=\"Tools4You的开发初衷\"></a><code>Tools4You</code>的开发初衷</h1><p>作为<code>R</code>语言的重度使用者，自从习惯用<code>R</code>以后，我就很少用那些破解版的付费软件，如<code>SPSS</code>、<code>OriginLab</code>等。我们课题组相对比较大，总是有同学在找各种软件的破解包来进行统计分析或者是绘图。使用盗版（破解）软件有些不足之处，比如说破解的版本经常无法使用，或者说在投稿的时候因为破解版软件影响到文章等。相比之下，<code>R</code>作为一个完全开源免费的软件，在生命科学领域正在大放异彩，囊括了从统计分析到数据可视化的各种功能，不乏<code>CNS</code>级别的文章都使用<code>R</code>进行统计和绘图。但是要从头学习一个语言是比较困难的，虽然<code>R</code>的学习曲线相对来说不是很陡峭，但是对于我们农学口的研究生来说，要拿出大把的时间学习<code>R</code>也是比较困难的。很感谢我的导师，从我本科毕业开始就让我往生信方向走，从那时候开始学习<code>R</code>，现在也快两年半了，算不上精通<code>R</code>，我认为我只是熟悉<code>R</code>。在研三这个特殊的时期，我突然决定以<code>R shiny</code>为基础开发一个网页版工具，供实验室的同学使用，如果能够帮助到其他学校/研究所的同学，那我将倍感荣幸。</p>\n<p><code>Tools4You</code>目前预计功能模块有30个左右，总代码量达到1.5~2.0W行。由于目前完全是我一个人在开发，临近毕业需要写毕业论文+做实验，所以进度较慢，预计一周能够更新1-2个功能模块；一个人开发，免不了代码不规范、代码冗余，暂时的目标是搭建好一个基本的可使用的框架，更多细节留在后面慢慢调试。</p>\n<blockquote>\n<p>目前<code>Tools4You</code>托管在阿里云服务器上，由于服务器内存只有2G，访问的时候加载时间大概是10秒左右，还请耐心等待。</p>\n<p>如果遇到报错或者是有任何的建议意见，欢迎联系我们：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#x61;&#x6e;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n<h1 id=\"访问Tools4You\"><a href=\"#访问Tools4You\" class=\"headerlink\" title=\"访问Tools4You\"></a>访问<code>Tools4You</code></h1><p>浏览器访问网址<a href=\"http://shinyapp.top:3838/Tools4You/%EF%BC%8C%E6%89%8B%E6%9C%BA%E7%AB%AF%E6%9A%82%E4%B8%8D%E5%85%BC%E5%AE%B9%E3%80%82\">http://shinyapp.top:3838/Tools4You/，手机端暂不兼容。</a></p>\n<p>访问连接成功后便是如下界面：</p>\n<img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/1.png\" class=\"\">\n\n<p>主要分为3个大的功能模块：    </p>\n<ul>\n<li><code>常用小工具</code>：分组求均值，数据正态性检验，方差齐性检验等；</li>\n<li><code>统计&amp;分析</code>：常见的统计分析方法；</li>\n<li><code>数据可视化</code>：生命科学研究中常见的图形。</li>\n</ul>\n<p>点开每个大的功能模块下会有具体的功能模块。</p>\n<h1 id=\"t检验\"><a href=\"#t检验\" class=\"headerlink\" title=\"t检验\"></a><code>t</code>检验</h1><img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/2.png\" class=\"\">\n\n<p>使用流程：</p>\n<ol>\n<li><code>上传数据</code>：目前只支持<code>.csv</code>格式文件的上传，<strong>检验先下载示例数据，按照示例数据的格式整理数据，然后上传分析</strong>；</li>\n<li><code>选择统计检验的置信度</code>，通常是0.99或者0.55，默认的是0.99；</li>\n<li>下方的<code>单尾/双尾</code>和<code>方差相等</code>通常都是默认值；</li>\n<li><code>配对数据</code>：如果数据是配对的，选择<code>是</code>，否则就是默认<code>否</code>；</li>\n<li><code>误差棒数据</code>：选择柱状图误差棒是用<code>标准误</code>还是<code>标准差</code>，默认是<code>标准差</code>；</li>\n<li><code>下载参数设置</code>：下载统计分析结果的文件格式，默认的是’Excel’文件，图片下载格式默认的是<code>PDF</code>，下面是图片的长度和宽度设置；</li>\n<li><code>绘图参数设置</code>：坐标轴及图片名称等，<strong>需要注意的是，如果没有输入在那个分组上标注显著性，则默认在两个柱子上都标注显著性</strong>；</li>\n<li>将所有参数设置完成后，点击<code>点击提交</code>即可；</li>\n<li>如果需要调整某个参数，则在调整完参数后再次点击<code>点击提交</code>；</li>\n<li>完成后下载对应的表格结果和图片即可。</li>\n</ol>\n<img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/3.png\" class=\"\">\n\n<p>注：展示的图片长宽和下载的图片长款是没有关系的，如果需要更进一步的细节修改，可以使用<code>AI</code>等软件进行调整，也可以在后续我们更新相关模块后进行细调整。</p>\n<h1 id=\"t检验结果解读\"><a href=\"#t检验结果解读\" class=\"headerlink\" title=\"t检验结果解读\"></a><code>t</code>检验结果解读</h1><img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/4.png\" class=\"\">\n\n<p>这是<code>t检验</code>的结果，从左到右分别表示：分组名称、重复数量、和、均值、标准差、标准误、<em>P</em> 值和显著性。</p>\n<img src=\"/2021/01/15/Tools4You%E6%95%99%E7%A8%8B1-0%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8ETools4You/5.png\" class=\"\">\n\n<p>这个是导出的绘图结果，基本能用。</p>\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"Tools4You教程3：线性回归分析","abbrlink":"de26be17","date":"2021-01-19T02:48:09.000Z","_content":"\n# 界面\n\n线性回归分析的界面和`t`检验的界面很相似。首先在左侧选择对应的模块`回归分析`，便科研看到如下界面：\n\n{% asset_img 1.png %}\n\n# 数据上传与参数设置\n\n数据格式如下：第一列是`x`，第二列是`y`，第三列是`group`，如果只是一组数据的话，在`group`列输入一个分组名称即可，多组的话对应输入多个分组名称即可。\n\n{% asset_img 2.png %}\n\n数据上传完成后，需要选择绘制散点图形状（[点击查看散点形状代码](https://mp.weixin.qq.com/s?src=11&timestamp=1611026087&ver=2837&signature=yPe5ICH4hawX6qlTXFCg40LYw4uy11a3yOiwZuxuGQOvi8Hx2BcuLNXF3G50xlFxzqdxLTuk8iGF*2uS3ofQoggAfloxW-MwPCjX9coIvm7VNAY3v5kz*NG8afFfFgSN&new=1)）、大小、颜色及透明度，如果没有选择或输入相关的参数，那后续的绘图就会按照默认的参数进行。\n\n第二列下面一个边框主要选择的参数是下载的结果的格式和图片格式，默认的是数据格式是`Excel`表，默认的图片格式是`PDF`格式，图片的长和宽都是默认5cm，科研根据自己的需要调节长宽。\n\n右下角的框里面的参数主要和图片相关，如果`是否展示图例`选择否，则不会展示图例，如果选择的是默认参数`是`，则将图例展示在右边。X轴、Y轴及图片标题如果没有输入的话，则按照默认的`X`、`Y`和`Title`进行显示。\n\n**设置完所有参数后点击左侧的`点击提交`按钮，便能得到对应的结果**。\n\n# 结果解读\n\n下图展示的是回归分析的结果，第一列`group`表示的是分组，每个分组有两行结果，第一行是**截距**，第二行是**斜率**；第三列表示的是截距和斜率对应的值，其他几列不用看，直接看最后一列`Pvalue`即可。下方这个表点击左侧的`下载结果`即可进行下载。\n\n{% asset_img 3.png %}\n\n下图展示的是绘图结果。不同的颜色表示的是不同分组，示例数据 有三组，以此展示出来的颜色有三种。有一部分表示的是置信区间，也就是对应的回归方程的置信区间，原始数据中落在阴影部分的点越多，表明结果越好；左上角的公式与每个分组对应，颜色和散点图的颜色是一致的，其实也就是将上图中的斜率、截距及`Pvalue`展示在散点图中。下方这个表点击左侧的`下载图片`即可进行下载。\n\n{% asset_img 4.png %}\n\n注意：**如果需要修改其他参数，请将参数修改好以后再次点击`点击提交`按钮，不用再次上传数据！！！**\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","source":"_posts/Tools4You教程3：线性回归分析.md","raw":"---\ntitle: Tools4You教程3：线性回归分析\ntags: Tools4You\ncategories: Tools4You\nabbrlink: de26be17\ndate: 2021-01-19 10:48:09\n---\n\n# 界面\n\n线性回归分析的界面和`t`检验的界面很相似。首先在左侧选择对应的模块`回归分析`，便科研看到如下界面：\n\n{% asset_img 1.png %}\n\n# 数据上传与参数设置\n\n数据格式如下：第一列是`x`，第二列是`y`，第三列是`group`，如果只是一组数据的话，在`group`列输入一个分组名称即可，多组的话对应输入多个分组名称即可。\n\n{% asset_img 2.png %}\n\n数据上传完成后，需要选择绘制散点图形状（[点击查看散点形状代码](https://mp.weixin.qq.com/s?src=11&timestamp=1611026087&ver=2837&signature=yPe5ICH4hawX6qlTXFCg40LYw4uy11a3yOiwZuxuGQOvi8Hx2BcuLNXF3G50xlFxzqdxLTuk8iGF*2uS3ofQoggAfloxW-MwPCjX9coIvm7VNAY3v5kz*NG8afFfFgSN&new=1)）、大小、颜色及透明度，如果没有选择或输入相关的参数，那后续的绘图就会按照默认的参数进行。\n\n第二列下面一个边框主要选择的参数是下载的结果的格式和图片格式，默认的是数据格式是`Excel`表，默认的图片格式是`PDF`格式，图片的长和宽都是默认5cm，科研根据自己的需要调节长宽。\n\n右下角的框里面的参数主要和图片相关，如果`是否展示图例`选择否，则不会展示图例，如果选择的是默认参数`是`，则将图例展示在右边。X轴、Y轴及图片标题如果没有输入的话，则按照默认的`X`、`Y`和`Title`进行显示。\n\n**设置完所有参数后点击左侧的`点击提交`按钮，便能得到对应的结果**。\n\n# 结果解读\n\n下图展示的是回归分析的结果，第一列`group`表示的是分组，每个分组有两行结果，第一行是**截距**，第二行是**斜率**；第三列表示的是截距和斜率对应的值，其他几列不用看，直接看最后一列`Pvalue`即可。下方这个表点击左侧的`下载结果`即可进行下载。\n\n{% asset_img 3.png %}\n\n下图展示的是绘图结果。不同的颜色表示的是不同分组，示例数据 有三组，以此展示出来的颜色有三种。有一部分表示的是置信区间，也就是对应的回归方程的置信区间，原始数据中落在阴影部分的点越多，表明结果越好；左上角的公式与每个分组对应，颜色和散点图的颜色是一致的，其实也就是将上图中的斜率、截距及`Pvalue`展示在散点图中。下方这个表点击左侧的`下载图片`即可进行下载。\n\n{% asset_img 4.png %}\n\n注意：**如果需要修改其他参数，请将参数修改好以后再次点击`点击提交`按钮，不用再次上传数据！！！**\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","slug":"Tools4You教程3：线性回归分析","published":1,"updated":"2021-02-03T05:22:33.885Z","_id":"ckwbqwcjn0032r0g013is5r89","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"界面\"><a href=\"#界面\" class=\"headerlink\" title=\"界面\"></a>界面</h1><p>线性回归分析的界面和<code>t</code>检验的界面很相似。首先在左侧选择对应的模块<code>回归分析</code>，便科研看到如下界面：</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<h1 id=\"数据上传与参数设置\"><a href=\"#数据上传与参数设置\" class=\"headerlink\" title=\"数据上传与参数设置\"></a>数据上传与参数设置</h1><p>数据格式如下：第一列是<code>x</code>，第二列是<code>y</code>，第三列是<code>group</code>，如果只是一组数据的话，在<code>group</code>列输入一个分组名称即可，多组的话对应输入多个分组名称即可。</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>数据上传完成后，需要选择绘制散点图形状（<a href=\"https://mp.weixin.qq.com/s?src=11&timestamp=1611026087&ver=2837&signature=yPe5ICH4hawX6qlTXFCg40LYw4uy11a3yOiwZuxuGQOvi8Hx2BcuLNXF3G50xlFxzqdxLTuk8iGF*2uS3ofQoggAfloxW-MwPCjX9coIvm7VNAY3v5kz*NG8afFfFgSN&new=1\">点击查看散点形状代码</a>）、大小、颜色及透明度，如果没有选择或输入相关的参数，那后续的绘图就会按照默认的参数进行。</p>\n<p>第二列下面一个边框主要选择的参数是下载的结果的格式和图片格式，默认的是数据格式是<code>Excel</code>表，默认的图片格式是<code>PDF</code>格式，图片的长和宽都是默认5cm，科研根据自己的需要调节长宽。</p>\n<p>右下角的框里面的参数主要和图片相关，如果<code>是否展示图例</code>选择否，则不会展示图例，如果选择的是默认参数<code>是</code>，则将图例展示在右边。X轴、Y轴及图片标题如果没有输入的话，则按照默认的<code>X</code>、<code>Y</code>和<code>Title</code>进行显示。</p>\n<p><strong>设置完所有参数后点击左侧的<code>点击提交</code>按钮，便能得到对应的结果</strong>。</p>\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><p>下图展示的是回归分析的结果，第一列<code>group</code>表示的是分组，每个分组有两行结果，第一行是<strong>截距</strong>，第二行是<strong>斜率</strong>；第三列表示的是截距和斜率对应的值，其他几列不用看，直接看最后一列<code>Pvalue</code>即可。下方这个表点击左侧的<code>下载结果</code>即可进行下载。</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<p>下图展示的是绘图结果。不同的颜色表示的是不同分组，示例数据 有三组，以此展示出来的颜色有三种。有一部分表示的是置信区间，也就是对应的回归方程的置信区间，原始数据中落在阴影部分的点越多，表明结果越好；左上角的公式与每个分组对应，颜色和散点图的颜色是一致的，其实也就是将上图中的斜率、截距及<code>Pvalue</code>展示在散点图中。下方这个表点击左侧的<code>下载图片</code>即可进行下载。</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<p>注意：<strong>如果需要修改其他参数，请将参数修改好以后再次点击<code>点击提交</code>按钮，不用再次上传数据！！！</strong></p>\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#111;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#111;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h1 id=\"界面\"><a href=\"#界面\" class=\"headerlink\" title=\"界面\"></a>界面</h1><p>线性回归分析的界面和<code>t</code>检验的界面很相似。首先在左侧选择对应的模块<code>回归分析</code>，便科研看到如下界面：</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<h1 id=\"数据上传与参数设置\"><a href=\"#数据上传与参数设置\" class=\"headerlink\" title=\"数据上传与参数设置\"></a>数据上传与参数设置</h1><p>数据格式如下：第一列是<code>x</code>，第二列是<code>y</code>，第三列是<code>group</code>，如果只是一组数据的话，在<code>group</code>列输入一个分组名称即可，多组的话对应输入多个分组名称即可。</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>数据上传完成后，需要选择绘制散点图形状（<a href=\"https://mp.weixin.qq.com/s?src=11&timestamp=1611026087&ver=2837&signature=yPe5ICH4hawX6qlTXFCg40LYw4uy11a3yOiwZuxuGQOvi8Hx2BcuLNXF3G50xlFxzqdxLTuk8iGF*2uS3ofQoggAfloxW-MwPCjX9coIvm7VNAY3v5kz*NG8afFfFgSN&new=1\">点击查看散点形状代码</a>）、大小、颜色及透明度，如果没有选择或输入相关的参数，那后续的绘图就会按照默认的参数进行。</p>\n<p>第二列下面一个边框主要选择的参数是下载的结果的格式和图片格式，默认的是数据格式是<code>Excel</code>表，默认的图片格式是<code>PDF</code>格式，图片的长和宽都是默认5cm，科研根据自己的需要调节长宽。</p>\n<p>右下角的框里面的参数主要和图片相关，如果<code>是否展示图例</code>选择否，则不会展示图例，如果选择的是默认参数<code>是</code>，则将图例展示在右边。X轴、Y轴及图片标题如果没有输入的话，则按照默认的<code>X</code>、<code>Y</code>和<code>Title</code>进行显示。</p>\n<p><strong>设置完所有参数后点击左侧的<code>点击提交</code>按钮，便能得到对应的结果</strong>。</p>\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><p>下图展示的是回归分析的结果，第一列<code>group</code>表示的是分组，每个分组有两行结果，第一行是<strong>截距</strong>，第二行是<strong>斜率</strong>；第三列表示的是截距和斜率对应的值，其他几列不用看，直接看最后一列<code>Pvalue</code>即可。下方这个表点击左侧的<code>下载结果</code>即可进行下载。</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<p>下图展示的是绘图结果。不同的颜色表示的是不同分组，示例数据 有三组，以此展示出来的颜色有三种。有一部分表示的是置信区间，也就是对应的回归方程的置信区间，原始数据中落在阴影部分的点越多，表明结果越好；左上角的公式与每个分组对应，颜色和散点图的颜色是一致的，其实也就是将上图中的斜率、截距及<code>Pvalue</code>展示在散点图中。下方这个表点击左侧的<code>下载图片</code>即可进行下载。</p>\n<img src=\"/2021/01/19/Tools4You%E6%95%99%E7%A8%8B3%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<p>注意：<strong>如果需要修改其他参数，请将参数修改好以后再次点击<code>点击提交</code>按钮，不用再次上传数据！！！</strong></p>\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#111;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#111;&#120;&#x6d;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n"},{"title":"Tools4You教程6：方差分析","abbrlink":"c7d1b27c","date":"2021-02-01T08:14:44.000Z","_content":"\n# 写在前面\n\n前两天在某个群里面，两个群友争论起来，给我的感受是**我们使用某个方法之前还是需要了解基本的概念和用法，<!-- more -->不能拿着就往自己的数据上套。**这也是我觉得我自己还需要学习很多东西的原因。\n\n# Anova教程\n\n- 数据格式：分组信息必须在第一列，名称不一定必须是“group”，只要保证分组信息在第一列即可，后面的表示的是重复，重复也不一定要写成“rep_”，写什么都行。\n  {% asset_img 2.png %}\n  如果数据有缺失值的话空出来就行，就像这样（此处感谢师弟提出的需求！）：\n  {% asset_img 3.png %}\n\n- 选择模块：打开网站http://shinyapp.top:3838/Tools4You/，选择”Anova”模块：\n\n  {% asset_img 1.png %}\n\n- 上传数据：目前只支持CSV格式的数据，初次使用可以下载示例数据用示例数据先熟悉熟悉流程。\n\n- 误差棒数据：Anova模块出图默认的是柱状图，柱状图通常需要加上误差棒， 误差棒通常使用的是均值±标准差来表示，也有使用均值±标准误来表示的。因此，我们提供了这两种选择（默认是标准差）：\n  {% asset_img 4.png %}.\n\n- 是否显示显著性：方差分析的结果通常是用字母来表示的，如果这个选项选择的是“否”，那就不会在柱子上标注显著性，默认是“是”：\n  {% asset_img 5.png %}\n\n- 添加散点：通常柱状图上是没有散点的，现在某些期刊上会在柱状图上添加上散点，这样可以明显地看出重复之间的重复性好不好，比误差棒更加直观，默认是不添加散点的，需要添加的话改成“是”即可：\n  {% asset_img 7.png %}\n\n  {% asset_img 6.png %}\n\n- 点击提交：设置完上述这些参数后，直接点击下方的“点击提交”按钮，稍等几秒钟，就能在右边弹出计算的结果和图片：\n  {% asset_img 8.png %}\n\n- 柱子顺序：R绘图会按照默认的顺序排序绘图，如果顺序不是自己想要的，按照下面的方法输入自己想要的顺序即可，<font color=red>必须用英文逗号分隔!!!</font>>\n  {% asset_img 12.png %}\n\n- 其他参数：\n\n  - 柱子宽度：默认的是0.6，如果出图的结果柱子太宽或太窄，可以滑动滑块调节这个参数：\n    {% asset_img 9.png %}\n  - 柱子颜色：默认的参照AAAS系列杂志的配送进行上色，自定义颜色的时候颜色的数量需要和柱子数量对应，但是如果只想设置成一种颜色，比如黑色，那输入一个“black”即可。\n  - 其他绘图参数：坐标轴、标题等直接输入就好：\n    {% asset_img 10.png %}\n  - 图片下载格式：默认的是PDF格式，因为PDF是矢量图，可以自由编辑，其他的几类图大多不可编辑，建议下载PDF格式图片，后续要细调啥的方便：\n    {% asset_img 11.png %}\n\n  将所有参数设置完成后再次点击“点击提交”按钮即可，然后下载结果表格和图片即可。\n\n\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n如果使用谷歌Chrome浏览器报错，请换其他的浏览器进行使用！！！\n\n<font color=red>如果遇到任何的报错，请与我们联系：</font>\n\n>>💌lixiang117423@foxmail.com\n>\n>>💌lixiang117423@gmail.com\n\n","source":"_posts/Tools4You教程6：方差分析.md","raw":"---\ntitle: Tools4You教程6：方差分析\ntags: Tools4You\ncategories: Tools4You\nabbrlink: c7d1b27c\ndate: 2021-02-01 16:14:44\n---\n\n# 写在前面\n\n前两天在某个群里面，两个群友争论起来，给我的感受是**我们使用某个方法之前还是需要了解基本的概念和用法，<!-- more -->不能拿着就往自己的数据上套。**这也是我觉得我自己还需要学习很多东西的原因。\n\n# Anova教程\n\n- 数据格式：分组信息必须在第一列，名称不一定必须是“group”，只要保证分组信息在第一列即可，后面的表示的是重复，重复也不一定要写成“rep_”，写什么都行。\n  {% asset_img 2.png %}\n  如果数据有缺失值的话空出来就行，就像这样（此处感谢师弟提出的需求！）：\n  {% asset_img 3.png %}\n\n- 选择模块：打开网站http://shinyapp.top:3838/Tools4You/，选择”Anova”模块：\n\n  {% asset_img 1.png %}\n\n- 上传数据：目前只支持CSV格式的数据，初次使用可以下载示例数据用示例数据先熟悉熟悉流程。\n\n- 误差棒数据：Anova模块出图默认的是柱状图，柱状图通常需要加上误差棒， 误差棒通常使用的是均值±标准差来表示，也有使用均值±标准误来表示的。因此，我们提供了这两种选择（默认是标准差）：\n  {% asset_img 4.png %}.\n\n- 是否显示显著性：方差分析的结果通常是用字母来表示的，如果这个选项选择的是“否”，那就不会在柱子上标注显著性，默认是“是”：\n  {% asset_img 5.png %}\n\n- 添加散点：通常柱状图上是没有散点的，现在某些期刊上会在柱状图上添加上散点，这样可以明显地看出重复之间的重复性好不好，比误差棒更加直观，默认是不添加散点的，需要添加的话改成“是”即可：\n  {% asset_img 7.png %}\n\n  {% asset_img 6.png %}\n\n- 点击提交：设置完上述这些参数后，直接点击下方的“点击提交”按钮，稍等几秒钟，就能在右边弹出计算的结果和图片：\n  {% asset_img 8.png %}\n\n- 柱子顺序：R绘图会按照默认的顺序排序绘图，如果顺序不是自己想要的，按照下面的方法输入自己想要的顺序即可，<font color=red>必须用英文逗号分隔!!!</font>>\n  {% asset_img 12.png %}\n\n- 其他参数：\n\n  - 柱子宽度：默认的是0.6，如果出图的结果柱子太宽或太窄，可以滑动滑块调节这个参数：\n    {% asset_img 9.png %}\n  - 柱子颜色：默认的参照AAAS系列杂志的配送进行上色，自定义颜色的时候颜色的数量需要和柱子数量对应，但是如果只想设置成一种颜色，比如黑色，那输入一个“black”即可。\n  - 其他绘图参数：坐标轴、标题等直接输入就好：\n    {% asset_img 10.png %}\n  - 图片下载格式：默认的是PDF格式，因为PDF是矢量图，可以自由编辑，其他的几类图大多不可编辑，建议下载PDF格式图片，后续要细调啥的方便：\n    {% asset_img 11.png %}\n\n  将所有参数设置完成后再次点击“点击提交”按钮即可，然后下载结果表格和图片即可。\n\n\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n如果使用谷歌Chrome浏览器报错，请换其他的浏览器进行使用！！！\n\n<font color=red>如果遇到任何的报错，请与我们联系：</font>\n\n>>💌lixiang117423@foxmail.com\n>\n>>💌lixiang117423@gmail.com\n\n","slug":"Tools4You教程6：方差分析","published":1,"updated":"2021-02-03T05:23:28.291Z","_id":"ckwbqwcjq0033r0g0deh15lnh","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>前两天在某个群里面，两个群友争论起来，给我的感受是<strong>我们使用某个方法之前还是需要了解基本的概念和用法，<span id=\"more\"></span>不能拿着就往自己的数据上套。</strong>这也是我觉得我自己还需要学习很多东西的原因。</p>\n<h1 id=\"Anova教程\"><a href=\"#Anova教程\" class=\"headerlink\" title=\"Anova教程\"></a>Anova教程</h1><ul>\n<li><p>数据格式：分组信息必须在第一列，名称不一定必须是“group”，只要保证分组信息在第一列即可，后面的表示的是重复，重复也不一定要写成“rep_”，写什么都行。</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/2.png\" class=\"\">\n<p>如果数据有缺失值的话空出来就行，就像这样（此处感谢师弟提出的需求！）：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/3.png\" class=\"\"></li>\n<li><p>选择模块：打开网站<a href=\"http://shinyapp.top:3838/Tools4You/%EF%BC%8C%E9%80%89%E6%8B%A9%E2%80%9DAnova%E2%80%9D%E6%A8%A1%E5%9D%97%EF%BC%9A\">http://shinyapp.top:3838/Tools4You/，选择”Anova”模块：</a></p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/1.png\" class=\"\"></li>\n<li><p>上传数据：目前只支持CSV格式的数据，初次使用可以下载示例数据用示例数据先熟悉熟悉流程。</p>\n</li>\n<li><p>误差棒数据：Anova模块出图默认的是柱状图，柱状图通常需要加上误差棒， 误差棒通常使用的是均值±标准差来表示，也有使用均值±标准误来表示的。因此，我们提供了这两种选择（默认是标准差）：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/4.png\" class=\"\">.</li>\n<li><p>是否显示显著性：方差分析的结果通常是用字母来表示的，如果这个选项选择的是“否”，那就不会在柱子上标注显著性，默认是“是”：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/5.png\" class=\"\"></li>\n<li><p>添加散点：通常柱状图上是没有散点的，现在某些期刊上会在柱状图上添加上散点，这样可以明显地看出重复之间的重复性好不好，比误差棒更加直观，默认是不添加散点的，需要添加的话改成“是”即可：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/7.png\" class=\"\">\n\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/6.png\" class=\"\"></li>\n<li><p>点击提交：设置完上述这些参数后，直接点击下方的“点击提交”按钮，稍等几秒钟，就能在右边弹出计算的结果和图片：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/8.png\" class=\"\"></li>\n<li><p>柱子顺序：R绘图会按照默认的顺序排序绘图，如果顺序不是自己想要的，按照下面的方法输入自己想要的顺序即可，<font color=red>必须用英文逗号分隔!!!</font>&gt;</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/12.png\" class=\"\"></li>\n<li><p>其他参数：</p>\n<ul>\n<li>柱子宽度：默认的是0.6，如果出图的结果柱子太宽或太窄，可以滑动滑块调节这个参数：<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/9.png\" class=\"\"></li>\n<li>柱子颜色：默认的参照AAAS系列杂志的配送进行上色，自定义颜色的时候颜色的数量需要和柱子数量对应，但是如果只想设置成一种颜色，比如黑色，那输入一个“black”即可。</li>\n<li>其他绘图参数：坐标轴、标题等直接输入就好：<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/10.png\" class=\"\"></li>\n<li>图片下载格式：默认的是PDF格式，因为PDF是矢量图，可以自由编辑，其他的几类图大多不可编辑，建议下载PDF格式图片，后续要细调啥的方便：<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/11.png\" class=\"\"></li>\n</ul>\n<p>将所有参数设置完成后再次点击“点击提交”按钮即可，然后下载结果表格和图片即可。</p>\n</li>\n</ul>\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><p>如果使用谷歌Chrome浏览器报错，请换其他的浏览器进行使用！！！</p>\n<p><font color=red>如果遇到任何的报错，请与我们联系：</font></p>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#102;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#102;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>前两天在某个群里面，两个群友争论起来，给我的感受是<strong>我们使用某个方法之前还是需要了解基本的概念和用法，","more":"不能拿着就往自己的数据上套。</strong>这也是我觉得我自己还需要学习很多东西的原因。</p>\n<h1 id=\"Anova教程\"><a href=\"#Anova教程\" class=\"headerlink\" title=\"Anova教程\"></a>Anova教程</h1><ul>\n<li><p>数据格式：分组信息必须在第一列，名称不一定必须是“group”，只要保证分组信息在第一列即可，后面的表示的是重复，重复也不一定要写成“rep_”，写什么都行。</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/2.png\" class=\"\">\n<p>如果数据有缺失值的话空出来就行，就像这样（此处感谢师弟提出的需求！）：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/3.png\" class=\"\"></li>\n<li><p>选择模块：打开网站<a href=\"http://shinyapp.top:3838/Tools4You/%EF%BC%8C%E9%80%89%E6%8B%A9%E2%80%9DAnova%E2%80%9D%E6%A8%A1%E5%9D%97%EF%BC%9A\">http://shinyapp.top:3838/Tools4You/，选择”Anova”模块：</a></p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/1.png\" class=\"\"></li>\n<li><p>上传数据：目前只支持CSV格式的数据，初次使用可以下载示例数据用示例数据先熟悉熟悉流程。</p>\n</li>\n<li><p>误差棒数据：Anova模块出图默认的是柱状图，柱状图通常需要加上误差棒， 误差棒通常使用的是均值±标准差来表示，也有使用均值±标准误来表示的。因此，我们提供了这两种选择（默认是标准差）：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/4.png\" class=\"\">.</li>\n<li><p>是否显示显著性：方差分析的结果通常是用字母来表示的，如果这个选项选择的是“否”，那就不会在柱子上标注显著性，默认是“是”：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/5.png\" class=\"\"></li>\n<li><p>添加散点：通常柱状图上是没有散点的，现在某些期刊上会在柱状图上添加上散点，这样可以明显地看出重复之间的重复性好不好，比误差棒更加直观，默认是不添加散点的，需要添加的话改成“是”即可：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/7.png\" class=\"\">\n\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/6.png\" class=\"\"></li>\n<li><p>点击提交：设置完上述这些参数后，直接点击下方的“点击提交”按钮，稍等几秒钟，就能在右边弹出计算的结果和图片：</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/8.png\" class=\"\"></li>\n<li><p>柱子顺序：R绘图会按照默认的顺序排序绘图，如果顺序不是自己想要的，按照下面的方法输入自己想要的顺序即可，<font color=red>必须用英文逗号分隔!!!</font>&gt;</p>\n<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/12.png\" class=\"\"></li>\n<li><p>其他参数：</p>\n<ul>\n<li>柱子宽度：默认的是0.6，如果出图的结果柱子太宽或太窄，可以滑动滑块调节这个参数：<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/9.png\" class=\"\"></li>\n<li>柱子颜色：默认的参照AAAS系列杂志的配送进行上色，自定义颜色的时候颜色的数量需要和柱子数量对应，但是如果只想设置成一种颜色，比如黑色，那输入一个“black”即可。</li>\n<li>其他绘图参数：坐标轴、标题等直接输入就好：<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/10.png\" class=\"\"></li>\n<li>图片下载格式：默认的是PDF格式，因为PDF是矢量图，可以自由编辑，其他的几类图大多不可编辑，建议下载PDF格式图片，后续要细调啥的方便：<img src=\"/2021/02/01/Tools4You%E6%95%99%E7%A8%8B6%EF%BC%9A%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/11.png\" class=\"\"></li>\n</ul>\n<p>将所有参数设置完成后再次点击“点击提交”按钮即可，然后下载结果表格和图片即可。</p>\n</li>\n</ul>\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><p>如果使用谷歌Chrome浏览器报错，请换其他的浏览器进行使用！！！</p>\n<p><font color=red>如果遇到任何的报错，请与我们联系：</font></p>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#102;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#102;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#x69;&#97;&#110;&#x67;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n</blockquote>"},{"title":"UniProt数据库爬虫获取相关信息","abbrlink":"41af5d00","date":"2021-04-18T14:02:11.000Z","_content":"\n最近在分析转录组，基因组是自己组装的，好多基因注释不到KEGG和GO这两个数据库，就索性先把基因蛋白blast到SwissProt数据库，然后得到比对的蛋白的ID，再经过筛选后再去看蛋白相关的GO term。但是，这么多基因我也不可能一个一个查啊，那就Python爬虫吧。\n\n<!-- more -->\n\n```python\nimport os\nimport random\nimport openpyxl\nimport csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\nos.chdir('C:/Users/Administrator/Desktop')\n\nwith open('temp.txt','r') as f:\n    for line in f:\n        acuce_gene_id = line.split('\\t')[1].split('.')[0]\n        acuce_prot_id = line.split('\\t')[1]\n        match_uniprot_id = line.split('\\t')[2]\n        uniprot_link = 'https://www.uniprot.org/uniprot/' + match_uniprot_id.split('.')[0]\n\n        #print(acuce_gene_id)\n        #print(acuce_prot_id)\n        #print(match_uniprot_id)\n        #print(uniprot_link)\n        #print('----------------------------------------------------')\n\n        res = requests.get(uniprot_link)\n\n        soup = BeautifulSoup(res.text,'html.parser')\n\n        organism = soup.find('div',id = 'content-organism', class_ = 'entry-overview-content').get_text()\n        gene = soup.find('div',id = 'content-gene', class_ = 'entry-overview-content').get_text()\n        protein = soup.find('div',id = 'content-protein', class_ = 'entry-overview-content').get_text()\n        res_temp = {'Q9UUH7':[organism,gene,protein]}\n\n        function = soup.find('div', class_ = 'annotation').find('span').get_text().replace('By similarity','')\n\n        go_mol = soup.find('ul', class_ = 'noNumbering molecular_function') \n        if str(type(go_mol)) != \"<class 'NoneType'>\":\n            for i in go_mol.find_all('a'):\n                link = i['href']\n                link_split = link.split('/')\n                go_item_id = link_split[len(link_split)-1]\n                if go_item_id.split(':')[0] != 'GO':\n                    continue\n                else:\n                    go_item = i.get_text()\n\n                    res_excel = openpyxl.Workbook()\n                    sheet = res_excel.active\n                    sheet.title = '爬虫结果'\n                    col_name = ['月亮谷基因编号','月亮谷转录本编号','匹配的UniProt编号','蛋白名称','物种','基因','功能','GO ID','GO Description','Link']\n                    sheet.append(col_name)\n                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item_id,link]\n                    #print(res_new)\n                    sheet.append(res_new)\n                    file_name = os.getcwd() + '/results/' + 'GO_Biological_process_' + acuce_prot_id + '_' + match_uniprot_id + '_' +go_item_id.replace(':','_') + '.xlsx'\n                    res_excel.save(file_name)\n\n        go_bio = soup.find('ul', class_ = 'noNumbering biological_process') \n        if str(type(go_bio)) != \"<class 'NoneType'>\":\n            for i in go_bio.find_all('li'):\n                link = i.find('a')['href']\n                link_split = link.split('/')\n                go_item_id = link_split[len(link_split)-1]\n                \n                if go_item_id.split(':')[0] != 'GO':\n                    continue\n                else:\n                    go_item = i.find('a').get_text()\n\n                    res_excel = openpyxl.Workbook()\n                    sheet = res_excel.active\n                    sheet.title = '爬虫结果'\n                    col_name = ['月亮谷基因编号','月亮谷转录本编号','匹配的UniProt编号','蛋白名称','物种','基因','功能','GO ID','GO Description','Link']\n                    sheet.append(col_name)\n                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item,link]\n                    #print(res_new)\n                    sheet.append(res_new)\n                    file_name = os.getcwd() + '/results/' + 'GO_Biological_process_' + acuce_prot_id + '_' + match_uniprot_id + '_' +go_item_id.replace(':','_') + '.xlsx'\n                    res_excel.save(file_name)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/UniProt数据库爬虫获取相关信息.md","raw":"---\ntitle: UniProt数据库爬虫获取相关信息\ntags: Python\ncategories: Python\nabbrlink: 41af5d00\ndate: 2021-04-18 22:02:11\n---\n\n最近在分析转录组，基因组是自己组装的，好多基因注释不到KEGG和GO这两个数据库，就索性先把基因蛋白blast到SwissProt数据库，然后得到比对的蛋白的ID，再经过筛选后再去看蛋白相关的GO term。但是，这么多基因我也不可能一个一个查啊，那就Python爬虫吧。\n\n<!-- more -->\n\n```python\nimport os\nimport random\nimport openpyxl\nimport csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\nos.chdir('C:/Users/Administrator/Desktop')\n\nwith open('temp.txt','r') as f:\n    for line in f:\n        acuce_gene_id = line.split('\\t')[1].split('.')[0]\n        acuce_prot_id = line.split('\\t')[1]\n        match_uniprot_id = line.split('\\t')[2]\n        uniprot_link = 'https://www.uniprot.org/uniprot/' + match_uniprot_id.split('.')[0]\n\n        #print(acuce_gene_id)\n        #print(acuce_prot_id)\n        #print(match_uniprot_id)\n        #print(uniprot_link)\n        #print('----------------------------------------------------')\n\n        res = requests.get(uniprot_link)\n\n        soup = BeautifulSoup(res.text,'html.parser')\n\n        organism = soup.find('div',id = 'content-organism', class_ = 'entry-overview-content').get_text()\n        gene = soup.find('div',id = 'content-gene', class_ = 'entry-overview-content').get_text()\n        protein = soup.find('div',id = 'content-protein', class_ = 'entry-overview-content').get_text()\n        res_temp = {'Q9UUH7':[organism,gene,protein]}\n\n        function = soup.find('div', class_ = 'annotation').find('span').get_text().replace('By similarity','')\n\n        go_mol = soup.find('ul', class_ = 'noNumbering molecular_function') \n        if str(type(go_mol)) != \"<class 'NoneType'>\":\n            for i in go_mol.find_all('a'):\n                link = i['href']\n                link_split = link.split('/')\n                go_item_id = link_split[len(link_split)-1]\n                if go_item_id.split(':')[0] != 'GO':\n                    continue\n                else:\n                    go_item = i.get_text()\n\n                    res_excel = openpyxl.Workbook()\n                    sheet = res_excel.active\n                    sheet.title = '爬虫结果'\n                    col_name = ['月亮谷基因编号','月亮谷转录本编号','匹配的UniProt编号','蛋白名称','物种','基因','功能','GO ID','GO Description','Link']\n                    sheet.append(col_name)\n                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item_id,link]\n                    #print(res_new)\n                    sheet.append(res_new)\n                    file_name = os.getcwd() + '/results/' + 'GO_Biological_process_' + acuce_prot_id + '_' + match_uniprot_id + '_' +go_item_id.replace(':','_') + '.xlsx'\n                    res_excel.save(file_name)\n\n        go_bio = soup.find('ul', class_ = 'noNumbering biological_process') \n        if str(type(go_bio)) != \"<class 'NoneType'>\":\n            for i in go_bio.find_all('li'):\n                link = i.find('a')['href']\n                link_split = link.split('/')\n                go_item_id = link_split[len(link_split)-1]\n                \n                if go_item_id.split(':')[0] != 'GO':\n                    continue\n                else:\n                    go_item = i.find('a').get_text()\n\n                    res_excel = openpyxl.Workbook()\n                    sheet = res_excel.active\n                    sheet.title = '爬虫结果'\n                    col_name = ['月亮谷基因编号','月亮谷转录本编号','匹配的UniProt编号','蛋白名称','物种','基因','功能','GO ID','GO Description','Link']\n                    sheet.append(col_name)\n                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item,link]\n                    #print(res_new)\n                    sheet.append(res_new)\n                    file_name = os.getcwd() + '/results/' + 'GO_Biological_process_' + acuce_prot_id + '_' + match_uniprot_id + '_' +go_item_id.replace(':','_') + '.xlsx'\n                    res_excel.save(file_name)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"UniProt数据库爬虫获取相关信息","published":1,"updated":"2021-04-19T04:56:15.688Z","_id":"ckwbqwcjr0035r0g05fbq8ydw","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近在分析转录组，基因组是自己组装的，好多基因注释不到KEGG和GO这两个数据库，就索性先把基因蛋白blast到SwissProt数据库，然后得到比对的蛋白的ID，再经过筛选后再去看蛋白相关的GO term。但是，这么多基因我也不可能一个一个查啊，那就Python爬虫吧。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> openpyxl</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;temp.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">        acuce_gene_id = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        acuce_prot_id = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">        match_uniprot_id = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">        uniprot_link = <span class=\"string\">&#x27;https://www.uniprot.org/uniprot/&#x27;</span> + match_uniprot_id.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#print(acuce_gene_id)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(acuce_prot_id)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(match_uniprot_id)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(uniprot_link)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(&#x27;----------------------------------------------------&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        res = requests.get(uniprot_link)</span><br><span class=\"line\"></span><br><span class=\"line\">        soup = BeautifulSoup(res.text,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        organism = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-organism&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        gene = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-gene&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        protein = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-protein&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        res_temp = &#123;<span class=\"string\">&#x27;Q9UUH7&#x27;</span>:[organism,gene,protein]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function = soup.find(<span class=\"string\">&#x27;div&#x27;</span>, class_ = <span class=\"string\">&#x27;annotation&#x27;</span>).find(<span class=\"string\">&#x27;span&#x27;</span>).get_text().replace(<span class=\"string\">&#x27;By similarity&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        go_mol = soup.find(<span class=\"string\">&#x27;ul&#x27;</span>, class_ = <span class=\"string\">&#x27;noNumbering molecular_function&#x27;</span>) </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(<span class=\"built_in\">type</span>(go_mol)) != <span class=\"string\">&quot;&lt;class &#x27;NoneType&#x27;&gt;&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> go_mol.find_all(<span class=\"string\">&#x27;a&#x27;</span>):</span><br><span class=\"line\">                link = i[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">                link_split = link.split(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">                go_item_id = link_split[<span class=\"built_in\">len</span>(link_split)-<span class=\"number\">1</span>]</span><br><span class=\"line\">                <span class=\"keyword\">if</span> go_item_id.split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;GO&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    go_item = i.get_text()</span><br><span class=\"line\"></span><br><span class=\"line\">                    res_excel = openpyxl.Workbook()</span><br><span class=\"line\">                    sheet = res_excel.active</span><br><span class=\"line\">                    sheet.title = <span class=\"string\">&#x27;爬虫结果&#x27;</span></span><br><span class=\"line\">                    col_name = [<span class=\"string\">&#x27;月亮谷基因编号&#x27;</span>,<span class=\"string\">&#x27;月亮谷转录本编号&#x27;</span>,<span class=\"string\">&#x27;匹配的UniProt编号&#x27;</span>,<span class=\"string\">&#x27;蛋白名称&#x27;</span>,<span class=\"string\">&#x27;物种&#x27;</span>,<span class=\"string\">&#x27;基因&#x27;</span>,<span class=\"string\">&#x27;功能&#x27;</span>,<span class=\"string\">&#x27;GO ID&#x27;</span>,<span class=\"string\">&#x27;GO Description&#x27;</span>,<span class=\"string\">&#x27;Link&#x27;</span>]</span><br><span class=\"line\">                    sheet.append(col_name)</span><br><span class=\"line\">                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item_id,link]</span><br><span class=\"line\">                    <span class=\"comment\">#print(res_new)</span></span><br><span class=\"line\">                    sheet.append(res_new)</span><br><span class=\"line\">                    file_name = os.getcwd() + <span class=\"string\">&#x27;/results/&#x27;</span> + <span class=\"string\">&#x27;GO_Biological_process_&#x27;</span> + acuce_prot_id + <span class=\"string\">&#x27;_&#x27;</span> + match_uniprot_id + <span class=\"string\">&#x27;_&#x27;</span> +go_item_id.replace(<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"string\">&#x27;_&#x27;</span>) + <span class=\"string\">&#x27;.xlsx&#x27;</span></span><br><span class=\"line\">                    res_excel.save(file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">        go_bio = soup.find(<span class=\"string\">&#x27;ul&#x27;</span>, class_ = <span class=\"string\">&#x27;noNumbering biological_process&#x27;</span>) </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(<span class=\"built_in\">type</span>(go_bio)) != <span class=\"string\">&quot;&lt;class &#x27;NoneType&#x27;&gt;&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> go_bio.find_all(<span class=\"string\">&#x27;li&#x27;</span>):</span><br><span class=\"line\">                link = i.find(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">                link_split = link.split(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">                go_item_id = link_split[<span class=\"built_in\">len</span>(link_split)-<span class=\"number\">1</span>]</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span> go_item_id.split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;GO&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    go_item = i.find(<span class=\"string\">&#x27;a&#x27;</span>).get_text()</span><br><span class=\"line\"></span><br><span class=\"line\">                    res_excel = openpyxl.Workbook()</span><br><span class=\"line\">                    sheet = res_excel.active</span><br><span class=\"line\">                    sheet.title = <span class=\"string\">&#x27;爬虫结果&#x27;</span></span><br><span class=\"line\">                    col_name = [<span class=\"string\">&#x27;月亮谷基因编号&#x27;</span>,<span class=\"string\">&#x27;月亮谷转录本编号&#x27;</span>,<span class=\"string\">&#x27;匹配的UniProt编号&#x27;</span>,<span class=\"string\">&#x27;蛋白名称&#x27;</span>,<span class=\"string\">&#x27;物种&#x27;</span>,<span class=\"string\">&#x27;基因&#x27;</span>,<span class=\"string\">&#x27;功能&#x27;</span>,<span class=\"string\">&#x27;GO ID&#x27;</span>,<span class=\"string\">&#x27;GO Description&#x27;</span>,<span class=\"string\">&#x27;Link&#x27;</span>]</span><br><span class=\"line\">                    sheet.append(col_name)</span><br><span class=\"line\">                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item,link]</span><br><span class=\"line\">                    <span class=\"comment\">#print(res_new)</span></span><br><span class=\"line\">                    sheet.append(res_new)</span><br><span class=\"line\">                    file_name = os.getcwd() + <span class=\"string\">&#x27;/results/&#x27;</span> + <span class=\"string\">&#x27;GO_Biological_process_&#x27;</span> + acuce_prot_id + <span class=\"string\">&#x27;_&#x27;</span> + match_uniprot_id + <span class=\"string\">&#x27;_&#x27;</span> +go_item_id.replace(<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"string\">&#x27;_&#x27;</span>) + <span class=\"string\">&#x27;.xlsx&#x27;</span></span><br><span class=\"line\">                    res_excel.save(file_name)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;\">&#x6c;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>最近在分析转录组，基因组是自己组装的，好多基因注释不到KEGG和GO这两个数据库，就索性先把基因蛋白blast到SwissProt数据库，然后得到比对的蛋白的ID，再经过筛选后再去看蛋白相关的GO term。但是，这么多基因我也不可能一个一个查啊，那就Python爬虫吧。</p>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> openpyxl</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;temp.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">        acuce_gene_id = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">        acuce_prot_id = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">        match_uniprot_id = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">        uniprot_link = <span class=\"string\">&#x27;https://www.uniprot.org/uniprot/&#x27;</span> + match_uniprot_id.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#print(acuce_gene_id)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(acuce_prot_id)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(match_uniprot_id)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(uniprot_link)</span></span><br><span class=\"line\">        <span class=\"comment\">#print(&#x27;----------------------------------------------------&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        res = requests.get(uniprot_link)</span><br><span class=\"line\"></span><br><span class=\"line\">        soup = BeautifulSoup(res.text,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        organism = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-organism&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        gene = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-gene&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        protein = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-protein&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        res_temp = &#123;<span class=\"string\">&#x27;Q9UUH7&#x27;</span>:[organism,gene,protein]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function = soup.find(<span class=\"string\">&#x27;div&#x27;</span>, class_ = <span class=\"string\">&#x27;annotation&#x27;</span>).find(<span class=\"string\">&#x27;span&#x27;</span>).get_text().replace(<span class=\"string\">&#x27;By similarity&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        go_mol = soup.find(<span class=\"string\">&#x27;ul&#x27;</span>, class_ = <span class=\"string\">&#x27;noNumbering molecular_function&#x27;</span>) </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(<span class=\"built_in\">type</span>(go_mol)) != <span class=\"string\">&quot;&lt;class &#x27;NoneType&#x27;&gt;&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> go_mol.find_all(<span class=\"string\">&#x27;a&#x27;</span>):</span><br><span class=\"line\">                link = i[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">                link_split = link.split(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">                go_item_id = link_split[<span class=\"built_in\">len</span>(link_split)-<span class=\"number\">1</span>]</span><br><span class=\"line\">                <span class=\"keyword\">if</span> go_item_id.split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;GO&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    go_item = i.get_text()</span><br><span class=\"line\"></span><br><span class=\"line\">                    res_excel = openpyxl.Workbook()</span><br><span class=\"line\">                    sheet = res_excel.active</span><br><span class=\"line\">                    sheet.title = <span class=\"string\">&#x27;爬虫结果&#x27;</span></span><br><span class=\"line\">                    col_name = [<span class=\"string\">&#x27;月亮谷基因编号&#x27;</span>,<span class=\"string\">&#x27;月亮谷转录本编号&#x27;</span>,<span class=\"string\">&#x27;匹配的UniProt编号&#x27;</span>,<span class=\"string\">&#x27;蛋白名称&#x27;</span>,<span class=\"string\">&#x27;物种&#x27;</span>,<span class=\"string\">&#x27;基因&#x27;</span>,<span class=\"string\">&#x27;功能&#x27;</span>,<span class=\"string\">&#x27;GO ID&#x27;</span>,<span class=\"string\">&#x27;GO Description&#x27;</span>,<span class=\"string\">&#x27;Link&#x27;</span>]</span><br><span class=\"line\">                    sheet.append(col_name)</span><br><span class=\"line\">                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item_id,link]</span><br><span class=\"line\">                    <span class=\"comment\">#print(res_new)</span></span><br><span class=\"line\">                    sheet.append(res_new)</span><br><span class=\"line\">                    file_name = os.getcwd() + <span class=\"string\">&#x27;/results/&#x27;</span> + <span class=\"string\">&#x27;GO_Biological_process_&#x27;</span> + acuce_prot_id + <span class=\"string\">&#x27;_&#x27;</span> + match_uniprot_id + <span class=\"string\">&#x27;_&#x27;</span> +go_item_id.replace(<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"string\">&#x27;_&#x27;</span>) + <span class=\"string\">&#x27;.xlsx&#x27;</span></span><br><span class=\"line\">                    res_excel.save(file_name)</span><br><span class=\"line\"></span><br><span class=\"line\">        go_bio = soup.find(<span class=\"string\">&#x27;ul&#x27;</span>, class_ = <span class=\"string\">&#x27;noNumbering biological_process&#x27;</span>) </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(<span class=\"built_in\">type</span>(go_bio)) != <span class=\"string\">&quot;&lt;class &#x27;NoneType&#x27;&gt;&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> go_bio.find_all(<span class=\"string\">&#x27;li&#x27;</span>):</span><br><span class=\"line\">                link = i.find(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"string\">&#x27;href&#x27;</span>]</span><br><span class=\"line\">                link_split = link.split(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">                go_item_id = link_split[<span class=\"built_in\">len</span>(link_split)-<span class=\"number\">1</span>]</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span> go_item_id.split(<span class=\"string\">&#x27;:&#x27;</span>)[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;GO&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    go_item = i.find(<span class=\"string\">&#x27;a&#x27;</span>).get_text()</span><br><span class=\"line\"></span><br><span class=\"line\">                    res_excel = openpyxl.Workbook()</span><br><span class=\"line\">                    sheet = res_excel.active</span><br><span class=\"line\">                    sheet.title = <span class=\"string\">&#x27;爬虫结果&#x27;</span></span><br><span class=\"line\">                    col_name = [<span class=\"string\">&#x27;月亮谷基因编号&#x27;</span>,<span class=\"string\">&#x27;月亮谷转录本编号&#x27;</span>,<span class=\"string\">&#x27;匹配的UniProt编号&#x27;</span>,<span class=\"string\">&#x27;蛋白名称&#x27;</span>,<span class=\"string\">&#x27;物种&#x27;</span>,<span class=\"string\">&#x27;基因&#x27;</span>,<span class=\"string\">&#x27;功能&#x27;</span>,<span class=\"string\">&#x27;GO ID&#x27;</span>,<span class=\"string\">&#x27;GO Description&#x27;</span>,<span class=\"string\">&#x27;Link&#x27;</span>]</span><br><span class=\"line\">                    sheet.append(col_name)</span><br><span class=\"line\">                    res_new = [acuce_gene_id,acuce_prot_id,match_uniprot_id,protein,organism,gene,function,go_item_id,go_item,link]</span><br><span class=\"line\">                    <span class=\"comment\">#print(res_new)</span></span><br><span class=\"line\">                    sheet.append(res_new)</span><br><span class=\"line\">                    file_name = os.getcwd() + <span class=\"string\">&#x27;/results/&#x27;</span> + <span class=\"string\">&#x27;GO_Biological_process_&#x27;</span> + acuce_prot_id + <span class=\"string\">&#x27;_&#x27;</span> + match_uniprot_id + <span class=\"string\">&#x27;_&#x27;</span> +go_item_id.replace(<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"string\">&#x27;_&#x27;</span>) + <span class=\"string\">&#x27;.xlsx&#x27;</span></span><br><span class=\"line\">                    res_excel.save(file_name)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;\">&#x6c;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#51;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#x69;&#120;&#x69;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"Tools4You教程5：PCoA","abbrlink":"fac8e7d1","date":"2021-01-29T11:44:38.000Z","_content":"\n# 关于PCoA\n\nPCoA（Principal Coordinates Analysis，主坐标分析）和PCA（[点击查看PCA教程](http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)）一样是常见的数据降维方法，<!-- more -->常用在生态数据中。\n\n# 使用方法\n\nPCoA模块的使用方法和PCA的一样，请参考PCA教程（[点击查看PCA教程](http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)）。\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)\n\n---\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com\n\n","source":"_posts/Tools4You教程5：PCoA.md","raw":"---\ntitle: Tools4You教程5：PCoA\ntags: Tools4You\ncategories: Tools4You\nabbrlink: fac8e7d1\ndate: 2021-01-29 19:44:38\n---\n\n# 关于PCoA\n\nPCoA（Principal Coordinates Analysis，主坐标分析）和PCA（[点击查看PCA教程](http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)）一样是常见的数据降维方法，<!-- more -->常用在生态数据中。\n\n# 使用方法\n\nPCoA模块的使用方法和PCA的一样，请参考PCA教程（[点击查看PCA教程](http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)）。\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)\n\n---\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com\n\n","slug":"Tools4You教程5：PCoA","published":1,"updated":"2021-02-03T05:22:10.945Z","_id":"ckwbqwcjr0037r0g0eop7e596","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"关于PCoA\"><a href=\"#关于PCoA\" class=\"headerlink\" title=\"关于PCoA\"></a>关于PCoA</h1><p>PCoA（Principal Coordinates Analysis，主坐标分析）和PCA（<a href=\"http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/\">点击查看PCA教程</a>）一样是常见的数据降维方法，<span id=\"more\"></span>常用在生态数据中。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><p>PCoA模块的使用方法和PCA的一样，请参考PCA教程（<a href=\"http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/\">点击查看PCA教程</a>）。</p>\n<h1 id=\"Tools4You教程合集http-www-blog4xiang-world-2021-01-28-Tools4You-E6-95-99-E7-A8-8B4-EF-BC-9APCA\"><a href=\"#Tools4You教程合集http-www-blog4xiang-world-2021-01-28-Tools4You-E6-95-99-E7-A8-8B4-EF-BC-9APCA\" class=\"headerlink\" title=\"Tools4You教程合集http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a><a href=\"http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/\">http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/</a>)</h1><hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"关于PCoA\"><a href=\"#关于PCoA\" class=\"headerlink\" title=\"关于PCoA\"></a>关于PCoA</h1><p>PCoA（Principal Coordinates Analysis，主坐标分析）和PCA（<a href=\"http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/\">点击查看PCA教程</a>）一样是常见的数据降维方法，","more":"常用在生态数据中。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><p>PCoA模块的使用方法和PCA的一样，请参考PCA教程（<a href=\"http://121.4.162.87/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/\">点击查看PCA教程</a>）。</p>\n<h1 id=\"Tools4You教程合集http-www-blog4xiang-world-2021-01-28-Tools4You-E6-95-99-E7-A8-8B4-EF-BC-9APCA\"><a href=\"#Tools4You教程合集http-www-blog4xiang-world-2021-01-28-Tools4You-E6-95-99-E7-A8-8B4-EF-BC-9APCA\" class=\"headerlink\" title=\"Tools4You教程合集http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/)\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a><a href=\"http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/\">http://www.blog4xiang.world/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/</a>)</h1><hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#x34;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n</blockquote>"},{"title":"Tools4You教程4：PCA","abbrlink":"b211c402","date":"2021-01-28T11:29:42.000Z","_content":"\n# PCA简介\n\nPCA（Principal Component Analysis，主成分分析）是常见的降维方法，在生命科学中应用广泛。<!-- more -->关于PCA的原理，推荐观看博主Josh Starmer博士的视频（[点击打开B站视频链接](https://www.bilibili.com/video/BV1fD4y1X7fw)，手机端貌似无法打开链接），真的是深入浅出，极其通透。\n\n# 几点注意事项\n\n- 目前唯一的网址为：http://shinyapp.top:3838/Tools4You/\n- `Tools4You`所有模块目前只支持输入`.csv`格式，在Excel中将数据另存为`.csv`格式即可：\n  {% asset_img 0.png %}\n- 每个分析模块都有对应的示例数据，请按照示例数据的格式整理自己的格式。\n- 如果界面和自己电脑屏幕不适配，请适当放大缩小浏览器的显示比例，开发调试用的是27寸屏幕。\n\n# 选择PCA模块\n\n打开网站，选择对应的PCA模块即可：\n\n{% asset_img 1.png %}\n\n# 数据格式\n\nPCA分析输入数据为“长数据“：\n\n{% asset_img 2.png %}\n\n每一行是一个样品，每一列是一个观测指标，最后的“group”和“site\"是样品的分组信息，必须有分组信息，这样后面画图才能进行分组显示，分组信息可以有多个，然后画图的时候不同的分组信息控制图形的颜色和形状等。\n\n# 分组信息\n\n{% asset_img 3.png %}\n\n在数据表中有多少个分组信息，就需要在这地方标明，比如我的数据中有两个分组信息：group和site，分别是样品分组信息和样品的位点信息。我就需要在“分组名称”这个输入`group,site`，后面绘图才能进行识别。\n\n# 多元方差分析\n\n如果PCA结果足够好的话，可以直接肉眼观察分组之间是否分开，但是如果分组之间是”若即若离“的，那就不好说到底有没有分开了。这时候就需要多元方差分析了，通常是PERMANOVA。\n\n{% asset_img 4.png %}\n\n默认是进行PERMANOVA分析的。\n\n下方是图片格式，支持多种图形格式，默认的是`PDF`格式。\n\n# 绘图样式\n\n绘图样式有三种，最常见的是置信椭圆样式。\n\n{% asset_img 5.png %}\n\n三种样式对应的图形如下：\n\n{% asset_img 6.png %}\n\n# 展示主成分\n\nPCA分析中主成分的数量和变量的数量是一样的，比如我的数据有4个变量，那就会有4个主成分。\n\n通常只展示前三个主成分，三个主成分两两组合，共有4种组合。\n\n只需要在这个位置输入想展示的主成分即可，注意PC这两个字母需要大写，另外是英文逗号分隔。\n\n{% asset_img 7.png %}\n\n# 散点图相关设置\n\n{% asset_img 8.png %}\n\n剩下的参数主要和散点图的点相关：\n\n- ”点的大小“这个参数就是说散点图中点的大小；\n- ”点的透明度“是指散点的透明度，默认是1；\n- ”控制点的形状的分组名称“是用数据中的哪个分组信息来控制点的形状，比如”group“；\n- ”输入点的形状“，用户直接指定点的形状，但是要和上方分组的数量相同，比如我的”group“有三个，那我的这个地方只能输入三个值；\n- 下方两个参数和上方两个类似。\n\n# 点击查看\n\n设置完上述这些参数后，便可以点击左侧的”点击提交“完成分析，如果没有报错，应该得到这样的结果：\n\n{% asset_img 9.png %}\n\n如果没有报错，那就再输入最右侧的参数。输入完成后需要再次点击”点击提交“。\n\n{% asset_img 10.png %}\n\n# 下载结果\n\n完成所有参数后，点击左下角的下载按钮即可。\n\n{% asset_img 11.png %}\n\n可以根据”PCA碎石图“的结果来决定散点图展示哪几个主成分。\n\n下载完图片后对长和宽不满意的话，可以重新设置长和宽，然后点击”点击提交“，最后再下载数据。\n\n# 示例结果\n\n示例数据得到的结果（点的颜色和形状分别用不同的分组控制）如下：\n\n{% asset_img 12.png %}\n\n详细参数如下：\n\n{% asset_img 13.png %}\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n---\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com\n\n","source":"_posts/Tools4You教程4：PCA.md","raw":"---\ntitle: Tools4You教程4：PCA\ntags: Tools4You\ncategories: Tools4You\nabbrlink: b211c402\ndate: 2021-01-28 19:29:42\n---\n\n# PCA简介\n\nPCA（Principal Component Analysis，主成分分析）是常见的降维方法，在生命科学中应用广泛。<!-- more -->关于PCA的原理，推荐观看博主Josh Starmer博士的视频（[点击打开B站视频链接](https://www.bilibili.com/video/BV1fD4y1X7fw)，手机端貌似无法打开链接），真的是深入浅出，极其通透。\n\n# 几点注意事项\n\n- 目前唯一的网址为：http://shinyapp.top:3838/Tools4You/\n- `Tools4You`所有模块目前只支持输入`.csv`格式，在Excel中将数据另存为`.csv`格式即可：\n  {% asset_img 0.png %}\n- 每个分析模块都有对应的示例数据，请按照示例数据的格式整理自己的格式。\n- 如果界面和自己电脑屏幕不适配，请适当放大缩小浏览器的显示比例，开发调试用的是27寸屏幕。\n\n# 选择PCA模块\n\n打开网站，选择对应的PCA模块即可：\n\n{% asset_img 1.png %}\n\n# 数据格式\n\nPCA分析输入数据为“长数据“：\n\n{% asset_img 2.png %}\n\n每一行是一个样品，每一列是一个观测指标，最后的“group”和“site\"是样品的分组信息，必须有分组信息，这样后面画图才能进行分组显示，分组信息可以有多个，然后画图的时候不同的分组信息控制图形的颜色和形状等。\n\n# 分组信息\n\n{% asset_img 3.png %}\n\n在数据表中有多少个分组信息，就需要在这地方标明，比如我的数据中有两个分组信息：group和site，分别是样品分组信息和样品的位点信息。我就需要在“分组名称”这个输入`group,site`，后面绘图才能进行识别。\n\n# 多元方差分析\n\n如果PCA结果足够好的话，可以直接肉眼观察分组之间是否分开，但是如果分组之间是”若即若离“的，那就不好说到底有没有分开了。这时候就需要多元方差分析了，通常是PERMANOVA。\n\n{% asset_img 4.png %}\n\n默认是进行PERMANOVA分析的。\n\n下方是图片格式，支持多种图形格式，默认的是`PDF`格式。\n\n# 绘图样式\n\n绘图样式有三种，最常见的是置信椭圆样式。\n\n{% asset_img 5.png %}\n\n三种样式对应的图形如下：\n\n{% asset_img 6.png %}\n\n# 展示主成分\n\nPCA分析中主成分的数量和变量的数量是一样的，比如我的数据有4个变量，那就会有4个主成分。\n\n通常只展示前三个主成分，三个主成分两两组合，共有4种组合。\n\n只需要在这个位置输入想展示的主成分即可，注意PC这两个字母需要大写，另外是英文逗号分隔。\n\n{% asset_img 7.png %}\n\n# 散点图相关设置\n\n{% asset_img 8.png %}\n\n剩下的参数主要和散点图的点相关：\n\n- ”点的大小“这个参数就是说散点图中点的大小；\n- ”点的透明度“是指散点的透明度，默认是1；\n- ”控制点的形状的分组名称“是用数据中的哪个分组信息来控制点的形状，比如”group“；\n- ”输入点的形状“，用户直接指定点的形状，但是要和上方分组的数量相同，比如我的”group“有三个，那我的这个地方只能输入三个值；\n- 下方两个参数和上方两个类似。\n\n# 点击查看\n\n设置完上述这些参数后，便可以点击左侧的”点击提交“完成分析，如果没有报错，应该得到这样的结果：\n\n{% asset_img 9.png %}\n\n如果没有报错，那就再输入最右侧的参数。输入完成后需要再次点击”点击提交“。\n\n{% asset_img 10.png %}\n\n# 下载结果\n\n完成所有参数后，点击左下角的下载按钮即可。\n\n{% asset_img 11.png %}\n\n可以根据”PCA碎石图“的结果来决定散点图展示哪几个主成分。\n\n下载完图片后对长和宽不满意的话，可以重新设置长和宽，然后点击”点击提交“，最后再下载数据。\n\n# 示例结果\n\n示例数据得到的结果（点的颜色和形状分别用不同的分组控制）如下：\n\n{% asset_img 12.png %}\n\n详细参数如下：\n\n{% asset_img 13.png %}\n\n# [Tools4You教程合集](https://www.blog4xiang.world/categories/Tools4You/)\n\n---\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com\n\n","slug":"Tools4You教程4：PCA","published":1,"updated":"2021-03-06T12:54:59.837Z","_id":"ckwbqwcjs003ar0g0eyz7grk8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"PCA简介\"><a href=\"#PCA简介\" class=\"headerlink\" title=\"PCA简介\"></a>PCA简介</h1><p>PCA（Principal Component Analysis，主成分分析）是常见的降维方法，在生命科学中应用广泛。<span id=\"more\"></span>关于PCA的原理，推荐观看博主Josh Starmer博士的视频（<a href=\"https://www.bilibili.com/video/BV1fD4y1X7fw\">点击打开B站视频链接</a>，手机端貌似无法打开链接），真的是深入浅出，极其通透。</p>\n<h1 id=\"几点注意事项\"><a href=\"#几点注意事项\" class=\"headerlink\" title=\"几点注意事项\"></a>几点注意事项</h1><ul>\n<li>目前唯一的网址为：<a href=\"http://shinyapp.top:3838/Tools4You/\">http://shinyapp.top:3838/Tools4You/</a></li>\n<li><code>Tools4You</code>所有模块目前只支持输入<code>.csv</code>格式，在Excel中将数据另存为<code>.csv</code>格式即可：<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/0.png\" class=\"\"></li>\n<li>每个分析模块都有对应的示例数据，请按照示例数据的格式整理自己的格式。</li>\n<li>如果界面和自己电脑屏幕不适配，请适当放大缩小浏览器的显示比例，开发调试用的是27寸屏幕。</li>\n</ul>\n<h1 id=\"选择PCA模块\"><a href=\"#选择PCA模块\" class=\"headerlink\" title=\"选择PCA模块\"></a>选择PCA模块</h1><p>打开网站，选择对应的PCA模块即可：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/1.png\" class=\"\">\n\n<h1 id=\"数据格式\"><a href=\"#数据格式\" class=\"headerlink\" title=\"数据格式\"></a>数据格式</h1><p>PCA分析输入数据为“长数据“：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/2.png\" class=\"\">\n\n<p>每一行是一个样品，每一列是一个观测指标，最后的“group”和“site”是样品的分组信息，必须有分组信息，这样后面画图才能进行分组显示，分组信息可以有多个，然后画图的时候不同的分组信息控制图形的颜色和形状等。</p>\n<h1 id=\"分组信息\"><a href=\"#分组信息\" class=\"headerlink\" title=\"分组信息\"></a>分组信息</h1><img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/3.png\" class=\"\">\n\n<p>在数据表中有多少个分组信息，就需要在这地方标明，比如我的数据中有两个分组信息：group和site，分别是样品分组信息和样品的位点信息。我就需要在“分组名称”这个输入<code>group,site</code>，后面绘图才能进行识别。</p>\n<h1 id=\"多元方差分析\"><a href=\"#多元方差分析\" class=\"headerlink\" title=\"多元方差分析\"></a>多元方差分析</h1><p>如果PCA结果足够好的话，可以直接肉眼观察分组之间是否分开，但是如果分组之间是”若即若离“的，那就不好说到底有没有分开了。这时候就需要多元方差分析了，通常是PERMANOVA。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/4.png\" class=\"\">\n\n<p>默认是进行PERMANOVA分析的。</p>\n<p>下方是图片格式，支持多种图形格式，默认的是<code>PDF</code>格式。</p>\n<h1 id=\"绘图样式\"><a href=\"#绘图样式\" class=\"headerlink\" title=\"绘图样式\"></a>绘图样式</h1><p>绘图样式有三种，最常见的是置信椭圆样式。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/5.png\" class=\"\">\n\n<p>三种样式对应的图形如下：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/6.png\" class=\"\">\n\n<h1 id=\"展示主成分\"><a href=\"#展示主成分\" class=\"headerlink\" title=\"展示主成分\"></a>展示主成分</h1><p>PCA分析中主成分的数量和变量的数量是一样的，比如我的数据有4个变量，那就会有4个主成分。</p>\n<p>通常只展示前三个主成分，三个主成分两两组合，共有4种组合。</p>\n<p>只需要在这个位置输入想展示的主成分即可，注意PC这两个字母需要大写，另外是英文逗号分隔。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/7.png\" class=\"\">\n\n<h1 id=\"散点图相关设置\"><a href=\"#散点图相关设置\" class=\"headerlink\" title=\"散点图相关设置\"></a>散点图相关设置</h1><img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/8.png\" class=\"\">\n\n<p>剩下的参数主要和散点图的点相关：</p>\n<ul>\n<li>”点的大小“这个参数就是说散点图中点的大小；</li>\n<li>”点的透明度“是指散点的透明度，默认是1；</li>\n<li>”控制点的形状的分组名称“是用数据中的哪个分组信息来控制点的形状，比如”group“；</li>\n<li>”输入点的形状“，用户直接指定点的形状，但是要和上方分组的数量相同，比如我的”group“有三个，那我的这个地方只能输入三个值；</li>\n<li>下方两个参数和上方两个类似。</li>\n</ul>\n<h1 id=\"点击查看\"><a href=\"#点击查看\" class=\"headerlink\" title=\"点击查看\"></a>点击查看</h1><p>设置完上述这些参数后，便可以点击左侧的”点击提交“完成分析，如果没有报错，应该得到这样的结果：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/9.png\" class=\"\">\n\n<p>如果没有报错，那就再输入最右侧的参数。输入完成后需要再次点击”点击提交“。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/10.png\" class=\"\">\n\n<h1 id=\"下载结果\"><a href=\"#下载结果\" class=\"headerlink\" title=\"下载结果\"></a>下载结果</h1><p>完成所有参数后，点击左下角的下载按钮即可。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/11.png\" class=\"\">\n\n<p>可以根据”PCA碎石图“的结果来决定散点图展示哪几个主成分。</p>\n<p>下载完图片后对长和宽不满意的话，可以重新设置长和宽，然后点击”点击提交“，最后再下载数据。</p>\n<h1 id=\"示例结果\"><a href=\"#示例结果\" class=\"headerlink\" title=\"示例结果\"></a>示例结果</h1><p>示例数据得到的结果（点的颜色和形状分别用不同的分组控制）如下：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/12.png\" class=\"\">\n\n<p>详细参数如下：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/13.png\" class=\"\">\n\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#55;&#52;&#50;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#55;&#52;&#50;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#51;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#51;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"PCA简介\"><a href=\"#PCA简介\" class=\"headerlink\" title=\"PCA简介\"></a>PCA简介</h1><p>PCA（Principal Component Analysis，主成分分析）是常见的降维方法，在生命科学中应用广泛。","more":"关于PCA的原理，推荐观看博主Josh Starmer博士的视频（<a href=\"https://www.bilibili.com/video/BV1fD4y1X7fw\">点击打开B站视频链接</a>，手机端貌似无法打开链接），真的是深入浅出，极其通透。</p>\n<h1 id=\"几点注意事项\"><a href=\"#几点注意事项\" class=\"headerlink\" title=\"几点注意事项\"></a>几点注意事项</h1><ul>\n<li>目前唯一的网址为：<a href=\"http://shinyapp.top:3838/Tools4You/\">http://shinyapp.top:3838/Tools4You/</a></li>\n<li><code>Tools4You</code>所有模块目前只支持输入<code>.csv</code>格式，在Excel中将数据另存为<code>.csv</code>格式即可：<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/0.png\" class=\"\"></li>\n<li>每个分析模块都有对应的示例数据，请按照示例数据的格式整理自己的格式。</li>\n<li>如果界面和自己电脑屏幕不适配，请适当放大缩小浏览器的显示比例，开发调试用的是27寸屏幕。</li>\n</ul>\n<h1 id=\"选择PCA模块\"><a href=\"#选择PCA模块\" class=\"headerlink\" title=\"选择PCA模块\"></a>选择PCA模块</h1><p>打开网站，选择对应的PCA模块即可：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/1.png\" class=\"\">\n\n<h1 id=\"数据格式\"><a href=\"#数据格式\" class=\"headerlink\" title=\"数据格式\"></a>数据格式</h1><p>PCA分析输入数据为“长数据“：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/2.png\" class=\"\">\n\n<p>每一行是一个样品，每一列是一个观测指标，最后的“group”和“site”是样品的分组信息，必须有分组信息，这样后面画图才能进行分组显示，分组信息可以有多个，然后画图的时候不同的分组信息控制图形的颜色和形状等。</p>\n<h1 id=\"分组信息\"><a href=\"#分组信息\" class=\"headerlink\" title=\"分组信息\"></a>分组信息</h1><img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/3.png\" class=\"\">\n\n<p>在数据表中有多少个分组信息，就需要在这地方标明，比如我的数据中有两个分组信息：group和site，分别是样品分组信息和样品的位点信息。我就需要在“分组名称”这个输入<code>group,site</code>，后面绘图才能进行识别。</p>\n<h1 id=\"多元方差分析\"><a href=\"#多元方差分析\" class=\"headerlink\" title=\"多元方差分析\"></a>多元方差分析</h1><p>如果PCA结果足够好的话，可以直接肉眼观察分组之间是否分开，但是如果分组之间是”若即若离“的，那就不好说到底有没有分开了。这时候就需要多元方差分析了，通常是PERMANOVA。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/4.png\" class=\"\">\n\n<p>默认是进行PERMANOVA分析的。</p>\n<p>下方是图片格式，支持多种图形格式，默认的是<code>PDF</code>格式。</p>\n<h1 id=\"绘图样式\"><a href=\"#绘图样式\" class=\"headerlink\" title=\"绘图样式\"></a>绘图样式</h1><p>绘图样式有三种，最常见的是置信椭圆样式。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/5.png\" class=\"\">\n\n<p>三种样式对应的图形如下：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/6.png\" class=\"\">\n\n<h1 id=\"展示主成分\"><a href=\"#展示主成分\" class=\"headerlink\" title=\"展示主成分\"></a>展示主成分</h1><p>PCA分析中主成分的数量和变量的数量是一样的，比如我的数据有4个变量，那就会有4个主成分。</p>\n<p>通常只展示前三个主成分，三个主成分两两组合，共有4种组合。</p>\n<p>只需要在这个位置输入想展示的主成分即可，注意PC这两个字母需要大写，另外是英文逗号分隔。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/7.png\" class=\"\">\n\n<h1 id=\"散点图相关设置\"><a href=\"#散点图相关设置\" class=\"headerlink\" title=\"散点图相关设置\"></a>散点图相关设置</h1><img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/8.png\" class=\"\">\n\n<p>剩下的参数主要和散点图的点相关：</p>\n<ul>\n<li>”点的大小“这个参数就是说散点图中点的大小；</li>\n<li>”点的透明度“是指散点的透明度，默认是1；</li>\n<li>”控制点的形状的分组名称“是用数据中的哪个分组信息来控制点的形状，比如”group“；</li>\n<li>”输入点的形状“，用户直接指定点的形状，但是要和上方分组的数量相同，比如我的”group“有三个，那我的这个地方只能输入三个值；</li>\n<li>下方两个参数和上方两个类似。</li>\n</ul>\n<h1 id=\"点击查看\"><a href=\"#点击查看\" class=\"headerlink\" title=\"点击查看\"></a>点击查看</h1><p>设置完上述这些参数后，便可以点击左侧的”点击提交“完成分析，如果没有报错，应该得到这样的结果：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/9.png\" class=\"\">\n\n<p>如果没有报错，那就再输入最右侧的参数。输入完成后需要再次点击”点击提交“。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/10.png\" class=\"\">\n\n<h1 id=\"下载结果\"><a href=\"#下载结果\" class=\"headerlink\" title=\"下载结果\"></a>下载结果</h1><p>完成所有参数后，点击左下角的下载按钮即可。</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/11.png\" class=\"\">\n\n<p>可以根据”PCA碎石图“的结果来决定散点图展示哪几个主成分。</p>\n<p>下载完图片后对长和宽不满意的话，可以重新设置长和宽，然后点击”点击提交“，最后再下载数据。</p>\n<h1 id=\"示例结果\"><a href=\"#示例结果\" class=\"headerlink\" title=\"示例结果\"></a>示例结果</h1><p>示例数据得到的结果（点的颜色和形状分别用不同的分组控制）如下：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/12.png\" class=\"\">\n\n<p>详细参数如下：</p>\n<img src=\"/2021/01/28/Tools4You%E6%95%99%E7%A8%8B4%EF%BC%9APCA/13.png\" class=\"\">\n\n<h1 id=\"Tools4You教程合集\"><a href=\"#Tools4You教程合集\" class=\"headerlink\" title=\"Tools4You教程合集\"></a><a href=\"https://www.blog4xiang.world/categories/Tools4You/\">Tools4You教程合集</a></h1><hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#55;&#52;&#50;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#x31;&#55;&#52;&#50;&#x33;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#51;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#51;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n</blockquote>"},{"title":"WGS学习笔记","abbrlink":"258e55c8","date":"2021-03-01T01:01:06.000Z","_content":"\n# FASTA和FASTQ文件格式\n\n## FASTA\n\n`FASTA`是已知序列的存储文件，以`>`开头，<!-- more -->紧接着`>`的是该序列的名称，如果是基因名称，那通常是统一的。后面是其他附加信息。第二行才是真真正正的序列，可以是一行，也可以是多行，软件识别`FASTA`文件的时候默认将两个`>`之间的内容识别为一条序列。`FASTA`文件的缩写可以是`.fa`或者`.fa.gz`，前一种是没有压缩的格式，后面一种是压缩格式。\n\n>\\>ENSMUSG00000020122|ENSMUST00000138518\n>CCCTCCTATCATGCTGTCAGTGTATCTCTAAATAGCACTCTCAACCCCCGTGAACTTGGT\n>TATTAAAAACATGCCCAAAGTCTGGGAGCCAGGGCTGCAGGGAAATACCACAGCCTCAGT\n>TCATCAAAACAGTTCATTGCCCAAAATGTTCTCAGCTGCAGCTTTCATGAGGTAACTCCA\n>GGGCCCACCTGTTCTCTGGT\n>\\>ENSMUSG00000020122|ENSMUST00000125984\n>GAGTCAGGTTGAAGCTGCCCTGAACACTACAGAGAAGAGAGGCCTTGGTGTCCTGTTGTC\n>TCCAGAACCCCAATATGTCTTGTGAAGGGCACACAACCCCTCAAAGGGGTGTCACTTCTT\n>CTGATCACTTTTGTTACTGTTTACTAACTGATCCTATGAATCACTGTGTCTTCTCAGAGG\n>CCGTGAACCACGTCTGCAAT\n>\n>\\>gene_00284728 length=231;type=dna\n>GAGAACTGATTCTGTTACCGCAGGGCATTCGGATGTGCTAAGGTAGTAATCCATTATAAGTAACATG\n>CGCGGAATATCCGGGAGGTCATAGTCGTAATGCATAATTATTCCCTCCCTCAGAAGGACTCCCTTGC\n>GAGACGCCAATACCAAAGACTTTCGTAAGCTGGAACGATTGGACGGCCCAACCGGGGGGAGTCGGCT\n>ATACGTCTGATTGCTACGCCTGGACTTCTCTT\n\n## FASTQ\n\n`FASTQ`则是我们常说的下机数据，长得像这样：\n\n>@DJB775P1:248:D0MDGACXX:7:1202:12362:49613\n>TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA\n>+\n>JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA\n>@DJB775P1:248:D0MDGACXX:7:1202:12782:49716\n>CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG\n>+\n>IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC\n\n以`@`开头的每4行就是我们常说的`read`。\n\n第一行是每条`read`的标识符，在一个`FASTQ`文件中是不可能重复的，甚至在多个`FASTQ`文件中也是不可能出现重复的。\n\n第二行就是序列了，包含了A、T、C、G及N这5种情况，N表示的是测序仪器无法识别的序列号。\n\n第三行在很老的版本里面是有信息的，通常是重复第一行的信息，现在基本都是只有一个`+`。\n\n第四行是每个剑戟对应的质量值，用`ASCII`进行编码，计算公式为：\n\n$Q = -10log(p_error)$\n\n现在常用的衡量指标是Q20和Q30，分别表示的是100个碱基中出现一个碱基测错的概率和1000个碱基中出现一个碱基测错的概率，对应的正确率分别是99%和99.9%，以此类推，Q40下的正确率应该是99.99%。\n\n## 查看测序所用的质量体系\n\n### `shell`脚本\n\n```shell\nless $1 | head -n 1000 | awk '{if(NR%4==0) printf(\"%s\",$0);}' \\\n| od -A n -t u1 -v \\\n| awk 'BEGIN{min=100;max=0;} \\\n{for(i=1;i<=NF;i++) {if($i>max) max=$i; if($i<min) min=$i;}}END \\\n{if(max<=126 && min<59) print \"Phred33\"; \\\nelse if(max>73 && min>=64) print \"Phred64\"; \\\nelse if(min>=59 && min<64 && max>73) print \"Solexa64\"; \\\nelse print \"Unknown score encoding\"; \\\nprint \"( \" min \", \" max, \")\";}'\n```\n\n\n\n### `python`\n\n`ord () `函数会将字符转换为 `ASCII` 对应的数字，减掉 33 后就得到了该碱基最后的质量值（即，`Phred quality score`）\n\n```python\nIn [1]: qual='JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD'\nIn [2]: [ord(q)-33 for q in qual]\nOut[2]:\n[35, 20, 17, 18, 24, 34, 35, 35, 35, 34, 35, 34, 29, 29, 32, 32, 34, 34, 33, \n29, 33, 33, 32, 35, 35, 35, 34, 34, 34, 34, 35, 35, 34, 35, 34, 35, 34, 35, \n34, 34, 34, 35, 35, 35, 35, 34, 33, 33, 30, 33, 24, 27]\n```\n\n# WGS分析流程\n\n可以将WGS分成一下及部分：\n\n1. 原始测序数据的质控\n2. read 比对，排序和去除重复序列\n3. Indel 区域重（“重新” 的 “重”）比对\n4. 碱基质量值重校正\n5. 变异检测\n6. 变异结果质控和过滤\n\n# 数据质控\n\n为什么要进行数据质控呢？illumina测序的策略是“边合成边测序”，在合成的过程中随着链的增长，DNA聚合酶的效率会降低，于是越到后面的碱基的错误率就会越高。下机数据的质量严重影响着后续的下游分析的结果。\n\n软件是`fastqc`，利用`conda`安装简单：\n\n````shell\nconda install fastqc\n````\n\n软件的使用也很简单：\n\n```shell\nfastqc untreated.fq -o fastqc_out_dir/\n```\n\n`-o`表示的是结果输出目录，如果没有指定目录，就会输出到和输入文件一个文件夹。\n\n输入多个文件：\n\n```shell\nfastqc /path_to_fq/*.fq -o fastqc_out_dir/\n```\n\n质控后数据不好的话需要对数据进行处理，如切除低质量的`reads`及接头序列等。\n\n\n\n\n\n\n\n\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/WGS学习笔记.md","raw":"---\ntitle: WGS学习笔记\ntags: 生物信息学\ncategories: 生物信息学\nabbrlink: 258e55c8\ndate: 2021-03-01 09:01:06\n---\n\n# FASTA和FASTQ文件格式\n\n## FASTA\n\n`FASTA`是已知序列的存储文件，以`>`开头，<!-- more -->紧接着`>`的是该序列的名称，如果是基因名称，那通常是统一的。后面是其他附加信息。第二行才是真真正正的序列，可以是一行，也可以是多行，软件识别`FASTA`文件的时候默认将两个`>`之间的内容识别为一条序列。`FASTA`文件的缩写可以是`.fa`或者`.fa.gz`，前一种是没有压缩的格式，后面一种是压缩格式。\n\n>\\>ENSMUSG00000020122|ENSMUST00000138518\n>CCCTCCTATCATGCTGTCAGTGTATCTCTAAATAGCACTCTCAACCCCCGTGAACTTGGT\n>TATTAAAAACATGCCCAAAGTCTGGGAGCCAGGGCTGCAGGGAAATACCACAGCCTCAGT\n>TCATCAAAACAGTTCATTGCCCAAAATGTTCTCAGCTGCAGCTTTCATGAGGTAACTCCA\n>GGGCCCACCTGTTCTCTGGT\n>\\>ENSMUSG00000020122|ENSMUST00000125984\n>GAGTCAGGTTGAAGCTGCCCTGAACACTACAGAGAAGAGAGGCCTTGGTGTCCTGTTGTC\n>TCCAGAACCCCAATATGTCTTGTGAAGGGCACACAACCCCTCAAAGGGGTGTCACTTCTT\n>CTGATCACTTTTGTTACTGTTTACTAACTGATCCTATGAATCACTGTGTCTTCTCAGAGG\n>CCGTGAACCACGTCTGCAAT\n>\n>\\>gene_00284728 length=231;type=dna\n>GAGAACTGATTCTGTTACCGCAGGGCATTCGGATGTGCTAAGGTAGTAATCCATTATAAGTAACATG\n>CGCGGAATATCCGGGAGGTCATAGTCGTAATGCATAATTATTCCCTCCCTCAGAAGGACTCCCTTGC\n>GAGACGCCAATACCAAAGACTTTCGTAAGCTGGAACGATTGGACGGCCCAACCGGGGGGAGTCGGCT\n>ATACGTCTGATTGCTACGCCTGGACTTCTCTT\n\n## FASTQ\n\n`FASTQ`则是我们常说的下机数据，长得像这样：\n\n>@DJB775P1:248:D0MDGACXX:7:1202:12362:49613\n>TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA\n>+\n>JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA\n>@DJB775P1:248:D0MDGACXX:7:1202:12782:49716\n>CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG\n>+\n>IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC\n\n以`@`开头的每4行就是我们常说的`read`。\n\n第一行是每条`read`的标识符，在一个`FASTQ`文件中是不可能重复的，甚至在多个`FASTQ`文件中也是不可能出现重复的。\n\n第二行就是序列了，包含了A、T、C、G及N这5种情况，N表示的是测序仪器无法识别的序列号。\n\n第三行在很老的版本里面是有信息的，通常是重复第一行的信息，现在基本都是只有一个`+`。\n\n第四行是每个剑戟对应的质量值，用`ASCII`进行编码，计算公式为：\n\n$Q = -10log(p_error)$\n\n现在常用的衡量指标是Q20和Q30，分别表示的是100个碱基中出现一个碱基测错的概率和1000个碱基中出现一个碱基测错的概率，对应的正确率分别是99%和99.9%，以此类推，Q40下的正确率应该是99.99%。\n\n## 查看测序所用的质量体系\n\n### `shell`脚本\n\n```shell\nless $1 | head -n 1000 | awk '{if(NR%4==0) printf(\"%s\",$0);}' \\\n| od -A n -t u1 -v \\\n| awk 'BEGIN{min=100;max=0;} \\\n{for(i=1;i<=NF;i++) {if($i>max) max=$i; if($i<min) min=$i;}}END \\\n{if(max<=126 && min<59) print \"Phred33\"; \\\nelse if(max>73 && min>=64) print \"Phred64\"; \\\nelse if(min>=59 && min<64 && max>73) print \"Solexa64\"; \\\nelse print \"Unknown score encoding\"; \\\nprint \"( \" min \", \" max, \")\";}'\n```\n\n\n\n### `python`\n\n`ord () `函数会将字符转换为 `ASCII` 对应的数字，减掉 33 后就得到了该碱基最后的质量值（即，`Phred quality score`）\n\n```python\nIn [1]: qual='JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD'\nIn [2]: [ord(q)-33 for q in qual]\nOut[2]:\n[35, 20, 17, 18, 24, 34, 35, 35, 35, 34, 35, 34, 29, 29, 32, 32, 34, 34, 33, \n29, 33, 33, 32, 35, 35, 35, 34, 34, 34, 34, 35, 35, 34, 35, 34, 35, 34, 35, \n34, 34, 34, 35, 35, 35, 35, 34, 33, 33, 30, 33, 24, 27]\n```\n\n# WGS分析流程\n\n可以将WGS分成一下及部分：\n\n1. 原始测序数据的质控\n2. read 比对，排序和去除重复序列\n3. Indel 区域重（“重新” 的 “重”）比对\n4. 碱基质量值重校正\n5. 变异检测\n6. 变异结果质控和过滤\n\n# 数据质控\n\n为什么要进行数据质控呢？illumina测序的策略是“边合成边测序”，在合成的过程中随着链的增长，DNA聚合酶的效率会降低，于是越到后面的碱基的错误率就会越高。下机数据的质量严重影响着后续的下游分析的结果。\n\n软件是`fastqc`，利用`conda`安装简单：\n\n````shell\nconda install fastqc\n````\n\n软件的使用也很简单：\n\n```shell\nfastqc untreated.fq -o fastqc_out_dir/\n```\n\n`-o`表示的是结果输出目录，如果没有指定目录，就会输出到和输入文件一个文件夹。\n\n输入多个文件：\n\n```shell\nfastqc /path_to_fq/*.fq -o fastqc_out_dir/\n```\n\n质控后数据不好的话需要对数据进行处理，如切除低质量的`reads`及接头序列等。\n\n\n\n\n\n\n\n\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"WGS学习笔记","published":1,"updated":"2021-03-06T13:13:15.639Z","_id":"ckwbqwcjt003dr0g0dqmufbvd","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"FASTA和FASTQ文件格式\"><a href=\"#FASTA和FASTQ文件格式\" class=\"headerlink\" title=\"FASTA和FASTQ文件格式\"></a>FASTA和FASTQ文件格式</h1><h2 id=\"FASTA\"><a href=\"#FASTA\" class=\"headerlink\" title=\"FASTA\"></a>FASTA</h2><p><code>FASTA</code>是已知序列的存储文件，以<code>&gt;</code>开头，<span id=\"more\"></span>紧接着<code>&gt;</code>的是该序列的名称，如果是基因名称，那通常是统一的。后面是其他附加信息。第二行才是真真正正的序列，可以是一行，也可以是多行，软件识别<code>FASTA</code>文件的时候默认将两个<code>&gt;</code>之间的内容识别为一条序列。<code>FASTA</code>文件的缩写可以是<code>.fa</code>或者<code>.fa.gz</code>，前一种是没有压缩的格式，后面一种是压缩格式。</p>\n<blockquote>\n<p>&gt;ENSMUSG00000020122|ENSMUST00000138518<br>CCCTCCTATCATGCTGTCAGTGTATCTCTAAATAGCACTCTCAACCCCCGTGAACTTGGT<br>TATTAAAAACATGCCCAAAGTCTGGGAGCCAGGGCTGCAGGGAAATACCACAGCCTCAGT<br>TCATCAAAACAGTTCATTGCCCAAAATGTTCTCAGCTGCAGCTTTCATGAGGTAACTCCA<br>GGGCCCACCTGTTCTCTGGT<br>&gt;ENSMUSG00000020122|ENSMUST00000125984<br>GAGTCAGGTTGAAGCTGCCCTGAACACTACAGAGAAGAGAGGCCTTGGTGTCCTGTTGTC<br>TCCAGAACCCCAATATGTCTTGTGAAGGGCACACAACCCCTCAAAGGGGTGTCACTTCTT<br>CTGATCACTTTTGTTACTGTTTACTAACTGATCCTATGAATCACTGTGTCTTCTCAGAGG<br>CCGTGAACCACGTCTGCAAT</p>\n<p>&gt;gene_00284728 length=231;type=dna<br>GAGAACTGATTCTGTTACCGCAGGGCATTCGGATGTGCTAAGGTAGTAATCCATTATAAGTAACATG<br>CGCGGAATATCCGGGAGGTCATAGTCGTAATGCATAATTATTCCCTCCCTCAGAAGGACTCCCTTGC<br>GAGACGCCAATACCAAAGACTTTCGTAAGCTGGAACGATTGGACGGCCCAACCGGGGGGAGTCGGCT<br>ATACGTCTGATTGCTACGCCTGGACTTCTCTT</p>\n</blockquote>\n<h2 id=\"FASTQ\"><a href=\"#FASTQ\" class=\"headerlink\" title=\"FASTQ\"></a>FASTQ</h2><p><code>FASTQ</code>则是我们常说的下机数据，长得像这样：</p>\n<blockquote>\n<p>@DJB775P1:248:D0MDGACXX:7:1202:12362:49613<br>TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA<br>+<br>JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA<br>@DJB775P1:248:D0MDGACXX:7:1202:12782:49716<br>CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG<br>+<br>IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC</p>\n</blockquote>\n<p>以<code>@</code>开头的每4行就是我们常说的<code>read</code>。</p>\n<p>第一行是每条<code>read</code>的标识符，在一个<code>FASTQ</code>文件中是不可能重复的，甚至在多个<code>FASTQ</code>文件中也是不可能出现重复的。</p>\n<p>第二行就是序列了，包含了A、T、C、G及N这5种情况，N表示的是测序仪器无法识别的序列号。</p>\n<p>第三行在很老的版本里面是有信息的，通常是重复第一行的信息，现在基本都是只有一个<code>+</code>。</p>\n<p>第四行是每个剑戟对应的质量值，用<code>ASCII</code>进行编码，计算公式为：</p>\n<p>$Q = -10log(p_error)$</p>\n<p>现在常用的衡量指标是Q20和Q30，分别表示的是100个碱基中出现一个碱基测错的概率和1000个碱基中出现一个碱基测错的概率，对应的正确率分别是99%和99.9%，以此类推，Q40下的正确率应该是99.99%。</p>\n<h2 id=\"查看测序所用的质量体系\"><a href=\"#查看测序所用的质量体系\" class=\"headerlink\" title=\"查看测序所用的质量体系\"></a>查看测序所用的质量体系</h2><h3 id=\"shell脚本\"><a href=\"#shell脚本\" class=\"headerlink\" title=\"shell脚本\"></a><code>shell</code>脚本</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less $1 | head -n 1000 | awk &#x27;&#123;if(NR%4==0) printf(&quot;%s&quot;,$0);&#125;&#x27; \\</span><br><span class=\"line\">| od -A n -t u1 -v \\</span><br><span class=\"line\">| awk &#x27;BEGIN&#123;min=100;max=0;&#125; \\</span><br><span class=\"line\">&#123;for(i=1;i&lt;=NF;i++) &#123;if($i&gt;max) max=$i; if($i&lt;min) min=$i;&#125;&#125;END \\</span><br><span class=\"line\">&#123;if(max&lt;=126 &amp;&amp; min&lt;59) print &quot;Phred33&quot;; \\</span><br><span class=\"line\">else if(max&gt;73 &amp;&amp; min&gt;=64) print &quot;Phred64&quot;; \\</span><br><span class=\"line\">else if(min&gt;=59 &amp;&amp; min&lt;64 &amp;&amp; max&gt;73) print &quot;Solexa64&quot;; \\</span><br><span class=\"line\">else print &quot;Unknown score encoding&quot;; \\</span><br><span class=\"line\">print &quot;( &quot; min &quot;, &quot; max, &quot;)&quot;;&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a><code>python</code></h3><p><code>ord () </code>函数会将字符转换为 <code>ASCII</code> 对应的数字，减掉 33 后就得到了该碱基最后的质量值（即，<code>Phred quality score</code>）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: qual=<span class=\"string\">&#x27;JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD&#x27;</span></span><br><span class=\"line\">In [<span class=\"number\">2</span>]: [<span class=\"built_in\">ord</span>(q)-<span class=\"number\">33</span> <span class=\"keyword\">for</span> q <span class=\"keyword\">in</span> qual]</span><br><span class=\"line\">Out[<span class=\"number\">2</span>]:</span><br><span class=\"line\">[<span class=\"number\">35</span>, <span class=\"number\">20</span>, <span class=\"number\">17</span>, <span class=\"number\">18</span>, <span class=\"number\">24</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">29</span>, <span class=\"number\">29</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">33</span>, </span><br><span class=\"line\"><span class=\"number\">29</span>, <span class=\"number\">33</span>, <span class=\"number\">33</span>, <span class=\"number\">32</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, </span><br><span class=\"line\"><span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">33</span>, <span class=\"number\">33</span>, <span class=\"number\">30</span>, <span class=\"number\">33</span>, <span class=\"number\">24</span>, <span class=\"number\">27</span>]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WGS分析流程\"><a href=\"#WGS分析流程\" class=\"headerlink\" title=\"WGS分析流程\"></a>WGS分析流程</h1><p>可以将WGS分成一下及部分：</p>\n<ol>\n<li>原始测序数据的质控</li>\n<li>read 比对，排序和去除重复序列</li>\n<li>Indel 区域重（“重新” 的 “重”）比对</li>\n<li>碱基质量值重校正</li>\n<li>变异检测</li>\n<li>变异结果质控和过滤</li>\n</ol>\n<h1 id=\"数据质控\"><a href=\"#数据质控\" class=\"headerlink\" title=\"数据质控\"></a>数据质控</h1><p>为什么要进行数据质控呢？illumina测序的策略是“边合成边测序”，在合成的过程中随着链的增长，DNA聚合酶的效率会降低，于是越到后面的碱基的错误率就会越高。下机数据的质量严重影响着后续的下游分析的结果。</p>\n<p>软件是<code>fastqc</code>，利用<code>conda</code>安装简单：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install fastqc</span><br></pre></td></tr></table></figure>\n\n<p>软件的使用也很简单：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastqc untreated.fq -o fastqc_out_dir/</span><br></pre></td></tr></table></figure>\n\n<p><code>-o</code>表示的是结果输出目录，如果没有指定目录，就会输出到和输入文件一个文件夹。</p>\n<p>输入多个文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastqc /path_to_fq/*.fq -o fastqc_out_dir/</span><br></pre></td></tr></table></figure>\n\n<p>质控后数据不好的话需要对数据进行处理，如切除低质量的<code>reads</code>及接头序列等。</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"FASTA和FASTQ文件格式\"><a href=\"#FASTA和FASTQ文件格式\" class=\"headerlink\" title=\"FASTA和FASTQ文件格式\"></a>FASTA和FASTQ文件格式</h1><h2 id=\"FASTA\"><a href=\"#FASTA\" class=\"headerlink\" title=\"FASTA\"></a>FASTA</h2><p><code>FASTA</code>是已知序列的存储文件，以<code>&gt;</code>开头，","more":"紧接着<code>&gt;</code>的是该序列的名称，如果是基因名称，那通常是统一的。后面是其他附加信息。第二行才是真真正正的序列，可以是一行，也可以是多行，软件识别<code>FASTA</code>文件的时候默认将两个<code>&gt;</code>之间的内容识别为一条序列。<code>FASTA</code>文件的缩写可以是<code>.fa</code>或者<code>.fa.gz</code>，前一种是没有压缩的格式，后面一种是压缩格式。</p>\n<blockquote>\n<p>&gt;ENSMUSG00000020122|ENSMUST00000138518<br>CCCTCCTATCATGCTGTCAGTGTATCTCTAAATAGCACTCTCAACCCCCGTGAACTTGGT<br>TATTAAAAACATGCCCAAAGTCTGGGAGCCAGGGCTGCAGGGAAATACCACAGCCTCAGT<br>TCATCAAAACAGTTCATTGCCCAAAATGTTCTCAGCTGCAGCTTTCATGAGGTAACTCCA<br>GGGCCCACCTGTTCTCTGGT<br>&gt;ENSMUSG00000020122|ENSMUST00000125984<br>GAGTCAGGTTGAAGCTGCCCTGAACACTACAGAGAAGAGAGGCCTTGGTGTCCTGTTGTC<br>TCCAGAACCCCAATATGTCTTGTGAAGGGCACACAACCCCTCAAAGGGGTGTCACTTCTT<br>CTGATCACTTTTGTTACTGTTTACTAACTGATCCTATGAATCACTGTGTCTTCTCAGAGG<br>CCGTGAACCACGTCTGCAAT</p>\n<p>&gt;gene_00284728 length=231;type=dna<br>GAGAACTGATTCTGTTACCGCAGGGCATTCGGATGTGCTAAGGTAGTAATCCATTATAAGTAACATG<br>CGCGGAATATCCGGGAGGTCATAGTCGTAATGCATAATTATTCCCTCCCTCAGAAGGACTCCCTTGC<br>GAGACGCCAATACCAAAGACTTTCGTAAGCTGGAACGATTGGACGGCCCAACCGGGGGGAGTCGGCT<br>ATACGTCTGATTGCTACGCCTGGACTTCTCTT</p>\n</blockquote>\n<h2 id=\"FASTQ\"><a href=\"#FASTQ\" class=\"headerlink\" title=\"FASTQ\"></a>FASTQ</h2><p><code>FASTQ</code>则是我们常说的下机数据，长得像这样：</p>\n<blockquote>\n<p>@DJB775P1:248:D0MDGACXX:7:1202:12362:49613<br>TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA<br>+<br>JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA<br>@DJB775P1:248:D0MDGACXX:7:1202:12782:49716<br>CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG<br>+<br>IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC</p>\n</blockquote>\n<p>以<code>@</code>开头的每4行就是我们常说的<code>read</code>。</p>\n<p>第一行是每条<code>read</code>的标识符，在一个<code>FASTQ</code>文件中是不可能重复的，甚至在多个<code>FASTQ</code>文件中也是不可能出现重复的。</p>\n<p>第二行就是序列了，包含了A、T、C、G及N这5种情况，N表示的是测序仪器无法识别的序列号。</p>\n<p>第三行在很老的版本里面是有信息的，通常是重复第一行的信息，现在基本都是只有一个<code>+</code>。</p>\n<p>第四行是每个剑戟对应的质量值，用<code>ASCII</code>进行编码，计算公式为：</p>\n<p>$Q = -10log(p_error)$</p>\n<p>现在常用的衡量指标是Q20和Q30，分别表示的是100个碱基中出现一个碱基测错的概率和1000个碱基中出现一个碱基测错的概率，对应的正确率分别是99%和99.9%，以此类推，Q40下的正确率应该是99.99%。</p>\n<h2 id=\"查看测序所用的质量体系\"><a href=\"#查看测序所用的质量体系\" class=\"headerlink\" title=\"查看测序所用的质量体系\"></a>查看测序所用的质量体系</h2><h3 id=\"shell脚本\"><a href=\"#shell脚本\" class=\"headerlink\" title=\"shell脚本\"></a><code>shell</code>脚本</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less $1 | head -n 1000 | awk &#x27;&#123;if(NR%4==0) printf(&quot;%s&quot;,$0);&#125;&#x27; \\</span><br><span class=\"line\">| od -A n -t u1 -v \\</span><br><span class=\"line\">| awk &#x27;BEGIN&#123;min=100;max=0;&#125; \\</span><br><span class=\"line\">&#123;for(i=1;i&lt;=NF;i++) &#123;if($i&gt;max) max=$i; if($i&lt;min) min=$i;&#125;&#125;END \\</span><br><span class=\"line\">&#123;if(max&lt;=126 &amp;&amp; min&lt;59) print &quot;Phred33&quot;; \\</span><br><span class=\"line\">else if(max&gt;73 &amp;&amp; min&gt;=64) print &quot;Phred64&quot;; \\</span><br><span class=\"line\">else if(min&gt;=59 &amp;&amp; min&lt;64 &amp;&amp; max&gt;73) print &quot;Solexa64&quot;; \\</span><br><span class=\"line\">else print &quot;Unknown score encoding&quot;; \\</span><br><span class=\"line\">print &quot;( &quot; min &quot;, &quot; max, &quot;)&quot;;&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a><code>python</code></h3><p><code>ord () </code>函数会将字符转换为 <code>ASCII</code> 对应的数字，减掉 33 后就得到了该碱基最后的质量值（即，<code>Phred quality score</code>）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In [<span class=\"number\">1</span>]: qual=<span class=\"string\">&#x27;JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD&#x27;</span></span><br><span class=\"line\">In [<span class=\"number\">2</span>]: [<span class=\"built_in\">ord</span>(q)-<span class=\"number\">33</span> <span class=\"keyword\">for</span> q <span class=\"keyword\">in</span> qual]</span><br><span class=\"line\">Out[<span class=\"number\">2</span>]:</span><br><span class=\"line\">[<span class=\"number\">35</span>, <span class=\"number\">20</span>, <span class=\"number\">17</span>, <span class=\"number\">18</span>, <span class=\"number\">24</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">29</span>, <span class=\"number\">29</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">33</span>, </span><br><span class=\"line\"><span class=\"number\">29</span>, <span class=\"number\">33</span>, <span class=\"number\">33</span>, <span class=\"number\">32</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, </span><br><span class=\"line\"><span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">34</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">35</span>, <span class=\"number\">34</span>, <span class=\"number\">33</span>, <span class=\"number\">33</span>, <span class=\"number\">30</span>, <span class=\"number\">33</span>, <span class=\"number\">24</span>, <span class=\"number\">27</span>]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WGS分析流程\"><a href=\"#WGS分析流程\" class=\"headerlink\" title=\"WGS分析流程\"></a>WGS分析流程</h1><p>可以将WGS分成一下及部分：</p>\n<ol>\n<li>原始测序数据的质控</li>\n<li>read 比对，排序和去除重复序列</li>\n<li>Indel 区域重（“重新” 的 “重”）比对</li>\n<li>碱基质量值重校正</li>\n<li>变异检测</li>\n<li>变异结果质控和过滤</li>\n</ol>\n<h1 id=\"数据质控\"><a href=\"#数据质控\" class=\"headerlink\" title=\"数据质控\"></a>数据质控</h1><p>为什么要进行数据质控呢？illumina测序的策略是“边合成边测序”，在合成的过程中随着链的增长，DNA聚合酶的效率会降低，于是越到后面的碱基的错误率就会越高。下机数据的质量严重影响着后续的下游分析的结果。</p>\n<p>软件是<code>fastqc</code>，利用<code>conda</code>安装简单：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install fastqc</span><br></pre></td></tr></table></figure>\n\n<p>软件的使用也很简单：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastqc untreated.fq -o fastqc_out_dir/</span><br></pre></td></tr></table></figure>\n\n<p><code>-o</code>表示的是结果输出目录，如果没有指定目录，就会输出到和输入文件一个文件夹。</p>\n<p>输入多个文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastqc /path_to_fq/*.fq -o fastqc_out_dir/</span><br></pre></td></tr></table></figure>\n\n<p>质控后数据不好的话需要对数据进行处理，如切除低质量的<code>reads</code>及接头序列等。</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;\">&#108;&#105;&#x78;&#x69;&#x61;&#x6e;&#103;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#x34;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"不同数量样品绘制柱状图","abbrlink":"9b347903","date":"2020-12-19T06:23:53.000Z","_content":"\n昨天帮同学画图的实现不同样品数量的分组画柱状图会出问题：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n组内的每个重复都被叠加了，和误差线差太远了，咋办呢？后面发现可以根据分组样品数量求均值：\n\n```R\nrm(list = ls())\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggsignif)\nlibrary(ggsci)\nlibrary(extrafont)\nloadfonts()\n\ndf = data.frame(value = rep(c(20:25,25:27)),\n                group = rep(c('A','B'),c(6,3)))\n\nmean = aggregate(df$value, by = list(df$group), FUN = mean)\ncolnames(mean) = c('group','mean')\ndf = merge(df,mean, by = 'group')\n\nsd = aggregate(df$value, by = list(df$group), FUN = sd)\ncolnames(sd) = c('group','sd')\ndf = merge(sd,df, by = 'group')\n\ndf$se = ifelse(df$group == 'A',\n                 df$sd/sqrt(6), \n                 df$sd/sqrt(3))\n\ncomplist = list(c('A','B'))\n\np = ggplot(df) +\n  geom_bar(aes(group, ifelse(group == 'A',mean/6, mean/3),fill = group),\n           stat = 'identity', width = 0.5) +\n  geom_point(aes(group,value)) +\n  geom_errorbar(aes(group, \n                    ymin = mean - se, \n                    ymax = mean + se),\n                width = 0.2) +\n  geom_signif(aes(group,value),\n              comparisons = complist,\n              test = 'wilcox.test',\n              step_increase = 0.1,\n              map_signif_level = TRUE,\n              vjust = 0.5,\n              y_position = 30,\n              tip_length = c(0.1,0.05),\n              linetype = 'dashed',\n              color = 'black') +\n  geom_hline(yintercept = 35, color = 'white') +\n  annotate('text',1,33, label = 'Wilcox.test',\n           color = 'black',size = 5, family = 'Arial', face = 'plain') +\n  scale_y_continuous(expand = c(0,0), breaks = seq(0,36,5)) +\n  scale_fill_aaas() +\n  labs(x = '', y = 'Mean value') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.title = element_blank(),\n        panel.grid = element_blank(),\n        panel.background = element_blank(),\n        axis.text = element_text(color = 'black',size = 10, \n                                 family = 'Arial', face = 'plain'))\np\nggsave(p, filename = '2.pdf',\n       width = 3, height = 3.5, device = cairo_pdf)\n```\n\n{% asset_img 2.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/不同数量样品绘制柱状图.md","raw":"---\ntitle: 不同数量样品绘制柱状图\ntags: R语言\ncategories: R语言\nabbrlink: 9b347903\ndate: 2020-12-19 14:23:53\n---\n\n昨天帮同学画图的实现不同样品数量的分组画柱状图会出问题：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n组内的每个重复都被叠加了，和误差线差太远了，咋办呢？后面发现可以根据分组样品数量求均值：\n\n```R\nrm(list = ls())\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggsignif)\nlibrary(ggsci)\nlibrary(extrafont)\nloadfonts()\n\ndf = data.frame(value = rep(c(20:25,25:27)),\n                group = rep(c('A','B'),c(6,3)))\n\nmean = aggregate(df$value, by = list(df$group), FUN = mean)\ncolnames(mean) = c('group','mean')\ndf = merge(df,mean, by = 'group')\n\nsd = aggregate(df$value, by = list(df$group), FUN = sd)\ncolnames(sd) = c('group','sd')\ndf = merge(sd,df, by = 'group')\n\ndf$se = ifelse(df$group == 'A',\n                 df$sd/sqrt(6), \n                 df$sd/sqrt(3))\n\ncomplist = list(c('A','B'))\n\np = ggplot(df) +\n  geom_bar(aes(group, ifelse(group == 'A',mean/6, mean/3),fill = group),\n           stat = 'identity', width = 0.5) +\n  geom_point(aes(group,value)) +\n  geom_errorbar(aes(group, \n                    ymin = mean - se, \n                    ymax = mean + se),\n                width = 0.2) +\n  geom_signif(aes(group,value),\n              comparisons = complist,\n              test = 'wilcox.test',\n              step_increase = 0.1,\n              map_signif_level = TRUE,\n              vjust = 0.5,\n              y_position = 30,\n              tip_length = c(0.1,0.05),\n              linetype = 'dashed',\n              color = 'black') +\n  geom_hline(yintercept = 35, color = 'white') +\n  annotate('text',1,33, label = 'Wilcox.test',\n           color = 'black',size = 5, family = 'Arial', face = 'plain') +\n  scale_y_continuous(expand = c(0,0), breaks = seq(0,36,5)) +\n  scale_fill_aaas() +\n  labs(x = '', y = 'Mean value') +\n  theme_bw() +\n  theme(legend.position = 'none',\n        legend.title = element_blank(),\n        panel.grid = element_blank(),\n        panel.background = element_blank(),\n        axis.text = element_text(color = 'black',size = 10, \n                                 family = 'Arial', face = 'plain'))\np\nggsave(p, filename = '2.pdf',\n       width = 3, height = 3.5, device = cairo_pdf)\n```\n\n{% asset_img 2.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"不同数量样品绘制柱状图","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcjt003gr0g06mb36sse","comments":1,"layout":"post","photos":[],"link":"","content":"<p>昨天帮同学画图的实现不同样品数量的分组画柱状图会出问题：</p>\n<span id=\"more\"></span>\n\n<img src=\"/2020/12/19/%E4%B8%8D%E5%90%8C%E6%95%B0%E9%87%8F%E6%A0%B7%E5%93%81%E7%BB%98%E5%88%B6%E6%9F%B1%E7%8A%B6%E5%9B%BE/1.png\" class=\"\">\n\n<p>组内的每个重复都被叠加了，和误差线差太远了，咋办呢？后面发现可以根据分组样品数量求均值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsignif)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br><span class=\"line\"></span><br><span class=\"line\">df = data.frame(value = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"number\">20</span>:<span class=\"number\">25</span>,<span class=\"number\">25</span>:<span class=\"number\">27</span>)),</span><br><span class=\"line\">                group = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"number\">6</span>,<span class=\"number\">3</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">mean = aggregate(df$value, by = <span class=\"built_in\">list</span>(df$group), FUN = mean)</span><br><span class=\"line\">colnames(mean) = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;mean&#x27;</span>)</span><br><span class=\"line\">df = merge(df,mean, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sd = aggregate(df$value, by = <span class=\"built_in\">list</span>(df$group), FUN = sd)</span><br><span class=\"line\">colnames(sd) = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;sd&#x27;</span>)</span><br><span class=\"line\">df = merge(sd,df, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df$se = ifelse(df$group == <span class=\"string\">&#x27;A&#x27;</span>,</span><br><span class=\"line\">                 df$sd/<span class=\"built_in\">sqrt</span>(<span class=\"number\">6</span>), </span><br><span class=\"line\">                 df$sd/<span class=\"built_in\">sqrt</span>(<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">complist = <span class=\"built_in\">list</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p = ggplot(df) +</span><br><span class=\"line\">  geom_bar(aes(group, ifelse(group == <span class=\"string\">&#x27;A&#x27;</span>,mean/<span class=\"number\">6</span>, mean/<span class=\"number\">3</span>),fill = group),</span><br><span class=\"line\">           stat = <span class=\"string\">&#x27;identity&#x27;</span>, width = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_point(aes(group,value)) +</span><br><span class=\"line\">  geom_errorbar(aes(group, </span><br><span class=\"line\">                    ymin = mean - se, </span><br><span class=\"line\">                    ymax = mean + se),</span><br><span class=\"line\">                width = <span class=\"number\">0.2</span>) +</span><br><span class=\"line\">  geom_signif(aes(group,value),</span><br><span class=\"line\">              comparisons = complist,</span><br><span class=\"line\">              test = <span class=\"string\">&#x27;wilcox.test&#x27;</span>,</span><br><span class=\"line\">              step_increase = <span class=\"number\">0.1</span>,</span><br><span class=\"line\">              map_signif_level = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">              vjust = <span class=\"number\">0.5</span>,</span><br><span class=\"line\">              y_position = <span class=\"number\">30</span>,</span><br><span class=\"line\">              tip_length = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.05</span>),</span><br><span class=\"line\">              linetype = <span class=\"string\">&#x27;dashed&#x27;</span>,</span><br><span class=\"line\">              color = <span class=\"string\">&#x27;black&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">35</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">33</span>, label = <span class=\"string\">&#x27;Wilcox.test&#x27;</span>,</span><br><span class=\"line\">           color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">5</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>), breaks = seq(<span class=\"number\">0</span>,<span class=\"number\">36</span>,<span class=\"number\">5</span>)) +</span><br><span class=\"line\">  scale_fill_aaas() +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;Mean value&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.title = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, </span><br><span class=\"line\">                                 family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>))</span><br><span class=\"line\">p</span><br><span class=\"line\">ggsave(p, filename = <span class=\"string\">&#x27;2.pdf&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">3</span>, height = <span class=\"number\">3.5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/19/%E4%B8%8D%E5%90%8C%E6%95%B0%E9%87%8F%E6%A0%B7%E5%93%81%E7%BB%98%E5%88%B6%E6%9F%B1%E7%8A%B6%E5%9B%BE/2.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>昨天帮同学画图的实现不同样品数量的分组画柱状图会出问题：</p>","more":"<img src=\"/2020/12/19/%E4%B8%8D%E5%90%8C%E6%95%B0%E9%87%8F%E6%A0%B7%E5%93%81%E7%BB%98%E5%88%B6%E6%9F%B1%E7%8A%B6%E5%9B%BE/1.png\" class=\"\">\n\n<p>组内的每个重复都被叠加了，和误差线差太远了，咋办呢？后面发现可以根据分组样品数量求均值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\">library(dplyr)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsignif)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br><span class=\"line\"></span><br><span class=\"line\">df = data.frame(value = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"number\">20</span>:<span class=\"number\">25</span>,<span class=\"number\">25</span>:<span class=\"number\">27</span>)),</span><br><span class=\"line\">                group = <span class=\"built_in\">rep</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>),<span class=\"built_in\">c</span>(<span class=\"number\">6</span>,<span class=\"number\">3</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\">mean = aggregate(df$value, by = <span class=\"built_in\">list</span>(df$group), FUN = mean)</span><br><span class=\"line\">colnames(mean) = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;mean&#x27;</span>)</span><br><span class=\"line\">df = merge(df,mean, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sd = aggregate(df$value, by = <span class=\"built_in\">list</span>(df$group), FUN = sd)</span><br><span class=\"line\">colnames(sd) = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;sd&#x27;</span>)</span><br><span class=\"line\">df = merge(sd,df, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df$se = ifelse(df$group == <span class=\"string\">&#x27;A&#x27;</span>,</span><br><span class=\"line\">                 df$sd/<span class=\"built_in\">sqrt</span>(<span class=\"number\">6</span>), </span><br><span class=\"line\">                 df$sd/<span class=\"built_in\">sqrt</span>(<span class=\"number\">3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">complist = <span class=\"built_in\">list</span>(<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p = ggplot(df) +</span><br><span class=\"line\">  geom_bar(aes(group, ifelse(group == <span class=\"string\">&#x27;A&#x27;</span>,mean/<span class=\"number\">6</span>, mean/<span class=\"number\">3</span>),fill = group),</span><br><span class=\"line\">           stat = <span class=\"string\">&#x27;identity&#x27;</span>, width = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  geom_point(aes(group,value)) +</span><br><span class=\"line\">  geom_errorbar(aes(group, </span><br><span class=\"line\">                    ymin = mean - se, </span><br><span class=\"line\">                    ymax = mean + se),</span><br><span class=\"line\">                width = <span class=\"number\">0.2</span>) +</span><br><span class=\"line\">  geom_signif(aes(group,value),</span><br><span class=\"line\">              comparisons = complist,</span><br><span class=\"line\">              test = <span class=\"string\">&#x27;wilcox.test&#x27;</span>,</span><br><span class=\"line\">              step_increase = <span class=\"number\">0.1</span>,</span><br><span class=\"line\">              map_signif_level = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">              vjust = <span class=\"number\">0.5</span>,</span><br><span class=\"line\">              y_position = <span class=\"number\">30</span>,</span><br><span class=\"line\">              tip_length = <span class=\"built_in\">c</span>(<span class=\"number\">0.1</span>,<span class=\"number\">0.05</span>),</span><br><span class=\"line\">              linetype = <span class=\"string\">&#x27;dashed&#x27;</span>,</span><br><span class=\"line\">              color = <span class=\"string\">&#x27;black&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">35</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  annotate(<span class=\"string\">&#x27;text&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">33</span>, label = <span class=\"string\">&#x27;Wilcox.test&#x27;</span>,</span><br><span class=\"line\">           color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">5</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>), breaks = seq(<span class=\"number\">0</span>,<span class=\"number\">36</span>,<span class=\"number\">5</span>)) +</span><br><span class=\"line\">  scale_fill_aaas() +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;Mean value&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.position = <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">        legend.title = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, </span><br><span class=\"line\">                                 family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>))</span><br><span class=\"line\">p</span><br><span class=\"line\">ggsave(p, filename = <span class=\"string\">&#x27;2.pdf&#x27;</span>,</span><br><span class=\"line\">       width = <span class=\"number\">3</span>, height = <span class=\"number\">3.5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/19/%E4%B8%8D%E5%90%8C%E6%95%B0%E9%87%8F%E6%A0%B7%E5%93%81%E7%BB%98%E5%88%B6%E6%9F%B1%E7%8A%B6%E5%9B%BE/2.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#x69;&#x61;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"分子生物常用网站","abbrlink":"b14004b4","date":"2021-04-05T12:50:48.000Z","_content":"\n1. 引物设计网站：https://www.ncbi.nlm.nih.gov/tools/primer-blast/<!-- more -->\n2. 引物质量检测网站：http://biotools.nubic.northwestern.edu/OligoCalc.html\n3. NCBI常用库下载：https://ftp.ncbi.nih.gov/blast/db/FASTA/\n4. Blast+下载：https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/\n5. KEGG蛋白富集分析网站：https://www.kegg.jp/blastkoala/\n6. KEGG功能注释：https://www.genome.jp/tools/kaas/\n7. 蛋白质结构预测：https://swissmodel.expasy.org/\n\n\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/分子生物常用网站.md","raw":"---\ntitle: 分子生物常用网站\ntags: 数据库\ncategories: 数据库\nabbrlink: b14004b4\ndate: 2021-04-05 20:50:48\n---\n\n1. 引物设计网站：https://www.ncbi.nlm.nih.gov/tools/primer-blast/<!-- more -->\n2. 引物质量检测网站：http://biotools.nubic.northwestern.edu/OligoCalc.html\n3. NCBI常用库下载：https://ftp.ncbi.nih.gov/blast/db/FASTA/\n4. Blast+下载：https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/\n5. KEGG蛋白富集分析网站：https://www.kegg.jp/blastkoala/\n6. KEGG功能注释：https://www.genome.jp/tools/kaas/\n7. 蛋白质结构预测：https://swissmodel.expasy.org/\n\n\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"分子生物常用网站","published":1,"updated":"2021-04-20T13:45:31.643Z","_id":"ckwbqwcju003jr0g0a63e1ybt","comments":1,"layout":"post","photos":[],"link":"","content":"<ol>\n<li>引物设计网站：<a href=\"https://www.ncbi.nlm.nih.gov/tools/primer-blast/\">https://www.ncbi.nlm.nih.gov/tools/primer-blast/</a><span id=\"more\"></span></li>\n<li>引物质量检测网站：<a href=\"http://biotools.nubic.northwestern.edu/OligoCalc.html\">http://biotools.nubic.northwestern.edu/OligoCalc.html</a></li>\n<li>NCBI常用库下载：<a href=\"https://ftp.ncbi.nih.gov/blast/db/FASTA/\">https://ftp.ncbi.nih.gov/blast/db/FASTA/</a></li>\n<li>Blast+下载：<a href=\"https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/\">https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/</a></li>\n<li>KEGG蛋白富集分析网站：<a href=\"https://www.kegg.jp/blastkoala/\">https://www.kegg.jp/blastkoala/</a></li>\n<li>KEGG功能注释：<a href=\"https://www.genome.jp/tools/kaas/\">https://www.genome.jp/tools/kaas/</a></li>\n<li>蛋白质结构预测：<a href=\"https://swissmodel.expasy.org/\">https://swissmodel.expasy.org/</a></li>\n</ol>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#109;</a><br>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<ol>\n<li>引物设计网站：<a href=\"https://www.ncbi.nlm.nih.gov/tools/primer-blast/\">https://www.ncbi.nlm.nih.gov/tools/primer-blast/</a>","more":"</li>\n<li>引物质量检测网站：<a href=\"http://biotools.nubic.northwestern.edu/OligoCalc.html\">http://biotools.nubic.northwestern.edu/OligoCalc.html</a></li>\n<li>NCBI常用库下载：<a href=\"https://ftp.ncbi.nih.gov/blast/db/FASTA/\">https://ftp.ncbi.nih.gov/blast/db/FASTA/</a></li>\n<li>Blast+下载：<a href=\"https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/\">https://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST/</a></li>\n<li>KEGG蛋白富集分析网站：<a href=\"https://www.kegg.jp/blastkoala/\">https://www.kegg.jp/blastkoala/</a></li>\n<li>KEGG功能注释：<a href=\"https://www.genome.jp/tools/kaas/\">https://www.genome.jp/tools/kaas/</a></li>\n<li>蛋白质结构预测：<a href=\"https://swissmodel.expasy.org/\">https://swissmodel.expasy.org/</a></li>\n</ol>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#109;</a><br>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"代谢组S-plot","abbrlink":"a1ccb979","date":"2020-12-16T09:24:49.000Z","_content":"\n经过一翻探索，终于把OPLS-DA里面的S-plot给搞清楚了！\n\n<!-- more -->\n\n在代谢组学中，`S-plot`常用来展示差异代谢物。横坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的协方差，纵坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的相关性。通常筛选相关性≥0.8的代谢物为差异代谢物。也可以将代谢物的`VIP`值用不同的颜色进行展示。\n\n```R\n# load  packages\nlibrary(ropls)\nlibrary(ggplot2)\nlibrary(ggsci)\nlibrary(Cairo)\nlibrary(tidyverse)\nlibrary(extrafont)\nloadfonts()\n\n# load data\ndata(sacurine)\nnames(sacurine)\n\n# OPLS-DA\noplsda = opls(dataMatrix, genderFc, predI = 1, orthoI = NA)\n\nloading = oplsda@scoreMN %>% as.data.frame()\ndf = sacurine[[\"dataMatrix\"]] %>% as.data.frame()\n\ncor.value = WGCNA::cor(df, loading)\ncolnames(cor.value) = 'cor'\n\ncov.value = cov(df, loading)\ncolnames(cov.value) = 'cov'\n\nres = cbind(cor.value, cov.value) %>% as.data.frame()\nres$col = ifelse(res$cor > 0.2,'Positive',\n                 ifelse(res$cor < -0.2, 'Negative','NS'))\nres$col = factor(res$col, levels = unique(res$col))\n\np = ggplot(res, aes(cov, cor, col = col)) +\n  geom_vline(xintercept = 0, linetype = 'dashed') +\n  geom_hline(yintercept = 0, linetype = 'dashed') +\n  geom_point(size = 2) +\n  scale_color_manual(values = c('black', 'blue', 'red')) +\n  labs(x = 'Cov',y = 'Corr') +\n  theme_bw() +\n  theme(legend.title = element_blank(),\n        legend.position = c(0.8,0.3))\n\np\n\nggsave(p, filename = 'S-plot.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/代谢组S-plot.md","raw":"---\ntitle: 代谢组S-plot\ntags: R语言\ncategories: R语言\nabbrlink: a1ccb979\ndate: 2020-12-16 17:24:49\n---\n\n经过一翻探索，终于把OPLS-DA里面的S-plot给搞清楚了！\n\n<!-- more -->\n\n在代谢组学中，`S-plot`常用来展示差异代谢物。横坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的协方差，纵坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的相关性。通常筛选相关性≥0.8的代谢物为差异代谢物。也可以将代谢物的`VIP`值用不同的颜色进行展示。\n\n```R\n# load  packages\nlibrary(ropls)\nlibrary(ggplot2)\nlibrary(ggsci)\nlibrary(Cairo)\nlibrary(tidyverse)\nlibrary(extrafont)\nloadfonts()\n\n# load data\ndata(sacurine)\nnames(sacurine)\n\n# OPLS-DA\noplsda = opls(dataMatrix, genderFc, predI = 1, orthoI = NA)\n\nloading = oplsda@scoreMN %>% as.data.frame()\ndf = sacurine[[\"dataMatrix\"]] %>% as.data.frame()\n\ncor.value = WGCNA::cor(df, loading)\ncolnames(cor.value) = 'cor'\n\ncov.value = cov(df, loading)\ncolnames(cov.value) = 'cov'\n\nres = cbind(cor.value, cov.value) %>% as.data.frame()\nres$col = ifelse(res$cor > 0.2,'Positive',\n                 ifelse(res$cor < -0.2, 'Negative','NS'))\nres$col = factor(res$col, levels = unique(res$col))\n\np = ggplot(res, aes(cov, cor, col = col)) +\n  geom_vline(xintercept = 0, linetype = 'dashed') +\n  geom_hline(yintercept = 0, linetype = 'dashed') +\n  geom_point(size = 2) +\n  scale_color_manual(values = c('black', 'blue', 'red')) +\n  labs(x = 'Cov',y = 'Corr') +\n  theme_bw() +\n  theme(legend.title = element_blank(),\n        legend.position = c(0.8,0.3))\n\np\n\nggsave(p, filename = 'S-plot.pdf', \n       width = 5, height = 5, device = cairo_pdf)\n```\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"代谢组S-plot","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcju003mr0g0c3pe7pbp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>经过一翻探索，终于把OPLS-DA里面的S-plot给搞清楚了！</p>\n<span id=\"more\"></span>\n\n<p>在代谢组学中，<code>S-plot</code>常用来展示差异代谢物。横坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的协方差，纵坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的相关性。通常筛选相关性≥0.8的代谢物为差异代谢物。也可以将代谢物的<code>VIP</code>值用不同的颜色进行展示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># load  packages</span></span><br><span class=\"line\">library(ropls)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(Cairo)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load data</span></span><br><span class=\"line\">data(sacurine)</span><br><span class=\"line\"><span class=\"built_in\">names</span>(sacurine)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># OPLS-DA</span></span><br><span class=\"line\">oplsda = opls(dataMatrix, genderFc, predI = <span class=\"number\">1</span>, orthoI = <span class=\"literal\">NA</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">loading = oplsda@scoreMN %&gt;% as.data.frame()</span><br><span class=\"line\">df = sacurine[[<span class=\"string\">&quot;dataMatrix&quot;</span>]] %&gt;% as.data.frame()</span><br><span class=\"line\"></span><br><span class=\"line\">cor.value = WGCNA::cor(df, loading)</span><br><span class=\"line\">colnames(cor.value) = <span class=\"string\">&#x27;cor&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cov.value = cov(df, loading)</span><br><span class=\"line\">colnames(cov.value) = <span class=\"string\">&#x27;cov&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">res = cbind(cor.value, cov.value) %&gt;% as.data.frame()</span><br><span class=\"line\">res$col = ifelse(res$cor &gt; <span class=\"number\">0.2</span>,<span class=\"string\">&#x27;Positive&#x27;</span>,</span><br><span class=\"line\">                 ifelse(res$cor &lt; -<span class=\"number\">0.2</span>, <span class=\"string\">&#x27;Negative&#x27;</span>,<span class=\"string\">&#x27;NS&#x27;</span>))</span><br><span class=\"line\">res$col = factor(res$col, levels = unique(res$col))</span><br><span class=\"line\"></span><br><span class=\"line\">p = ggplot(res, aes(cov, cor, col = col)) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_point(size = <span class=\"number\">2</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>)) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;Cov&#x27;</span>,y = <span class=\"string\">&#x27;Corr&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.title = element_blank(),</span><br><span class=\"line\">        legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.8</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\">ggsave(p, filename = <span class=\"string\">&#x27;S-plot.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/16/%E4%BB%A3%E8%B0%A2%E7%BB%84S-plot/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>经过一翻探索，终于把OPLS-DA里面的S-plot给搞清楚了！</p>","more":"<p>在代谢组学中，<code>S-plot</code>常用来展示差异代谢物。横坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的协方差，纵坐标表示的是每个样品的在OPLS-DA模型上的得分与每个代谢物的相关性。通常筛选相关性≥0.8的代谢物为差异代谢物。也可以将代谢物的<code>VIP</code>值用不同的颜色进行展示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># load  packages</span></span><br><span class=\"line\">library(ropls)</span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(Cairo)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load data</span></span><br><span class=\"line\">data(sacurine)</span><br><span class=\"line\"><span class=\"built_in\">names</span>(sacurine)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># OPLS-DA</span></span><br><span class=\"line\">oplsda = opls(dataMatrix, genderFc, predI = <span class=\"number\">1</span>, orthoI = <span class=\"literal\">NA</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">loading = oplsda@scoreMN %&gt;% as.data.frame()</span><br><span class=\"line\">df = sacurine[[<span class=\"string\">&quot;dataMatrix&quot;</span>]] %&gt;% as.data.frame()</span><br><span class=\"line\"></span><br><span class=\"line\">cor.value = WGCNA::cor(df, loading)</span><br><span class=\"line\">colnames(cor.value) = <span class=\"string\">&#x27;cor&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cov.value = cov(df, loading)</span><br><span class=\"line\">colnames(cov.value) = <span class=\"string\">&#x27;cov&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">res = cbind(cor.value, cov.value) %&gt;% as.data.frame()</span><br><span class=\"line\">res$col = ifelse(res$cor &gt; <span class=\"number\">0.2</span>,<span class=\"string\">&#x27;Positive&#x27;</span>,</span><br><span class=\"line\">                 ifelse(res$cor &lt; -<span class=\"number\">0.2</span>, <span class=\"string\">&#x27;Negative&#x27;</span>,<span class=\"string\">&#x27;NS&#x27;</span>))</span><br><span class=\"line\">res$col = factor(res$col, levels = unique(res$col))</span><br><span class=\"line\"></span><br><span class=\"line\">p = ggplot(res, aes(cov, cor, col = col)) +</span><br><span class=\"line\">  geom_vline(xintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">0</span>, linetype = <span class=\"string\">&#x27;dashed&#x27;</span>) +</span><br><span class=\"line\">  geom_point(size = <span class=\"number\">2</span>) +</span><br><span class=\"line\">  scale_color_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>)) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;Cov&#x27;</span>,y = <span class=\"string\">&#x27;Corr&#x27;</span>) +</span><br><span class=\"line\">  theme_bw() +</span><br><span class=\"line\">  theme(legend.title = element_blank(),</span><br><span class=\"line\">        legend.position = <span class=\"built_in\">c</span>(<span class=\"number\">0.8</span>,<span class=\"number\">0.3</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p</span><br><span class=\"line\"></span><br><span class=\"line\">ggsave(p, filename = <span class=\"string\">&#x27;S-plot.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">5</span>, device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/16/%E4%BB%A3%E8%B0%A2%E7%BB%84S-plot/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"利用ImageJ批量计算叶片面积","date":"2021-02-02T05:20:49.000Z","abbrlink":"利用ImageJ批量计算叶片面积","_content":"\n我以为只有在Linux上才能批量进行图片处理，没想到啊ImageJ在Windows上也可以。<!-- more -->\n\n{% asset_img 1.png %}\n\n{% asset_img 2.png %}\n\n途中的“宏文件”可以使用“宏记录”进行导出。\n\n----\n\n> 💌lixiang117423@gmail.com\n>\n> 💌lixiang117423@foxmail.com","source":"_posts/利用ImageJ批量计算叶片面积.md","raw":"---\ntitle: 利用ImageJ批量计算叶片面积\ndate: 2021-02-02 13:20:49\ntags: 技能\ncategories: 技能\nabbrlink: 利用ImageJ批量计算叶片面积\n---\n\n我以为只有在Linux上才能批量进行图片处理，没想到啊ImageJ在Windows上也可以。<!-- more -->\n\n{% asset_img 1.png %}\n\n{% asset_img 2.png %}\n\n途中的“宏文件”可以使用“宏记录”进行导出。\n\n----\n\n> 💌lixiang117423@gmail.com\n>\n> 💌lixiang117423@foxmail.com","slug":"利用ImageJ批量计算叶片面积","published":1,"updated":"2021-02-02T07:38:29.332Z","_id":"ckwbqwcjv003qr0g0brdz2lgz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我以为只有在Linux上才能批量进行图片处理，没想到啊ImageJ在Windows上也可以。<span id=\"more\"></span></p>\n<img src=\"/2021/02/02/%E5%88%A9%E7%94%A8ImageJ%E6%89%B9%E9%87%8F%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/1.png\" class=\"\">\n\n<img src=\"/2021/02/02/%E5%88%A9%E7%94%A8ImageJ%E6%89%B9%E9%87%8F%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/2.png\" class=\"\">\n\n<p>途中的“宏文件”可以使用“宏记录”进行导出。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#x78;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#x78;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>我以为只有在Linux上才能批量进行图片处理，没想到啊ImageJ在Windows上也可以。","more":"</p>\n<img src=\"/2021/02/02/%E5%88%A9%E7%94%A8ImageJ%E6%89%B9%E9%87%8F%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/1.png\" class=\"\">\n\n<img src=\"/2021/02/02/%E5%88%A9%E7%94%A8ImageJ%E6%89%B9%E9%87%8F%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/2.png\" class=\"\">\n\n<p>途中的“宏文件”可以使用“宏记录”进行导出。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#x78;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#49;&#55;&#52;&#50;&#x33;&#x40;&#x66;&#x6f;&#x78;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"Ubuntu更新R","abbrlink":"4fa06897","date":"2021-01-09T02:42:25.000Z","_content":"\n123参考链接：https://blog.csdn.net/weixin_41929524/article/details/108470515\n\n```shell\nsudo su\necho \"deb http://www.stats.bris.ac.uk/R/bin/linux/ubuntu xenial-cran40/\" >> /etc/apt/sources.list\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\napt-get update\napt-get upgrade\n\nsudo apt-getinstall r-base\nsudo apt-get install r-base-dev\n```\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/Ubuntu更新R.md","raw":"---\ntitle: Ubuntu更新R\ntags: R语言\ncategories: R语言\nabbrlink: 4fa06897\ndate: 2021-01-09 10:42:25\n---\n\n123参考链接：https://blog.csdn.net/weixin_41929524/article/details/108470515\n\n```shell\nsudo su\necho \"deb http://www.stats.bris.ac.uk/R/bin/linux/ubuntu xenial-cran40/\" >> /etc/apt/sources.list\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\napt-get update\napt-get upgrade\n\nsudo apt-getinstall r-base\nsudo apt-get install r-base-dev\n```\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"Ubuntu更新R","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcjw003tr0g01lhs1r43","comments":1,"layout":"post","photos":[],"link":"","content":"<p>123参考链接：<a href=\"https://blog.csdn.net/weixin_41929524/article/details/108470515\">https://blog.csdn.net/weixin_41929524/article/details/108470515</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">echo &quot;deb http://www.stats.bris.ac.uk/R/bin/linux/ubuntu xenial-cran40/&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get upgrade</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-getinstall r-base</span><br><span class=\"line\">sudo apt-get install r-base-dev</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>123参考链接：<a href=\"https://blog.csdn.net/weixin_41929524/article/details/108470515\">https://blog.csdn.net/weixin_41929524/article/details/108470515</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\">echo &quot;deb http://www.stats.bris.ac.uk/R/bin/linux/ubuntu xenial-cran40/&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\">apt-get upgrade</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-getinstall r-base</span><br><span class=\"line\">sudo apt-get install r-base-dev</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#49;&#49;&#x37;&#52;&#x32;&#x33;&#x40;&#x67;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n"},{"title":"分类-回归树(CART)在R语言中的实现","abbrlink":"dca5ae94","date":"2020-12-22T07:36:07.000Z","_content":"\n**CART 模型** ，即 Classification And Regression Trees。它和一般回归分析类似，是用来对变量进行解释和预测的工具，也是数据挖掘中的一种常用算法。如果因变量是连续数据，相对应的分析称为回归树，如果因变量是分类数据，则相应的分析称为分类树。\n\n<!-- more -->\n\n```R\nrm(list = ls())\n\nlibrary(rpart) \nlibrary(maptree)\nlibrary(TH.data)\nlibrary(tidyverse)\n\n# load data\ndf = data.table::fread('df.csv', header = T, encoding = 'UTF-8')\n\ncolnames(df)\n\n# for Taxa_S\ndf_1 = df[,-c(2,3)]\nformula_1 = Taxa_S ~.\nfit_1 = rpart(formula_1, method='anova', data = df_1)\npfit_1=prune(fit_1,cp= fit_1$cptable[which.min(fit_1$cptable [,\"xerror\"]),\"CP\"]) \npdf(file = 'Taxa_S.回归树.pdf', width = 8, height = 5,family=\"GB1\")\ndraw.tree(fit_1,digits = 2) \ndev.off()\n\nprintcp(fit_1) %>% as.data.frame() %>%\n  write.csv(file = 'Taxa_S结果.csv', row.names = FALSE)\n\n\n# for Individuals\ndf_2 = df[,-c(1,3)]\nformula_2 = Individuals ~.\nfit_2 = rpart(formula_2, method='anova', data = df_2)\npfit_2=prune(fit_2,cp= fit_2$cptable[which.min (fit_2$cptable [,\"xerror\"]),\"CP\"]) \n\npdf(file = 'Individuals.回归树.pdf', width = 8, height = 5,family=\"GB1\")\ndraw.tree(fit_2,digits = 2) \ndev.off()\n\nprintcp(fit_2) %>% as.data.frame() %>%\n  write.csv(file = 'Individuals结果.csv', row.names = FALSE)\n\n\n# for Chao_1\ndf_3 = df[,-c(1,2)]\nformula_3 = Chao_1 ~.\nfit_3 = rpart(formula_3, method='anova', data = df_3)\npfit_3=prune(fit_3,cp= fit_3$cptable[which.min(fit_3$cptable [,\"xerror\"]),\"CP\"]) \n\npdf(file = 'Chao_1.回归树.pdf', width = 8, height = 5,family=\"GB1\")\ndraw.tree(fit_3,digits = 2) \ndev.off()\n\nprintcp(fit_3) %>% as.data.frame() %>%\n  write.csv(file = 'Chao_1结果.csv', row.names = FALSE)\n```\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/分类-回归树-CART-在R语言中的实现.md","raw":"---\ntitle: 分类-回归树(CART)在R语言中的实现\ntags: R语言\ncategories: R语言\nabbrlink: dca5ae94\ndate: 2020-12-22 15:36:07\n---\n\n**CART 模型** ，即 Classification And Regression Trees。它和一般回归分析类似，是用来对变量进行解释和预测的工具，也是数据挖掘中的一种常用算法。如果因变量是连续数据，相对应的分析称为回归树，如果因变量是分类数据，则相应的分析称为分类树。\n\n<!-- more -->\n\n```R\nrm(list = ls())\n\nlibrary(rpart) \nlibrary(maptree)\nlibrary(TH.data)\nlibrary(tidyverse)\n\n# load data\ndf = data.table::fread('df.csv', header = T, encoding = 'UTF-8')\n\ncolnames(df)\n\n# for Taxa_S\ndf_1 = df[,-c(2,3)]\nformula_1 = Taxa_S ~.\nfit_1 = rpart(formula_1, method='anova', data = df_1)\npfit_1=prune(fit_1,cp= fit_1$cptable[which.min(fit_1$cptable [,\"xerror\"]),\"CP\"]) \npdf(file = 'Taxa_S.回归树.pdf', width = 8, height = 5,family=\"GB1\")\ndraw.tree(fit_1,digits = 2) \ndev.off()\n\nprintcp(fit_1) %>% as.data.frame() %>%\n  write.csv(file = 'Taxa_S结果.csv', row.names = FALSE)\n\n\n# for Individuals\ndf_2 = df[,-c(1,3)]\nformula_2 = Individuals ~.\nfit_2 = rpart(formula_2, method='anova', data = df_2)\npfit_2=prune(fit_2,cp= fit_2$cptable[which.min (fit_2$cptable [,\"xerror\"]),\"CP\"]) \n\npdf(file = 'Individuals.回归树.pdf', width = 8, height = 5,family=\"GB1\")\ndraw.tree(fit_2,digits = 2) \ndev.off()\n\nprintcp(fit_2) %>% as.data.frame() %>%\n  write.csv(file = 'Individuals结果.csv', row.names = FALSE)\n\n\n# for Chao_1\ndf_3 = df[,-c(1,2)]\nformula_3 = Chao_1 ~.\nfit_3 = rpart(formula_3, method='anova', data = df_3)\npfit_3=prune(fit_3,cp= fit_3$cptable[which.min(fit_3$cptable [,\"xerror\"]),\"CP\"]) \n\npdf(file = 'Chao_1.回归树.pdf', width = 8, height = 5,family=\"GB1\")\ndraw.tree(fit_3,digits = 2) \ndev.off()\n\nprintcp(fit_3) %>% as.data.frame() %>%\n  write.csv(file = 'Chao_1结果.csv', row.names = FALSE)\n```\n\n{% asset_img 1.png %}\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"分类-回归树-CART-在R语言中的实现","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcjw003vr0g0gbdf20hk","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>CART 模型</strong> ，即 Classification And Regression Trees。它和一般回归分析类似，是用来对变量进行解释和预测的工具，也是数据挖掘中的一种常用算法。如果因变量是连续数据，相对应的分析称为回归树，如果因变量是分类数据，则相应的分析称为分类树。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(rpart) </span><br><span class=\"line\">library(maptree)</span><br><span class=\"line\">library(TH.data)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load data</span></span><br><span class=\"line\">df = data.table::fread(<span class=\"string\">&#x27;df.csv&#x27;</span>, header = <span class=\"built_in\">T</span>, encoding = <span class=\"string\">&#x27;UTF-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">colnames(df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for Taxa_S</span></span><br><span class=\"line\">df_1 = df[,-<span class=\"built_in\">c</span>(<span class=\"number\">2</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\">formula_1 = Taxa_S ~.</span><br><span class=\"line\">fit_1 = rpart(formula_1, method=<span class=\"string\">&#x27;anova&#x27;</span>, data = df_1)</span><br><span class=\"line\">pfit_1=prune(fit_1,cp= fit_1$cptable[which.min(fit_1$cptable [,<span class=\"string\">&quot;xerror&quot;</span>]),<span class=\"string\">&quot;CP&quot;</span>]) </span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;Taxa_S.回归树.pdf&#x27;</span>, width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>,family=<span class=\"string\">&quot;GB1&quot;</span>)</span><br><span class=\"line\">draw.tree(fit_1,digits = <span class=\"number\">2</span>) </span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\">printcp(fit_1) %&gt;% as.data.frame() %&gt;%</span><br><span class=\"line\">  write.csv(file = <span class=\"string\">&#x27;Taxa_S结果.csv&#x27;</span>, row.names = <span class=\"literal\">FALSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for Individuals</span></span><br><span class=\"line\">df_2 = df[,-<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\">formula_2 = Individuals ~.</span><br><span class=\"line\">fit_2 = rpart(formula_2, method=<span class=\"string\">&#x27;anova&#x27;</span>, data = df_2)</span><br><span class=\"line\">pfit_2=prune(fit_2,cp= fit_2$cptable[which.min (fit_2$cptable [,<span class=\"string\">&quot;xerror&quot;</span>]),<span class=\"string\">&quot;CP&quot;</span>]) </span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;Individuals.回归树.pdf&#x27;</span>, width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>,family=<span class=\"string\">&quot;GB1&quot;</span>)</span><br><span class=\"line\">draw.tree(fit_2,digits = <span class=\"number\">2</span>) </span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\">printcp(fit_2) %&gt;% as.data.frame() %&gt;%</span><br><span class=\"line\">  write.csv(file = <span class=\"string\">&#x27;Individuals结果.csv&#x27;</span>, row.names = <span class=\"literal\">FALSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for Chao_1</span></span><br><span class=\"line\">df_3 = df[,-<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)]</span><br><span class=\"line\">formula_3 = Chao_1 ~.</span><br><span class=\"line\">fit_3 = rpart(formula_3, method=<span class=\"string\">&#x27;anova&#x27;</span>, data = df_3)</span><br><span class=\"line\">pfit_3=prune(fit_3,cp= fit_3$cptable[which.min(fit_3$cptable [,<span class=\"string\">&quot;xerror&quot;</span>]),<span class=\"string\">&quot;CP&quot;</span>]) </span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;Chao_1.回归树.pdf&#x27;</span>, width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>,family=<span class=\"string\">&quot;GB1&quot;</span>)</span><br><span class=\"line\">draw.tree(fit_3,digits = <span class=\"number\">2</span>) </span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\">printcp(fit_3) %&gt;% as.data.frame() %&gt;%</span><br><span class=\"line\">  write.csv(file = <span class=\"string\">&#x27;Chao_1结果.csv&#x27;</span>, row.names = <span class=\"literal\">FALSE</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/22/%E5%88%86%E7%B1%BB-%E5%9B%9E%E5%BD%92%E6%A0%91-CART-%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p><strong>CART 模型</strong> ，即 Classification And Regression Trees。它和一般回归分析类似，是用来对变量进行解释和预测的工具，也是数据挖掘中的一种常用算法。如果因变量是连续数据，相对应的分析称为回归树，如果因变量是分类数据，则相应的分析称为分类树。</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(rpart) </span><br><span class=\"line\">library(maptree)</span><br><span class=\"line\">library(TH.data)</span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load data</span></span><br><span class=\"line\">df = data.table::fread(<span class=\"string\">&#x27;df.csv&#x27;</span>, header = <span class=\"built_in\">T</span>, encoding = <span class=\"string\">&#x27;UTF-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">colnames(df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for Taxa_S</span></span><br><span class=\"line\">df_1 = df[,-<span class=\"built_in\">c</span>(<span class=\"number\">2</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\">formula_1 = Taxa_S ~.</span><br><span class=\"line\">fit_1 = rpart(formula_1, method=<span class=\"string\">&#x27;anova&#x27;</span>, data = df_1)</span><br><span class=\"line\">pfit_1=prune(fit_1,cp= fit_1$cptable[which.min(fit_1$cptable [,<span class=\"string\">&quot;xerror&quot;</span>]),<span class=\"string\">&quot;CP&quot;</span>]) </span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;Taxa_S.回归树.pdf&#x27;</span>, width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>,family=<span class=\"string\">&quot;GB1&quot;</span>)</span><br><span class=\"line\">draw.tree(fit_1,digits = <span class=\"number\">2</span>) </span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\">printcp(fit_1) %&gt;% as.data.frame() %&gt;%</span><br><span class=\"line\">  write.csv(file = <span class=\"string\">&#x27;Taxa_S结果.csv&#x27;</span>, row.names = <span class=\"literal\">FALSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for Individuals</span></span><br><span class=\"line\">df_2 = df[,-<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\">formula_2 = Individuals ~.</span><br><span class=\"line\">fit_2 = rpart(formula_2, method=<span class=\"string\">&#x27;anova&#x27;</span>, data = df_2)</span><br><span class=\"line\">pfit_2=prune(fit_2,cp= fit_2$cptable[which.min (fit_2$cptable [,<span class=\"string\">&quot;xerror&quot;</span>]),<span class=\"string\">&quot;CP&quot;</span>]) </span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;Individuals.回归树.pdf&#x27;</span>, width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>,family=<span class=\"string\">&quot;GB1&quot;</span>)</span><br><span class=\"line\">draw.tree(fit_2,digits = <span class=\"number\">2</span>) </span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\">printcp(fit_2) %&gt;% as.data.frame() %&gt;%</span><br><span class=\"line\">  write.csv(file = <span class=\"string\">&#x27;Individuals结果.csv&#x27;</span>, row.names = <span class=\"literal\">FALSE</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for Chao_1</span></span><br><span class=\"line\">df_3 = df[,-<span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)]</span><br><span class=\"line\">formula_3 = Chao_1 ~.</span><br><span class=\"line\">fit_3 = rpart(formula_3, method=<span class=\"string\">&#x27;anova&#x27;</span>, data = df_3)</span><br><span class=\"line\">pfit_3=prune(fit_3,cp= fit_3$cptable[which.min(fit_3$cptable [,<span class=\"string\">&quot;xerror&quot;</span>]),<span class=\"string\">&quot;CP&quot;</span>]) </span><br><span class=\"line\"></span><br><span class=\"line\">pdf(file = <span class=\"string\">&#x27;Chao_1.回归树.pdf&#x27;</span>, width = <span class=\"number\">8</span>, height = <span class=\"number\">5</span>,family=<span class=\"string\">&quot;GB1&quot;</span>)</span><br><span class=\"line\">draw.tree(fit_3,digits = <span class=\"number\">2</span>) </span><br><span class=\"line\">dev.off()</span><br><span class=\"line\"></span><br><span class=\"line\">printcp(fit_3) %&gt;% as.data.frame() %&gt;%</span><br><span class=\"line\">  write.csv(file = <span class=\"string\">&#x27;Chao_1结果.csv&#x27;</span>, row.names = <span class=\"literal\">FALSE</span>)</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2020/12/22/%E5%88%86%E7%B1%BB-%E5%9B%9E%E5%BD%92%E6%A0%91-CART-%E5%9C%A8R%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#x67;&#49;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"分组柱状图加散点","abbrlink":"309798c8","date":"2020-12-21T07:16:24.000Z","_content":"\nchu处理数据的时候遇到一个问题：分面分组柱状图怎么加上对应的数据散点？\n\n群里问了一遍没人回答，自己解决了！\n\n<!-- more -->\n\n```R\nrm(list = ls())\n\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(ggsci)\nlibrary(extrafont)\nloadfonts()\n\n# loading data\ndf = read.csv('data_for_plot.csv', header = T, encoding = 'utf-8') %>%\n  reshape2::melt(id.vars = c(1:3, 16:18))\ncolnames(df)[1] = 'receptor'\ndf$receptor = as.character(df$receptor)\ndf$Neighbored.by = as.character(df$Neighbored.by)\n\np = ggplot(df) +\n  geom_bar(aes(gene, mean, fill = Neighbored.by),\n           stat = 'identity',position = 'dodge',width = 1) +\n  geom_point(aes(gene, value, group = Neighbored.by), \n             position = position_dodge(width = 1)) +\n  geom_hline(yintercept = 4.5, color = 'white') +\n  geom_errorbar(aes(gene, \n                    ymin = mean - se, \n                    ymax = mean + se,\n                    group = Neighbored.by), \n                position = position_dodge(width = 1), \n                width = 0.5) +\n  scale_y_continuous(expand = c(0,0)) +\n  scale_fill_manual(values = c('#008000','#FFA74F',\n                               '#663300','#FF5900')) +\n  facet_grid(~ receptor) +\n  labs(x = '', y = 'Relatice expression') +\n  theme_bw()+\n  theme(axis.ticks.x = element_blank(),\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'))\np\nggsave(p, filename = 'res.pdf', \n       width = 5, height = 4,\n       device = cairo_pdf)\n```\n\n----\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/分组柱状图加散点.md","raw":"---\ntitle: 分组柱状图加散点\ntags: R语言\ncategories: R语言\nabbrlink: 309798c8\ndate: 2020-12-21 15:16:24\n---\n\nchu处理数据的时候遇到一个问题：分面分组柱状图怎么加上对应的数据散点？\n\n群里问了一遍没人回答，自己解决了！\n\n<!-- more -->\n\n```R\nrm(list = ls())\n\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(ggsci)\nlibrary(extrafont)\nloadfonts()\n\n# loading data\ndf = read.csv('data_for_plot.csv', header = T, encoding = 'utf-8') %>%\n  reshape2::melt(id.vars = c(1:3, 16:18))\ncolnames(df)[1] = 'receptor'\ndf$receptor = as.character(df$receptor)\ndf$Neighbored.by = as.character(df$Neighbored.by)\n\np = ggplot(df) +\n  geom_bar(aes(gene, mean, fill = Neighbored.by),\n           stat = 'identity',position = 'dodge',width = 1) +\n  geom_point(aes(gene, value, group = Neighbored.by), \n             position = position_dodge(width = 1)) +\n  geom_hline(yintercept = 4.5, color = 'white') +\n  geom_errorbar(aes(gene, \n                    ymin = mean - se, \n                    ymax = mean + se,\n                    group = Neighbored.by), \n                position = position_dodge(width = 1), \n                width = 0.5) +\n  scale_y_continuous(expand = c(0,0)) +\n  scale_fill_manual(values = c('#008000','#FFA74F',\n                               '#663300','#FF5900')) +\n  facet_grid(~ receptor) +\n  labs(x = '', y = 'Relatice expression') +\n  theme_bw()+\n  theme(axis.ticks.x = element_blank(),\n        legend.text = element_text(color = 'black',size = 12, family = 'Arial', face = 'plain'),\n        panel.background = element_blank(),\n        panel.grid = element_blank(),\n        axis.text = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.title = element_text(color = 'black',size = 15, family = 'Arial', face = 'plain'),\n        axis.ticks = element_line(color = 'black'))\np\nggsave(p, filename = 'res.pdf', \n       width = 5, height = 4,\n       device = cairo_pdf)\n```\n\n----\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"分组柱状图加散点","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcjx003yr0g09tew24m9","comments":1,"layout":"post","photos":[],"link":"","content":"<p>chu处理数据的时候遇到一个问题：分面分组柱状图怎么加上对应的数据散点？</p>\n<p>群里问了一遍没人回答，自己解决了！</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(reshape2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># loading data</span></span><br><span class=\"line\">df = read.csv(<span class=\"string\">&#x27;data_for_plot.csv&#x27;</span>, header = <span class=\"built_in\">T</span>, encoding = <span class=\"string\">&#x27;utf-8&#x27;</span>) %&gt;%</span><br><span class=\"line\">  reshape2::melt(id.vars = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>:<span class=\"number\">3</span>, <span class=\"number\">16</span>:<span class=\"number\">18</span>))</span><br><span class=\"line\">colnames(df)[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;receptor&#x27;</span></span><br><span class=\"line\">df$receptor = <span class=\"built_in\">as.character</span>(df$receptor)</span><br><span class=\"line\">df$Neighbored.by = <span class=\"built_in\">as.character</span>(df$Neighbored.by)</span><br><span class=\"line\"></span><br><span class=\"line\">p = ggplot(df) +</span><br><span class=\"line\">  geom_bar(aes(gene, mean, fill = Neighbored.by),</span><br><span class=\"line\">           stat = <span class=\"string\">&#x27;identity&#x27;</span>,position = <span class=\"string\">&#x27;dodge&#x27;</span>,width = <span class=\"number\">1</span>) +</span><br><span class=\"line\">  geom_point(aes(gene, value, group = Neighbored.by), </span><br><span class=\"line\">             position = position_dodge(width = <span class=\"number\">1</span>)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">4.5</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  geom_errorbar(aes(gene, </span><br><span class=\"line\">                    ymin = mean - se, </span><br><span class=\"line\">                    ymax = mean + se,</span><br><span class=\"line\">                    group = Neighbored.by), </span><br><span class=\"line\">                position = position_dodge(width = <span class=\"number\">1</span>), </span><br><span class=\"line\">                width = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">  scale_fill_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;#008000&#x27;</span>,<span class=\"string\">&#x27;#FFA74F&#x27;</span>,</span><br><span class=\"line\">                               <span class=\"string\">&#x27;#663300&#x27;</span>,<span class=\"string\">&#x27;#FF5900&#x27;</span>)) +</span><br><span class=\"line\">  facet_grid(~ receptor) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;Relatice expression&#x27;</span>) +</span><br><span class=\"line\">  theme_bw()+</span><br><span class=\"line\">  theme(axis.ticks.x = element_blank(),</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">p</span><br><span class=\"line\">ggsave(p, filename = <span class=\"string\">&#x27;res.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">4</span>,</span><br><span class=\"line\">       device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;\">&#108;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>chu处理数据的时候遇到一个问题：分面分组柱状图怎么加上对应的数据散点？</p>\n<p>群里问了一遍没人回答，自己解决了！</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm(<span class=\"built_in\">list</span> = ls())</span><br><span class=\"line\"></span><br><span class=\"line\">library(tidyverse)</span><br><span class=\"line\">library(reshape2)</span><br><span class=\"line\">library(ggsci)</span><br><span class=\"line\">library(extrafont)</span><br><span class=\"line\">loadfonts()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># loading data</span></span><br><span class=\"line\">df = read.csv(<span class=\"string\">&#x27;data_for_plot.csv&#x27;</span>, header = <span class=\"built_in\">T</span>, encoding = <span class=\"string\">&#x27;utf-8&#x27;</span>) %&gt;%</span><br><span class=\"line\">  reshape2::melt(id.vars = <span class=\"built_in\">c</span>(<span class=\"number\">1</span>:<span class=\"number\">3</span>, <span class=\"number\">16</span>:<span class=\"number\">18</span>))</span><br><span class=\"line\">colnames(df)[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;receptor&#x27;</span></span><br><span class=\"line\">df$receptor = <span class=\"built_in\">as.character</span>(df$receptor)</span><br><span class=\"line\">df$Neighbored.by = <span class=\"built_in\">as.character</span>(df$Neighbored.by)</span><br><span class=\"line\"></span><br><span class=\"line\">p = ggplot(df) +</span><br><span class=\"line\">  geom_bar(aes(gene, mean, fill = Neighbored.by),</span><br><span class=\"line\">           stat = <span class=\"string\">&#x27;identity&#x27;</span>,position = <span class=\"string\">&#x27;dodge&#x27;</span>,width = <span class=\"number\">1</span>) +</span><br><span class=\"line\">  geom_point(aes(gene, value, group = Neighbored.by), </span><br><span class=\"line\">             position = position_dodge(width = <span class=\"number\">1</span>)) +</span><br><span class=\"line\">  geom_hline(yintercept = <span class=\"number\">4.5</span>, color = <span class=\"string\">&#x27;white&#x27;</span>) +</span><br><span class=\"line\">  geom_errorbar(aes(gene, </span><br><span class=\"line\">                    ymin = mean - se, </span><br><span class=\"line\">                    ymax = mean + se,</span><br><span class=\"line\">                    group = Neighbored.by), </span><br><span class=\"line\">                position = position_dodge(width = <span class=\"number\">1</span>), </span><br><span class=\"line\">                width = <span class=\"number\">0.5</span>) +</span><br><span class=\"line\">  scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>)) +</span><br><span class=\"line\">  scale_fill_manual(values = <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;#008000&#x27;</span>,<span class=\"string\">&#x27;#FFA74F&#x27;</span>,</span><br><span class=\"line\">                               <span class=\"string\">&#x27;#663300&#x27;</span>,<span class=\"string\">&#x27;#FF5900&#x27;</span>)) +</span><br><span class=\"line\">  facet_grid(~ receptor) +</span><br><span class=\"line\">  labs(x = <span class=\"string\">&#x27;&#x27;</span>, y = <span class=\"string\">&#x27;Relatice expression&#x27;</span>) +</span><br><span class=\"line\">  theme_bw()+</span><br><span class=\"line\">  theme(axis.ticks.x = element_blank(),</span><br><span class=\"line\">        legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">12</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        panel.background = element_blank(),</span><br><span class=\"line\">        panel.grid = element_blank(),</span><br><span class=\"line\">        axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">15</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">        axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">p</span><br><span class=\"line\">ggsave(p, filename = <span class=\"string\">&#x27;res.pdf&#x27;</span>, </span><br><span class=\"line\">       width = <span class=\"number\">5</span>, height = <span class=\"number\">4</span>,</span><br><span class=\"line\">       device = cairo_pdf)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;\">&#108;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"带连接线的堆积柱状图","abbrlink":"3a1c1c6c","date":"2021-01-17T12:15:51.000Z","_content":"\n堆积柱状图加上连接线能够更好地看出变化情况，参照“宏基因组”的[教程](https://mp.weixin.qq.com/s/FZWinr14RTs6YSUE_juaug)改写了代码，封装成了一个函数。\n\n<!-- more -->\n\n```R\nbar_percent_segemnt <- function(df){\n  \n  library(tidyverse)\n  library(ggsci)\n  \n  colnames(df)[1] = 'cat'\n  \n  sum_group = apply(df[,2:ncol(df)], 2, sum)\n  for (i in 1:length(sum_group)) {\n    df[,i+1] = df[,i+1] / sum_group[i]\n  }\n  \n  df.long <- df %>% reshape2::melt(id.vars = 1)\n  colnames(df.long) <- c('cat','group','value')\n  \n  ## 组间连线数据：\n  ## 假设第一列是Phylum\n  link_dat <- df %>% \n    arrange(by=desc(cat)) %>% \n    mutate_if(is.numeric, cumsum) \n  \n  bar.width <- 0.7\n  link_dat <- link_dat[, c(1,2,rep(3:(ncol(link_dat)-1),each=2), ncol(link_dat))]\n  \n  link_dat <- data.frame(y=t(matrix(t(link_dat[,-1]), nrow=2)))\n  \n  link_dat$x.1 <- 1:(ncol(df)-2)+bar.width/2\n  link_dat$x.2 <- 1:(ncol(df)-2)+(1-bar.width/2)\n  \n  p <- ggplot(df.long, aes(x = group, y = value, fill = cat)) + \n    geom_bar(stat = \"identity\", width=bar.width, \n             col='black')  + \n    geom_segment(data=link_dat,\n                 aes(x=x.1, xend=x.2, y=y.1, yend=y.2), inherit.aes = F) +\n    scale_y_continuous(expand = c(0,0),labels = scales::percent) +\n    scale_fill_aaas() +\n    theme_bw() +\n    theme(legend.title = element_blank(),\n          legend.text = element_text(color = 'black',size = 10, family = 'Arial', face = 'plain'),\n          panel.background = element_blank(),\n          panel.grid = element_blank(),\n          axis.text = element_text(color = 'black',size = 10, family = 'Arial', face = 'plain'),\n          axis.title = element_text(color = 'black',size = 10, family = 'Arial', face = 'plain'),\n          axis.ticks = element_line(color = 'black'))\n  \n  return(p)\n}\n```\n\n{%asset_img 1.png %}\n\n---\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com\n\n","source":"_posts/带连接线的堆积柱状图.md","raw":"---\ntitle: 带连接线的堆积柱状图\ntags: R语言\ncategories: R语言\nabbrlink: 3a1c1c6c\ndate: 2021-01-17 20:15:51\n---\n\n堆积柱状图加上连接线能够更好地看出变化情况，参照“宏基因组”的[教程](https://mp.weixin.qq.com/s/FZWinr14RTs6YSUE_juaug)改写了代码，封装成了一个函数。\n\n<!-- more -->\n\n```R\nbar_percent_segemnt <- function(df){\n  \n  library(tidyverse)\n  library(ggsci)\n  \n  colnames(df)[1] = 'cat'\n  \n  sum_group = apply(df[,2:ncol(df)], 2, sum)\n  for (i in 1:length(sum_group)) {\n    df[,i+1] = df[,i+1] / sum_group[i]\n  }\n  \n  df.long <- df %>% reshape2::melt(id.vars = 1)\n  colnames(df.long) <- c('cat','group','value')\n  \n  ## 组间连线数据：\n  ## 假设第一列是Phylum\n  link_dat <- df %>% \n    arrange(by=desc(cat)) %>% \n    mutate_if(is.numeric, cumsum) \n  \n  bar.width <- 0.7\n  link_dat <- link_dat[, c(1,2,rep(3:(ncol(link_dat)-1),each=2), ncol(link_dat))]\n  \n  link_dat <- data.frame(y=t(matrix(t(link_dat[,-1]), nrow=2)))\n  \n  link_dat$x.1 <- 1:(ncol(df)-2)+bar.width/2\n  link_dat$x.2 <- 1:(ncol(df)-2)+(1-bar.width/2)\n  \n  p <- ggplot(df.long, aes(x = group, y = value, fill = cat)) + \n    geom_bar(stat = \"identity\", width=bar.width, \n             col='black')  + \n    geom_segment(data=link_dat,\n                 aes(x=x.1, xend=x.2, y=y.1, yend=y.2), inherit.aes = F) +\n    scale_y_continuous(expand = c(0,0),labels = scales::percent) +\n    scale_fill_aaas() +\n    theme_bw() +\n    theme(legend.title = element_blank(),\n          legend.text = element_text(color = 'black',size = 10, family = 'Arial', face = 'plain'),\n          panel.background = element_blank(),\n          panel.grid = element_blank(),\n          axis.text = element_text(color = 'black',size = 10, family = 'Arial', face = 'plain'),\n          axis.title = element_text(color = 'black',size = 10, family = 'Arial', face = 'plain'),\n          axis.ticks = element_line(color = 'black'))\n  \n  return(p)\n}\n```\n\n{%asset_img 1.png %}\n\n---\n\n>>💌lixiang117423@gmail.com\n>\n>>💌lixiang117423@foxmail.com\n\n","slug":"带连接线的堆积柱状图","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcjy0041r0g0bvqz3xwi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>堆积柱状图加上连接线能够更好地看出变化情况，参照“宏基因组”的<a href=\"https://mp.weixin.qq.com/s/FZWinr14RTs6YSUE_juaug\">教程</a>改写了代码，封装成了一个函数。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bar_percent_segemnt &lt;- <span class=\"keyword\">function</span>(df)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  library(tidyverse)</span><br><span class=\"line\">  library(ggsci)</span><br><span class=\"line\">  </span><br><span class=\"line\">  colnames(df)[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;cat&#x27;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  sum_group = apply(df[,<span class=\"number\">2</span>:ncol(df)], <span class=\"number\">2</span>, <span class=\"built_in\">sum</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(sum_group)) &#123;</span><br><span class=\"line\">    df[,i+<span class=\"number\">1</span>] = df[,i+<span class=\"number\">1</span>] / sum_group[i]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  df.long &lt;- df %&gt;% reshape2::melt(id.vars = <span class=\"number\">1</span>)</span><br><span class=\"line\">  colnames(df.long) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;cat&#x27;</span>,<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;value&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">## 组间连线数据：</span></span><br><span class=\"line\">  <span class=\"comment\">## 假设第一列是Phylum</span></span><br><span class=\"line\">  link_dat &lt;- df %&gt;% </span><br><span class=\"line\">    arrange(by=desc(cat)) %&gt;% </span><br><span class=\"line\">    mutate_if(<span class=\"built_in\">is.numeric</span>, <span class=\"built_in\">cumsum</span>) </span><br><span class=\"line\">  </span><br><span class=\"line\">  bar.width &lt;- 0.7</span><br><span class=\"line\">  link_dat &lt;- link_dat[, <span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"built_in\">rep</span>(<span class=\"number\">3</span>:(ncol(link_dat)-<span class=\"number\">1</span>),each=<span class=\"number\">2</span>), ncol(link_dat))]</span><br><span class=\"line\">  </span><br><span class=\"line\">  link_dat &lt;- data.frame(y=t(matrix(t(link_dat[,-<span class=\"number\">1</span>]), nrow=<span class=\"number\">2</span>)))</span><br><span class=\"line\">  </span><br><span class=\"line\">  link_dat$x.1 &lt;- <span class=\"number\">1</span>:(ncol(df)-<span class=\"number\">2</span>)+bar.width/<span class=\"number\">2</span></span><br><span class=\"line\">  link_dat$x.2 &lt;- <span class=\"number\">1</span>:(ncol(df)-<span class=\"number\">2</span>)+(<span class=\"number\">1</span>-bar.width/<span class=\"number\">2</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  p &lt;- ggplot(df.long, aes(x = group, y = value, fill = cat)) + </span><br><span class=\"line\">    geom_bar(stat = <span class=\"string\">&quot;identity&quot;</span>, width=bar.width, </span><br><span class=\"line\">             col=<span class=\"string\">&#x27;black&#x27;</span>)  + </span><br><span class=\"line\">    geom_segment(data=link_dat,</span><br><span class=\"line\">                 aes(x=x.1, xend=x.2, y=y.1, yend=y.2), inherit.aes = <span class=\"built_in\">F</span>) +</span><br><span class=\"line\">    scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>),labels = scales::percent) +</span><br><span class=\"line\">    scale_fill_aaas() +</span><br><span class=\"line\">    theme_bw() +</span><br><span class=\"line\">    theme(legend.title = element_blank(),</span><br><span class=\"line\">          legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">          panel.background = element_blank(),</span><br><span class=\"line\">          panel.grid = element_blank(),</span><br><span class=\"line\">          axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">          axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">          axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">return</span>(p)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/17/%E5%B8%A6%E8%BF%9E%E6%8E%A5%E7%BA%BF%E7%9A%84%E5%A0%86%E7%A7%AF%E6%9F%B1%E7%8A%B6%E5%9B%BE/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>堆积柱状图加上连接线能够更好地看出变化情况，参照“宏基因组”的<a href=\"https://mp.weixin.qq.com/s/FZWinr14RTs6YSUE_juaug\">教程</a>改写了代码，封装成了一个函数。</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bar_percent_segemnt &lt;- <span class=\"keyword\">function</span>(df)&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  library(tidyverse)</span><br><span class=\"line\">  library(ggsci)</span><br><span class=\"line\">  </span><br><span class=\"line\">  colnames(df)[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;cat&#x27;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  sum_group = apply(df[,<span class=\"number\">2</span>:ncol(df)], <span class=\"number\">2</span>, <span class=\"built_in\">sum</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(sum_group)) &#123;</span><br><span class=\"line\">    df[,i+<span class=\"number\">1</span>] = df[,i+<span class=\"number\">1</span>] / sum_group[i]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  df.long &lt;- df %&gt;% reshape2::melt(id.vars = <span class=\"number\">1</span>)</span><br><span class=\"line\">  colnames(df.long) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;cat&#x27;</span>,<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;value&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">## 组间连线数据：</span></span><br><span class=\"line\">  <span class=\"comment\">## 假设第一列是Phylum</span></span><br><span class=\"line\">  link_dat &lt;- df %&gt;% </span><br><span class=\"line\">    arrange(by=desc(cat)) %&gt;% </span><br><span class=\"line\">    mutate_if(<span class=\"built_in\">is.numeric</span>, <span class=\"built_in\">cumsum</span>) </span><br><span class=\"line\">  </span><br><span class=\"line\">  bar.width &lt;- 0.7</span><br><span class=\"line\">  link_dat &lt;- link_dat[, <span class=\"built_in\">c</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"built_in\">rep</span>(<span class=\"number\">3</span>:(ncol(link_dat)-<span class=\"number\">1</span>),each=<span class=\"number\">2</span>), ncol(link_dat))]</span><br><span class=\"line\">  </span><br><span class=\"line\">  link_dat &lt;- data.frame(y=t(matrix(t(link_dat[,-<span class=\"number\">1</span>]), nrow=<span class=\"number\">2</span>)))</span><br><span class=\"line\">  </span><br><span class=\"line\">  link_dat$x.1 &lt;- <span class=\"number\">1</span>:(ncol(df)-<span class=\"number\">2</span>)+bar.width/<span class=\"number\">2</span></span><br><span class=\"line\">  link_dat$x.2 &lt;- <span class=\"number\">1</span>:(ncol(df)-<span class=\"number\">2</span>)+(<span class=\"number\">1</span>-bar.width/<span class=\"number\">2</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  p &lt;- ggplot(df.long, aes(x = group, y = value, fill = cat)) + </span><br><span class=\"line\">    geom_bar(stat = <span class=\"string\">&quot;identity&quot;</span>, width=bar.width, </span><br><span class=\"line\">             col=<span class=\"string\">&#x27;black&#x27;</span>)  + </span><br><span class=\"line\">    geom_segment(data=link_dat,</span><br><span class=\"line\">                 aes(x=x.1, xend=x.2, y=y.1, yend=y.2), inherit.aes = <span class=\"built_in\">F</span>) +</span><br><span class=\"line\">    scale_y_continuous(expand = <span class=\"built_in\">c</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>),labels = scales::percent) +</span><br><span class=\"line\">    scale_fill_aaas() +</span><br><span class=\"line\">    theme_bw() +</span><br><span class=\"line\">    theme(legend.title = element_blank(),</span><br><span class=\"line\">          legend.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">          panel.background = element_blank(),</span><br><span class=\"line\">          panel.grid = element_blank(),</span><br><span class=\"line\">          axis.text = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">          axis.title = element_text(color = <span class=\"string\">&#x27;black&#x27;</span>,size = <span class=\"number\">10</span>, family = <span class=\"string\">&#x27;Arial&#x27;</span>, face = <span class=\"string\">&#x27;plain&#x27;</span>),</span><br><span class=\"line\">          axis.ticks = element_line(color = <span class=\"string\">&#x27;black&#x27;</span>))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">return</span>(p)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2021/01/17/%E5%B8%A6%E8%BF%9E%E6%8E%A5%E7%BA%BF%E7%9A%84%E5%A0%86%E7%A7%AF%E6%9F%B1%E7%8A%B6%E5%9B%BE/1.png\" class=\"\">\n\n<hr>\n<blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#110;&#103;&#x31;&#49;&#x37;&#52;&#50;&#x33;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#64;&#102;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n</blockquote>"},{"title":"基因or蛋白序列文件处理常用Python代码","abbrlink":"c13c3eb8","date":"2021-04-21T02:22:41.000Z","_content":"\n序列转换成fasta文件及后续的SwissProt数据库爬虫代码。<!-- more -->\n\nExcel格式序列转换成fasta格式文件：\n\n```python\nimport os\n\nos.chdir('C:/Users/Administrator/Desktop/')\n\nres = open('植物病原互作通路基因fasta文件.fasta','w+')\n\noriginal_file = open('植物病原互作通路_查询结果.txt','r')\n\nfor line in original_file.readlines()[1:]:\n    gene = '>' + line.split(' ')[0]\n    pro = line.split(' ')[5].split('\\n')[0]\n    res.writelines([gene,'\\n',pro,'\\n'])\n\nres.close()\n```\n\n将比对到SwissProt数据库的结果进行爬虫：\n\n```python\nimport os\nimport random\nimport openpyxl\nimport csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\nos.chdir('C:/Users/Administrator/Desktop')\n\nres = open('植物病原互作通路基因蛋白爬取swiss数据库结果.txt','w+',encoding = \"utf-8\")\n\noriginal_file = open('植物病原互作通路基因蛋白swiss数据库blast结果.txt','r')\n\nfor line in original_file.readlines()[0:]:\n    gene = line.split('\\t')[0]\n    pro = line.split('\\t')[1]\n    pro_id = pro.split('.')[0]\n    similarity = line.split('\\t')[2]\n    \n    if float(similarity) >= 70:\n        evalue = line.split('\\t')[10]\n        score = line.split('\\t')[11].replace('\\n','')\n\n        spider_link = 'https://www.uniprot.org/uniprot/' + pro_id\n\n        res_spider = requests.get(spider_link)\n\n        soup = BeautifulSoup(res_spider.text,'html.parser')\n\n        organism = soup.find('div',id = 'content-organism', class_ = 'entry-overview-content').get_text()\n        gene_1 = soup.find('div',id = 'content-gene', class_ = 'entry-overview-content').get_text()\n        protein = soup.find('div',id = 'content-protein', class_ = 'entry-overview-content').get_text()\n        \n        status = soup.find('div', id = 'content-status',class_ = 'entry-overview-content').find('span', class_ = 'context-help tooltipped-click').get_text()\n        res_str = re.findall('<p>(.*?)</p>',status)\n        status = status.replace(res_str[0],'').replace('\\n','.').replace('                                    <p></p>','').replace('-','').replace('leveli','level')\n\n        if False:\n            try:\n                function = soup.find('div', class_ = 'annotation').find('span').get_text().replace('By similarity','')\n            except AttributeError:\n                function = 'None'\n\n        res.writelines([gene,'\\t',pro,'\\t',similarity,'\\t',evalue,'\\t',score,'\\t',organism,'\\t',gene_1,'\\t',protein,'\\t',status,'\\n'])\n    else:\n        next\n\nres.close()\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/基因or蛋白序列文件处理常用Python代码.md","raw":"---\ntitle: 基因or蛋白序列文件处理常用Python代码\ntags: Python\ncategories: Python\nabbrlink: c13c3eb8\ndate: 2021-04-21 10:22:41\n---\n\n序列转换成fasta文件及后续的SwissProt数据库爬虫代码。<!-- more -->\n\nExcel格式序列转换成fasta格式文件：\n\n```python\nimport os\n\nos.chdir('C:/Users/Administrator/Desktop/')\n\nres = open('植物病原互作通路基因fasta文件.fasta','w+')\n\noriginal_file = open('植物病原互作通路_查询结果.txt','r')\n\nfor line in original_file.readlines()[1:]:\n    gene = '>' + line.split(' ')[0]\n    pro = line.split(' ')[5].split('\\n')[0]\n    res.writelines([gene,'\\n',pro,'\\n'])\n\nres.close()\n```\n\n将比对到SwissProt数据库的结果进行爬虫：\n\n```python\nimport os\nimport random\nimport openpyxl\nimport csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport re\n\nos.chdir('C:/Users/Administrator/Desktop')\n\nres = open('植物病原互作通路基因蛋白爬取swiss数据库结果.txt','w+',encoding = \"utf-8\")\n\noriginal_file = open('植物病原互作通路基因蛋白swiss数据库blast结果.txt','r')\n\nfor line in original_file.readlines()[0:]:\n    gene = line.split('\\t')[0]\n    pro = line.split('\\t')[1]\n    pro_id = pro.split('.')[0]\n    similarity = line.split('\\t')[2]\n    \n    if float(similarity) >= 70:\n        evalue = line.split('\\t')[10]\n        score = line.split('\\t')[11].replace('\\n','')\n\n        spider_link = 'https://www.uniprot.org/uniprot/' + pro_id\n\n        res_spider = requests.get(spider_link)\n\n        soup = BeautifulSoup(res_spider.text,'html.parser')\n\n        organism = soup.find('div',id = 'content-organism', class_ = 'entry-overview-content').get_text()\n        gene_1 = soup.find('div',id = 'content-gene', class_ = 'entry-overview-content').get_text()\n        protein = soup.find('div',id = 'content-protein', class_ = 'entry-overview-content').get_text()\n        \n        status = soup.find('div', id = 'content-status',class_ = 'entry-overview-content').find('span', class_ = 'context-help tooltipped-click').get_text()\n        res_str = re.findall('<p>(.*?)</p>',status)\n        status = status.replace(res_str[0],'').replace('\\n','.').replace('                                    <p></p>','').replace('-','').replace('leveli','level')\n\n        if False:\n            try:\n                function = soup.find('div', class_ = 'annotation').find('span').get_text().replace('By similarity','')\n            except AttributeError:\n                function = 'None'\n\n        res.writelines([gene,'\\t',pro,'\\t',similarity,'\\t',evalue,'\\t',score,'\\t',organism,'\\t',gene_1,'\\t',protein,'\\t',status,'\\n'])\n    else:\n        next\n\nres.close()\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"基因or蛋白序列文件处理常用Python代码","published":1,"updated":"2021-04-21T02:27:03.346Z","_id":"ckwbqwcjy0044r0g09wdq9zq7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>序列转换成fasta文件及后续的SwissProt数据库爬虫代码。<span id=\"more\"></span></p>\n<p>Excel格式序列转换成fasta格式文件：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路基因fasta文件.fasta&#x27;</span>,<span class=\"string\">&#x27;w+&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">original_file = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路_查询结果.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> original_file.readlines()[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    gene = <span class=\"string\">&#x27;&gt;&#x27;</span> + line.split(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    pro = line.split(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">5</span>].split(<span class=\"string\">&#x27;\\n&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    res.writelines([gene,<span class=\"string\">&#x27;\\n&#x27;</span>,pro,<span class=\"string\">&#x27;\\n&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">res.close()</span><br></pre></td></tr></table></figure>\n\n<p>将比对到SwissProt数据库的结果进行爬虫：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> openpyxl</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路基因蛋白爬取swiss数据库结果.txt&#x27;</span>,<span class=\"string\">&#x27;w+&#x27;</span>,encoding = <span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">original_file = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路基因蛋白swiss数据库blast结果.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> original_file.readlines()[<span class=\"number\">0</span>:]:</span><br><span class=\"line\">    gene = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    pro = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    pro_id = pro.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    similarity = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">float</span>(similarity) &gt;= <span class=\"number\">70</span>:</span><br><span class=\"line\">        evalue = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">10</span>]</span><br><span class=\"line\">        score = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">11</span>].replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        spider_link = <span class=\"string\">&#x27;https://www.uniprot.org/uniprot/&#x27;</span> + pro_id</span><br><span class=\"line\"></span><br><span class=\"line\">        res_spider = requests.get(spider_link)</span><br><span class=\"line\"></span><br><span class=\"line\">        soup = BeautifulSoup(res_spider.text,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        organism = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-organism&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        gene_1 = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-gene&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        protein = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-protein&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        </span><br><span class=\"line\">        status = soup.find(<span class=\"string\">&#x27;div&#x27;</span>, <span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-status&#x27;</span>,class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).find(<span class=\"string\">&#x27;span&#x27;</span>, class_ = <span class=\"string\">&#x27;context-help tooltipped-click&#x27;</span>).get_text()</span><br><span class=\"line\">        res_str = re.findall(<span class=\"string\">&#x27;&lt;p&gt;(.*?)&lt;/p&gt;&#x27;</span>,status)</span><br><span class=\"line\">        status = status.replace(res_str[<span class=\"number\">0</span>],<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;.&#x27;</span>).replace(<span class=\"string\">&#x27;                                    &lt;p&gt;&lt;/p&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;-&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;leveli&#x27;</span>,<span class=\"string\">&#x27;level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"literal\">False</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                function = soup.find(<span class=\"string\">&#x27;div&#x27;</span>, class_ = <span class=\"string\">&#x27;annotation&#x27;</span>).find(<span class=\"string\">&#x27;span&#x27;</span>).get_text().replace(<span class=\"string\">&#x27;By similarity&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                function = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        res.writelines([gene,<span class=\"string\">&#x27;\\t&#x27;</span>,pro,<span class=\"string\">&#x27;\\t&#x27;</span>,similarity,<span class=\"string\">&#x27;\\t&#x27;</span>,evalue,<span class=\"string\">&#x27;\\t&#x27;</span>,score,<span class=\"string\">&#x27;\\t&#x27;</span>,organism,<span class=\"string\">&#x27;\\t&#x27;</span>,gene_1,<span class=\"string\">&#x27;\\t&#x27;</span>,protein,<span class=\"string\">&#x27;\\t&#x27;</span>,status,<span class=\"string\">&#x27;\\n&#x27;</span>])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">next</span></span><br><span class=\"line\"></span><br><span class=\"line\">res.close()</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>序列转换成fasta文件及后续的SwissProt数据库爬虫代码。","more":"</p>\n<p>Excel格式序列转换成fasta格式文件：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路基因fasta文件.fasta&#x27;</span>,<span class=\"string\">&#x27;w+&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">original_file = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路_查询结果.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> original_file.readlines()[<span class=\"number\">1</span>:]:</span><br><span class=\"line\">    gene = <span class=\"string\">&#x27;&gt;&#x27;</span> + line.split(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    pro = line.split(<span class=\"string\">&#x27; &#x27;</span>)[<span class=\"number\">5</span>].split(<span class=\"string\">&#x27;\\n&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    res.writelines([gene,<span class=\"string\">&#x27;\\n&#x27;</span>,pro,<span class=\"string\">&#x27;\\n&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">res.close()</span><br></pre></td></tr></table></figure>\n\n<p>将比对到SwissProt数据库的结果进行爬虫：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> openpyxl</span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路基因蛋白爬取swiss数据库结果.txt&#x27;</span>,<span class=\"string\">&#x27;w+&#x27;</span>,encoding = <span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">original_file = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;植物病原互作通路基因蛋白swiss数据库blast结果.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> original_file.readlines()[<span class=\"number\">0</span>:]:</span><br><span class=\"line\">    gene = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    pro = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    pro_id = pro.split(<span class=\"string\">&#x27;.&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    similarity = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">2</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">float</span>(similarity) &gt;= <span class=\"number\">70</span>:</span><br><span class=\"line\">        evalue = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">10</span>]</span><br><span class=\"line\">        score = line.split(<span class=\"string\">&#x27;\\t&#x27;</span>)[<span class=\"number\">11</span>].replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        spider_link = <span class=\"string\">&#x27;https://www.uniprot.org/uniprot/&#x27;</span> + pro_id</span><br><span class=\"line\"></span><br><span class=\"line\">        res_spider = requests.get(spider_link)</span><br><span class=\"line\"></span><br><span class=\"line\">        soup = BeautifulSoup(res_spider.text,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        organism = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-organism&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        gene_1 = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-gene&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        protein = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-protein&#x27;</span>, class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).get_text()</span><br><span class=\"line\">        </span><br><span class=\"line\">        status = soup.find(<span class=\"string\">&#x27;div&#x27;</span>, <span class=\"built_in\">id</span> = <span class=\"string\">&#x27;content-status&#x27;</span>,class_ = <span class=\"string\">&#x27;entry-overview-content&#x27;</span>).find(<span class=\"string\">&#x27;span&#x27;</span>, class_ = <span class=\"string\">&#x27;context-help tooltipped-click&#x27;</span>).get_text()</span><br><span class=\"line\">        res_str = re.findall(<span class=\"string\">&#x27;&lt;p&gt;(.*?)&lt;/p&gt;&#x27;</span>,status)</span><br><span class=\"line\">        status = status.replace(res_str[<span class=\"number\">0</span>],<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;.&#x27;</span>).replace(<span class=\"string\">&#x27;                                    &lt;p&gt;&lt;/p&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;-&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>).replace(<span class=\"string\">&#x27;leveli&#x27;</span>,<span class=\"string\">&#x27;level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"literal\">False</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                function = soup.find(<span class=\"string\">&#x27;div&#x27;</span>, class_ = <span class=\"string\">&#x27;annotation&#x27;</span>).find(<span class=\"string\">&#x27;span&#x27;</span>).get_text().replace(<span class=\"string\">&#x27;By similarity&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">except</span> AttributeError:</span><br><span class=\"line\">                function = <span class=\"string\">&#x27;None&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        res.writelines([gene,<span class=\"string\">&#x27;\\t&#x27;</span>,pro,<span class=\"string\">&#x27;\\t&#x27;</span>,similarity,<span class=\"string\">&#x27;\\t&#x27;</span>,evalue,<span class=\"string\">&#x27;\\t&#x27;</span>,score,<span class=\"string\">&#x27;\\t&#x27;</span>,organism,<span class=\"string\">&#x27;\\t&#x27;</span>,gene_1,<span class=\"string\">&#x27;\\t&#x27;</span>,protein,<span class=\"string\">&#x27;\\t&#x27;</span>,status,<span class=\"string\">&#x27;\\n&#x27;</span>])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">next</span></span><br><span class=\"line\"></span><br><span class=\"line\">res.close()</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"合并基因组文件","abbrlink":"6a3c6c2a","date":"2021-04-07T04:49:21.000Z","_content":"\n将基因组`fasta`文件合并成一行：<!-- more -->\n\n```python\nimport os\nimport time\n\nstart = time.time()\n\nos.chdir('C:/Users/Administrator/Desktop/')\nprint(os.getcwd())\n\nres_dict = {}\n\nwith open('YLG.sort.fasta','r') as pep:\n    for line in pep:\n        if line.startswith('>'):\n            name = line.strip().split()[0]\n            res_dict[name] = ''\n        else:\n            res_dict[name] += line.replace('\\n','')\n\ngen = ''\nfor cds_id, sequence in res_dict.items():\n    #print(sequence)\n    gen = gen + sequence\n\nwith open('genome.txt', 'a') as file:\n        file.write(gen)\n\nend = time.time()\nprint(end - start)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/合并基因组文件.md","raw":"---\ntitle: 合并基因组文件\ntags: Python\ncategories: Python\nabbrlink: 6a3c6c2a\ndate: 2021-04-07 12:49:21\n---\n\n将基因组`fasta`文件合并成一行：<!-- more -->\n\n```python\nimport os\nimport time\n\nstart = time.time()\n\nos.chdir('C:/Users/Administrator/Desktop/')\nprint(os.getcwd())\n\nres_dict = {}\n\nwith open('YLG.sort.fasta','r') as pep:\n    for line in pep:\n        if line.startswith('>'):\n            name = line.strip().split()[0]\n            res_dict[name] = ''\n        else:\n            res_dict[name] += line.replace('\\n','')\n\ngen = ''\nfor cds_id, sequence in res_dict.items():\n    #print(sequence)\n    gen = gen + sequence\n\nwith open('genome.txt', 'a') as file:\n        file.write(gen)\n\nend = time.time()\nprint(end - start)\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"合并基因组文件","published":1,"updated":"2021-04-07T05:19:01.039Z","_id":"ckwbqwcjz0047r0g0b4yr3b1l","comments":1,"layout":"post","photos":[],"link":"","content":"<p>将基因组<code>fasta</code>文件合并成一行：<span id=\"more\"></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">start = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop/&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\">res_dict = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;YLG.sort.fasta&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> pep:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> pep:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> line.startswith(<span class=\"string\">&#x27;&gt;&#x27;</span>):</span><br><span class=\"line\">            name = line.strip().split()[<span class=\"number\">0</span>]</span><br><span class=\"line\">            res_dict[name] = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            res_dict[name] += line.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">gen = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cds_id, sequence <span class=\"keyword\">in</span> res_dict.items():</span><br><span class=\"line\">    <span class=\"comment\">#print(sequence)</span></span><br><span class=\"line\">    gen = gen + sequence</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;genome.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(gen)</span><br><span class=\"line\"></span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(end - start)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>将基因组<code>fasta</code>文件合并成一行：","more":"</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">start = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&#x27;C:/Users/Administrator/Desktop/&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(os.getcwd())</span><br><span class=\"line\"></span><br><span class=\"line\">res_dict = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;YLG.sort.fasta&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> pep:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> pep:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> line.startswith(<span class=\"string\">&#x27;&gt;&#x27;</span>):</span><br><span class=\"line\">            name = line.strip().split()[<span class=\"number\">0</span>]</span><br><span class=\"line\">            res_dict[name] = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            res_dict[name] += line.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">gen = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cds_id, sequence <span class=\"keyword\">in</span> res_dict.items():</span><br><span class=\"line\">    <span class=\"comment\">#print(sequence)</span></span><br><span class=\"line\">    gen = gen + sequence</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;genome.txt&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(gen)</span><br><span class=\"line\"></span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(end - start)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#108;&#x69;&#120;&#x69;&#x61;&#110;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#x61;&#110;&#103;&#x31;&#49;&#55;&#x34;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"安装hexo遇到的bug及解决方法","abbrlink":"c12a96f2","date":"2020-12-17T08:44:58.000Z","_content":"\n- 如果在运行`hexo init`和`npm install`报错的话，用 Node.js 自带的 `Node.js command prompt` 执行这两个命令就行了。\n- 在`cmd`命令行中且切换目录：`cd /d d:`\n\n<!-- more -->\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/安装hexo遇到的bug及解决方法.md","raw":"---\ntitle: 安装hexo遇到的bug及解决方法\ntags: hexo\ncategories: hexo\nabbrlink: c12a96f2\ndate: 2020-12-17 16:44:58\n---\n\n- 如果在运行`hexo init`和`npm install`报错的话，用 Node.js 自带的 `Node.js command prompt` 执行这两个命令就行了。\n- 在`cmd`命令行中且切换目录：`cd /d d:`\n\n<!-- more -->\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"安装hexo遇到的bug及解决方法","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwck0004ar0g0ge8pbaut","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>如果在运行<code>hexo init</code>和<code>npm install</code>报错的话，用 Node.js 自带的 <code>Node.js command prompt</code> 执行这两个命令就行了。</li>\n<li>在<code>cmd</code>命令行中且切换目录：<code>cd /d d:</code></li>\n</ul>\n<span id=\"more\"></span>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<ul>\n<li>如果在运行<code>hexo init</code>和<code>npm install</code>报错的话，用 Node.js 自带的 <code>Node.js command prompt</code> 执行这两个命令就行了。</li>\n<li>在<code>cmd</code>命令行中且切换目录：<code>cd /d d:</code></li>\n</ul>","more":"<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#50;&#51;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;\">&#108;&#x69;&#x78;&#x69;&#x61;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x66;&#111;&#x78;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"开发一个R包","abbrlink":"6f22d8f6","date":"2020-01-10T08:26:48.000Z","_content":"\nR最强大的莫过于统计分析和可视化，关键是完全的开源免费啊。有时候使用多了以后，会积累一些函数或者是数据库，而这些函数和数据库通常能够帮助到别人，这时候就可以把这些函数或者是数据库打包成R包，上传到CRAN、Bioconductor或者是GitHub，让 其他的使用者使用自己的包。\n\n<!-- more -->\n\n我开发的第一个包是[riceidconverter](https://cran.r-project.org/web/packages/riceidconverter/index.html)，主要的用途是水稻的ID转换。整个包的开发断断续续经历了两个月，包括数据的爬取(Python脚本见[GitHub]([https://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC](https://github.com/GitHub-LiXiang/R/tree/master/R包开发/riceidconverter/NCBI爬虫Python脚本)))、整理、函数的构思，以及最艰难的调试。\n\n{% asset_img 1.png %}\n\n# 主要流程\n\n我的开发流程是软件安装、构思R包、准备数据、编写R包、调试代码、R包提交。下面就从这几方面一一道来我这个小白的经验。\n\n# 软件安装\n\n## MikTex\n\n`MikTex`主要是用于编译后面的pdf文档，如果包只是自己用，就不用安装这个软件。软件的下载地址是[MikTex](https://miktex.org/download)。安装的话一路默认就OK。\n\n## roxygen2\n\n`roxygen2`是个R包，通过注释的方式，生成文档。直接`install。package('roxygen2')`即可。\n\n## devtools\n\n这个包主要是用来`build`和`check`R包的。直接`install。package('devtools')`即可。\n\n# 构思R包\n\n这个比较难说清楚，每个R包都有一定的功能的，构思的过程就是R包功能完善的过程。\n\n# 准备数据\n\n这个环节，也是很难说清除。如果数据要内嵌到R包，而且包里面的函数会用到数据，那表头名称和函数中的变量名称要保持一致。\n\n# 编写R包\n\n## 创建项目\n\n直接用RStudio创建`R Package即可`：`File→New Project→New Directory→R Package`。<font color=red>需要注意的是选择的路径不可以有中文字符！</font>会生成下面的文件：\n\n{% asset_img 2.png %}\n\n比较重要的是`man`、`R`和`DESCRIPTION`这三个文件(夹)。其他的几个可以删除。\n\n## 编写DESCRIPTION\n\n这个文件是用来描述一些基本信息的，这些信息也是必填的一些信息。\n\n{% asset_img 3.png %}\n\n下面这是我的包的一些描述：\n\n{% asset_img 4.png %}\n\n<font color=red>需要注意的是在`Title`部分，大小写要求很严格。</font>\n\n另外需要注意的是在`Description`部分，每个缩写都需要有详细的解释，如果有链接，还需要将链接放在`<>`里面，而不是`()`。\n\n## 编写函数\n\n在`R`这个文件夹下面创建对应的`.R`文件。比如想实现的功能是`t`检验，那就创建一个`t.test.R`。打开以后还是有几行`#'`开头的描述，这些是必须的：\n\n{% asset_img 6.png %}\n\n`@name`是指这个函数的名称，其他的就是和`DESCRIPTION`类似的；`@param`表示的是参数；`@example`表示的是函数使用的例子；`@return`表示的是返回的结果；接着下一行编写函数就行：\n\n{% asset_img 7.png %}\n\n<font color=red>需要注意的是在`R`文件夹下面还应该创建一个和R包名称相同的`.R`文件。</font>只需要填写这些东西就可以了：\n\n{% asset_img 8.png %}\n\n## 调试代码\n\n这个部分，就需要不断的调试，就是使用不同的数据去测试这个函数是否可靠。\n\n## 添加数据\n\n如果需要将数据内嵌在R包怎么办呢？一行代码搞定：`use_data(test.data, internal = TRUE)`。`test.data`就是先前准备好的数据，需要先加载到R环境中。会在`R`文件夹下生成一个`sysdata.rda`文件。\n\n# R包提交\n\n在完成编写和调试后，就只剩下`build`、`check`和`upload`了。\n\n先要生成注释文件：\n\n````R\nlibrary(roxygen2)\nroxygenize('packagename')\n````\n\n## build\n\n一行代码：\n\n```R\nsystem('R CMD build packagename --binary')\n```\n\n会生成一个`tar.gz`文件。这个文件用于后面的提交。\n\n## check \n\n一行代码：\n\n```R\nsystem('R CMD check packagename --as-cran')\n```\n\n完后会生成一个`riceidconverter.Rcheck`文件夹，里面有各种报告。在RStudio输出界面没有`ERROR`、`Warning`还有`NOTE`，那就基本没问题了。\n\n## 安装\n\n先尝试一下能不能安装上：\n\n```R\nsystem('R CMD INSTALL packagename')\n```\n\n## <font color=red>提交</font>\n\n这个就比较简单了，直接在[https://cran.r-project.org/submit.html](https://cran.r-project.org/submit.html)按照要求提交`tar.gz`文件就行。\n\n---\n\n最后，等着邮件吧。\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/开发一个R包.md","raw":"---\ntitle: 开发一个R包\ntags: R语言\ncategories: R语言\nabbrlink: 6f22d8f6\ndate: 2020-01-10 16:26:48\n---\n\nR最强大的莫过于统计分析和可视化，关键是完全的开源免费啊。有时候使用多了以后，会积累一些函数或者是数据库，而这些函数和数据库通常能够帮助到别人，这时候就可以把这些函数或者是数据库打包成R包，上传到CRAN、Bioconductor或者是GitHub，让 其他的使用者使用自己的包。\n\n<!-- more -->\n\n我开发的第一个包是[riceidconverter](https://cran.r-project.org/web/packages/riceidconverter/index.html)，主要的用途是水稻的ID转换。整个包的开发断断续续经历了两个月，包括数据的爬取(Python脚本见[GitHub]([https://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC](https://github.com/GitHub-LiXiang/R/tree/master/R包开发/riceidconverter/NCBI爬虫Python脚本)))、整理、函数的构思，以及最艰难的调试。\n\n{% asset_img 1.png %}\n\n# 主要流程\n\n我的开发流程是软件安装、构思R包、准备数据、编写R包、调试代码、R包提交。下面就从这几方面一一道来我这个小白的经验。\n\n# 软件安装\n\n## MikTex\n\n`MikTex`主要是用于编译后面的pdf文档，如果包只是自己用，就不用安装这个软件。软件的下载地址是[MikTex](https://miktex.org/download)。安装的话一路默认就OK。\n\n## roxygen2\n\n`roxygen2`是个R包，通过注释的方式，生成文档。直接`install。package('roxygen2')`即可。\n\n## devtools\n\n这个包主要是用来`build`和`check`R包的。直接`install。package('devtools')`即可。\n\n# 构思R包\n\n这个比较难说清楚，每个R包都有一定的功能的，构思的过程就是R包功能完善的过程。\n\n# 准备数据\n\n这个环节，也是很难说清除。如果数据要内嵌到R包，而且包里面的函数会用到数据，那表头名称和函数中的变量名称要保持一致。\n\n# 编写R包\n\n## 创建项目\n\n直接用RStudio创建`R Package即可`：`File→New Project→New Directory→R Package`。<font color=red>需要注意的是选择的路径不可以有中文字符！</font>会生成下面的文件：\n\n{% asset_img 2.png %}\n\n比较重要的是`man`、`R`和`DESCRIPTION`这三个文件(夹)。其他的几个可以删除。\n\n## 编写DESCRIPTION\n\n这个文件是用来描述一些基本信息的，这些信息也是必填的一些信息。\n\n{% asset_img 3.png %}\n\n下面这是我的包的一些描述：\n\n{% asset_img 4.png %}\n\n<font color=red>需要注意的是在`Title`部分，大小写要求很严格。</font>\n\n另外需要注意的是在`Description`部分，每个缩写都需要有详细的解释，如果有链接，还需要将链接放在`<>`里面，而不是`()`。\n\n## 编写函数\n\n在`R`这个文件夹下面创建对应的`.R`文件。比如想实现的功能是`t`检验，那就创建一个`t.test.R`。打开以后还是有几行`#'`开头的描述，这些是必须的：\n\n{% asset_img 6.png %}\n\n`@name`是指这个函数的名称，其他的就是和`DESCRIPTION`类似的；`@param`表示的是参数；`@example`表示的是函数使用的例子；`@return`表示的是返回的结果；接着下一行编写函数就行：\n\n{% asset_img 7.png %}\n\n<font color=red>需要注意的是在`R`文件夹下面还应该创建一个和R包名称相同的`.R`文件。</font>只需要填写这些东西就可以了：\n\n{% asset_img 8.png %}\n\n## 调试代码\n\n这个部分，就需要不断的调试，就是使用不同的数据去测试这个函数是否可靠。\n\n## 添加数据\n\n如果需要将数据内嵌在R包怎么办呢？一行代码搞定：`use_data(test.data, internal = TRUE)`。`test.data`就是先前准备好的数据，需要先加载到R环境中。会在`R`文件夹下生成一个`sysdata.rda`文件。\n\n# R包提交\n\n在完成编写和调试后，就只剩下`build`、`check`和`upload`了。\n\n先要生成注释文件：\n\n````R\nlibrary(roxygen2)\nroxygenize('packagename')\n````\n\n## build\n\n一行代码：\n\n```R\nsystem('R CMD build packagename --binary')\n```\n\n会生成一个`tar.gz`文件。这个文件用于后面的提交。\n\n## check \n\n一行代码：\n\n```R\nsystem('R CMD check packagename --as-cran')\n```\n\n完后会生成一个`riceidconverter.Rcheck`文件夹，里面有各种报告。在RStudio输出界面没有`ERROR`、`Warning`还有`NOTE`，那就基本没问题了。\n\n## 安装\n\n先尝试一下能不能安装上：\n\n```R\nsystem('R CMD INSTALL packagename')\n```\n\n## <font color=red>提交</font>\n\n这个就比较简单了，直接在[https://cran.r-project.org/submit.html](https://cran.r-project.org/submit.html)按照要求提交`tar.gz`文件就行。\n\n---\n\n最后，等着邮件吧。\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"开发一个R包","published":1,"updated":"2021-08-30T12:14:29.592Z","_id":"ckwbqwckt004lr0g0anqsdnhu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>R最强大的莫过于统计分析和可视化，关键是完全的开源免费啊。有时候使用多了以后，会积累一些函数或者是数据库，而这些函数和数据库通常能够帮助到别人，这时候就可以把这些函数或者是数据库打包成R包，上传到CRAN、Bioconductor或者是GitHub，让 其他的使用者使用自己的包。</p>\n<span id=\"more\"></span>\n\n<p>我开发的第一个包是<a href=\"https://cran.r-project.org/web/packages/riceidconverter/index.html\">riceidconverter</a>，主要的用途是水稻的ID转换。整个包的开发断断续续经历了两个月，包括数据的爬取(Python脚本见<a href=\"%5Bhttps://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC%5D(https://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC)\">GitHub</a>)、整理、函数的构思，以及最艰难的调试。</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/1.png\" class=\"\">\n\n<h1 id=\"主要流程\"><a href=\"#主要流程\" class=\"headerlink\" title=\"主要流程\"></a>主要流程</h1><p>我的开发流程是软件安装、构思R包、准备数据、编写R包、调试代码、R包提交。下面就从这几方面一一道来我这个小白的经验。</p>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"MikTex\"><a href=\"#MikTex\" class=\"headerlink\" title=\"MikTex\"></a>MikTex</h2><p><code>MikTex</code>主要是用于编译后面的pdf文档，如果包只是自己用，就不用安装这个软件。软件的下载地址是<a href=\"https://miktex.org/download\">MikTex</a>。安装的话一路默认就OK。</p>\n<h2 id=\"roxygen2\"><a href=\"#roxygen2\" class=\"headerlink\" title=\"roxygen2\"></a>roxygen2</h2><p><code>roxygen2</code>是个R包，通过注释的方式，生成文档。直接<code>install。package(&#39;roxygen2&#39;)</code>即可。</p>\n<h2 id=\"devtools\"><a href=\"#devtools\" class=\"headerlink\" title=\"devtools\"></a>devtools</h2><p>这个包主要是用来<code>build</code>和<code>check</code>R包的。直接<code>install。package(&#39;devtools&#39;)</code>即可。</p>\n<h1 id=\"构思R包\"><a href=\"#构思R包\" class=\"headerlink\" title=\"构思R包\"></a>构思R包</h1><p>这个比较难说清楚，每个R包都有一定的功能的，构思的过程就是R包功能完善的过程。</p>\n<h1 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h1><p>这个环节，也是很难说清除。如果数据要内嵌到R包，而且包里面的函数会用到数据，那表头名称和函数中的变量名称要保持一致。</p>\n<h1 id=\"编写R包\"><a href=\"#编写R包\" class=\"headerlink\" title=\"编写R包\"></a>编写R包</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>直接用RStudio创建<code>R Package即可</code>：<code>File→New Project→New Directory→R Package</code>。<font color=red>需要注意的是选择的路径不可以有中文字符！</font>会生成下面的文件：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/2.png\" class=\"\">\n\n<p>比较重要的是<code>man</code>、<code>R</code>和<code>DESCRIPTION</code>这三个文件(夹)。其他的几个可以删除。</p>\n<h2 id=\"编写DESCRIPTION\"><a href=\"#编写DESCRIPTION\" class=\"headerlink\" title=\"编写DESCRIPTION\"></a>编写DESCRIPTION</h2><p>这个文件是用来描述一些基本信息的，这些信息也是必填的一些信息。</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/3.png\" class=\"\">\n\n<p>下面这是我的包的一些描述：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/4.png\" class=\"\">\n\n<p><font color=red>需要注意的是在<code>Title</code>部分，大小写要求很严格。</font></p>\n<p>另外需要注意的是在<code>Description</code>部分，每个缩写都需要有详细的解释，如果有链接，还需要将链接放在<code>&lt;&gt;</code>里面，而不是<code>()</code>。</p>\n<h2 id=\"编写函数\"><a href=\"#编写函数\" class=\"headerlink\" title=\"编写函数\"></a>编写函数</h2><p>在<code>R</code>这个文件夹下面创建对应的<code>.R</code>文件。比如想实现的功能是<code>t</code>检验，那就创建一个<code>t.test.R</code>。打开以后还是有几行<code>#&#39;</code>开头的描述，这些是必须的：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/6.png\" class=\"\">\n\n<p><code>@name</code>是指这个函数的名称，其他的就是和<code>DESCRIPTION</code>类似的；<code>@param</code>表示的是参数；<code>@example</code>表示的是函数使用的例子；<code>@return</code>表示的是返回的结果；接着下一行编写函数就行：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/7.png\" class=\"\">\n\n<p><font color=red>需要注意的是在<code>R</code>文件夹下面还应该创建一个和R包名称相同的<code>.R</code>文件。</font>只需要填写这些东西就可以了：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/8.png\" class=\"\">\n\n<h2 id=\"调试代码\"><a href=\"#调试代码\" class=\"headerlink\" title=\"调试代码\"></a>调试代码</h2><p>这个部分，就需要不断的调试，就是使用不同的数据去测试这个函数是否可靠。</p>\n<h2 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h2><p>如果需要将数据内嵌在R包怎么办呢？一行代码搞定：<code>use_data(test.data, internal = TRUE)</code>。<code>test.data</code>就是先前准备好的数据，需要先加载到R环境中。会在<code>R</code>文件夹下生成一个<code>sysdata.rda</code>文件。</p>\n<h1 id=\"R包提交\"><a href=\"#R包提交\" class=\"headerlink\" title=\"R包提交\"></a>R包提交</h1><p>在完成编写和调试后，就只剩下<code>build</code>、<code>check</code>和<code>upload</code>了。</p>\n<p>先要生成注释文件：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(roxygen2)</span><br><span class=\"line\">roxygenize(<span class=\"string\">&#x27;packagename&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build\"></a>build</h2><p>一行代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&#x27;R CMD build packagename --binary&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>会生成一个<code>tar.gz</code>文件。这个文件用于后面的提交。</p>\n<h2 id=\"check\"><a href=\"#check\" class=\"headerlink\" title=\"check\"></a>check</h2><p>一行代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&#x27;R CMD check packagename --as-cran&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>完后会生成一个<code>riceidconverter.Rcheck</code>文件夹，里面有各种报告。在RStudio输出界面没有<code>ERROR</code>、<code>Warning</code>还有<code>NOTE</code>，那就基本没问题了。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>先尝试一下能不能安装上：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&#x27;R CMD INSTALL packagename&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a><font color=red>提交</font></h2><p>这个就比较简单了，直接在<a href=\"https://cran.r-project.org/submit.html\">https://cran.r-project.org/submit.html</a>按照要求提交<code>tar.gz</code>文件就行。</p>\n<hr>\n<p>最后，等着邮件吧。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;\">&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>R最强大的莫过于统计分析和可视化，关键是完全的开源免费啊。有时候使用多了以后，会积累一些函数或者是数据库，而这些函数和数据库通常能够帮助到别人，这时候就可以把这些函数或者是数据库打包成R包，上传到CRAN、Bioconductor或者是GitHub，让 其他的使用者使用自己的包。</p>","more":"<p>我开发的第一个包是<a href=\"https://cran.r-project.org/web/packages/riceidconverter/index.html\">riceidconverter</a>，主要的用途是水稻的ID转换。整个包的开发断断续续经历了两个月，包括数据的爬取(Python脚本见<a href=\"%5Bhttps://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC%5D(https://github.com/GitHub-LiXiang/R/tree/master/R%E5%8C%85%E5%BC%80%E5%8F%91/riceidconverter/NCBI%E7%88%AC%E8%99%ABPython%E8%84%9A%E6%9C%AC)\">GitHub</a>)、整理、函数的构思，以及最艰难的调试。</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/1.png\" class=\"\">\n\n<h1 id=\"主要流程\"><a href=\"#主要流程\" class=\"headerlink\" title=\"主要流程\"></a>主要流程</h1><p>我的开发流程是软件安装、构思R包、准备数据、编写R包、调试代码、R包提交。下面就从这几方面一一道来我这个小白的经验。</p>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"MikTex\"><a href=\"#MikTex\" class=\"headerlink\" title=\"MikTex\"></a>MikTex</h2><p><code>MikTex</code>主要是用于编译后面的pdf文档，如果包只是自己用，就不用安装这个软件。软件的下载地址是<a href=\"https://miktex.org/download\">MikTex</a>。安装的话一路默认就OK。</p>\n<h2 id=\"roxygen2\"><a href=\"#roxygen2\" class=\"headerlink\" title=\"roxygen2\"></a>roxygen2</h2><p><code>roxygen2</code>是个R包，通过注释的方式，生成文档。直接<code>install。package(&#39;roxygen2&#39;)</code>即可。</p>\n<h2 id=\"devtools\"><a href=\"#devtools\" class=\"headerlink\" title=\"devtools\"></a>devtools</h2><p>这个包主要是用来<code>build</code>和<code>check</code>R包的。直接<code>install。package(&#39;devtools&#39;)</code>即可。</p>\n<h1 id=\"构思R包\"><a href=\"#构思R包\" class=\"headerlink\" title=\"构思R包\"></a>构思R包</h1><p>这个比较难说清楚，每个R包都有一定的功能的，构思的过程就是R包功能完善的过程。</p>\n<h1 id=\"准备数据\"><a href=\"#准备数据\" class=\"headerlink\" title=\"准备数据\"></a>准备数据</h1><p>这个环节，也是很难说清除。如果数据要内嵌到R包，而且包里面的函数会用到数据，那表头名称和函数中的变量名称要保持一致。</p>\n<h1 id=\"编写R包\"><a href=\"#编写R包\" class=\"headerlink\" title=\"编写R包\"></a>编写R包</h1><h2 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h2><p>直接用RStudio创建<code>R Package即可</code>：<code>File→New Project→New Directory→R Package</code>。<font color=red>需要注意的是选择的路径不可以有中文字符！</font>会生成下面的文件：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/2.png\" class=\"\">\n\n<p>比较重要的是<code>man</code>、<code>R</code>和<code>DESCRIPTION</code>这三个文件(夹)。其他的几个可以删除。</p>\n<h2 id=\"编写DESCRIPTION\"><a href=\"#编写DESCRIPTION\" class=\"headerlink\" title=\"编写DESCRIPTION\"></a>编写DESCRIPTION</h2><p>这个文件是用来描述一些基本信息的，这些信息也是必填的一些信息。</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/3.png\" class=\"\">\n\n<p>下面这是我的包的一些描述：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/4.png\" class=\"\">\n\n<p><font color=red>需要注意的是在<code>Title</code>部分，大小写要求很严格。</font></p>\n<p>另外需要注意的是在<code>Description</code>部分，每个缩写都需要有详细的解释，如果有链接，还需要将链接放在<code>&lt;&gt;</code>里面，而不是<code>()</code>。</p>\n<h2 id=\"编写函数\"><a href=\"#编写函数\" class=\"headerlink\" title=\"编写函数\"></a>编写函数</h2><p>在<code>R</code>这个文件夹下面创建对应的<code>.R</code>文件。比如想实现的功能是<code>t</code>检验，那就创建一个<code>t.test.R</code>。打开以后还是有几行<code>#&#39;</code>开头的描述，这些是必须的：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/6.png\" class=\"\">\n\n<p><code>@name</code>是指这个函数的名称，其他的就是和<code>DESCRIPTION</code>类似的；<code>@param</code>表示的是参数；<code>@example</code>表示的是函数使用的例子；<code>@return</code>表示的是返回的结果；接着下一行编写函数就行：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/7.png\" class=\"\">\n\n<p><font color=red>需要注意的是在<code>R</code>文件夹下面还应该创建一个和R包名称相同的<code>.R</code>文件。</font>只需要填写这些东西就可以了：</p>\n<img src=\"/2020/01/10/%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAR%E5%8C%85/8.png\" class=\"\">\n\n<h2 id=\"调试代码\"><a href=\"#调试代码\" class=\"headerlink\" title=\"调试代码\"></a>调试代码</h2><p>这个部分，就需要不断的调试，就是使用不同的数据去测试这个函数是否可靠。</p>\n<h2 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h2><p>如果需要将数据内嵌在R包怎么办呢？一行代码搞定：<code>use_data(test.data, internal = TRUE)</code>。<code>test.data</code>就是先前准备好的数据，需要先加载到R环境中。会在<code>R</code>文件夹下生成一个<code>sysdata.rda</code>文件。</p>\n<h1 id=\"R包提交\"><a href=\"#R包提交\" class=\"headerlink\" title=\"R包提交\"></a>R包提交</h1><p>在完成编写和调试后，就只剩下<code>build</code>、<code>check</code>和<code>upload</code>了。</p>\n<p>先要生成注释文件：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(roxygen2)</span><br><span class=\"line\">roxygenize(<span class=\"string\">&#x27;packagename&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build\"></a>build</h2><p>一行代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&#x27;R CMD build packagename --binary&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>会生成一个<code>tar.gz</code>文件。这个文件用于后面的提交。</p>\n<h2 id=\"check\"><a href=\"#check\" class=\"headerlink\" title=\"check\"></a>check</h2><p>一行代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&#x27;R CMD check packagename --as-cran&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>完后会生成一个<code>riceidconverter.Rcheck</code>文件夹，里面有各种报告。在RStudio输出界面没有<code>ERROR</code>、<code>Warning</code>还有<code>NOTE</code>，那就基本没问题了。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>先尝试一下能不能安装上：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&#x27;R CMD INSTALL packagename&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a><font color=red>提交</font></h2><p>这个就比较简单了，直接在<a href=\"https://cran.r-project.org/submit.html\">https://cran.r-project.org/submit.html</a>按照要求提交<code>tar.gz</code>文件就行。</p>\n<hr>\n<p>最后，等着邮件吧。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;\">&#108;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#x6c;&#105;&#120;&#x69;&#97;&#x6e;&#103;&#49;&#x31;&#55;&#x34;&#50;&#x33;&#x40;&#x66;&#111;&#x78;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"稻壳酮（momilactones）在水稻化感中的角色","abbrlink":"c831a1f2","date":"2021-02-27T12:03:17.000Z","_content":"\n# 摘要\n\n来自众多国家的研究者们通过田间试验和室内实验证明了水稻是具有化感活性的，具有化感活性的水稻品种会向周围的环境中释放化感物质<!-- more -->。酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻中潜在的化感活性物质。这篇综述认为半日花烷相关的二萜物质稻壳酮（momilactones）是这些化感物质中最重要的一类物质，尤其是稻壳酮B（momilactones B, 以下简称MB）。水稻在其整个生命周期都能够通过根系向周围的环境中释放MB，MB也是水稻化感作用的主要贡献者。遗传学实验发现如果从水稻根系分泌物复合物中将MB去除的话，水稻根系分泌物的化感活性会大大降低，这个结果表明稻壳酮是具有化感活性的物质。此外，稻壳酮相关的基因在水稻基因组上总是成簇存在的。\n\n# Introduction\n\n什么是化感？可以理解成不同植物之间的化学拮抗作用。关于化感研究的文献越来越多。这些文献表明特定的植物会向其周围的环境中释放化感物质，这些化感物质会影响周围植物的生长和发育。如高粱就能通过其根尖释放浓度范围在10-100μM的奎宁高粱油酮。高粱油酮具有潜在的化感活性，其浓度在10μM时便能抑制杂草的出芽生长。具有化感活性的小麦分泌的苯并嗪类物质在植物中以糖苷结合物的形式不断被合成。因此，化感互作在自然植物生态系统中可能有着重要的作用。\n\n一些田间试验和室内实验发现水稻能够抑制一些植物的生长，这些发现表明水稻具有化感活性。化感在水稻的进化中可能扮演着重要的角色。\n\n考虑到水稻在农业上的重要性，其化感活性被大量研究，这些研究从水稻植株提取物、根系分泌物及植株降解残体中鉴定到了大量潜在的化感活性物质。\n\n# 田间条件下水稻的化感活性\n\n第一次发现水稻的化感活性的实验地是在美国，研究人员发现5000个水稻品种中的191个左右能够抑制水生杂草鸭沙拉的生长。这个发现直接导致了后续大量的类似的田间实验。研究人员共研究了来自99个国家的16000个水稻品种在田间的化感活性，其中412个能够抑制鸭沙拉的生长，145能够抑制水苋属杂草的生长。后续大量的研究发现特定的水稻品种能够抑制某些种类植物的生长。\n\n# 控制条件下的水稻化感活性\n\n植物-植物间的干扰是资源竞争（如光、水分、营养）与化感互作的复杂结果。因此，需要设计实验来排除资源竞争的影响，以此来说明化感作用在植物-植物干扰中的作用。因此，需要格外注意某些实验条件，如培养基的pH和渗透压等。\n\n位于菲律宾的国际水稻研究所就设计过水稻整株 bioassay 的方法来研究水稻化感作用。在这个实验中排除了资源竞争对实验的影响，在一定程度上证明了水稻的化感活性。利用这种方法鉴定到了几种具有强烈化感作用的水稻。\n\n后续大量的研究表明大约3-4%的水稻品种具有强烈的化感效应。\n\n2001年的一个实验利用8个水稻栽培种来研究水稻的化感作用，发现这8个栽培稻都能抑制苜蓿、水芹及生菜的出芽及生长（下图）。其中Koshihikari这个水稻品种的化感活性最强。这个实验的巧妙之处在于研究阶段中这些植株的营养物质都来自胚乳，这就巧妙地避免了营养竞争造成的影响。\n\n{% asset_img 2.jpg %}\n\n# 水稻中潜在的化感活性物质\n\n酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻提取物和植株残体中潜在的化感活性物质。但是不知道这些物质在生长的水稻植株中是否会被释放，如果被释放，那是不是真真正正的的化感物质呢？\n\n虽然许多植物组织中都含有潜在的化感活性物质，但是只有那些被释放到环境中的物质才可能会抑制周围植物的出芽及生长，这些释放到环境中的物质才可能是化感物质。鉴于此，比起那些在植物组织中存在的物质，根系分泌物中的物质才更可能是潜在的化感物质。此外，Wu等发现植物组织种具有生长抑制活性的物质的含量与其在根系分泌物中的量是没有明显的相关性的。\n\n# 水稻中的酚酸不太可能是化感物质\n\n在植物和土壤中广泛存在的酚酸被认为是潜在的化感物质，在水稻田、水稻植株残体及水稻根系分泌物中也检测到了酚酸。但是，在稻田土中检测到的酚酸的量不足以引发植物毒性效应，这也让人怀疑水稻中的酚酸类物质到底是不是化感物质。稻田土中酚酸的含量少于5mg/kg，这个含量远低于植物毒性效应的阈值；此外，具有化感活性的水稻与不具有化感活性的水稻分泌的酚酸含量并没有显著差异。那酚酸是不是存在协同作用呢？研究者将5种酚酸混合后来研究混合物对慈姑的抑制效应，发现要达到50%抑制率的话，酚酸混合物的浓度需要达到502μM，这个浓度远远超过根系分泌物中检测到的实际浓度。总之，这些结果表明水稻根系分泌物中的酚酸类物质对水稻的化感作用没有贡献。\n\n# 水稻根系分泌物中的稻壳酮\n\n前面提到Koshihikari这个水稻品种具有很强的化感活性。一项研究水培了约5000株Koshihikari幼苗，希望  从中分离其分泌的化合物，从其中收集到2.1mg具有植物毒性的物质。从质谱数据中比对到这个潜在的化感物质的结构属于MB。Kong等人随后也在其他的水稻品种中鉴定到了MB。Koshihikari这个水稻品种中还存在一个潜在的化感活性物质稻壳酮A（momilactone A, MA）。后续的研究发现在许多水稻品种中都有MA和MB。\n\n{% asset_img 1.jpg %}\n\nMA和MB最初是在稻壳中分离得到的，当时就发现这两个物质能够抑制植物的生长。随后的分析认为MA是植物抗毒素，因为后续的研究发现MA和MB能够抑制稻瘟病菌的生长。后续 有许多关于MA作为植物抗毒素的研究，许多证据表明MA在水稻抗真菌中具有一定的作用。相反，少有研究认为MB是植物抗毒素。最近的研究发现MA和MB也是苔藓*Hypnum plumaeforme* Wils中的化感物质。这个苔藓和水稻在系统发育上具有明显的距离，这表明这水稻和这种苔藓有着趋同进化的关系。\n\n# 稻壳酮的化感活性\n\nMA和MB在较低浓度下（1-10μM）就能抑制稗草的生长。要对稗草根达到50% 抑制率，MA需要的浓度是28.7μM，MB需要的浓度是6.1。后续的研究也发现MB的抑制活性是MA的4.7-19倍，这表明MB比MA具有更高的抑制活性。\n\n# 稻壳酮不会毒害水稻\n\n稻壳酮A和B浓度分别在100和300μM以上时才能有效抑制水稻根和茎的生长，此时的抑制效率相当于稻壳酮对稗草抑制率的1-2%。MA和MB在对其他植物产生细胞毒性的时候，对水稻植株没有明显的损伤，即使有损伤也是微不足道的损伤。\n\n# 水稻选择性分泌MB\n\n水稻在其整个生命周期都能向其根际分泌MA和MB。开花是分泌水平的临界线，植株开花后其分泌水平便开始降低。在第80天的时候，MA和MB的分泌量分别能够达到1.1μg/株/天和2.3μg/株/天，这个分泌量是30天时的55-58倍。但是有趣的是水稻茎秆内MA和MB的含量分别在4.5μg/g和3μg/g，稻壳里面的含量是4.9μg/g和2.9g/g，整株含量分别是140μg/g和95μg/g。从上面的数据可以看出在水稻植株体内MA的浓度是MB的1.5-1.7倍。相反的是MB的分泌量比MA的分泌量高，这表明相对于MA来说，MB有限分泌到水稻植株根际中。水稻通过其根系分泌稻壳酮的机制还不清楚。\n\n# 稻壳酮对水稻化感作用的贡献\n\n一项研究利用7天大的8个水稻品种幼苗与4天大的稗草种植在一起4天，发现这8个水稻品种幼苗都能抑制稗草的生长。测得MA的浓度在0.21-1.45μM之间，MB的浓度在0.66-3.84μM之间。基于抑制率和浓度，计算结果表明MA在水稻幼苗抑制稗草生长过程中贡献了1.0-4.9%，而MB贡献了58.8-81.9%。因此，MB更可能是水稻幼苗抑制稗草的主要贡献者。另外值得注意的是这8个水稻品种中MB的浓度是具有差异的。因此，不同水稻品种对稗草生长抑制的差异主要是由于MB的浓度差异导致的。\n\nMA和MB一共贡献了61.4-86.6%的化感活性，剩下的14.4-38.6%化感活性由其他的物质完成，如3-isopropyl-5-acetoxcyclohexene-2-one-1 和 5,7,4′-trihydroxy-3′5′-dimethoxy-flavone。之前的研究发现水稻分泌MA和MB的量是随着时间发生变化的，因此水稻的化感活性也可能是随着时间变化的。\n\n# 稗草诱导的水稻化感作用与稻壳酮的分泌\n\n如果水稻周围有稗草幼苗或水稻在稗草根系分泌物中生长的话，水稻的化感活性会增强。此时水稻化感活性增强并不是因为营养竞争导致的。稗草幼苗或稗草根系分泌物能够诱导水稻体内MB的含量增加，而且水稻分泌的MB的含量也增加。有可能是水稻感受到了来自稗草的物质，进而分泌了更多的MB。和这种情况类似的是高粱，绒毛叶（一种杂草）的根系分泌物会诱导高粱分泌更多的高粱酮。化感是一种诱导防御机制。\n\n# 胁迫诱导的水稻化感作用与稻壳酮的分泌\n\n植物防御信号激素茉莉酸可以增强水稻的化感活性。茉莉酸和斑蝥素能够增加MA和MB在水稻植株体内及分泌物中的含量。鉴于MA和MB具有抗菌活性，由茉莉酸和斑蝥素诱导的MA和MB含量变化可能和植物微生物防御相关。水稻稻瘟病菌的悄然能够增加稻壳酮的含量。\n\n{% asset_img 3.jpg %}\n\n然而除了病原菌侵染外，UV辐射也能诱导水稻体内MA和MB的合成和释放。此外，重金属离子也能诱导MA和MB的合成。因此，可能不仅仅只有特定的微生物防御响应会激活MA和MB的合成，其他的胁迫也能激发相关的响应。也有研究发现营养饥饿条件下水稻中稻壳酮的分泌会增加。由于MA和MB极强的化感活性，这些胁迫条件下MA和MB分泌增减更有利于水稻与周围植物的竞争。\n\n# 稻壳酮作为化感物质的遗传证据\n\n上述这些描述充分表明稻壳酮是水稻中的有效化感物质，水稻也从其根部释放大量植物毒素物质（下图）。从遗传学的角度来说，研究某个物质的化感活性最好的方法就是直接将这个物质从复合物中去除，也就是将合成这个物质的基因进行敲低。因为已经确定了生产代表吡咯烷内酯生物合成中固定中间体的顺式-radi二烯所需的OsCPS4和OsKSL4，可以通过反向遗传学的方法研究这些物质的功能。已经有研究利用了这种方法。\n\n{% asset_img 4.jpg %}\n\n# 结论\n\n水稻具有化感活性，能够向周围的环境中释放化感物质。大量物质被认为是具有化感活性的。大量研究表明稻壳酮（尤其是稻壳酮B）在水稻化感活性中具有重要作用。稻壳酮在水稻进化中可有很重要的生态学功能，其相关性似乎反映在水稻基因组中存在一个专门的生物合成基因簇中。也许更重要的是，鉴定稻壳酮B是水稻中的主要化感物质，为育种和/或工程研究提供了分子标记，旨在增加这种重要主食作物的化感作用。\n\n{% asset_img 5.jpg %}\n\n> 💌lixiang117423@foxmail.com\n> 💌lixiang117423@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/稻壳酮（momilactones）在水稻化感中的角色.md","raw":"---\ntitle: 稻壳酮（momilactones）在水稻化感中的角色\ntags: 文献\ncategories: 文献\nabbrlink: c831a1f2\ndate: 2021-02-27 20:03:17\n---\n\n# 摘要\n\n来自众多国家的研究者们通过田间试验和室内实验证明了水稻是具有化感活性的，具有化感活性的水稻品种会向周围的环境中释放化感物质<!-- more -->。酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻中潜在的化感活性物质。这篇综述认为半日花烷相关的二萜物质稻壳酮（momilactones）是这些化感物质中最重要的一类物质，尤其是稻壳酮B（momilactones B, 以下简称MB）。水稻在其整个生命周期都能够通过根系向周围的环境中释放MB，MB也是水稻化感作用的主要贡献者。遗传学实验发现如果从水稻根系分泌物复合物中将MB去除的话，水稻根系分泌物的化感活性会大大降低，这个结果表明稻壳酮是具有化感活性的物质。此外，稻壳酮相关的基因在水稻基因组上总是成簇存在的。\n\n# Introduction\n\n什么是化感？可以理解成不同植物之间的化学拮抗作用。关于化感研究的文献越来越多。这些文献表明特定的植物会向其周围的环境中释放化感物质，这些化感物质会影响周围植物的生长和发育。如高粱就能通过其根尖释放浓度范围在10-100μM的奎宁高粱油酮。高粱油酮具有潜在的化感活性，其浓度在10μM时便能抑制杂草的出芽生长。具有化感活性的小麦分泌的苯并嗪类物质在植物中以糖苷结合物的形式不断被合成。因此，化感互作在自然植物生态系统中可能有着重要的作用。\n\n一些田间试验和室内实验发现水稻能够抑制一些植物的生长，这些发现表明水稻具有化感活性。化感在水稻的进化中可能扮演着重要的角色。\n\n考虑到水稻在农业上的重要性，其化感活性被大量研究，这些研究从水稻植株提取物、根系分泌物及植株降解残体中鉴定到了大量潜在的化感活性物质。\n\n# 田间条件下水稻的化感活性\n\n第一次发现水稻的化感活性的实验地是在美国，研究人员发现5000个水稻品种中的191个左右能够抑制水生杂草鸭沙拉的生长。这个发现直接导致了后续大量的类似的田间实验。研究人员共研究了来自99个国家的16000个水稻品种在田间的化感活性，其中412个能够抑制鸭沙拉的生长，145能够抑制水苋属杂草的生长。后续大量的研究发现特定的水稻品种能够抑制某些种类植物的生长。\n\n# 控制条件下的水稻化感活性\n\n植物-植物间的干扰是资源竞争（如光、水分、营养）与化感互作的复杂结果。因此，需要设计实验来排除资源竞争的影响，以此来说明化感作用在植物-植物干扰中的作用。因此，需要格外注意某些实验条件，如培养基的pH和渗透压等。\n\n位于菲律宾的国际水稻研究所就设计过水稻整株 bioassay 的方法来研究水稻化感作用。在这个实验中排除了资源竞争对实验的影响，在一定程度上证明了水稻的化感活性。利用这种方法鉴定到了几种具有强烈化感作用的水稻。\n\n后续大量的研究表明大约3-4%的水稻品种具有强烈的化感效应。\n\n2001年的一个实验利用8个水稻栽培种来研究水稻的化感作用，发现这8个栽培稻都能抑制苜蓿、水芹及生菜的出芽及生长（下图）。其中Koshihikari这个水稻品种的化感活性最强。这个实验的巧妙之处在于研究阶段中这些植株的营养物质都来自胚乳，这就巧妙地避免了营养竞争造成的影响。\n\n{% asset_img 2.jpg %}\n\n# 水稻中潜在的化感活性物质\n\n酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻提取物和植株残体中潜在的化感活性物质。但是不知道这些物质在生长的水稻植株中是否会被释放，如果被释放，那是不是真真正正的的化感物质呢？\n\n虽然许多植物组织中都含有潜在的化感活性物质，但是只有那些被释放到环境中的物质才可能会抑制周围植物的出芽及生长，这些释放到环境中的物质才可能是化感物质。鉴于此，比起那些在植物组织中存在的物质，根系分泌物中的物质才更可能是潜在的化感物质。此外，Wu等发现植物组织种具有生长抑制活性的物质的含量与其在根系分泌物中的量是没有明显的相关性的。\n\n# 水稻中的酚酸不太可能是化感物质\n\n在植物和土壤中广泛存在的酚酸被认为是潜在的化感物质，在水稻田、水稻植株残体及水稻根系分泌物中也检测到了酚酸。但是，在稻田土中检测到的酚酸的量不足以引发植物毒性效应，这也让人怀疑水稻中的酚酸类物质到底是不是化感物质。稻田土中酚酸的含量少于5mg/kg，这个含量远低于植物毒性效应的阈值；此外，具有化感活性的水稻与不具有化感活性的水稻分泌的酚酸含量并没有显著差异。那酚酸是不是存在协同作用呢？研究者将5种酚酸混合后来研究混合物对慈姑的抑制效应，发现要达到50%抑制率的话，酚酸混合物的浓度需要达到502μM，这个浓度远远超过根系分泌物中检测到的实际浓度。总之，这些结果表明水稻根系分泌物中的酚酸类物质对水稻的化感作用没有贡献。\n\n# 水稻根系分泌物中的稻壳酮\n\n前面提到Koshihikari这个水稻品种具有很强的化感活性。一项研究水培了约5000株Koshihikari幼苗，希望  从中分离其分泌的化合物，从其中收集到2.1mg具有植物毒性的物质。从质谱数据中比对到这个潜在的化感物质的结构属于MB。Kong等人随后也在其他的水稻品种中鉴定到了MB。Koshihikari这个水稻品种中还存在一个潜在的化感活性物质稻壳酮A（momilactone A, MA）。后续的研究发现在许多水稻品种中都有MA和MB。\n\n{% asset_img 1.jpg %}\n\nMA和MB最初是在稻壳中分离得到的，当时就发现这两个物质能够抑制植物的生长。随后的分析认为MA是植物抗毒素，因为后续的研究发现MA和MB能够抑制稻瘟病菌的生长。后续 有许多关于MA作为植物抗毒素的研究，许多证据表明MA在水稻抗真菌中具有一定的作用。相反，少有研究认为MB是植物抗毒素。最近的研究发现MA和MB也是苔藓*Hypnum plumaeforme* Wils中的化感物质。这个苔藓和水稻在系统发育上具有明显的距离，这表明这水稻和这种苔藓有着趋同进化的关系。\n\n# 稻壳酮的化感活性\n\nMA和MB在较低浓度下（1-10μM）就能抑制稗草的生长。要对稗草根达到50% 抑制率，MA需要的浓度是28.7μM，MB需要的浓度是6.1。后续的研究也发现MB的抑制活性是MA的4.7-19倍，这表明MB比MA具有更高的抑制活性。\n\n# 稻壳酮不会毒害水稻\n\n稻壳酮A和B浓度分别在100和300μM以上时才能有效抑制水稻根和茎的生长，此时的抑制效率相当于稻壳酮对稗草抑制率的1-2%。MA和MB在对其他植物产生细胞毒性的时候，对水稻植株没有明显的损伤，即使有损伤也是微不足道的损伤。\n\n# 水稻选择性分泌MB\n\n水稻在其整个生命周期都能向其根际分泌MA和MB。开花是分泌水平的临界线，植株开花后其分泌水平便开始降低。在第80天的时候，MA和MB的分泌量分别能够达到1.1μg/株/天和2.3μg/株/天，这个分泌量是30天时的55-58倍。但是有趣的是水稻茎秆内MA和MB的含量分别在4.5μg/g和3μg/g，稻壳里面的含量是4.9μg/g和2.9g/g，整株含量分别是140μg/g和95μg/g。从上面的数据可以看出在水稻植株体内MA的浓度是MB的1.5-1.7倍。相反的是MB的分泌量比MA的分泌量高，这表明相对于MA来说，MB有限分泌到水稻植株根际中。水稻通过其根系分泌稻壳酮的机制还不清楚。\n\n# 稻壳酮对水稻化感作用的贡献\n\n一项研究利用7天大的8个水稻品种幼苗与4天大的稗草种植在一起4天，发现这8个水稻品种幼苗都能抑制稗草的生长。测得MA的浓度在0.21-1.45μM之间，MB的浓度在0.66-3.84μM之间。基于抑制率和浓度，计算结果表明MA在水稻幼苗抑制稗草生长过程中贡献了1.0-4.9%，而MB贡献了58.8-81.9%。因此，MB更可能是水稻幼苗抑制稗草的主要贡献者。另外值得注意的是这8个水稻品种中MB的浓度是具有差异的。因此，不同水稻品种对稗草生长抑制的差异主要是由于MB的浓度差异导致的。\n\nMA和MB一共贡献了61.4-86.6%的化感活性，剩下的14.4-38.6%化感活性由其他的物质完成，如3-isopropyl-5-acetoxcyclohexene-2-one-1 和 5,7,4′-trihydroxy-3′5′-dimethoxy-flavone。之前的研究发现水稻分泌MA和MB的量是随着时间发生变化的，因此水稻的化感活性也可能是随着时间变化的。\n\n# 稗草诱导的水稻化感作用与稻壳酮的分泌\n\n如果水稻周围有稗草幼苗或水稻在稗草根系分泌物中生长的话，水稻的化感活性会增强。此时水稻化感活性增强并不是因为营养竞争导致的。稗草幼苗或稗草根系分泌物能够诱导水稻体内MB的含量增加，而且水稻分泌的MB的含量也增加。有可能是水稻感受到了来自稗草的物质，进而分泌了更多的MB。和这种情况类似的是高粱，绒毛叶（一种杂草）的根系分泌物会诱导高粱分泌更多的高粱酮。化感是一种诱导防御机制。\n\n# 胁迫诱导的水稻化感作用与稻壳酮的分泌\n\n植物防御信号激素茉莉酸可以增强水稻的化感活性。茉莉酸和斑蝥素能够增加MA和MB在水稻植株体内及分泌物中的含量。鉴于MA和MB具有抗菌活性，由茉莉酸和斑蝥素诱导的MA和MB含量变化可能和植物微生物防御相关。水稻稻瘟病菌的悄然能够增加稻壳酮的含量。\n\n{% asset_img 3.jpg %}\n\n然而除了病原菌侵染外，UV辐射也能诱导水稻体内MA和MB的合成和释放。此外，重金属离子也能诱导MA和MB的合成。因此，可能不仅仅只有特定的微生物防御响应会激活MA和MB的合成，其他的胁迫也能激发相关的响应。也有研究发现营养饥饿条件下水稻中稻壳酮的分泌会增加。由于MA和MB极强的化感活性，这些胁迫条件下MA和MB分泌增减更有利于水稻与周围植物的竞争。\n\n# 稻壳酮作为化感物质的遗传证据\n\n上述这些描述充分表明稻壳酮是水稻中的有效化感物质，水稻也从其根部释放大量植物毒素物质（下图）。从遗传学的角度来说，研究某个物质的化感活性最好的方法就是直接将这个物质从复合物中去除，也就是将合成这个物质的基因进行敲低。因为已经确定了生产代表吡咯烷内酯生物合成中固定中间体的顺式-radi二烯所需的OsCPS4和OsKSL4，可以通过反向遗传学的方法研究这些物质的功能。已经有研究利用了这种方法。\n\n{% asset_img 4.jpg %}\n\n# 结论\n\n水稻具有化感活性，能够向周围的环境中释放化感物质。大量物质被认为是具有化感活性的。大量研究表明稻壳酮（尤其是稻壳酮B）在水稻化感活性中具有重要作用。稻壳酮在水稻进化中可有很重要的生态学功能，其相关性似乎反映在水稻基因组中存在一个专门的生物合成基因簇中。也许更重要的是，鉴定稻壳酮B是水稻中的主要化感物质，为育种和/或工程研究提供了分子标记，旨在增加这种重要主食作物的化感作用。\n\n{% asset_img 5.jpg %}\n\n> 💌lixiang117423@foxmail.com\n> 💌lixiang117423@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"稻壳酮（momilactones）在水稻化感中的角色","published":1,"updated":"2021-02-28T12:22:11.686Z","_id":"ckwbqwckt004mr0g06pxbh3oj","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>来自众多国家的研究者们通过田间试验和室内实验证明了水稻是具有化感活性的，具有化感活性的水稻品种会向周围的环境中释放化感物质<span id=\"more\"></span>。酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻中潜在的化感活性物质。这篇综述认为半日花烷相关的二萜物质稻壳酮（momilactones）是这些化感物质中最重要的一类物质，尤其是稻壳酮B（momilactones B, 以下简称MB）。水稻在其整个生命周期都能够通过根系向周围的环境中释放MB，MB也是水稻化感作用的主要贡献者。遗传学实验发现如果从水稻根系分泌物复合物中将MB去除的话，水稻根系分泌物的化感活性会大大降低，这个结果表明稻壳酮是具有化感活性的物质。此外，稻壳酮相关的基因在水稻基因组上总是成簇存在的。</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>什么是化感？可以理解成不同植物之间的化学拮抗作用。关于化感研究的文献越来越多。这些文献表明特定的植物会向其周围的环境中释放化感物质，这些化感物质会影响周围植物的生长和发育。如高粱就能通过其根尖释放浓度范围在10-100μM的奎宁高粱油酮。高粱油酮具有潜在的化感活性，其浓度在10μM时便能抑制杂草的出芽生长。具有化感活性的小麦分泌的苯并嗪类物质在植物中以糖苷结合物的形式不断被合成。因此，化感互作在自然植物生态系统中可能有着重要的作用。</p>\n<p>一些田间试验和室内实验发现水稻能够抑制一些植物的生长，这些发现表明水稻具有化感活性。化感在水稻的进化中可能扮演着重要的角色。</p>\n<p>考虑到水稻在农业上的重要性，其化感活性被大量研究，这些研究从水稻植株提取物、根系分泌物及植株降解残体中鉴定到了大量潜在的化感活性物质。</p>\n<h1 id=\"田间条件下水稻的化感活性\"><a href=\"#田间条件下水稻的化感活性\" class=\"headerlink\" title=\"田间条件下水稻的化感活性\"></a>田间条件下水稻的化感活性</h1><p>第一次发现水稻的化感活性的实验地是在美国，研究人员发现5000个水稻品种中的191个左右能够抑制水生杂草鸭沙拉的生长。这个发现直接导致了后续大量的类似的田间实验。研究人员共研究了来自99个国家的16000个水稻品种在田间的化感活性，其中412个能够抑制鸭沙拉的生长，145能够抑制水苋属杂草的生长。后续大量的研究发现特定的水稻品种能够抑制某些种类植物的生长。</p>\n<h1 id=\"控制条件下的水稻化感活性\"><a href=\"#控制条件下的水稻化感活性\" class=\"headerlink\" title=\"控制条件下的水稻化感活性\"></a>控制条件下的水稻化感活性</h1><p>植物-植物间的干扰是资源竞争（如光、水分、营养）与化感互作的复杂结果。因此，需要设计实验来排除资源竞争的影响，以此来说明化感作用在植物-植物干扰中的作用。因此，需要格外注意某些实验条件，如培养基的pH和渗透压等。</p>\n<p>位于菲律宾的国际水稻研究所就设计过水稻整株 bioassay 的方法来研究水稻化感作用。在这个实验中排除了资源竞争对实验的影响，在一定程度上证明了水稻的化感活性。利用这种方法鉴定到了几种具有强烈化感作用的水稻。</p>\n<p>后续大量的研究表明大约3-4%的水稻品种具有强烈的化感效应。</p>\n<p>2001年的一个实验利用8个水稻栽培种来研究水稻的化感作用，发现这8个栽培稻都能抑制苜蓿、水芹及生菜的出芽及生长（下图）。其中Koshihikari这个水稻品种的化感活性最强。这个实验的巧妙之处在于研究阶段中这些植株的营养物质都来自胚乳，这就巧妙地避免了营养竞争造成的影响。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/2.jpg\" class=\"\">\n\n<h1 id=\"水稻中潜在的化感活性物质\"><a href=\"#水稻中潜在的化感活性物质\" class=\"headerlink\" title=\"水稻中潜在的化感活性物质\"></a>水稻中潜在的化感活性物质</h1><p>酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻提取物和植株残体中潜在的化感活性物质。但是不知道这些物质在生长的水稻植株中是否会被释放，如果被释放，那是不是真真正正的的化感物质呢？</p>\n<p>虽然许多植物组织中都含有潜在的化感活性物质，但是只有那些被释放到环境中的物质才可能会抑制周围植物的出芽及生长，这些释放到环境中的物质才可能是化感物质。鉴于此，比起那些在植物组织中存在的物质，根系分泌物中的物质才更可能是潜在的化感物质。此外，Wu等发现植物组织种具有生长抑制活性的物质的含量与其在根系分泌物中的量是没有明显的相关性的。</p>\n<h1 id=\"水稻中的酚酸不太可能是化感物质\"><a href=\"#水稻中的酚酸不太可能是化感物质\" class=\"headerlink\" title=\"水稻中的酚酸不太可能是化感物质\"></a>水稻中的酚酸不太可能是化感物质</h1><p>在植物和土壤中广泛存在的酚酸被认为是潜在的化感物质，在水稻田、水稻植株残体及水稻根系分泌物中也检测到了酚酸。但是，在稻田土中检测到的酚酸的量不足以引发植物毒性效应，这也让人怀疑水稻中的酚酸类物质到底是不是化感物质。稻田土中酚酸的含量少于5mg/kg，这个含量远低于植物毒性效应的阈值；此外，具有化感活性的水稻与不具有化感活性的水稻分泌的酚酸含量并没有显著差异。那酚酸是不是存在协同作用呢？研究者将5种酚酸混合后来研究混合物对慈姑的抑制效应，发现要达到50%抑制率的话，酚酸混合物的浓度需要达到502μM，这个浓度远远超过根系分泌物中检测到的实际浓度。总之，这些结果表明水稻根系分泌物中的酚酸类物质对水稻的化感作用没有贡献。</p>\n<h1 id=\"水稻根系分泌物中的稻壳酮\"><a href=\"#水稻根系分泌物中的稻壳酮\" class=\"headerlink\" title=\"水稻根系分泌物中的稻壳酮\"></a>水稻根系分泌物中的稻壳酮</h1><p>前面提到Koshihikari这个水稻品种具有很强的化感活性。一项研究水培了约5000株Koshihikari幼苗，希望  从中分离其分泌的化合物，从其中收集到2.1mg具有植物毒性的物质。从质谱数据中比对到这个潜在的化感物质的结构属于MB。Kong等人随后也在其他的水稻品种中鉴定到了MB。Koshihikari这个水稻品种中还存在一个潜在的化感活性物质稻壳酮A（momilactone A, MA）。后续的研究发现在许多水稻品种中都有MA和MB。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/1.jpg\" class=\"\">\n\n<p>MA和MB最初是在稻壳中分离得到的，当时就发现这两个物质能够抑制植物的生长。随后的分析认为MA是植物抗毒素，因为后续的研究发现MA和MB能够抑制稻瘟病菌的生长。后续 有许多关于MA作为植物抗毒素的研究，许多证据表明MA在水稻抗真菌中具有一定的作用。相反，少有研究认为MB是植物抗毒素。最近的研究发现MA和MB也是苔藓<em>Hypnum plumaeforme</em> Wils中的化感物质。这个苔藓和水稻在系统发育上具有明显的距离，这表明这水稻和这种苔藓有着趋同进化的关系。</p>\n<h1 id=\"稻壳酮的化感活性\"><a href=\"#稻壳酮的化感活性\" class=\"headerlink\" title=\"稻壳酮的化感活性\"></a>稻壳酮的化感活性</h1><p>MA和MB在较低浓度下（1-10μM）就能抑制稗草的生长。要对稗草根达到50% 抑制率，MA需要的浓度是28.7μM，MB需要的浓度是6.1。后续的研究也发现MB的抑制活性是MA的4.7-19倍，这表明MB比MA具有更高的抑制活性。</p>\n<h1 id=\"稻壳酮不会毒害水稻\"><a href=\"#稻壳酮不会毒害水稻\" class=\"headerlink\" title=\"稻壳酮不会毒害水稻\"></a>稻壳酮不会毒害水稻</h1><p>稻壳酮A和B浓度分别在100和300μM以上时才能有效抑制水稻根和茎的生长，此时的抑制效率相当于稻壳酮对稗草抑制率的1-2%。MA和MB在对其他植物产生细胞毒性的时候，对水稻植株没有明显的损伤，即使有损伤也是微不足道的损伤。</p>\n<h1 id=\"水稻选择性分泌MB\"><a href=\"#水稻选择性分泌MB\" class=\"headerlink\" title=\"水稻选择性分泌MB\"></a>水稻选择性分泌MB</h1><p>水稻在其整个生命周期都能向其根际分泌MA和MB。开花是分泌水平的临界线，植株开花后其分泌水平便开始降低。在第80天的时候，MA和MB的分泌量分别能够达到1.1μg/株/天和2.3μg/株/天，这个分泌量是30天时的55-58倍。但是有趣的是水稻茎秆内MA和MB的含量分别在4.5μg/g和3μg/g，稻壳里面的含量是4.9μg/g和2.9g/g，整株含量分别是140μg/g和95μg/g。从上面的数据可以看出在水稻植株体内MA的浓度是MB的1.5-1.7倍。相反的是MB的分泌量比MA的分泌量高，这表明相对于MA来说，MB有限分泌到水稻植株根际中。水稻通过其根系分泌稻壳酮的机制还不清楚。</p>\n<h1 id=\"稻壳酮对水稻化感作用的贡献\"><a href=\"#稻壳酮对水稻化感作用的贡献\" class=\"headerlink\" title=\"稻壳酮对水稻化感作用的贡献\"></a>稻壳酮对水稻化感作用的贡献</h1><p>一项研究利用7天大的8个水稻品种幼苗与4天大的稗草种植在一起4天，发现这8个水稻品种幼苗都能抑制稗草的生长。测得MA的浓度在0.21-1.45μM之间，MB的浓度在0.66-3.84μM之间。基于抑制率和浓度，计算结果表明MA在水稻幼苗抑制稗草生长过程中贡献了1.0-4.9%，而MB贡献了58.8-81.9%。因此，MB更可能是水稻幼苗抑制稗草的主要贡献者。另外值得注意的是这8个水稻品种中MB的浓度是具有差异的。因此，不同水稻品种对稗草生长抑制的差异主要是由于MB的浓度差异导致的。</p>\n<p>MA和MB一共贡献了61.4-86.6%的化感活性，剩下的14.4-38.6%化感活性由其他的物质完成，如3-isopropyl-5-acetoxcyclohexene-2-one-1 和 5,7,4′-trihydroxy-3′5′-dimethoxy-flavone。之前的研究发现水稻分泌MA和MB的量是随着时间发生变化的，因此水稻的化感活性也可能是随着时间变化的。</p>\n<h1 id=\"稗草诱导的水稻化感作用与稻壳酮的分泌\"><a href=\"#稗草诱导的水稻化感作用与稻壳酮的分泌\" class=\"headerlink\" title=\"稗草诱导的水稻化感作用与稻壳酮的分泌\"></a>稗草诱导的水稻化感作用与稻壳酮的分泌</h1><p>如果水稻周围有稗草幼苗或水稻在稗草根系分泌物中生长的话，水稻的化感活性会增强。此时水稻化感活性增强并不是因为营养竞争导致的。稗草幼苗或稗草根系分泌物能够诱导水稻体内MB的含量增加，而且水稻分泌的MB的含量也增加。有可能是水稻感受到了来自稗草的物质，进而分泌了更多的MB。和这种情况类似的是高粱，绒毛叶（一种杂草）的根系分泌物会诱导高粱分泌更多的高粱酮。化感是一种诱导防御机制。</p>\n<h1 id=\"胁迫诱导的水稻化感作用与稻壳酮的分泌\"><a href=\"#胁迫诱导的水稻化感作用与稻壳酮的分泌\" class=\"headerlink\" title=\"胁迫诱导的水稻化感作用与稻壳酮的分泌\"></a>胁迫诱导的水稻化感作用与稻壳酮的分泌</h1><p>植物防御信号激素茉莉酸可以增强水稻的化感活性。茉莉酸和斑蝥素能够增加MA和MB在水稻植株体内及分泌物中的含量。鉴于MA和MB具有抗菌活性，由茉莉酸和斑蝥素诱导的MA和MB含量变化可能和植物微生物防御相关。水稻稻瘟病菌的悄然能够增加稻壳酮的含量。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/3.jpg\" class=\"\">\n\n<p>然而除了病原菌侵染外，UV辐射也能诱导水稻体内MA和MB的合成和释放。此外，重金属离子也能诱导MA和MB的合成。因此，可能不仅仅只有特定的微生物防御响应会激活MA和MB的合成，其他的胁迫也能激发相关的响应。也有研究发现营养饥饿条件下水稻中稻壳酮的分泌会增加。由于MA和MB极强的化感活性，这些胁迫条件下MA和MB分泌增减更有利于水稻与周围植物的竞争。</p>\n<h1 id=\"稻壳酮作为化感物质的遗传证据\"><a href=\"#稻壳酮作为化感物质的遗传证据\" class=\"headerlink\" title=\"稻壳酮作为化感物质的遗传证据\"></a>稻壳酮作为化感物质的遗传证据</h1><p>上述这些描述充分表明稻壳酮是水稻中的有效化感物质，水稻也从其根部释放大量植物毒素物质（下图）。从遗传学的角度来说，研究某个物质的化感活性最好的方法就是直接将这个物质从复合物中去除，也就是将合成这个物质的基因进行敲低。因为已经确定了生产代表吡咯烷内酯生物合成中固定中间体的顺式-radi二烯所需的OsCPS4和OsKSL4，可以通过反向遗传学的方法研究这些物质的功能。已经有研究利用了这种方法。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/4.jpg\" class=\"\">\n\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>水稻具有化感活性，能够向周围的环境中释放化感物质。大量物质被认为是具有化感活性的。大量研究表明稻壳酮（尤其是稻壳酮B）在水稻化感活性中具有重要作用。稻壳酮在水稻进化中可有很重要的生态学功能，其相关性似乎反映在水稻基因组中存在一个专门的生物合成基因簇中。也许更重要的是，鉴定稻壳酮B是水稻中的主要化感物质，为育种和/或工程研究提供了分子标记，旨在增加这种重要主食作物的化感作用。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/5.jpg\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>来自众多国家的研究者们通过田间试验和室内实验证明了水稻是具有化感活性的，具有化感活性的水稻品种会向周围的环境中释放化感物质","more":"。酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻中潜在的化感活性物质。这篇综述认为半日花烷相关的二萜物质稻壳酮（momilactones）是这些化感物质中最重要的一类物质，尤其是稻壳酮B（momilactones B, 以下简称MB）。水稻在其整个生命周期都能够通过根系向周围的环境中释放MB，MB也是水稻化感作用的主要贡献者。遗传学实验发现如果从水稻根系分泌物复合物中将MB去除的话，水稻根系分泌物的化感活性会大大降低，这个结果表明稻壳酮是具有化感活性的物质。此外，稻壳酮相关的基因在水稻基因组上总是成簇存在的。</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>什么是化感？可以理解成不同植物之间的化学拮抗作用。关于化感研究的文献越来越多。这些文献表明特定的植物会向其周围的环境中释放化感物质，这些化感物质会影响周围植物的生长和发育。如高粱就能通过其根尖释放浓度范围在10-100μM的奎宁高粱油酮。高粱油酮具有潜在的化感活性，其浓度在10μM时便能抑制杂草的出芽生长。具有化感活性的小麦分泌的苯并嗪类物质在植物中以糖苷结合物的形式不断被合成。因此，化感互作在自然植物生态系统中可能有着重要的作用。</p>\n<p>一些田间试验和室内实验发现水稻能够抑制一些植物的生长，这些发现表明水稻具有化感活性。化感在水稻的进化中可能扮演着重要的角色。</p>\n<p>考虑到水稻在农业上的重要性，其化感活性被大量研究，这些研究从水稻植株提取物、根系分泌物及植株降解残体中鉴定到了大量潜在的化感活性物质。</p>\n<h1 id=\"田间条件下水稻的化感活性\"><a href=\"#田间条件下水稻的化感活性\" class=\"headerlink\" title=\"田间条件下水稻的化感活性\"></a>田间条件下水稻的化感活性</h1><p>第一次发现水稻的化感活性的实验地是在美国，研究人员发现5000个水稻品种中的191个左右能够抑制水生杂草鸭沙拉的生长。这个发现直接导致了后续大量的类似的田间实验。研究人员共研究了来自99个国家的16000个水稻品种在田间的化感活性，其中412个能够抑制鸭沙拉的生长，145能够抑制水苋属杂草的生长。后续大量的研究发现特定的水稻品种能够抑制某些种类植物的生长。</p>\n<h1 id=\"控制条件下的水稻化感活性\"><a href=\"#控制条件下的水稻化感活性\" class=\"headerlink\" title=\"控制条件下的水稻化感活性\"></a>控制条件下的水稻化感活性</h1><p>植物-植物间的干扰是资源竞争（如光、水分、营养）与化感互作的复杂结果。因此，需要设计实验来排除资源竞争的影响，以此来说明化感作用在植物-植物干扰中的作用。因此，需要格外注意某些实验条件，如培养基的pH和渗透压等。</p>\n<p>位于菲律宾的国际水稻研究所就设计过水稻整株 bioassay 的方法来研究水稻化感作用。在这个实验中排除了资源竞争对实验的影响，在一定程度上证明了水稻的化感活性。利用这种方法鉴定到了几种具有强烈化感作用的水稻。</p>\n<p>后续大量的研究表明大约3-4%的水稻品种具有强烈的化感效应。</p>\n<p>2001年的一个实验利用8个水稻栽培种来研究水稻的化感作用，发现这8个栽培稻都能抑制苜蓿、水芹及生菜的出芽及生长（下图）。其中Koshihikari这个水稻品种的化感活性最强。这个实验的巧妙之处在于研究阶段中这些植株的营养物质都来自胚乳，这就巧妙地避免了营养竞争造成的影响。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/2.jpg\" class=\"\">\n\n<h1 id=\"水稻中潜在的化感活性物质\"><a href=\"#水稻中潜在的化感活性物质\" class=\"headerlink\" title=\"水稻中潜在的化感活性物质\"></a>水稻中潜在的化感活性物质</h1><p>酚酸、脂肪酸、苯基链烷酸、异羟肟酸、萜烯及吲哚等物质被认为是水稻提取物和植株残体中潜在的化感活性物质。但是不知道这些物质在生长的水稻植株中是否会被释放，如果被释放，那是不是真真正正的的化感物质呢？</p>\n<p>虽然许多植物组织中都含有潜在的化感活性物质，但是只有那些被释放到环境中的物质才可能会抑制周围植物的出芽及生长，这些释放到环境中的物质才可能是化感物质。鉴于此，比起那些在植物组织中存在的物质，根系分泌物中的物质才更可能是潜在的化感物质。此外，Wu等发现植物组织种具有生长抑制活性的物质的含量与其在根系分泌物中的量是没有明显的相关性的。</p>\n<h1 id=\"水稻中的酚酸不太可能是化感物质\"><a href=\"#水稻中的酚酸不太可能是化感物质\" class=\"headerlink\" title=\"水稻中的酚酸不太可能是化感物质\"></a>水稻中的酚酸不太可能是化感物质</h1><p>在植物和土壤中广泛存在的酚酸被认为是潜在的化感物质，在水稻田、水稻植株残体及水稻根系分泌物中也检测到了酚酸。但是，在稻田土中检测到的酚酸的量不足以引发植物毒性效应，这也让人怀疑水稻中的酚酸类物质到底是不是化感物质。稻田土中酚酸的含量少于5mg/kg，这个含量远低于植物毒性效应的阈值；此外，具有化感活性的水稻与不具有化感活性的水稻分泌的酚酸含量并没有显著差异。那酚酸是不是存在协同作用呢？研究者将5种酚酸混合后来研究混合物对慈姑的抑制效应，发现要达到50%抑制率的话，酚酸混合物的浓度需要达到502μM，这个浓度远远超过根系分泌物中检测到的实际浓度。总之，这些结果表明水稻根系分泌物中的酚酸类物质对水稻的化感作用没有贡献。</p>\n<h1 id=\"水稻根系分泌物中的稻壳酮\"><a href=\"#水稻根系分泌物中的稻壳酮\" class=\"headerlink\" title=\"水稻根系分泌物中的稻壳酮\"></a>水稻根系分泌物中的稻壳酮</h1><p>前面提到Koshihikari这个水稻品种具有很强的化感活性。一项研究水培了约5000株Koshihikari幼苗，希望  从中分离其分泌的化合物，从其中收集到2.1mg具有植物毒性的物质。从质谱数据中比对到这个潜在的化感物质的结构属于MB。Kong等人随后也在其他的水稻品种中鉴定到了MB。Koshihikari这个水稻品种中还存在一个潜在的化感活性物质稻壳酮A（momilactone A, MA）。后续的研究发现在许多水稻品种中都有MA和MB。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/1.jpg\" class=\"\">\n\n<p>MA和MB最初是在稻壳中分离得到的，当时就发现这两个物质能够抑制植物的生长。随后的分析认为MA是植物抗毒素，因为后续的研究发现MA和MB能够抑制稻瘟病菌的生长。后续 有许多关于MA作为植物抗毒素的研究，许多证据表明MA在水稻抗真菌中具有一定的作用。相反，少有研究认为MB是植物抗毒素。最近的研究发现MA和MB也是苔藓<em>Hypnum plumaeforme</em> Wils中的化感物质。这个苔藓和水稻在系统发育上具有明显的距离，这表明这水稻和这种苔藓有着趋同进化的关系。</p>\n<h1 id=\"稻壳酮的化感活性\"><a href=\"#稻壳酮的化感活性\" class=\"headerlink\" title=\"稻壳酮的化感活性\"></a>稻壳酮的化感活性</h1><p>MA和MB在较低浓度下（1-10μM）就能抑制稗草的生长。要对稗草根达到50% 抑制率，MA需要的浓度是28.7μM，MB需要的浓度是6.1。后续的研究也发现MB的抑制活性是MA的4.7-19倍，这表明MB比MA具有更高的抑制活性。</p>\n<h1 id=\"稻壳酮不会毒害水稻\"><a href=\"#稻壳酮不会毒害水稻\" class=\"headerlink\" title=\"稻壳酮不会毒害水稻\"></a>稻壳酮不会毒害水稻</h1><p>稻壳酮A和B浓度分别在100和300μM以上时才能有效抑制水稻根和茎的生长，此时的抑制效率相当于稻壳酮对稗草抑制率的1-2%。MA和MB在对其他植物产生细胞毒性的时候，对水稻植株没有明显的损伤，即使有损伤也是微不足道的损伤。</p>\n<h1 id=\"水稻选择性分泌MB\"><a href=\"#水稻选择性分泌MB\" class=\"headerlink\" title=\"水稻选择性分泌MB\"></a>水稻选择性分泌MB</h1><p>水稻在其整个生命周期都能向其根际分泌MA和MB。开花是分泌水平的临界线，植株开花后其分泌水平便开始降低。在第80天的时候，MA和MB的分泌量分别能够达到1.1μg/株/天和2.3μg/株/天，这个分泌量是30天时的55-58倍。但是有趣的是水稻茎秆内MA和MB的含量分别在4.5μg/g和3μg/g，稻壳里面的含量是4.9μg/g和2.9g/g，整株含量分别是140μg/g和95μg/g。从上面的数据可以看出在水稻植株体内MA的浓度是MB的1.5-1.7倍。相反的是MB的分泌量比MA的分泌量高，这表明相对于MA来说，MB有限分泌到水稻植株根际中。水稻通过其根系分泌稻壳酮的机制还不清楚。</p>\n<h1 id=\"稻壳酮对水稻化感作用的贡献\"><a href=\"#稻壳酮对水稻化感作用的贡献\" class=\"headerlink\" title=\"稻壳酮对水稻化感作用的贡献\"></a>稻壳酮对水稻化感作用的贡献</h1><p>一项研究利用7天大的8个水稻品种幼苗与4天大的稗草种植在一起4天，发现这8个水稻品种幼苗都能抑制稗草的生长。测得MA的浓度在0.21-1.45μM之间，MB的浓度在0.66-3.84μM之间。基于抑制率和浓度，计算结果表明MA在水稻幼苗抑制稗草生长过程中贡献了1.0-4.9%，而MB贡献了58.8-81.9%。因此，MB更可能是水稻幼苗抑制稗草的主要贡献者。另外值得注意的是这8个水稻品种中MB的浓度是具有差异的。因此，不同水稻品种对稗草生长抑制的差异主要是由于MB的浓度差异导致的。</p>\n<p>MA和MB一共贡献了61.4-86.6%的化感活性，剩下的14.4-38.6%化感活性由其他的物质完成，如3-isopropyl-5-acetoxcyclohexene-2-one-1 和 5,7,4′-trihydroxy-3′5′-dimethoxy-flavone。之前的研究发现水稻分泌MA和MB的量是随着时间发生变化的，因此水稻的化感活性也可能是随着时间变化的。</p>\n<h1 id=\"稗草诱导的水稻化感作用与稻壳酮的分泌\"><a href=\"#稗草诱导的水稻化感作用与稻壳酮的分泌\" class=\"headerlink\" title=\"稗草诱导的水稻化感作用与稻壳酮的分泌\"></a>稗草诱导的水稻化感作用与稻壳酮的分泌</h1><p>如果水稻周围有稗草幼苗或水稻在稗草根系分泌物中生长的话，水稻的化感活性会增强。此时水稻化感活性增强并不是因为营养竞争导致的。稗草幼苗或稗草根系分泌物能够诱导水稻体内MB的含量增加，而且水稻分泌的MB的含量也增加。有可能是水稻感受到了来自稗草的物质，进而分泌了更多的MB。和这种情况类似的是高粱，绒毛叶（一种杂草）的根系分泌物会诱导高粱分泌更多的高粱酮。化感是一种诱导防御机制。</p>\n<h1 id=\"胁迫诱导的水稻化感作用与稻壳酮的分泌\"><a href=\"#胁迫诱导的水稻化感作用与稻壳酮的分泌\" class=\"headerlink\" title=\"胁迫诱导的水稻化感作用与稻壳酮的分泌\"></a>胁迫诱导的水稻化感作用与稻壳酮的分泌</h1><p>植物防御信号激素茉莉酸可以增强水稻的化感活性。茉莉酸和斑蝥素能够增加MA和MB在水稻植株体内及分泌物中的含量。鉴于MA和MB具有抗菌活性，由茉莉酸和斑蝥素诱导的MA和MB含量变化可能和植物微生物防御相关。水稻稻瘟病菌的悄然能够增加稻壳酮的含量。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/3.jpg\" class=\"\">\n\n<p>然而除了病原菌侵染外，UV辐射也能诱导水稻体内MA和MB的合成和释放。此外，重金属离子也能诱导MA和MB的合成。因此，可能不仅仅只有特定的微生物防御响应会激活MA和MB的合成，其他的胁迫也能激发相关的响应。也有研究发现营养饥饿条件下水稻中稻壳酮的分泌会增加。由于MA和MB极强的化感活性，这些胁迫条件下MA和MB分泌增减更有利于水稻与周围植物的竞争。</p>\n<h1 id=\"稻壳酮作为化感物质的遗传证据\"><a href=\"#稻壳酮作为化感物质的遗传证据\" class=\"headerlink\" title=\"稻壳酮作为化感物质的遗传证据\"></a>稻壳酮作为化感物质的遗传证据</h1><p>上述这些描述充分表明稻壳酮是水稻中的有效化感物质，水稻也从其根部释放大量植物毒素物质（下图）。从遗传学的角度来说，研究某个物质的化感活性最好的方法就是直接将这个物质从复合物中去除，也就是将合成这个物质的基因进行敲低。因为已经确定了生产代表吡咯烷内酯生物合成中固定中间体的顺式-radi二烯所需的OsCPS4和OsKSL4，可以通过反向遗传学的方法研究这些物质的功能。已经有研究利用了这种方法。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/4.jpg\" class=\"\">\n\n<h1 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h1><p>水稻具有化感活性，能够向周围的环境中释放化感物质。大量物质被认为是具有化感活性的。大量研究表明稻壳酮（尤其是稻壳酮B）在水稻化感活性中具有重要作用。稻壳酮在水稻进化中可有很重要的生态学功能，其相关性似乎反映在水稻基因组中存在一个专门的生物合成基因簇中。也许更重要的是，鉴定稻壳酮B是水稻中的主要化感物质，为育种和/或工程研究提供了分子标记，旨在增加这种重要主食作物的化感作用。</p>\n<img src=\"/2021/02/27/%E7%A8%BB%E5%A3%B3%E9%85%AE%EF%BC%88momilactones%EF%BC%89%E5%9C%A8%E6%B0%B4%E7%A8%BB%E5%8C%96%E6%84%9F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2/5.jpg\" class=\"\">\n\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#51;&#64;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"部署Rshiny到服务器的常见问题","abbrlink":"96076236","date":"2021-01-09T02:53:19.000Z","_content":"\n# 下载安装Rshiny-server\n\n参考链接：\n\n- https://mp.weixin.qq.com/s?src=11&timestamp=1610162005&ver=2817&signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&new=1\n- http://m.meiyingqishi.cn/view.php?aid=85\n\n<!-- more  -->\n\n## 安装 R\n\n```shell\nsudo echo \" debhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/\" | sudo tee -a/etc/apt/sources.list\n```\n\n\n\n- 添加秘钥\n\n  ```shell\n  gpg --keyserver keyserver.ubuntu.com --recv-key51716619E084DAB9\n  gpg -a --export 51716619E084DAB9 | sudo apt-key add –\n  sudo apt-key adv --keyserver keyserver.ubuntu.com--recv-keys E084DAB9\n  ```\n\n  \n\n- 更新\n\n  ```shell\n  sudo apt-get update\n  ```\n\n  \n\n- 安装\n\n  ```shell\n  sudo apt-get install r-base r-base-core r-base-dev\n  ```\n\n  \n\n## 安装 RStudio Server\n```shell\nsudo apt-get install gdebi-core\nwget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb\nsudo gdebi rstudio-server-1.2.1335-amd64.deb\n```\n\n\n\n- 启动 / 停止 / 重启\n\n  ```shell\n  rstudio-server start# 启动\n  rstudio-server stop #停止\n  rstudio-server restart #重启\n  ```\n\n  \n\n- 配置\n\n  ```shell\n  # ip 和端口：\n  vi/etc/rstudio/rserver.conf\n  www-port=8789 #设置监听端口\n  \\#www-address=127.0.0.0# 允许访问的 IP 地址，默认 0.0.0.0\n  ```\n\n  \n\n- 会话配置：\n\n```shell\nvi/etc/rstudio/rsession.conf\nsession-timeout-minutes=30# 会话超时时间\nr-cran-repos=https://my.favorite.cran.mirror#CRAN 资源库\n```\n\n\n\n5）帐号、访问\n\n访问地址：\nhttp://ip:8789\n帐号密码：unbuntu 的帐号密码，注意：不能用 root 帐号\n新建帐号：useradd -d/home/ 用户名 -m 用户名 #创建用户的同时指定目录 passwd 用户名 #设置密码\n\n五、安装 Shiny Server\n1）安装 shiny 包\nsudosu - -c\n\n\"R -e\"install.packages('shiny',repos='https://cran.rstudio.com/')\"\"\n\n2）查看最新版本\nhttps://www.rstudio.com/products/shiny/download-server/\n\n3）安装 server\nsudo apt-getinstall gdebi-core\nwget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb\nsudo gdebishiny-server-1.5.9.923-amd64.deb\n\n4）启动 / 停止 / 重启 / 状态\nsudo systemctl start shiny-server #开启\nsudo systemctl stop shiny-server #停止\nsudo systemctl restart shiny-server #重启\nsudo systemctl status shiny-server #查看状态\n\n5）访问\nHttp://ip:3838\n\n六、安装 shiny 包\nsudo su - -c\n\"R -e\"install.packages (' 包名 ', repos='https://cran.rstudio.com/')\"\"\n\n\n\n\n\n# 报错信息等\n\n- 如果部署成功后可以正常打开，但是很快显示与服务器断开连接，通常是以为依赖的包没有安装好。\n\n  ```shell\n  Disconnected from the server.\n  Reload\n  ```\n\n- 如果显示下面的图片，通常是R包和R版本冲突，需要重新安装R包。\n  {% asset_img 1.png %}\n\n# 用户传入文件\n\n用户传入的文件结构是这样的：\n\n{% asset_img 2.png %}\n\n- 上传多个文件：\n\n  ```R\n  fileInput(\"data_input\",\n                         label = h4(\"上传数据\"),\n                         multiple = TRUE,\n                         accept = \".csv\",\n                         buttonLabel = \"浏览...\")\n  ```\n\n  \n\n","source":"_posts/部署Rshiny到服务器的常见问题.md","raw":"---\ntitle: 部署Rshiny到服务器的常见问题\ntags: R语言\ncategories: R语言\nabbrlink: '96076236'\ndate: 2021-01-09 10:53:19\n---\n\n# 下载安装Rshiny-server\n\n参考链接：\n\n- https://mp.weixin.qq.com/s?src=11&timestamp=1610162005&ver=2817&signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&new=1\n- http://m.meiyingqishi.cn/view.php?aid=85\n\n<!-- more  -->\n\n## 安装 R\n\n```shell\nsudo echo \" debhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/\" | sudo tee -a/etc/apt/sources.list\n```\n\n\n\n- 添加秘钥\n\n  ```shell\n  gpg --keyserver keyserver.ubuntu.com --recv-key51716619E084DAB9\n  gpg -a --export 51716619E084DAB9 | sudo apt-key add –\n  sudo apt-key adv --keyserver keyserver.ubuntu.com--recv-keys E084DAB9\n  ```\n\n  \n\n- 更新\n\n  ```shell\n  sudo apt-get update\n  ```\n\n  \n\n- 安装\n\n  ```shell\n  sudo apt-get install r-base r-base-core r-base-dev\n  ```\n\n  \n\n## 安装 RStudio Server\n```shell\nsudo apt-get install gdebi-core\nwget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb\nsudo gdebi rstudio-server-1.2.1335-amd64.deb\n```\n\n\n\n- 启动 / 停止 / 重启\n\n  ```shell\n  rstudio-server start# 启动\n  rstudio-server stop #停止\n  rstudio-server restart #重启\n  ```\n\n  \n\n- 配置\n\n  ```shell\n  # ip 和端口：\n  vi/etc/rstudio/rserver.conf\n  www-port=8789 #设置监听端口\n  \\#www-address=127.0.0.0# 允许访问的 IP 地址，默认 0.0.0.0\n  ```\n\n  \n\n- 会话配置：\n\n```shell\nvi/etc/rstudio/rsession.conf\nsession-timeout-minutes=30# 会话超时时间\nr-cran-repos=https://my.favorite.cran.mirror#CRAN 资源库\n```\n\n\n\n5）帐号、访问\n\n访问地址：\nhttp://ip:8789\n帐号密码：unbuntu 的帐号密码，注意：不能用 root 帐号\n新建帐号：useradd -d/home/ 用户名 -m 用户名 #创建用户的同时指定目录 passwd 用户名 #设置密码\n\n五、安装 Shiny Server\n1）安装 shiny 包\nsudosu - -c\n\n\"R -e\"install.packages('shiny',repos='https://cran.rstudio.com/')\"\"\n\n2）查看最新版本\nhttps://www.rstudio.com/products/shiny/download-server/\n\n3）安装 server\nsudo apt-getinstall gdebi-core\nwget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb\nsudo gdebishiny-server-1.5.9.923-amd64.deb\n\n4）启动 / 停止 / 重启 / 状态\nsudo systemctl start shiny-server #开启\nsudo systemctl stop shiny-server #停止\nsudo systemctl restart shiny-server #重启\nsudo systemctl status shiny-server #查看状态\n\n5）访问\nHttp://ip:3838\n\n六、安装 shiny 包\nsudo su - -c\n\"R -e\"install.packages (' 包名 ', repos='https://cran.rstudio.com/')\"\"\n\n\n\n\n\n# 报错信息等\n\n- 如果部署成功后可以正常打开，但是很快显示与服务器断开连接，通常是以为依赖的包没有安装好。\n\n  ```shell\n  Disconnected from the server.\n  Reload\n  ```\n\n- 如果显示下面的图片，通常是R包和R版本冲突，需要重新安装R包。\n  {% asset_img 1.png %}\n\n# 用户传入文件\n\n用户传入的文件结构是这样的：\n\n{% asset_img 2.png %}\n\n- 上传多个文件：\n\n  ```R\n  fileInput(\"data_input\",\n                         label = h4(\"上传数据\"),\n                         multiple = TRUE,\n                         accept = \".csv\",\n                         buttonLabel = \"浏览...\")\n  ```\n\n  \n\n","slug":"部署Rshiny到服务器的常见问题","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcku004or0g0bn3x761w","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"下载安装Rshiny-server\"><a href=\"#下载安装Rshiny-server\" class=\"headerlink\" title=\"下载安装Rshiny-server\"></a>下载安装Rshiny-server</h1><p>参考链接：</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1610162005&amp;ver=2817&amp;signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&amp;new=1\">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1610162005&amp;ver=2817&amp;signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&amp;new=1</a></li>\n<li><a href=\"http://m.meiyingqishi.cn/view.php?aid=85\">http://m.meiyingqishi.cn/view.php?aid=85</a></li>\n</ul>\n<!-- more  -->\n\n<h2 id=\"安装-R\"><a href=\"#安装-R\" class=\"headerlink\" title=\"安装 R\"></a>安装 R</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo echo &quot; debhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/&quot; | sudo tee -a/etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>添加秘钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg --keyserver keyserver.ubuntu.com --recv-key51716619E084DAB9</span><br><span class=\"line\">gpg -a --export 51716619E084DAB9 | sudo apt-key add –</span><br><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com--recv-keys E084DAB9</span><br></pre></td></tr></table></figure></li>\n<li><p>更新</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure></li>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install r-base r-base-core r-base-dev</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"安装-RStudio-Server\"><a href=\"#安装-RStudio-Server\" class=\"headerlink\" title=\"安装 RStudio Server\"></a>安装 RStudio Server</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gdebi-core</span><br><span class=\"line\">wget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb</span><br><span class=\"line\">sudo gdebi rstudio-server-1.2.1335-amd64.deb</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>启动 / 停止 / 重启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rstudio-server start# 启动</span><br><span class=\"line\">rstudio-server stop #停止</span><br><span class=\"line\">rstudio-server restart #重启</span><br></pre></td></tr></table></figure></li>\n<li><p>配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ip 和端口：</span></span><br><span class=\"line\">vi/etc/rstudio/rserver.conf</span><br><span class=\"line\">www-port=8789 #设置监听端口</span><br><span class=\"line\">\\#www-address=127.0.0.0# 允许访问的 IP 地址，默认 0.0.0.0</span><br></pre></td></tr></table></figure></li>\n<li><p>会话配置：</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi/etc/rstudio/rsession.conf</span><br><span class=\"line\">session-timeout-minutes=30# 会话超时时间</span><br><span class=\"line\">r-cran-repos=https://my.favorite.cran.mirror#CRAN 资源库</span><br></pre></td></tr></table></figure>\n\n\n\n<p>5）帐号、访问</p>\n<p>访问地址：<br><a href=\"http://ip:8789/\">http://ip:8789</a><br>帐号密码：unbuntu 的帐号密码，注意：不能用 root 帐号<br>新建帐号：useradd -d/home/ 用户名 -m 用户名 #创建用户的同时指定目录 passwd 用户名 #设置密码</p>\n<p>五、安装 Shiny Server<br>1）安装 shiny 包<br>sudosu - -c</p>\n<p>“R -e”install.packages(‘shiny’,repos=’<a href=\"https://cran.rstudio.com/&#39;)&quot;&quot;\">https://cran.rstudio.com/&#39;)&quot;&quot;</a></p>\n<p>2）查看最新版本<br><a href=\"https://www.rstudio.com/products/shiny/download-server/\">https://www.rstudio.com/products/shiny/download-server/</a></p>\n<p>3）安装 server<br>sudo apt-getinstall gdebi-core<br>wget <a href=\"https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb\">https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb</a><br>sudo gdebishiny-server-1.5.9.923-amd64.deb</p>\n<p>4）启动 / 停止 / 重启 / 状态<br>sudo systemctl start shiny-server #开启<br>sudo systemctl stop shiny-server #停止<br>sudo systemctl restart shiny-server #重启<br>sudo systemctl status shiny-server #查看状态</p>\n<p>5）访问<br><a href=\"http://ip:3838/\">Http://ip:3838</a></p>\n<p>六、安装 shiny 包<br>sudo su - -c<br>“R -e”install.packages (‘ 包名 ‘, repos=’<a href=\"https://cran.rstudio.com/&#39;)&quot;&quot;\">https://cran.rstudio.com/&#39;)&quot;&quot;</a></p>\n<h1 id=\"报错信息等\"><a href=\"#报错信息等\" class=\"headerlink\" title=\"报错信息等\"></a>报错信息等</h1><ul>\n<li><p>如果部署成功后可以正常打开，但是很快显示与服务器断开连接，通常是以为依赖的包没有安装好。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Disconnected from the server.</span><br><span class=\"line\">Reload</span><br></pre></td></tr></table></figure></li>\n<li><p>如果显示下面的图片，通常是R包和R版本冲突，需要重新安装R包。</p>\n<img src=\"/2021/01/09/%E9%83%A8%E7%BD%B2Rshiny%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/1.png\" class=\"\"></li>\n</ul>\n<h1 id=\"用户传入文件\"><a href=\"#用户传入文件\" class=\"headerlink\" title=\"用户传入文件\"></a>用户传入文件</h1><p>用户传入的文件结构是这样的：</p>\n<img src=\"/2021/01/09/%E9%83%A8%E7%BD%B2Rshiny%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/2.png\" class=\"\">\n\n<ul>\n<li><p>上传多个文件：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileInput(<span class=\"string\">&quot;data_input&quot;</span>,</span><br><span class=\"line\">                       label = h4(<span class=\"string\">&quot;上传数据&quot;</span>),</span><br><span class=\"line\">                       multiple = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">                       accept = <span class=\"string\">&quot;.csv&quot;</span>,</span><br><span class=\"line\">                       buttonLabel = <span class=\"string\">&quot;浏览...&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h1 id=\"下载安装Rshiny-server\"><a href=\"#下载安装Rshiny-server\" class=\"headerlink\" title=\"下载安装Rshiny-server\"></a>下载安装Rshiny-server</h1><p>参考链接：</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1610162005&amp;ver=2817&amp;signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&amp;new=1\">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1610162005&amp;ver=2817&amp;signature=BhA59HXhKAj1PYvJS11senjcK8co0LgnZ2iS-7RlClhHqqsESkCMVrw*HFaCnmTHdlC9CiGzbKV*xlzUOr6hXj6vMEo8VADPVLekOzyGi8iB21LHEb7hfvbw85aAE*9n&amp;new=1</a></li>\n<li><a href=\"http://m.meiyingqishi.cn/view.php?aid=85\">http://m.meiyingqishi.cn/view.php?aid=85</a></li>\n</ul>\n<!-- more  -->\n\n<h2 id=\"安装-R\"><a href=\"#安装-R\" class=\"headerlink\" title=\"安装 R\"></a>安装 R</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo echo &quot; debhttps://cloud.r-project.org/bin/linux/ubuntu xenial-cran35/&quot; | sudo tee -a/etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>添加秘钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gpg --keyserver keyserver.ubuntu.com --recv-key51716619E084DAB9</span><br><span class=\"line\">gpg -a --export 51716619E084DAB9 | sudo apt-key add –</span><br><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com--recv-keys E084DAB9</span><br></pre></td></tr></table></figure></li>\n<li><p>更新</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure></li>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install r-base r-base-core r-base-dev</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"安装-RStudio-Server\"><a href=\"#安装-RStudio-Server\" class=\"headerlink\" title=\"安装 RStudio Server\"></a>安装 RStudio Server</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gdebi-core</span><br><span class=\"line\">wget https://download2.rstudio.org/server/trusty/amd64/rstudio-server-1.2.1335-amd64.deb</span><br><span class=\"line\">sudo gdebi rstudio-server-1.2.1335-amd64.deb</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><p>启动 / 停止 / 重启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rstudio-server start# 启动</span><br><span class=\"line\">rstudio-server stop #停止</span><br><span class=\"line\">rstudio-server restart #重启</span><br></pre></td></tr></table></figure></li>\n<li><p>配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ip 和端口：</span></span><br><span class=\"line\">vi/etc/rstudio/rserver.conf</span><br><span class=\"line\">www-port=8789 #设置监听端口</span><br><span class=\"line\">\\#www-address=127.0.0.0# 允许访问的 IP 地址，默认 0.0.0.0</span><br></pre></td></tr></table></figure></li>\n<li><p>会话配置：</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi/etc/rstudio/rsession.conf</span><br><span class=\"line\">session-timeout-minutes=30# 会话超时时间</span><br><span class=\"line\">r-cran-repos=https://my.favorite.cran.mirror#CRAN 资源库</span><br></pre></td></tr></table></figure>\n\n\n\n<p>5）帐号、访问</p>\n<p>访问地址：<br><a href=\"http://ip:8789/\">http://ip:8789</a><br>帐号密码：unbuntu 的帐号密码，注意：不能用 root 帐号<br>新建帐号：useradd -d/home/ 用户名 -m 用户名 #创建用户的同时指定目录 passwd 用户名 #设置密码</p>\n<p>五、安装 Shiny Server<br>1）安装 shiny 包<br>sudosu - -c</p>\n<p>“R -e”install.packages(‘shiny’,repos=’<a href=\"https://cran.rstudio.com/&#39;)&quot;&quot;\">https://cran.rstudio.com/&#39;)&quot;&quot;</a></p>\n<p>2）查看最新版本<br><a href=\"https://www.rstudio.com/products/shiny/download-server/\">https://www.rstudio.com/products/shiny/download-server/</a></p>\n<p>3）安装 server<br>sudo apt-getinstall gdebi-core<br>wget <a href=\"https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb\">https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb</a><br>sudo gdebishiny-server-1.5.9.923-amd64.deb</p>\n<p>4）启动 / 停止 / 重启 / 状态<br>sudo systemctl start shiny-server #开启<br>sudo systemctl stop shiny-server #停止<br>sudo systemctl restart shiny-server #重启<br>sudo systemctl status shiny-server #查看状态</p>\n<p>5）访问<br><a href=\"http://ip:3838/\">Http://ip:3838</a></p>\n<p>六、安装 shiny 包<br>sudo su - -c<br>“R -e”install.packages (‘ 包名 ‘, repos=’<a href=\"https://cran.rstudio.com/&#39;)&quot;&quot;\">https://cran.rstudio.com/&#39;)&quot;&quot;</a></p>\n<h1 id=\"报错信息等\"><a href=\"#报错信息等\" class=\"headerlink\" title=\"报错信息等\"></a>报错信息等</h1><ul>\n<li><p>如果部署成功后可以正常打开，但是很快显示与服务器断开连接，通常是以为依赖的包没有安装好。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Disconnected from the server.</span><br><span class=\"line\">Reload</span><br></pre></td></tr></table></figure></li>\n<li><p>如果显示下面的图片，通常是R包和R版本冲突，需要重新安装R包。</p>\n<img src=\"/2021/01/09/%E9%83%A8%E7%BD%B2Rshiny%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/1.png\" class=\"\"></li>\n</ul>\n<h1 id=\"用户传入文件\"><a href=\"#用户传入文件\" class=\"headerlink\" title=\"用户传入文件\"></a>用户传入文件</h1><p>用户传入的文件结构是这样的：</p>\n<img src=\"/2021/01/09/%E9%83%A8%E7%BD%B2Rshiny%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/2.png\" class=\"\">\n\n<ul>\n<li><p>上传多个文件：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileInput(<span class=\"string\">&quot;data_input&quot;</span>,</span><br><span class=\"line\">                       label = h4(<span class=\"string\">&quot;上传数据&quot;</span>),</span><br><span class=\"line\">                       multiple = <span class=\"literal\">TRUE</span>,</span><br><span class=\"line\">                       accept = <span class=\"string\">&quot;.csv&quot;</span>,</span><br><span class=\"line\">                       buttonLabel = <span class=\"string\">&quot;浏览...&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"酚酸是不是水稻中的化感物质","abbrlink":"5e42ca27","date":"2021-03-07T07:56:31.000Z","_content":"\n**酚酸是不是水稻中的化感物质？**\n\n为什么会有这个问题呢？<!-- more -->毕业季写论文查文献看到一篇综述：[Allelopathy and the role of allelochemicals in plant defence](https://www.sciencedirect.com/science/article/pii/S0065229616301203)$^{[1]}$，在这片文章中作者将化感物质分为了三类：酚类、萜类及生物碱。因为做了代谢组，所以就比较关注这些物质在根系分泌物中的浓度情况。结果，看到这样一篇文献：\n\n{% asset_img 1.png %}\n\n这篇文章截止到现在，Google Scholar上显示已经被引用了153次。\n\n文章说酚酸不太可能是水稻中的化感物质的理由如下：\n\n- 如果酚酸是水稻中的化感活性物质，那不同的水稻品种对酚酸的耐受性应该是有差异的；\n- 淹水的稻田中酚酸的含量比有氧的土壤的高，但是生长在淹水稻田中的水稻对*p*-hydroxybenzoic acid的耐受性并没有比生长在含氧土壤中的水稻强；\n- 传统水稻品种对酚酸的耐受性并没有比改良品种强；\n- 两种*Echinochloa* 杂草（分别厌氧和好氧）对*p*-hydroxybenzoic acid 的耐受性没有差异；\n- 因此，可以看出的是不管是水稻品种还是杂草，对酚酸的耐受性都不同，但水稻品种对*p*-hydroxybenzoic acid的耐受性比杂草强；\n- 田间试验发现水稻在生长的第一个月中酚酸的分泌量大概是10μg/株/天；\n- 常规种植密度下，酚酸的分泌速率能够达到1mg/m$^{2}$/天，这个浓度是达不到作用浓度的；\n- 如果酚酸要具有植物毒性，那此时的浓度已经远远超出在自然条件下检测到的浓度（Gotoh etal 1971和Niranjan Rao etal 1976这两篇文献也说到水稻分泌的酚酸浓度太低了，不能引起水稻植株发生自毒作用）；\n- 作者认为水稻植株比杂草对酚酸具有更强的耐受性是因为水稻生长过程中要承受来自水稻植株残体降解的物质，此时酚酸的浓度就是植株残体降解产生的浓度加上水稻植株正常分泌的浓度。\n\n----\n\n找到另外一篇会议摘要，是福建农林大学的：\n\n{% asset_img 2.png %}\n\n这篇会议摘要的主要内容是：\n\n- 酚酸被很多研究者认为是植物中的化感物质，但是在水稻中有一些争论；\n- 之前的研究发现具有化感活性的水稻品种和不具有化感活性的水稻品种分泌的酚酸的含量没有差异；\n- 使用不同的方法检测水稻培养液中酚酸的浓度，发现比之前文献报道的浓度高了7倍左右；\n- 其他胁迫条件下酚酸的生物合成被上调。\n- 酚酸能够增加*Myxococcus xanthus* 这种菌的含量，而这种菌会刺激稗草基因表达；\n- 阿魏酸+*Myxococcus xanthus* 对稗草具有强烈的抑制作用。\n\n# 参考文献\n\n>[1]. Latif S, Chiapusio G, Weston L A. Allelopathy and the role of allelochemicals in plant defence[J]. Advances in botanical research, 2017, 82: 19-54.\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","source":"_posts/酚酸是不是水稻中的化感物质.md","raw":"---\ntitle: 酚酸是不是水稻中的化感物质\ntags: 文献\ncategories: 文献\nabbrlink: 5e42ca27\ndate: 2021-03-07 15:56:31\n---\n\n**酚酸是不是水稻中的化感物质？**\n\n为什么会有这个问题呢？<!-- more -->毕业季写论文查文献看到一篇综述：[Allelopathy and the role of allelochemicals in plant defence](https://www.sciencedirect.com/science/article/pii/S0065229616301203)$^{[1]}$，在这片文章中作者将化感物质分为了三类：酚类、萜类及生物碱。因为做了代谢组，所以就比较关注这些物质在根系分泌物中的浓度情况。结果，看到这样一篇文献：\n\n{% asset_img 1.png %}\n\n这篇文章截止到现在，Google Scholar上显示已经被引用了153次。\n\n文章说酚酸不太可能是水稻中的化感物质的理由如下：\n\n- 如果酚酸是水稻中的化感活性物质，那不同的水稻品种对酚酸的耐受性应该是有差异的；\n- 淹水的稻田中酚酸的含量比有氧的土壤的高，但是生长在淹水稻田中的水稻对*p*-hydroxybenzoic acid的耐受性并没有比生长在含氧土壤中的水稻强；\n- 传统水稻品种对酚酸的耐受性并没有比改良品种强；\n- 两种*Echinochloa* 杂草（分别厌氧和好氧）对*p*-hydroxybenzoic acid 的耐受性没有差异；\n- 因此，可以看出的是不管是水稻品种还是杂草，对酚酸的耐受性都不同，但水稻品种对*p*-hydroxybenzoic acid的耐受性比杂草强；\n- 田间试验发现水稻在生长的第一个月中酚酸的分泌量大概是10μg/株/天；\n- 常规种植密度下，酚酸的分泌速率能够达到1mg/m$^{2}$/天，这个浓度是达不到作用浓度的；\n- 如果酚酸要具有植物毒性，那此时的浓度已经远远超出在自然条件下检测到的浓度（Gotoh etal 1971和Niranjan Rao etal 1976这两篇文献也说到水稻分泌的酚酸浓度太低了，不能引起水稻植株发生自毒作用）；\n- 作者认为水稻植株比杂草对酚酸具有更强的耐受性是因为水稻生长过程中要承受来自水稻植株残体降解的物质，此时酚酸的浓度就是植株残体降解产生的浓度加上水稻植株正常分泌的浓度。\n\n----\n\n找到另外一篇会议摘要，是福建农林大学的：\n\n{% asset_img 2.png %}\n\n这篇会议摘要的主要内容是：\n\n- 酚酸被很多研究者认为是植物中的化感物质，但是在水稻中有一些争论；\n- 之前的研究发现具有化感活性的水稻品种和不具有化感活性的水稻品种分泌的酚酸的含量没有差异；\n- 使用不同的方法检测水稻培养液中酚酸的浓度，发现比之前文献报道的浓度高了7倍左右；\n- 其他胁迫条件下酚酸的生物合成被上调。\n- 酚酸能够增加*Myxococcus xanthus* 这种菌的含量，而这种菌会刺激稗草基因表达；\n- 阿魏酸+*Myxococcus xanthus* 对稗草具有强烈的抑制作用。\n\n# 参考文献\n\n>[1]. Latif S, Chiapusio G, Weston L A. Allelopathy and the role of allelochemicals in plant defence[J]. Advances in botanical research, 2017, 82: 19-54.\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com","slug":"酚酸是不是水稻中的化感物质","published":1,"updated":"2021-03-08T01:54:48.497Z","_id":"ckwbqwckv004qr0g0a8rw66bo","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>酚酸是不是水稻中的化感物质？</strong></p>\n<p>为什么会有这个问题呢？<span id=\"more\"></span>毕业季写论文查文献看到一篇综述：<a href=\"https://www.sciencedirect.com/science/article/pii/S0065229616301203\">Allelopathy and the role of allelochemicals in plant defence</a>$^{[1]}$，在这片文章中作者将化感物质分为了三类：酚类、萜类及生物碱。因为做了代谢组，所以就比较关注这些物质在根系分泌物中的浓度情况。结果，看到这样一篇文献：</p>\n<img src=\"/2021/03/07/%E9%85%9A%E9%85%B8%E6%98%AF%E4%B8%8D%E6%98%AF%E6%B0%B4%E7%A8%BB%E4%B8%AD%E7%9A%84%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8/1.png\" class=\"\">\n\n<p>这篇文章截止到现在，Google Scholar上显示已经被引用了153次。</p>\n<p>文章说酚酸不太可能是水稻中的化感物质的理由如下：</p>\n<ul>\n<li>如果酚酸是水稻中的化感活性物质，那不同的水稻品种对酚酸的耐受性应该是有差异的；</li>\n<li>淹水的稻田中酚酸的含量比有氧的土壤的高，但是生长在淹水稻田中的水稻对<em>p</em>-hydroxybenzoic acid的耐受性并没有比生长在含氧土壤中的水稻强；</li>\n<li>传统水稻品种对酚酸的耐受性并没有比改良品种强；</li>\n<li>两种<em>Echinochloa</em> 杂草（分别厌氧和好氧）对<em>p</em>-hydroxybenzoic acid 的耐受性没有差异；</li>\n<li>因此，可以看出的是不管是水稻品种还是杂草，对酚酸的耐受性都不同，但水稻品种对<em>p</em>-hydroxybenzoic acid的耐受性比杂草强；</li>\n<li>田间试验发现水稻在生长的第一个月中酚酸的分泌量大概是10μg/株/天；</li>\n<li>常规种植密度下，酚酸的分泌速率能够达到1mg/m$^{2}$/天，这个浓度是达不到作用浓度的；</li>\n<li>如果酚酸要具有植物毒性，那此时的浓度已经远远超出在自然条件下检测到的浓度（Gotoh etal 1971和Niranjan Rao etal 1976这两篇文献也说到水稻分泌的酚酸浓度太低了，不能引起水稻植株发生自毒作用）；</li>\n<li>作者认为水稻植株比杂草对酚酸具有更强的耐受性是因为水稻生长过程中要承受来自水稻植株残体降解的物质，此时酚酸的浓度就是植株残体降解产生的浓度加上水稻植株正常分泌的浓度。</li>\n</ul>\n<hr>\n<p>找到另外一篇会议摘要，是福建农林大学的：</p>\n<img src=\"/2021/03/07/%E9%85%9A%E9%85%B8%E6%98%AF%E4%B8%8D%E6%98%AF%E6%B0%B4%E7%A8%BB%E4%B8%AD%E7%9A%84%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8/2.png\" class=\"\">\n\n<p>这篇会议摘要的主要内容是：</p>\n<ul>\n<li>酚酸被很多研究者认为是植物中的化感物质，但是在水稻中有一些争论；</li>\n<li>之前的研究发现具有化感活性的水稻品种和不具有化感活性的水稻品种分泌的酚酸的含量没有差异；</li>\n<li>使用不同的方法检测水稻培养液中酚酸的浓度，发现比之前文献报道的浓度高了7倍左右；</li>\n<li>其他胁迫条件下酚酸的生物合成被上调。</li>\n<li>酚酸能够增加<em>Myxococcus xanthus</em> 这种菌的含量，而这种菌会刺激稗草基因表达；</li>\n<li>阿魏酸+<em>Myxococcus xanthus</em> 对稗草具有强烈的抑制作用。</li>\n</ul>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1]. Latif S, Chiapusio G, Weston L A. Allelopathy and the role of allelochemicals in plant defence[J]. Advances in botanical research, 2017, 82: 19-54.</p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p><strong>酚酸是不是水稻中的化感物质？</strong></p>\n<p>为什么会有这个问题呢？","more":"毕业季写论文查文献看到一篇综述：<a href=\"https://www.sciencedirect.com/science/article/pii/S0065229616301203\">Allelopathy and the role of allelochemicals in plant defence</a>$^{[1]}$，在这片文章中作者将化感物质分为了三类：酚类、萜类及生物碱。因为做了代谢组，所以就比较关注这些物质在根系分泌物中的浓度情况。结果，看到这样一篇文献：</p>\n<img src=\"/2021/03/07/%E9%85%9A%E9%85%B8%E6%98%AF%E4%B8%8D%E6%98%AF%E6%B0%B4%E7%A8%BB%E4%B8%AD%E7%9A%84%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8/1.png\" class=\"\">\n\n<p>这篇文章截止到现在，Google Scholar上显示已经被引用了153次。</p>\n<p>文章说酚酸不太可能是水稻中的化感物质的理由如下：</p>\n<ul>\n<li>如果酚酸是水稻中的化感活性物质，那不同的水稻品种对酚酸的耐受性应该是有差异的；</li>\n<li>淹水的稻田中酚酸的含量比有氧的土壤的高，但是生长在淹水稻田中的水稻对<em>p</em>-hydroxybenzoic acid的耐受性并没有比生长在含氧土壤中的水稻强；</li>\n<li>传统水稻品种对酚酸的耐受性并没有比改良品种强；</li>\n<li>两种<em>Echinochloa</em> 杂草（分别厌氧和好氧）对<em>p</em>-hydroxybenzoic acid 的耐受性没有差异；</li>\n<li>因此，可以看出的是不管是水稻品种还是杂草，对酚酸的耐受性都不同，但水稻品种对<em>p</em>-hydroxybenzoic acid的耐受性比杂草强；</li>\n<li>田间试验发现水稻在生长的第一个月中酚酸的分泌量大概是10μg/株/天；</li>\n<li>常规种植密度下，酚酸的分泌速率能够达到1mg/m$^{2}$/天，这个浓度是达不到作用浓度的；</li>\n<li>如果酚酸要具有植物毒性，那此时的浓度已经远远超出在自然条件下检测到的浓度（Gotoh etal 1971和Niranjan Rao etal 1976这两篇文献也说到水稻分泌的酚酸浓度太低了，不能引起水稻植株发生自毒作用）；</li>\n<li>作者认为水稻植株比杂草对酚酸具有更强的耐受性是因为水稻生长过程中要承受来自水稻植株残体降解的物质，此时酚酸的浓度就是植株残体降解产生的浓度加上水稻植株正常分泌的浓度。</li>\n</ul>\n<hr>\n<p>找到另外一篇会议摘要，是福建农林大学的：</p>\n<img src=\"/2021/03/07/%E9%85%9A%E9%85%B8%E6%98%AF%E4%B8%8D%E6%98%AF%E6%B0%B4%E7%A8%BB%E4%B8%AD%E7%9A%84%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8/2.png\" class=\"\">\n\n<p>这篇会议摘要的主要内容是：</p>\n<ul>\n<li>酚酸被很多研究者认为是植物中的化感物质，但是在水稻中有一些争论；</li>\n<li>之前的研究发现具有化感活性的水稻品种和不具有化感活性的水稻品种分泌的酚酸的含量没有差异；</li>\n<li>使用不同的方法检测水稻培养液中酚酸的浓度，发现比之前文献报道的浓度高了7倍左右；</li>\n<li>其他胁迫条件下酚酸的生物合成被上调。</li>\n<li>酚酸能够增加<em>Myxococcus xanthus</em> 这种菌的含量，而这种菌会刺激稗草基因表达；</li>\n<li>阿魏酸+<em>Myxococcus xanthus</em> 对稗草具有强烈的抑制作用。</li>\n</ul>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1]. Latif S, Chiapusio G, Weston L A. Allelopathy and the role of allelochemicals in plant defence[J]. Advances in botanical research, 2017, 82: 19-54.</p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#x78;&#105;&#x61;&#110;&#103;&#49;&#49;&#55;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#x78;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;</a><br>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#105;&#120;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#x34;&#x32;&#51;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"化感和化感物质在植物防御中的作用","abbrlink":"b54a9b65","date":"2021-01-19T05:42:12.000Z","_content":"\n# 摘要\n\n化感（Allelopathy）指的是植物间或植物与其他生物之间通过植物产生的具有生物活性的次级代谢产物（化感物质，allelochemicals）介导的化学互作导致的生长干扰现象。<!-- more -->已有大量的研究探明了植物不同组织部位的化感物质的释放机制，如裸露在空气中的部位的挥发和淋溶、根系分泌及植物残体在土壤中的降解等。尽管这些化感物质有着不同的生物活性和作用方式，但是它们却具有类似的生物合成通路（某类代谢物可以通过多种生物合成通路进行合成产生）。最近大量的研究阐明了在原生/非原生生态中，化感物质对植物演替和入侵的重要影响作用。此外，许多研究还关注了能够抑制杂草的作物，对其进行筛选和利用，以此来管理田间杂草，实现农业可持续发展。更好地理解化感物质与植物防御之间的关系有助于我们更好地保护和管理农作物、限制入侵杂草的扩张、保存本地植物并促进新型农药的发展与应用。与代谢组学相关的技术的使用已经极大地促进了特有化感物质、生物合成通路及其在土壤中的复杂作用的研究。包括化感物质在内的植物新型代谢物的鉴定为新型农药的研发奠定了生物学基础，为今后的合成提供互补结构，并可以辅助开发新的分子靶标位点。\n\n# Introduction\n\n植物及其微生物区系持续不断地产生着大量的化学物质，这些物质中的大部分在初级代谢（植物生长发育必须）中不具有生物学功能。这些低分子量的有机化合物被称为植物次级产物或次级代谢物。某些被称为化感物质的次级代谢物对邻近植物的生长、健康和行为具有刺激或抑制效应，这种现象被称为化感作用。化感作用首次被提出使用是在1937年，当时被广泛地定义为植物间或植物-微生物间直接或间接的生物化学互作。\n\n国际化感协会（The International Society of Allelopathy，ISA）将化感作用定义为植物与其他生物（不包括食草动物）之间的化学互作。鉴于此，大多数研究化感的研究人员关注的是植物之间的化学互作。然而，值得注意的是微生物也能够降解和激活次级代谢产物，某些情况下这些微生物具有更强的植物生长抑制效果。次级代谢物中具有潜在化感活性的物质叫做化感物质（allelochemicals）。此外，化感物质造成的化感干扰不同于植物之间对水分、空间、光、气、大量/微量元素的竞争干扰。随着植物的生长，化感和竞争都会造成生长减缓或生长干扰。\n\n化感并不是一种新的现象，2000年以前的文献中就有了化感的相关记录。在这些古老的手稿中，植频繁记录着植物能够让土壤”生病“，并产生毒素影响其他植物的生长。希腊植物学家Theophrastus首次注意到鹰嘴豆会”耗尽“土壤并抑制杂草。后来的罗马学者Pliny记录描述了核桃树对周围植物的毒害作用。1832年，De Candolle完成了第一个较完整的实验对化感品种的根系分泌物的毒性进行了研究。近些年，基于这些基础性的研究，关于化感互作机制的研究呈现指数级增长。关于化感最新的研究极大地促进了我们对植物生态系统及其驱动力的理解。这些研究的关注点有这些：\n\n- 化感物质对入侵植物在非原生生态中成功入侵的影响；\n- 动态生态系统中化感物质对植物演替的影响；\n- 杂草抑制作物的筛选与利用；\n- 根系中根系分泌物在驱动植物-微生物互作中的作用。\n\n本文主要关注的是植物间的化感互作、植物防御机制、化感物质的生化分类、化感物质作用模型及发生在根际或植物—土壤界面上的关键的化感互作。\n\n# 植物防御与化感物质的作用\n\n植物是固生的，因此不管是面对威胁还是面对有益资源都不能移动。在进化的过程中，植物进化出了物理/化学机制来抵抗昆虫和病原菌。传统上认为资源竞争是影响植物交流最重要的单一影响因子。然而，最近的研究发现化感作用影响植物防御进而影响植物交流的多样性。在这个过程中，植物释放出多种低分子量的次级代谢物，这些物质能够与周围的植物互作抑制其出芽和生长。现已知的能够产生化感物质的植物大多属于维管植物。近些年对非维管植物的次级代谢产物的研究在逐渐增加。化感物质在植物演替中扮演着重要的作用。\n\n到目前为止在植物中鉴定到了大约10万种次级代谢物质。但是只有一小部分具有生物化感活性，这些具有化感活性的次级代谢产物通常属于特定的化学家族，如酚类、萜类、糖类固醇及生物碱。植物会分配大量的碳资源来合成、调控及存储参与植物防御的具有化感活性的次级代谢物。然而，许多植物进化出了高效的策略来产生和循环这些具有生物活性的代谢物。一种物质通过植物代谢转换成另外一种物质后可能具有完全不同的生物学功能。在一些例子中，一个单一的物质或其相关化合物家族会有多种功能。如，独角金内酯能够促进寄生植物的萌发而其他内酯会抑制萌发。尽管在生物活性和作用方式上具有差异，相关化合物通常共享相似的生物合成通路，而分类等代谢物能够通过多种生物合成通路和多种前体进行合成。\n\n面对食草动物及病原菌等”取食者“，植物进化出了对应的物理或化学保护机制。植物页面毛等专门的结构能够提供物理防护功能。特定的防御机制包括具有生物活性代谢物的合成与释放。这些具有生物活性的代谢物中的某些在所有植物中都存在，一些专门为了应对生物/非生物胁迫而合成。病原菌侵染后立即形成的前体物质叫植物抗毒素（phytoalexins）。寄主植物在多种胁迫下产生的低分子量的代谢物具有广谱抑制活性及额外的化学多样性。\n\n微生物共生也在影响着维管植物的生存与发展。如，广泛分布在生态系统中的菌根真菌与90%的维管植物形成了共生关系。这些微生物影响着土壤中氮磷向植物的移动运输，因此它们在地下部分通常扮演着基础性作用。植物释放化感物质、动物取食、其他代谢物被释放到根际并被其他植物吸收转运等情况下，这些微生物有时也参与化感干扰，并被成为地下”高速公路“，促进化感物质在植物间的转运。\n\n## 化感物质在环境中的定位和释放\n\n包括化感物质在内的次级代谢产物在自然界中是很常见的。植物生长过程中各个部位都会释放出次级代谢产物。空中部分的挥发与淋溶、根系分泌、残体在土壤中的降解等方面相关的机制研究已经有很多了（下图）。雨水、雾滴及露水等直接的挥发和沉降也影响着植物空气部分化感物质的溶解性和释放，尤其是那些含有化感物质的腺毛等部位。毛滴（trichomes）是植物叶片、茎秆或花序表面的毛状附属物。这些毛滴能够有效防止食草动物的取食，也具有利用化感物质进行防御的潜在可能。作为 物理屏障的腺毛体具有能够产生参与化学防御体系的化感物质的特异性细胞。\n\n{% asset_img 2.png %}\n\n# 次级代谢物的分类\n\n可以根据碳骨架结构和功能基团对次级代谢物进行分类，但是最常用的分类系统是根据代谢物的生物遗传起源对代谢物进行分类（下图）。根据Walton、Brown及Rice等人的研究，可以将植物代谢物和化感物质分为三大类：酚类、萜类和生物碱。\n\n{% asset_img 3.png %}\n\n## 酚类及其衍生物\n\n植物多酚中的多类有机化合物都含有一个共同的结构，它们由一个芳香环组成，至少含有一个羟基，可能还有其他取代基。可以将植物酚类细分为酚酸类、黄酮类、二苯乙烯类、香豆素类、木质素类和单宁类。酚类是衍生自苯丙烷-乙酸酯生物合成途径的次级代谢产物。到目前为止天然的次级代谢产物中大约有8000种属于酚类。这些酚类物质在植物中有着多样的结构和物理化学功能。酚类在高等植物的防御中扮演者重要的作用，也是报道最多的。毒性的多样性导致酚类物质能够在细胞的多个位置发挥功能。植物结构基础的40%是由木质素和单宁酸组成的，而木质素和单宁酸就属于酚类。这些物质还能随着时间变化降解在根际土壤中，进而保证有足够多的丰度来完成合成、转化、释放及降解的生态循环。\n\n已经有大量关于酚类物质的化感机制研究的报道，这些研究发现酚类物质不仅会干扰多个植物关键酶，还会影响一些生理过程。如，肉桂酸（cinnamic）和苯甲酸（benzoic acids）会影响激素活性、膜的通透性、光合作用、呼吸作用及有机物的合成等（下图）。但是还没有实验数据表明酚类物质会影响细胞分化和基因翻译。\n\n{% asset_img 4.png %}\n\n包括苜蓿和三叶草在内的多年生豆科植物会在牧场施肥后产生化感作用。三叶草和苜蓿等也会有自毒作用。这些植物会抑制同种植物的生长。CArlsen等人研究三叶草的植物毒性后发现三叶草会释放黄酮类和糖苷类次级代谢物来抑制杂草生长。\n\n## 萜类\n\n萜类是一类特殊的化感物质，其生物合成通路有甲羟戊酸和异戊烯基焦磷酸两个途径。`terpene`或`terpenoid`来自希腊语`terpentin`，因为首次报道的`terpeniod`是从`turpentine`分离得到的。自然存在的大约24000个萜类化合物是由五个碳异戊二烯亚基组成的（下图）。这些压机它们通过常见的头对头或次要的头尾连接而连接在一起，但有些特征还在于头对中环闭合。根据拥有的异戊二烯亚基的相对数量，可以将萜类化合物分成半萜烯、单萜、倍半萜、二萜、三萜、四萜及多萜。由于萜类具有挥发性，因此它们在植物中具有多种功能，如信号分子、光保护剂、生殖激素及化感物质等。\n\n{% asset_img 5.png %}\n\n植物精油的主要成分单萜对植物生长和幼苗发芽具有很强的抑制作用。研究较好的是单萜1,4-cineole和1,8-cineole（下图）的生长抑制作用，而且是新型除草剂的有效候选物质。这些单萜尽管在结构上具有相似性，但是作用方式却不尽相同，如1,8-cineole影响有丝分裂的所有阶段，1,4-cineole会造成芽的生长异常。\n\n{% asset_img 6.png %}\n\n倍半萜及其相关的代谢物也是植物精油的组成成分，它们对植物具有植物毒性。倍半萜$\\beta$-石竹烯（下图）是大多数植物挥发物的有效成分，在很低浓度下就能抑制 甘蓝型油菜和萝卜种子的萌发和生长。葛根叶片中的黄嘌呤的几何异构体在极低浓度下便能抑制了许多小种子一年生阔叶和草的幼苗根生长。\n\n{% asset_img 7.png %}\n\n## 生物碱\n\n生物碱是源自植物的杂环含氮碱性化合物（下图）。之所以被称为生物碱是因为它们的碱性本质。菊科、夹竹桃科、紫草科及豆科等四类植物能够合成生物碱。自古以来，由于它们独特的药理特性，因此一直被关注。生物碱是最大的次级代谢产物组类，迄今已鉴定出约20,000种化合物，代表了巨大的结构生物合成多样性。根据生物合成来源，可以将生物碱分成不同的类。如，吲哚生物碱衍生自色氨酸；吡咯嗪核生物碱衍生自鸟氨酸或精氨酸；喹喔啉生物碱衍生自赖氨酸。\n\n{% asset_img 8.png %}\n\n生物碱在植物中分布广泛。生物碱在植物中常见的报道是其参与了植物的防御反应，如食草动物取食、真菌等微生物侵染及临近植物干扰等情况。研究人员已评估了几种天然存在的吡咯烷核生物碱对人类和放牧牲畜的肝脏毒性，而且这些物质还能作为植物地上防御系统的一部分，阻止草食动物取食。然而，其他的生物碱在某些时候会抑制植物生长。野生烟草被食草动物取食或破坏后，其体内尼古丁产物增加；有趣的是尼古丁对一年生杂草具有化感活性。生物碱可以通过干扰DNA、酶活性、蛋白质生物合成及膜完整性等机制来抑制植物的生长。Lovett等研究了大麦能够从根部释放生物碱草胺和鱼藤碱（这两种物质对幼苗具有化感活性）增强防御反应的机制。Wink等研究发现豆类植物会合成喹唑烷生物碱，这种物质能够通过影响膜通透性和蛋白质合成来引发强烈的抑制作用。\n\n## 苯并恶嗪类化合物的异羟肟酸：农学案例研究\n\n苯酚衍生物异羟肟酸是次级代谢产物中具有生物活性的苯并噁嗪来化合物的基本骨架（下图）。大量研究表明苯并噁嗪类化合物具有抗菌、抗真菌、拒食及植物毒性等作用。\n\n{% asset_img 9.png %}\n\n玉米、黑麦及小麦等栽培作物中的异羟肟酸的化感活性有着广泛的研究，这种物质的含量与植物对昆虫和病原菌的抗性高度相关。DIMBOA（2,4-Dihydroxy-7-methoxy-2H-1,4-benzoxazin-3-one）和DIBOA（2,4-dihydroxy-2H-1,4-benzoxazin-3-one）以及相关微生物转化物质对许多阔叶杂草和生菜、小麦等作物具有很强的化感活性。这些物质通常是通过植物受伤部位释放到土壤中的，除此之外，收获后留下的植物残体降解后也会产生这类物质。DIBOA和DIMBOA的糖苷（以及它们各自的糖苷配基和黑麦（黑麦谷物）根残留物中释放的降解产物）是主要的化感活性成分（对阔叶作物、杂草及一些一年生草）。\n\n{% asset_img 10.png %}\n\n# 化感物质的作用模型\n\n化感研究中一个挑战是鉴定高等植物中化感物质的特定的作用模型。已经有很多的方法来研究化感物质对高等植物生长的直接影响并进一步研究其作用机制。但是这可能是比较困难的，因为某个化感物质潜在的靶标位点特异性的酶可能是多样性的，而且需要大量对催化位点和靶标位点结构相关的先验知识。在某些例子中，通过对植物生长和/或形态学的观察得到的化感物质作用的靶标位点可能不是真真正正的靶标位点。此外，某些通过体外测定进行的化感方式的研究的结果已经受到一定的质疑，而且更重要的是体外测定得到的结果和自然状态下的结果的差异性也受到了一定的质疑。\n\n需要注意的是在自然状态下化感物质的浓度通常是很低的，而且存留的时间很短，因此添加到土壤或环境中的单一化感物质或化感物质群的浓度是很难估计或测定的。因此，在一定浓度下需要进行适当的生物测定来评估化感物质对高等植物生长的影响。在许多例子中，需要使用多种生物测定方法评估化感物质对植物生长的影响。如，利用自然系统中的土壤和植物品种对得到统一可重复的数据结果是很重要的。一些研究人员已经利用准确敏感的的方法去评估天然/合成化感物质在农业化学系统中的作用模型，并得到了强大可靠的模型。一种典型的方法是利用多种分析条件来得到数据，如利用能够在一周内迅速生长并繁殖出更多苗的紫菜或浮萍等水生植物。利用浮萍的话只需要很低的浓度即可，另外一个好处是化感物质可以溶解在水中。此外，还有许多研究利用局部土壤和/或琼脂来评估化感物质对地上或地下部分的影响。但是这种验证方法需要更长的时间让植物达到评估条件。最后，一种用于评估植物残体降解影响的方法已经被用于评估植物残体的植物毒性。通过使用适当的检测方法进行筛选，已经鉴定并验证了一些不同的作用机制，如膜通透性、水分/营养吸收、呼吸作用、光合作用、蛋白质/核酸合成及生长调节等。\n\n## 膜通透性\n\n包括化感物质在内的次级代谢产物在浓度足够时能够调节膜通透性和膜的功能。暴露在这些代谢物中时可能会导致细胞内容物的泄露，进而通过凋亡或死亡导致细胞死亡。这个过程最终导致植物组织死亡及特定功能的丧失。如，几种存在化感效应的物质能够调节质膜的通透性。这些物质能够通过扩散或辅助运输机制很轻易地通过细胞膜。一旦膜通透性发生改变，钾离子通道就会受到影响，并且经常导致对氯离子的渗透性降低。Yoon等研究发现，单萜$\\alpha$-蒎烯能对质膜造成氧化应激，还会造成膜结构破坏，进而导致细胞死亡。Chain等也发现酚类物质浓度超过1mM后会增加风信子叶片组织的膜通透性。与未处理的对照相比，膜损伤通常在体外通过测量处理过的植物的相对电解质渗漏来评估。\n\n## 水分和养分吸收\n\n为了进一步探究释放到环境中的化感物质的作用模式，需要关注植物根系的相对健康状态与功能完整性。在根中，化感物质通常影响其参与跨膜离子吸收的$Na^+/K^+$泵的活性。如，Abenavoli等研究发现肉桂酸、阿魏酸及对香豆酸等物质不仅会影响玉米的营养吸收，还会影响其膜上$H^+-ATP$ 酶活性。Franche等也报道了酚类化合物肉桂酸和阿魏酸会影响植物对P和Fe的吸收，从而抑制目标植物的生长。种植完甜菜后再种植大豆或玉米等对锌敏感的作物，甜菜产生的植物毒素能增强这些作物对锌的吸收。\n\n# 呼吸作用\n\n`Donor`植物释放的化感物质能够通过以下途径影响周围植物的呼吸作用进而影响其生长：线粒体中的电子转移、氧气吸收、CO$_2$产生及ATP产生过程中的氧化磷酸化。如，Abrahim等研究发现$\\alpha$蒎烯和柠檬烯会通过多种机制影响多种植物的下胚轴线粒体呼吸活性，这些机制分别是线粒体解偶联、细胞色素途径中的电子流和氧吸收。Czarnota等发现高粱根系分泌的抑制剂高粱油酮不仅会通过D1结合蛋白来影响Ⅱ型光合系统中电子的转运，还会通过解耦所植物中的电子流来抑制线粒体电子运输。与成熟植物相比，化感物质对幼苗生长和萌发的影响更大。相关研究认为化感物质抑制通过频繁破坏线粒体进行呼吸的能力来影响幼苗生长和萌发。\n\n## 光合作用\n\n化感物质也能通过多种途径来影响植物的光合作用过程，如干扰PS Ⅰ和Ⅱ中的电子流、影响光合色素的合成及刺激光合色素的降解等。植物茎叶中光合色素含量降低会导致ATP的合成（主要发生在光合系统Ⅱ中）。对PS Ⅱ除草剂抑制剂具有抗性的在D1结合位点有多个改变的杂草同样也能抵抗高粱油酮对这个位点的影响。Poonpaiboonpipat等观察到从柠檬草中提取的精油能够显著降低稗草中叶绿素a和叶绿素b的浓度，从而减缓光合作用，最终影响植物生长。这些发现认为精油对叶绿素的合成具有直接影响。许多植物中都存在的化感物质柠檬醛不仅会通过呼吸作用、光合作用来影响幼苗的代谢，还会通过抑制生长、调节植物氧化状态来影响成熟植物。这个研究说明特定化感物质的作用模型是和植物组织、植物生长年龄相关的，而且还和植物吸收化感物质的位点（置）相关。\n\n## 蛋白质/核酸合成及生长调节\n\n化感物质能够靶向调控能够影响植物生长的关键机制来影响临近植物的生长。这些特定的机制包括DNA插入、抑制DNA聚合酶I、抑制蛋白质合成等。酚类化感物质也能干扰核酸的形成、胞内代谢及基因表达。Li等研究发现阿魏酸和肉桂酸对总蛋白质合成有不利影响。`Donor`植物产生的化感物质能够调节靶标植物防御基因的表达。如，水稻与稗草在一起时，水稻中参与酚类物质生物合成的酶的合成会上调。稗草存在时，幼苗期的水稻体内的化感物质momilolactone的含量会增加。这表明植物竞争或化感导致的胁迫会影响靶标植物合成防御物质的能力。通过提高化感物质的含量来衡量的话，化感响应可能在数小时至数天之内发生。Yang等的研究发现类似的酚类物质还可以氧化高等植物细胞伸长所必须的激素：氧化吲哚-3-乙酸。\n\n# Donor植物体内化感物质的定位和运输\n\n植物有特定的组织部位来完成次级代谢物的合成并向环境中进行释放，这些特定的部位包括茎部的气孔和腺毛；根部的根毛、边缘细胞、表皮及周皮。根表皮的单个细胞延伸物—根毛在根-土壤界面复杂的互作中有着重要作用。根毛能够分泌离子、氨基酸、生长调节剂及化感物质等低/高分子量的有机物（下图）。一些物质能够直接在根毛中进行合成然后直接分泌到环境中，如*Echium plantagineum* L.幼苗直接分泌的高梁素和紫草素类。最近有研究报道了强性入侵杂草*E. plantagineum* L. 活根的外周皮分泌的红色生物活性萘醌；随着时间的流逝，这种植物会在主根的外皮中积累这些抗菌和植物毒性的萘醌，并且还会以红色液滴的形式从幼苗的根毛中释放这些分子。共聚焦显微荧光法加速了类似的定位研究。\n\n{% asset_img 11.png %}\n\n在茎部，化感物质能够通过叶片表面的腺毛进行直接释放，也会先转运到气孔然后再进行分泌。猫薄荷腺体分泌的21种挥发性化合物能够抑制种子的萌发及幼苗的生长（用悬浮在发芽幼苗附近但不与幼苗接触的叶子进行测定时的结果）。这表明挥发对于植物生长过程的扩散和抑制很重要。能够强烈抑制水芹生长的 2-（2-乙氧基乙氧基）-乙醇、异木香烯和卡丹烯这三种物质不仅能够在挥发物和甲醇提取液中检测到，还能在水提液中检测到。Eom等研究多年生地被植物后发现猫薄荷的叶面挥发物能够显著抑制水芹及常见的路边杂草的生长。猫薄荷产生的亲脂性或挥发性物质可以直接通过脂质双层扩散，而更多的极性化合物则需要专门的膜结合转运蛋白来协助转运过程。\n\n大多数化感物质一旦在植物组织中被合成并积累，便会被分泌释放导到植物体外，从而有效避免自毒；或是存储在液泡、膜状小囊泡或储存器官中。初次之外，这些化感物质还会通过扩散或特定的转运蛋白转运到植物的其他组织中（下图）。\n\n{% asset_img 10.png %}\n\n## 化感物质的根系分泌\n\n化感物质从根系分泌最常见的方式是通过根系分泌物进行分泌释放，尤 尤其是通过根毛分泌。根—土壤界面或根际含有来自根毛分泌、植物残体降解及微生物相关的各种浓度的有机物，因此根际被认为是土壤中活性最强的部位。次级代谢产物的变化使得根际成为及其复杂的环境。硅胶微探针管和固相根区提取技术的发展为精确地描述土壤中活植物根系释放的非极性到中等极性的化感物质提供了机会。硅胶微针管插入到根表周围的土壤中，极少的极性分子附着在管子的硅胶上，后续的溶解提取能够将这些极性分子选择性地清楚掉。\n\n根系分泌物的组成极为复杂，通常是含碳物质，如多糖、氨基酸、有机酸、酚类、生物碱、单宁酸、萜类、黄酮类、生长调节剂、维生素、营养物质，还有离子、水、电解质等无碳物质。化感物质一旦被释放，就会经受土壤中的物理、化学及生物学变化。因此，一个化感物质的生物活性在达到潜在靶标之前可能会被微生物的降解作用、氧化等影响，甚至还会通过与土壤颗粒不可逆结合而固定。\n\nWseton等描述了根系分泌的诸多机制，如扩散、囊泡运输及离子通道转运等。下面将进行简要描述。\n\n## 扩散\n\n糖、氨基酸、羧酸及酚类等低分子量的有机物在活根表皮细胞和土壤之间通过浓度梯度进行释放。这种类型的分泌释放取决于根细胞的生理状态和有机物的极性。双层疏水的质膜通常通过扩散促进亲脂性化合物的运输。\n\n## 囊泡运输\n\n高分子量的有机化合物的转运通过根帽分泌细胞形成高尔基囊泡介导完成。这些细胞随后从根表面退化或脱落。在膜结合多核糖体水平合成的酸性磷酸酶和过氧化物酶等酶通过矢状分离进入内质网管腔。囊泡的这种胞吐作用依赖于细胞内和细胞外的钙水平。\n\n## 离子通道\n\n某些植物在经受胁迫时，柠檬酸、苹果酸及草酸等物质在高浓度时是不能通过简单的扩散完成分泌的。相关研究利用离子通道拮抗剂等方法发现表皮根细胞质膜上的离子通道参与了小麦和玉米体内苹果酸和柠檬酸的释放。\n\n# 影响植物化感物质释放的因素\n\n植物释放到根际等环境中的化感物质的浓度和性质取决于植物本身和其他生物/非生物因素（下图）。植物因素包括植物品种（栽培种）、植物年龄、组织类型等。调节化感物质合成和释放的环境因素有病原菌的侵染；物理损伤；干旱、温度、土壤理化性质、水流、营养状态、灌溉、竞争及紫外辐射等非生物因素。气候变化也可能影响化感物质的合成，这也成为了近几年的研究焦点。\n\n{% asset_img 13.png %}\n\n在分类学上相近的物种并不总是释放相似的化感物质或相似浓度的代谢物到环境中。极端环境下化感物质的释放和扩散与化感物质的化学性质相关，如分子量、极性和浓度等。化感物质通常会和相关的代谢物共同进行释放。需要注意的是，这些代谢物在植物中具有多种功能。一种化合物还可以保护其寄主免受几种不相关竞争者或取食者的干扰。如，酚类物质能够刺激或抑制真菌；特定的真菌利用酚氧化酶活性去代谢、减轻高等植物产生的酚类化合物的毒性。\n\n评估相关代谢物的化感潜力的方法的选择和使用必须要小心注意。多种代谢物组成的混合物可能会严重影响代谢物的化感活性。活性可能与复杂的分子相互作用有关，包括协同作用、拮抗作用和在其他代谢物存在下的增强作用。为了评估化感物质的生物学活性，剂量/响应研究对评估化感物质的化感活性是必须的。如果研究时使用的浓度显著高于其在土壤中的浓度，那这个研究结果是很难解释该物质的化感活性的。此外，如果研究时使用的浓度高于其在环境中的真实浓度，那该化感物质在该浓度下的作用模式也可能不同。\n\n# 化感物质对根际、近邻植物及其他生物的影响\n\n根际是植物根系周围很小的一块区域，生存着大量的微生物。 植物根系不仅会与临近植物根系发生竞争，还会和真/细菌等微生物发生竞争。很难通过大小对根际进行衡量，但是可以根据其物理化学性质进行划分。根际从根开始向外，化学物质的浓度往往呈现递降趋势。Newman等研究后发现典型的高等植物会将光合作用固定的10-40%的碳以有/无机物的形式释放到根际。根部产生的物质被统称为`rhizodeposits`，包括分泌物、粘液，脱落边缘细胞及根冠细胞。根系分泌物中的大多数物质都是低分子量的物质。\n\n可控条件下对根际化感干扰的研究已经很成熟。但是，在田间条件下研究不同品种的植物竞争过程中发生的化感对生长的抑制的研究还比较困难。近些年关于根系理化性质的研究取得了新的进展。根际中的根系与微生物的互作时刻发生着。复杂的土壤环境使得相关研究变得较为苦难。越来越多的证据表明根系分泌物能够促进临近植物的交流，共生与病原生物通过生物和物理相互作用。根系分泌物能够调节根际微生物的共生关系、保护植物免受食草动物的取食、调节土壤的理化性质、影响其他植物的生长。最近的研究表明植物产生的次级代谢产物能够抑制入侵植物根际微生物介导的反硝化作用，从而限制入侵植物的生长。根系及其分泌物产生的静电和趋化响应能够促进植物—微生物之间有效的共生。\n\n根系分泌物会通过吸引对植物生长有正向影响或能够直接影响植物代谢的微生物来刺激植物的生长。根系分泌物中的化感物质对临近物质的影响取决于化感物质在根系分泌物中的浓度、相对分泌速率、靶标植物的生长阶段及生物/非生物条件。需要注意的是，如果化感物质释放的量足够而且在环境中存在的时间 足够长的话，这些化感物质只会表现出负向干扰效应。Weidenhamer研究发现植物生长阶段、生物量、密度等因素是影响释放到根际的化感物质的可利用性的关键因素，因此在进行化感物质的相关实验时，需要考虑这些因素。受体植物密度更高时也就需要供体植物释放出更高浓度的化感物质。\n\n化感物质从植物组织中释放后在达到靶标植物之前会受到诸多因素的影响，如淋溶、氧化、生物降解、临近植物吸收等。生物、化学等刺激下分泌释放的根系分泌物也可能对根际细菌具有抗菌活性。植物会通过可分离的边界细胞来抵抗根际真/细菌的侵染，位于根尖的这些细胞会释放出化感物质在内的大量具有生物活性的物质。如，新出出芽的植物会利用边界细胞产生的物质来协助植物进行防御，尤其是在田间根系还没有完全发育完善前。根部的边界细胞产生的胞外DNA和蛋白质会成为土传病害的”陷阱“，这些土传病原菌会受到化感物质的负向调控。燕麦产生的`avenicin`能抑制相关的病原微生物。Osbourn实验室研究发现燕麦产生的三萜物质对土壤微生物具有很好的防御效果，而且在植物应对非生物胁迫中也有着重要的作用。\n\n## 对化感物质的耐受性\n\n某些植物对特定的植物毒素很敏感，或者是进化出特有的机制来防御自身或其他植物产生的化感物质。能够产生并吸收化感物质的植物通常有着较强的抗毒能力，作用机制包括主动隔离膜结合结构、液泡或囊泡中的毒素、吸收后立即分泌化合物或通过一级和二级代谢改变其化学结构。如，*Polygonella myriophylla*  (Small) Horton能够以熊果苷的形式释放对苯二酚和苯醌，以此来避免自毒发生。超过百万年的进化使得某些植物具备了耐受或代谢植物毒素的能力。那些不经常遇到植物毒素的物种不太可能产生抗药性。最近的一个假说认为那些成功定殖繁育的入侵性杂草会通过释放特有的化感物质来负向影响本土植物的生长，这些本土植物对那些入侵性杂草产生的化感物质的代谢能力较弱甚至是没有。\n\n# 植物/土壤提取物中化感物质的代谢研究\n\n陆地生态学中研究得最好的领域是根际生物化学互作。尽管存在一定的挑战性，但是代谢检测和鉴定技术的发展极大地加速了对复杂系统/互作关系的研究，进而解释化感物质调节及其在生态系统功能中的相关科学问题。代谢profiling是研究复杂植物互作的有利工具。通过提取植物组织并评估代谢组，可以在特定时间点评估生物系统的功能状态。\n\nWeston等利用一种新的代谢组学方法来研究感兴趣的靶标物质，如某个化感物质处理下的生物学系统响应。通过代谢profiling，能够为研究根际生物在化感物质处理后的生物化学状态。代谢组学还可以和转录组、蛋白组等组学相结合来研究感兴趣的靶标物质的生物合成通路。特定化感物质的代谢profiling可以用于研究入侵性杂草的潜在机制。Skoneczny等利用LS-MS技术，通过田间试验与室内试验研究发现，与*Echium vulgare* L.相比，入侵性更强的*E. plantagineum* L. 体内的吡咯嗪核生物碱和氮氧化物含量更高。\n\n代谢组是一种高通量的方法，分析大量样本时能够在短时间内得到结果。这个领域发展出很多新的分析平台，如配备高分辨率质谱的气相和液相，靶向代谢组和非靶向代谢组等。最近的三重四极杆MS或敏感离子阱质谱增强了分析的精度和准度，能够对复合物中低量的上千种具有生物活性的物质进行注释。代谢profiling也被用于研究植物根际。有研究利用这种方法研究了三叶草向根际释放的多种黄酮类物质。也有研究利用UPLC QToF-MS来研究植物根系中15余种萘醌和紫草素对植物防御和化感的影响。使用LC/MS技术也成功地回收了一些更持久的化感物质，包括在受侵染的土壤中含量在ppm级别的乙酰基紫草素和紫草素。越来越多的研究利用代谢组学研究代谢物的动态变化和生物合成通路。这些方法的使用毫无疑问会增强我们对土壤环境中化感物质的研究和认识。\n\n通过代谢组学分析后，尝试处理大量质谱数据并随后表征代谢物。不可能鉴定到复合物中所有的代谢成分。高通量的计算和分析工具能够在一定程度上有效解决这些问题，如数据转换、特征值检测、归一化及质量控制等。将存在的化合物的分子特征归一化（用于基线变化），并与可用的结构库对齐。天然产物比对最常用的库是METLIN库。\n\n# 总结\n\n研究复杂的植物—植物、植物—微生物互作的化感是植物科学研究中一个具有活力的领域。本领域相关的研究人员和论文数量已经呈现指数级增长了。土壤学家、化学家、生态学家、遗传学家及分子生物学家的紧密合作将会极大地促进对调控高等植物中化感物质的因素的研究，不仅如此，还会促进这些代谢物对入侵生态学、植物竞争、植物干扰及作物产量等研究的发展。代谢组学新的分析技术的使用及其与其他组学的结合将有利于鉴定新的化感物质及其生物合成通路，甚至是气候对化感物质的影响等。进一步理解化感物质在植物防御中的作用将有助于我们开发管理作物、限制入侵性杂草的扩张、保护本地植物，甚至是从这些化感物质中找到潜在的新型农药。\n\n越来越多的研究开始担忧除草剂带来的影响，对天然产物中的农药的开发的呼吁声不断。包含化感物质在内的新型植物代谢物的鉴定为开发基于生物源的农药提供了材料来源（通过提供合成化合物的互补结构或辅助开发新的分子靶位）。\n\n{% asset_img 1.png %}\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/化感和化感物质在植物防御中的作用.md","raw":"---\ntitle: 化感和化感物质在植物防御中的作用\ntags: 文献\ncategories: 文献\nabbrlink: b54a9b65\ndate: 2021-01-19 13:42:12\n---\n\n# 摘要\n\n化感（Allelopathy）指的是植物间或植物与其他生物之间通过植物产生的具有生物活性的次级代谢产物（化感物质，allelochemicals）介导的化学互作导致的生长干扰现象。<!-- more -->已有大量的研究探明了植物不同组织部位的化感物质的释放机制，如裸露在空气中的部位的挥发和淋溶、根系分泌及植物残体在土壤中的降解等。尽管这些化感物质有着不同的生物活性和作用方式，但是它们却具有类似的生物合成通路（某类代谢物可以通过多种生物合成通路进行合成产生）。最近大量的研究阐明了在原生/非原生生态中，化感物质对植物演替和入侵的重要影响作用。此外，许多研究还关注了能够抑制杂草的作物，对其进行筛选和利用，以此来管理田间杂草，实现农业可持续发展。更好地理解化感物质与植物防御之间的关系有助于我们更好地保护和管理农作物、限制入侵杂草的扩张、保存本地植物并促进新型农药的发展与应用。与代谢组学相关的技术的使用已经极大地促进了特有化感物质、生物合成通路及其在土壤中的复杂作用的研究。包括化感物质在内的植物新型代谢物的鉴定为新型农药的研发奠定了生物学基础，为今后的合成提供互补结构，并可以辅助开发新的分子靶标位点。\n\n# Introduction\n\n植物及其微生物区系持续不断地产生着大量的化学物质，这些物质中的大部分在初级代谢（植物生长发育必须）中不具有生物学功能。这些低分子量的有机化合物被称为植物次级产物或次级代谢物。某些被称为化感物质的次级代谢物对邻近植物的生长、健康和行为具有刺激或抑制效应，这种现象被称为化感作用。化感作用首次被提出使用是在1937年，当时被广泛地定义为植物间或植物-微生物间直接或间接的生物化学互作。\n\n国际化感协会（The International Society of Allelopathy，ISA）将化感作用定义为植物与其他生物（不包括食草动物）之间的化学互作。鉴于此，大多数研究化感的研究人员关注的是植物之间的化学互作。然而，值得注意的是微生物也能够降解和激活次级代谢产物，某些情况下这些微生物具有更强的植物生长抑制效果。次级代谢物中具有潜在化感活性的物质叫做化感物质（allelochemicals）。此外，化感物质造成的化感干扰不同于植物之间对水分、空间、光、气、大量/微量元素的竞争干扰。随着植物的生长，化感和竞争都会造成生长减缓或生长干扰。\n\n化感并不是一种新的现象，2000年以前的文献中就有了化感的相关记录。在这些古老的手稿中，植频繁记录着植物能够让土壤”生病“，并产生毒素影响其他植物的生长。希腊植物学家Theophrastus首次注意到鹰嘴豆会”耗尽“土壤并抑制杂草。后来的罗马学者Pliny记录描述了核桃树对周围植物的毒害作用。1832年，De Candolle完成了第一个较完整的实验对化感品种的根系分泌物的毒性进行了研究。近些年，基于这些基础性的研究，关于化感互作机制的研究呈现指数级增长。关于化感最新的研究极大地促进了我们对植物生态系统及其驱动力的理解。这些研究的关注点有这些：\n\n- 化感物质对入侵植物在非原生生态中成功入侵的影响；\n- 动态生态系统中化感物质对植物演替的影响；\n- 杂草抑制作物的筛选与利用；\n- 根系中根系分泌物在驱动植物-微生物互作中的作用。\n\n本文主要关注的是植物间的化感互作、植物防御机制、化感物质的生化分类、化感物质作用模型及发生在根际或植物—土壤界面上的关键的化感互作。\n\n# 植物防御与化感物质的作用\n\n植物是固生的，因此不管是面对威胁还是面对有益资源都不能移动。在进化的过程中，植物进化出了物理/化学机制来抵抗昆虫和病原菌。传统上认为资源竞争是影响植物交流最重要的单一影响因子。然而，最近的研究发现化感作用影响植物防御进而影响植物交流的多样性。在这个过程中，植物释放出多种低分子量的次级代谢物，这些物质能够与周围的植物互作抑制其出芽和生长。现已知的能够产生化感物质的植物大多属于维管植物。近些年对非维管植物的次级代谢产物的研究在逐渐增加。化感物质在植物演替中扮演着重要的作用。\n\n到目前为止在植物中鉴定到了大约10万种次级代谢物质。但是只有一小部分具有生物化感活性，这些具有化感活性的次级代谢产物通常属于特定的化学家族，如酚类、萜类、糖类固醇及生物碱。植物会分配大量的碳资源来合成、调控及存储参与植物防御的具有化感活性的次级代谢物。然而，许多植物进化出了高效的策略来产生和循环这些具有生物活性的代谢物。一种物质通过植物代谢转换成另外一种物质后可能具有完全不同的生物学功能。在一些例子中，一个单一的物质或其相关化合物家族会有多种功能。如，独角金内酯能够促进寄生植物的萌发而其他内酯会抑制萌发。尽管在生物活性和作用方式上具有差异，相关化合物通常共享相似的生物合成通路，而分类等代谢物能够通过多种生物合成通路和多种前体进行合成。\n\n面对食草动物及病原菌等”取食者“，植物进化出了对应的物理或化学保护机制。植物页面毛等专门的结构能够提供物理防护功能。特定的防御机制包括具有生物活性代谢物的合成与释放。这些具有生物活性的代谢物中的某些在所有植物中都存在，一些专门为了应对生物/非生物胁迫而合成。病原菌侵染后立即形成的前体物质叫植物抗毒素（phytoalexins）。寄主植物在多种胁迫下产生的低分子量的代谢物具有广谱抑制活性及额外的化学多样性。\n\n微生物共生也在影响着维管植物的生存与发展。如，广泛分布在生态系统中的菌根真菌与90%的维管植物形成了共生关系。这些微生物影响着土壤中氮磷向植物的移动运输，因此它们在地下部分通常扮演着基础性作用。植物释放化感物质、动物取食、其他代谢物被释放到根际并被其他植物吸收转运等情况下，这些微生物有时也参与化感干扰，并被成为地下”高速公路“，促进化感物质在植物间的转运。\n\n## 化感物质在环境中的定位和释放\n\n包括化感物质在内的次级代谢产物在自然界中是很常见的。植物生长过程中各个部位都会释放出次级代谢产物。空中部分的挥发与淋溶、根系分泌、残体在土壤中的降解等方面相关的机制研究已经有很多了（下图）。雨水、雾滴及露水等直接的挥发和沉降也影响着植物空气部分化感物质的溶解性和释放，尤其是那些含有化感物质的腺毛等部位。毛滴（trichomes）是植物叶片、茎秆或花序表面的毛状附属物。这些毛滴能够有效防止食草动物的取食，也具有利用化感物质进行防御的潜在可能。作为 物理屏障的腺毛体具有能够产生参与化学防御体系的化感物质的特异性细胞。\n\n{% asset_img 2.png %}\n\n# 次级代谢物的分类\n\n可以根据碳骨架结构和功能基团对次级代谢物进行分类，但是最常用的分类系统是根据代谢物的生物遗传起源对代谢物进行分类（下图）。根据Walton、Brown及Rice等人的研究，可以将植物代谢物和化感物质分为三大类：酚类、萜类和生物碱。\n\n{% asset_img 3.png %}\n\n## 酚类及其衍生物\n\n植物多酚中的多类有机化合物都含有一个共同的结构，它们由一个芳香环组成，至少含有一个羟基，可能还有其他取代基。可以将植物酚类细分为酚酸类、黄酮类、二苯乙烯类、香豆素类、木质素类和单宁类。酚类是衍生自苯丙烷-乙酸酯生物合成途径的次级代谢产物。到目前为止天然的次级代谢产物中大约有8000种属于酚类。这些酚类物质在植物中有着多样的结构和物理化学功能。酚类在高等植物的防御中扮演者重要的作用，也是报道最多的。毒性的多样性导致酚类物质能够在细胞的多个位置发挥功能。植物结构基础的40%是由木质素和单宁酸组成的，而木质素和单宁酸就属于酚类。这些物质还能随着时间变化降解在根际土壤中，进而保证有足够多的丰度来完成合成、转化、释放及降解的生态循环。\n\n已经有大量关于酚类物质的化感机制研究的报道，这些研究发现酚类物质不仅会干扰多个植物关键酶，还会影响一些生理过程。如，肉桂酸（cinnamic）和苯甲酸（benzoic acids）会影响激素活性、膜的通透性、光合作用、呼吸作用及有机物的合成等（下图）。但是还没有实验数据表明酚类物质会影响细胞分化和基因翻译。\n\n{% asset_img 4.png %}\n\n包括苜蓿和三叶草在内的多年生豆科植物会在牧场施肥后产生化感作用。三叶草和苜蓿等也会有自毒作用。这些植物会抑制同种植物的生长。CArlsen等人研究三叶草的植物毒性后发现三叶草会释放黄酮类和糖苷类次级代谢物来抑制杂草生长。\n\n## 萜类\n\n萜类是一类特殊的化感物质，其生物合成通路有甲羟戊酸和异戊烯基焦磷酸两个途径。`terpene`或`terpenoid`来自希腊语`terpentin`，因为首次报道的`terpeniod`是从`turpentine`分离得到的。自然存在的大约24000个萜类化合物是由五个碳异戊二烯亚基组成的（下图）。这些压机它们通过常见的头对头或次要的头尾连接而连接在一起，但有些特征还在于头对中环闭合。根据拥有的异戊二烯亚基的相对数量，可以将萜类化合物分成半萜烯、单萜、倍半萜、二萜、三萜、四萜及多萜。由于萜类具有挥发性，因此它们在植物中具有多种功能，如信号分子、光保护剂、生殖激素及化感物质等。\n\n{% asset_img 5.png %}\n\n植物精油的主要成分单萜对植物生长和幼苗发芽具有很强的抑制作用。研究较好的是单萜1,4-cineole和1,8-cineole（下图）的生长抑制作用，而且是新型除草剂的有效候选物质。这些单萜尽管在结构上具有相似性，但是作用方式却不尽相同，如1,8-cineole影响有丝分裂的所有阶段，1,4-cineole会造成芽的生长异常。\n\n{% asset_img 6.png %}\n\n倍半萜及其相关的代谢物也是植物精油的组成成分，它们对植物具有植物毒性。倍半萜$\\beta$-石竹烯（下图）是大多数植物挥发物的有效成分，在很低浓度下就能抑制 甘蓝型油菜和萝卜种子的萌发和生长。葛根叶片中的黄嘌呤的几何异构体在极低浓度下便能抑制了许多小种子一年生阔叶和草的幼苗根生长。\n\n{% asset_img 7.png %}\n\n## 生物碱\n\n生物碱是源自植物的杂环含氮碱性化合物（下图）。之所以被称为生物碱是因为它们的碱性本质。菊科、夹竹桃科、紫草科及豆科等四类植物能够合成生物碱。自古以来，由于它们独特的药理特性，因此一直被关注。生物碱是最大的次级代谢产物组类，迄今已鉴定出约20,000种化合物，代表了巨大的结构生物合成多样性。根据生物合成来源，可以将生物碱分成不同的类。如，吲哚生物碱衍生自色氨酸；吡咯嗪核生物碱衍生自鸟氨酸或精氨酸；喹喔啉生物碱衍生自赖氨酸。\n\n{% asset_img 8.png %}\n\n生物碱在植物中分布广泛。生物碱在植物中常见的报道是其参与了植物的防御反应，如食草动物取食、真菌等微生物侵染及临近植物干扰等情况。研究人员已评估了几种天然存在的吡咯烷核生物碱对人类和放牧牲畜的肝脏毒性，而且这些物质还能作为植物地上防御系统的一部分，阻止草食动物取食。然而，其他的生物碱在某些时候会抑制植物生长。野生烟草被食草动物取食或破坏后，其体内尼古丁产物增加；有趣的是尼古丁对一年生杂草具有化感活性。生物碱可以通过干扰DNA、酶活性、蛋白质生物合成及膜完整性等机制来抑制植物的生长。Lovett等研究了大麦能够从根部释放生物碱草胺和鱼藤碱（这两种物质对幼苗具有化感活性）增强防御反应的机制。Wink等研究发现豆类植物会合成喹唑烷生物碱，这种物质能够通过影响膜通透性和蛋白质合成来引发强烈的抑制作用。\n\n## 苯并恶嗪类化合物的异羟肟酸：农学案例研究\n\n苯酚衍生物异羟肟酸是次级代谢产物中具有生物活性的苯并噁嗪来化合物的基本骨架（下图）。大量研究表明苯并噁嗪类化合物具有抗菌、抗真菌、拒食及植物毒性等作用。\n\n{% asset_img 9.png %}\n\n玉米、黑麦及小麦等栽培作物中的异羟肟酸的化感活性有着广泛的研究，这种物质的含量与植物对昆虫和病原菌的抗性高度相关。DIMBOA（2,4-Dihydroxy-7-methoxy-2H-1,4-benzoxazin-3-one）和DIBOA（2,4-dihydroxy-2H-1,4-benzoxazin-3-one）以及相关微生物转化物质对许多阔叶杂草和生菜、小麦等作物具有很强的化感活性。这些物质通常是通过植物受伤部位释放到土壤中的，除此之外，收获后留下的植物残体降解后也会产生这类物质。DIBOA和DIMBOA的糖苷（以及它们各自的糖苷配基和黑麦（黑麦谷物）根残留物中释放的降解产物）是主要的化感活性成分（对阔叶作物、杂草及一些一年生草）。\n\n{% asset_img 10.png %}\n\n# 化感物质的作用模型\n\n化感研究中一个挑战是鉴定高等植物中化感物质的特定的作用模型。已经有很多的方法来研究化感物质对高等植物生长的直接影响并进一步研究其作用机制。但是这可能是比较困难的，因为某个化感物质潜在的靶标位点特异性的酶可能是多样性的，而且需要大量对催化位点和靶标位点结构相关的先验知识。在某些例子中，通过对植物生长和/或形态学的观察得到的化感物质作用的靶标位点可能不是真真正正的靶标位点。此外，某些通过体外测定进行的化感方式的研究的结果已经受到一定的质疑，而且更重要的是体外测定得到的结果和自然状态下的结果的差异性也受到了一定的质疑。\n\n需要注意的是在自然状态下化感物质的浓度通常是很低的，而且存留的时间很短，因此添加到土壤或环境中的单一化感物质或化感物质群的浓度是很难估计或测定的。因此，在一定浓度下需要进行适当的生物测定来评估化感物质对高等植物生长的影响。在许多例子中，需要使用多种生物测定方法评估化感物质对植物生长的影响。如，利用自然系统中的土壤和植物品种对得到统一可重复的数据结果是很重要的。一些研究人员已经利用准确敏感的的方法去评估天然/合成化感物质在农业化学系统中的作用模型，并得到了强大可靠的模型。一种典型的方法是利用多种分析条件来得到数据，如利用能够在一周内迅速生长并繁殖出更多苗的紫菜或浮萍等水生植物。利用浮萍的话只需要很低的浓度即可，另外一个好处是化感物质可以溶解在水中。此外，还有许多研究利用局部土壤和/或琼脂来评估化感物质对地上或地下部分的影响。但是这种验证方法需要更长的时间让植物达到评估条件。最后，一种用于评估植物残体降解影响的方法已经被用于评估植物残体的植物毒性。通过使用适当的检测方法进行筛选，已经鉴定并验证了一些不同的作用机制，如膜通透性、水分/营养吸收、呼吸作用、光合作用、蛋白质/核酸合成及生长调节等。\n\n## 膜通透性\n\n包括化感物质在内的次级代谢产物在浓度足够时能够调节膜通透性和膜的功能。暴露在这些代谢物中时可能会导致细胞内容物的泄露，进而通过凋亡或死亡导致细胞死亡。这个过程最终导致植物组织死亡及特定功能的丧失。如，几种存在化感效应的物质能够调节质膜的通透性。这些物质能够通过扩散或辅助运输机制很轻易地通过细胞膜。一旦膜通透性发生改变，钾离子通道就会受到影响，并且经常导致对氯离子的渗透性降低。Yoon等研究发现，单萜$\\alpha$-蒎烯能对质膜造成氧化应激，还会造成膜结构破坏，进而导致细胞死亡。Chain等也发现酚类物质浓度超过1mM后会增加风信子叶片组织的膜通透性。与未处理的对照相比，膜损伤通常在体外通过测量处理过的植物的相对电解质渗漏来评估。\n\n## 水分和养分吸收\n\n为了进一步探究释放到环境中的化感物质的作用模式，需要关注植物根系的相对健康状态与功能完整性。在根中，化感物质通常影响其参与跨膜离子吸收的$Na^+/K^+$泵的活性。如，Abenavoli等研究发现肉桂酸、阿魏酸及对香豆酸等物质不仅会影响玉米的营养吸收，还会影响其膜上$H^+-ATP$ 酶活性。Franche等也报道了酚类化合物肉桂酸和阿魏酸会影响植物对P和Fe的吸收，从而抑制目标植物的生长。种植完甜菜后再种植大豆或玉米等对锌敏感的作物，甜菜产生的植物毒素能增强这些作物对锌的吸收。\n\n# 呼吸作用\n\n`Donor`植物释放的化感物质能够通过以下途径影响周围植物的呼吸作用进而影响其生长：线粒体中的电子转移、氧气吸收、CO$_2$产生及ATP产生过程中的氧化磷酸化。如，Abrahim等研究发现$\\alpha$蒎烯和柠檬烯会通过多种机制影响多种植物的下胚轴线粒体呼吸活性，这些机制分别是线粒体解偶联、细胞色素途径中的电子流和氧吸收。Czarnota等发现高粱根系分泌的抑制剂高粱油酮不仅会通过D1结合蛋白来影响Ⅱ型光合系统中电子的转运，还会通过解耦所植物中的电子流来抑制线粒体电子运输。与成熟植物相比，化感物质对幼苗生长和萌发的影响更大。相关研究认为化感物质抑制通过频繁破坏线粒体进行呼吸的能力来影响幼苗生长和萌发。\n\n## 光合作用\n\n化感物质也能通过多种途径来影响植物的光合作用过程，如干扰PS Ⅰ和Ⅱ中的电子流、影响光合色素的合成及刺激光合色素的降解等。植物茎叶中光合色素含量降低会导致ATP的合成（主要发生在光合系统Ⅱ中）。对PS Ⅱ除草剂抑制剂具有抗性的在D1结合位点有多个改变的杂草同样也能抵抗高粱油酮对这个位点的影响。Poonpaiboonpipat等观察到从柠檬草中提取的精油能够显著降低稗草中叶绿素a和叶绿素b的浓度，从而减缓光合作用，最终影响植物生长。这些发现认为精油对叶绿素的合成具有直接影响。许多植物中都存在的化感物质柠檬醛不仅会通过呼吸作用、光合作用来影响幼苗的代谢，还会通过抑制生长、调节植物氧化状态来影响成熟植物。这个研究说明特定化感物质的作用模型是和植物组织、植物生长年龄相关的，而且还和植物吸收化感物质的位点（置）相关。\n\n## 蛋白质/核酸合成及生长调节\n\n化感物质能够靶向调控能够影响植物生长的关键机制来影响临近植物的生长。这些特定的机制包括DNA插入、抑制DNA聚合酶I、抑制蛋白质合成等。酚类化感物质也能干扰核酸的形成、胞内代谢及基因表达。Li等研究发现阿魏酸和肉桂酸对总蛋白质合成有不利影响。`Donor`植物产生的化感物质能够调节靶标植物防御基因的表达。如，水稻与稗草在一起时，水稻中参与酚类物质生物合成的酶的合成会上调。稗草存在时，幼苗期的水稻体内的化感物质momilolactone的含量会增加。这表明植物竞争或化感导致的胁迫会影响靶标植物合成防御物质的能力。通过提高化感物质的含量来衡量的话，化感响应可能在数小时至数天之内发生。Yang等的研究发现类似的酚类物质还可以氧化高等植物细胞伸长所必须的激素：氧化吲哚-3-乙酸。\n\n# Donor植物体内化感物质的定位和运输\n\n植物有特定的组织部位来完成次级代谢物的合成并向环境中进行释放，这些特定的部位包括茎部的气孔和腺毛；根部的根毛、边缘细胞、表皮及周皮。根表皮的单个细胞延伸物—根毛在根-土壤界面复杂的互作中有着重要作用。根毛能够分泌离子、氨基酸、生长调节剂及化感物质等低/高分子量的有机物（下图）。一些物质能够直接在根毛中进行合成然后直接分泌到环境中，如*Echium plantagineum* L.幼苗直接分泌的高梁素和紫草素类。最近有研究报道了强性入侵杂草*E. plantagineum* L. 活根的外周皮分泌的红色生物活性萘醌；随着时间的流逝，这种植物会在主根的外皮中积累这些抗菌和植物毒性的萘醌，并且还会以红色液滴的形式从幼苗的根毛中释放这些分子。共聚焦显微荧光法加速了类似的定位研究。\n\n{% asset_img 11.png %}\n\n在茎部，化感物质能够通过叶片表面的腺毛进行直接释放，也会先转运到气孔然后再进行分泌。猫薄荷腺体分泌的21种挥发性化合物能够抑制种子的萌发及幼苗的生长（用悬浮在发芽幼苗附近但不与幼苗接触的叶子进行测定时的结果）。这表明挥发对于植物生长过程的扩散和抑制很重要。能够强烈抑制水芹生长的 2-（2-乙氧基乙氧基）-乙醇、异木香烯和卡丹烯这三种物质不仅能够在挥发物和甲醇提取液中检测到，还能在水提液中检测到。Eom等研究多年生地被植物后发现猫薄荷的叶面挥发物能够显著抑制水芹及常见的路边杂草的生长。猫薄荷产生的亲脂性或挥发性物质可以直接通过脂质双层扩散，而更多的极性化合物则需要专门的膜结合转运蛋白来协助转运过程。\n\n大多数化感物质一旦在植物组织中被合成并积累，便会被分泌释放导到植物体外，从而有效避免自毒；或是存储在液泡、膜状小囊泡或储存器官中。初次之外，这些化感物质还会通过扩散或特定的转运蛋白转运到植物的其他组织中（下图）。\n\n{% asset_img 10.png %}\n\n## 化感物质的根系分泌\n\n化感物质从根系分泌最常见的方式是通过根系分泌物进行分泌释放，尤 尤其是通过根毛分泌。根—土壤界面或根际含有来自根毛分泌、植物残体降解及微生物相关的各种浓度的有机物，因此根际被认为是土壤中活性最强的部位。次级代谢产物的变化使得根际成为及其复杂的环境。硅胶微探针管和固相根区提取技术的发展为精确地描述土壤中活植物根系释放的非极性到中等极性的化感物质提供了机会。硅胶微针管插入到根表周围的土壤中，极少的极性分子附着在管子的硅胶上，后续的溶解提取能够将这些极性分子选择性地清楚掉。\n\n根系分泌物的组成极为复杂，通常是含碳物质，如多糖、氨基酸、有机酸、酚类、生物碱、单宁酸、萜类、黄酮类、生长调节剂、维生素、营养物质，还有离子、水、电解质等无碳物质。化感物质一旦被释放，就会经受土壤中的物理、化学及生物学变化。因此，一个化感物质的生物活性在达到潜在靶标之前可能会被微生物的降解作用、氧化等影响，甚至还会通过与土壤颗粒不可逆结合而固定。\n\nWseton等描述了根系分泌的诸多机制，如扩散、囊泡运输及离子通道转运等。下面将进行简要描述。\n\n## 扩散\n\n糖、氨基酸、羧酸及酚类等低分子量的有机物在活根表皮细胞和土壤之间通过浓度梯度进行释放。这种类型的分泌释放取决于根细胞的生理状态和有机物的极性。双层疏水的质膜通常通过扩散促进亲脂性化合物的运输。\n\n## 囊泡运输\n\n高分子量的有机化合物的转运通过根帽分泌细胞形成高尔基囊泡介导完成。这些细胞随后从根表面退化或脱落。在膜结合多核糖体水平合成的酸性磷酸酶和过氧化物酶等酶通过矢状分离进入内质网管腔。囊泡的这种胞吐作用依赖于细胞内和细胞外的钙水平。\n\n## 离子通道\n\n某些植物在经受胁迫时，柠檬酸、苹果酸及草酸等物质在高浓度时是不能通过简单的扩散完成分泌的。相关研究利用离子通道拮抗剂等方法发现表皮根细胞质膜上的离子通道参与了小麦和玉米体内苹果酸和柠檬酸的释放。\n\n# 影响植物化感物质释放的因素\n\n植物释放到根际等环境中的化感物质的浓度和性质取决于植物本身和其他生物/非生物因素（下图）。植物因素包括植物品种（栽培种）、植物年龄、组织类型等。调节化感物质合成和释放的环境因素有病原菌的侵染；物理损伤；干旱、温度、土壤理化性质、水流、营养状态、灌溉、竞争及紫外辐射等非生物因素。气候变化也可能影响化感物质的合成，这也成为了近几年的研究焦点。\n\n{% asset_img 13.png %}\n\n在分类学上相近的物种并不总是释放相似的化感物质或相似浓度的代谢物到环境中。极端环境下化感物质的释放和扩散与化感物质的化学性质相关，如分子量、极性和浓度等。化感物质通常会和相关的代谢物共同进行释放。需要注意的是，这些代谢物在植物中具有多种功能。一种化合物还可以保护其寄主免受几种不相关竞争者或取食者的干扰。如，酚类物质能够刺激或抑制真菌；特定的真菌利用酚氧化酶活性去代谢、减轻高等植物产生的酚类化合物的毒性。\n\n评估相关代谢物的化感潜力的方法的选择和使用必须要小心注意。多种代谢物组成的混合物可能会严重影响代谢物的化感活性。活性可能与复杂的分子相互作用有关，包括协同作用、拮抗作用和在其他代谢物存在下的增强作用。为了评估化感物质的生物学活性，剂量/响应研究对评估化感物质的化感活性是必须的。如果研究时使用的浓度显著高于其在土壤中的浓度，那这个研究结果是很难解释该物质的化感活性的。此外，如果研究时使用的浓度高于其在环境中的真实浓度，那该化感物质在该浓度下的作用模式也可能不同。\n\n# 化感物质对根际、近邻植物及其他生物的影响\n\n根际是植物根系周围很小的一块区域，生存着大量的微生物。 植物根系不仅会与临近植物根系发生竞争，还会和真/细菌等微生物发生竞争。很难通过大小对根际进行衡量，但是可以根据其物理化学性质进行划分。根际从根开始向外，化学物质的浓度往往呈现递降趋势。Newman等研究后发现典型的高等植物会将光合作用固定的10-40%的碳以有/无机物的形式释放到根际。根部产生的物质被统称为`rhizodeposits`，包括分泌物、粘液，脱落边缘细胞及根冠细胞。根系分泌物中的大多数物质都是低分子量的物质。\n\n可控条件下对根际化感干扰的研究已经很成熟。但是，在田间条件下研究不同品种的植物竞争过程中发生的化感对生长的抑制的研究还比较困难。近些年关于根系理化性质的研究取得了新的进展。根际中的根系与微生物的互作时刻发生着。复杂的土壤环境使得相关研究变得较为苦难。越来越多的证据表明根系分泌物能够促进临近植物的交流，共生与病原生物通过生物和物理相互作用。根系分泌物能够调节根际微生物的共生关系、保护植物免受食草动物的取食、调节土壤的理化性质、影响其他植物的生长。最近的研究表明植物产生的次级代谢产物能够抑制入侵植物根际微生物介导的反硝化作用，从而限制入侵植物的生长。根系及其分泌物产生的静电和趋化响应能够促进植物—微生物之间有效的共生。\n\n根系分泌物会通过吸引对植物生长有正向影响或能够直接影响植物代谢的微生物来刺激植物的生长。根系分泌物中的化感物质对临近物质的影响取决于化感物质在根系分泌物中的浓度、相对分泌速率、靶标植物的生长阶段及生物/非生物条件。需要注意的是，如果化感物质释放的量足够而且在环境中存在的时间 足够长的话，这些化感物质只会表现出负向干扰效应。Weidenhamer研究发现植物生长阶段、生物量、密度等因素是影响释放到根际的化感物质的可利用性的关键因素，因此在进行化感物质的相关实验时，需要考虑这些因素。受体植物密度更高时也就需要供体植物释放出更高浓度的化感物质。\n\n化感物质从植物组织中释放后在达到靶标植物之前会受到诸多因素的影响，如淋溶、氧化、生物降解、临近植物吸收等。生物、化学等刺激下分泌释放的根系分泌物也可能对根际细菌具有抗菌活性。植物会通过可分离的边界细胞来抵抗根际真/细菌的侵染，位于根尖的这些细胞会释放出化感物质在内的大量具有生物活性的物质。如，新出出芽的植物会利用边界细胞产生的物质来协助植物进行防御，尤其是在田间根系还没有完全发育完善前。根部的边界细胞产生的胞外DNA和蛋白质会成为土传病害的”陷阱“，这些土传病原菌会受到化感物质的负向调控。燕麦产生的`avenicin`能抑制相关的病原微生物。Osbourn实验室研究发现燕麦产生的三萜物质对土壤微生物具有很好的防御效果，而且在植物应对非生物胁迫中也有着重要的作用。\n\n## 对化感物质的耐受性\n\n某些植物对特定的植物毒素很敏感，或者是进化出特有的机制来防御自身或其他植物产生的化感物质。能够产生并吸收化感物质的植物通常有着较强的抗毒能力，作用机制包括主动隔离膜结合结构、液泡或囊泡中的毒素、吸收后立即分泌化合物或通过一级和二级代谢改变其化学结构。如，*Polygonella myriophylla*  (Small) Horton能够以熊果苷的形式释放对苯二酚和苯醌，以此来避免自毒发生。超过百万年的进化使得某些植物具备了耐受或代谢植物毒素的能力。那些不经常遇到植物毒素的物种不太可能产生抗药性。最近的一个假说认为那些成功定殖繁育的入侵性杂草会通过释放特有的化感物质来负向影响本土植物的生长，这些本土植物对那些入侵性杂草产生的化感物质的代谢能力较弱甚至是没有。\n\n# 植物/土壤提取物中化感物质的代谢研究\n\n陆地生态学中研究得最好的领域是根际生物化学互作。尽管存在一定的挑战性，但是代谢检测和鉴定技术的发展极大地加速了对复杂系统/互作关系的研究，进而解释化感物质调节及其在生态系统功能中的相关科学问题。代谢profiling是研究复杂植物互作的有利工具。通过提取植物组织并评估代谢组，可以在特定时间点评估生物系统的功能状态。\n\nWeston等利用一种新的代谢组学方法来研究感兴趣的靶标物质，如某个化感物质处理下的生物学系统响应。通过代谢profiling，能够为研究根际生物在化感物质处理后的生物化学状态。代谢组学还可以和转录组、蛋白组等组学相结合来研究感兴趣的靶标物质的生物合成通路。特定化感物质的代谢profiling可以用于研究入侵性杂草的潜在机制。Skoneczny等利用LS-MS技术，通过田间试验与室内试验研究发现，与*Echium vulgare* L.相比，入侵性更强的*E. plantagineum* L. 体内的吡咯嗪核生物碱和氮氧化物含量更高。\n\n代谢组是一种高通量的方法，分析大量样本时能够在短时间内得到结果。这个领域发展出很多新的分析平台，如配备高分辨率质谱的气相和液相，靶向代谢组和非靶向代谢组等。最近的三重四极杆MS或敏感离子阱质谱增强了分析的精度和准度，能够对复合物中低量的上千种具有生物活性的物质进行注释。代谢profiling也被用于研究植物根际。有研究利用这种方法研究了三叶草向根际释放的多种黄酮类物质。也有研究利用UPLC QToF-MS来研究植物根系中15余种萘醌和紫草素对植物防御和化感的影响。使用LC/MS技术也成功地回收了一些更持久的化感物质，包括在受侵染的土壤中含量在ppm级别的乙酰基紫草素和紫草素。越来越多的研究利用代谢组学研究代谢物的动态变化和生物合成通路。这些方法的使用毫无疑问会增强我们对土壤环境中化感物质的研究和认识。\n\n通过代谢组学分析后，尝试处理大量质谱数据并随后表征代谢物。不可能鉴定到复合物中所有的代谢成分。高通量的计算和分析工具能够在一定程度上有效解决这些问题，如数据转换、特征值检测、归一化及质量控制等。将存在的化合物的分子特征归一化（用于基线变化），并与可用的结构库对齐。天然产物比对最常用的库是METLIN库。\n\n# 总结\n\n研究复杂的植物—植物、植物—微生物互作的化感是植物科学研究中一个具有活力的领域。本领域相关的研究人员和论文数量已经呈现指数级增长了。土壤学家、化学家、生态学家、遗传学家及分子生物学家的紧密合作将会极大地促进对调控高等植物中化感物质的因素的研究，不仅如此，还会促进这些代谢物对入侵生态学、植物竞争、植物干扰及作物产量等研究的发展。代谢组学新的分析技术的使用及其与其他组学的结合将有利于鉴定新的化感物质及其生物合成通路，甚至是气候对化感物质的影响等。进一步理解化感物质在植物防御中的作用将有助于我们开发管理作物、限制入侵性杂草的扩张、保护本地植物，甚至是从这些化感物质中找到潜在的新型农药。\n\n越来越多的研究开始担忧除草剂带来的影响，对天然产物中的农药的开发的呼吁声不断。包含化感物质在内的新型植物代谢物的鉴定为开发基于生物源的农药提供了材料来源（通过提供合成化合物的互补结构或辅助开发新的分子靶位）。\n\n{% asset_img 1.png %}\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"化感和化感物质在植物防御中的作用","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwckz004xr0g0grwh545y","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>化感（Allelopathy）指的是植物间或植物与其他生物之间通过植物产生的具有生物活性的次级代谢产物（化感物质，allelochemicals）介导的化学互作导致的生长干扰现象。<span id=\"more\"></span>已有大量的研究探明了植物不同组织部位的化感物质的释放机制，如裸露在空气中的部位的挥发和淋溶、根系分泌及植物残体在土壤中的降解等。尽管这些化感物质有着不同的生物活性和作用方式，但是它们却具有类似的生物合成通路（某类代谢物可以通过多种生物合成通路进行合成产生）。最近大量的研究阐明了在原生/非原生生态中，化感物质对植物演替和入侵的重要影响作用。此外，许多研究还关注了能够抑制杂草的作物，对其进行筛选和利用，以此来管理田间杂草，实现农业可持续发展。更好地理解化感物质与植物防御之间的关系有助于我们更好地保护和管理农作物、限制入侵杂草的扩张、保存本地植物并促进新型农药的发展与应用。与代谢组学相关的技术的使用已经极大地促进了特有化感物质、生物合成通路及其在土壤中的复杂作用的研究。包括化感物质在内的植物新型代谢物的鉴定为新型农药的研发奠定了生物学基础，为今后的合成提供互补结构，并可以辅助开发新的分子靶标位点。</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>植物及其微生物区系持续不断地产生着大量的化学物质，这些物质中的大部分在初级代谢（植物生长发育必须）中不具有生物学功能。这些低分子量的有机化合物被称为植物次级产物或次级代谢物。某些被称为化感物质的次级代谢物对邻近植物的生长、健康和行为具有刺激或抑制效应，这种现象被称为化感作用。化感作用首次被提出使用是在1937年，当时被广泛地定义为植物间或植物-微生物间直接或间接的生物化学互作。</p>\n<p>国际化感协会（The International Society of Allelopathy，ISA）将化感作用定义为植物与其他生物（不包括食草动物）之间的化学互作。鉴于此，大多数研究化感的研究人员关注的是植物之间的化学互作。然而，值得注意的是微生物也能够降解和激活次级代谢产物，某些情况下这些微生物具有更强的植物生长抑制效果。次级代谢物中具有潜在化感活性的物质叫做化感物质（allelochemicals）。此外，化感物质造成的化感干扰不同于植物之间对水分、空间、光、气、大量/微量元素的竞争干扰。随着植物的生长，化感和竞争都会造成生长减缓或生长干扰。</p>\n<p>化感并不是一种新的现象，2000年以前的文献中就有了化感的相关记录。在这些古老的手稿中，植频繁记录着植物能够让土壤”生病“，并产生毒素影响其他植物的生长。希腊植物学家Theophrastus首次注意到鹰嘴豆会”耗尽“土壤并抑制杂草。后来的罗马学者Pliny记录描述了核桃树对周围植物的毒害作用。1832年，De Candolle完成了第一个较完整的实验对化感品种的根系分泌物的毒性进行了研究。近些年，基于这些基础性的研究，关于化感互作机制的研究呈现指数级增长。关于化感最新的研究极大地促进了我们对植物生态系统及其驱动力的理解。这些研究的关注点有这些：</p>\n<ul>\n<li>化感物质对入侵植物在非原生生态中成功入侵的影响；</li>\n<li>动态生态系统中化感物质对植物演替的影响；</li>\n<li>杂草抑制作物的筛选与利用；</li>\n<li>根系中根系分泌物在驱动植物-微生物互作中的作用。</li>\n</ul>\n<p>本文主要关注的是植物间的化感互作、植物防御机制、化感物质的生化分类、化感物质作用模型及发生在根际或植物—土壤界面上的关键的化感互作。</p>\n<h1 id=\"植物防御与化感物质的作用\"><a href=\"#植物防御与化感物质的作用\" class=\"headerlink\" title=\"植物防御与化感物质的作用\"></a>植物防御与化感物质的作用</h1><p>植物是固生的，因此不管是面对威胁还是面对有益资源都不能移动。在进化的过程中，植物进化出了物理/化学机制来抵抗昆虫和病原菌。传统上认为资源竞争是影响植物交流最重要的单一影响因子。然而，最近的研究发现化感作用影响植物防御进而影响植物交流的多样性。在这个过程中，植物释放出多种低分子量的次级代谢物，这些物质能够与周围的植物互作抑制其出芽和生长。现已知的能够产生化感物质的植物大多属于维管植物。近些年对非维管植物的次级代谢产物的研究在逐渐增加。化感物质在植物演替中扮演着重要的作用。</p>\n<p>到目前为止在植物中鉴定到了大约10万种次级代谢物质。但是只有一小部分具有生物化感活性，这些具有化感活性的次级代谢产物通常属于特定的化学家族，如酚类、萜类、糖类固醇及生物碱。植物会分配大量的碳资源来合成、调控及存储参与植物防御的具有化感活性的次级代谢物。然而，许多植物进化出了高效的策略来产生和循环这些具有生物活性的代谢物。一种物质通过植物代谢转换成另外一种物质后可能具有完全不同的生物学功能。在一些例子中，一个单一的物质或其相关化合物家族会有多种功能。如，独角金内酯能够促进寄生植物的萌发而其他内酯会抑制萌发。尽管在生物活性和作用方式上具有差异，相关化合物通常共享相似的生物合成通路，而分类等代谢物能够通过多种生物合成通路和多种前体进行合成。</p>\n<p>面对食草动物及病原菌等”取食者“，植物进化出了对应的物理或化学保护机制。植物页面毛等专门的结构能够提供物理防护功能。特定的防御机制包括具有生物活性代谢物的合成与释放。这些具有生物活性的代谢物中的某些在所有植物中都存在，一些专门为了应对生物/非生物胁迫而合成。病原菌侵染后立即形成的前体物质叫植物抗毒素（phytoalexins）。寄主植物在多种胁迫下产生的低分子量的代谢物具有广谱抑制活性及额外的化学多样性。</p>\n<p>微生物共生也在影响着维管植物的生存与发展。如，广泛分布在生态系统中的菌根真菌与90%的维管植物形成了共生关系。这些微生物影响着土壤中氮磷向植物的移动运输，因此它们在地下部分通常扮演着基础性作用。植物释放化感物质、动物取食、其他代谢物被释放到根际并被其他植物吸收转运等情况下，这些微生物有时也参与化感干扰，并被成为地下”高速公路“，促进化感物质在植物间的转运。</p>\n<h2 id=\"化感物质在环境中的定位和释放\"><a href=\"#化感物质在环境中的定位和释放\" class=\"headerlink\" title=\"化感物质在环境中的定位和释放\"></a>化感物质在环境中的定位和释放</h2><p>包括化感物质在内的次级代谢产物在自然界中是很常见的。植物生长过程中各个部位都会释放出次级代谢产物。空中部分的挥发与淋溶、根系分泌、残体在土壤中的降解等方面相关的机制研究已经有很多了（下图）。雨水、雾滴及露水等直接的挥发和沉降也影响着植物空气部分化感物质的溶解性和释放，尤其是那些含有化感物质的腺毛等部位。毛滴（trichomes）是植物叶片、茎秆或花序表面的毛状附属物。这些毛滴能够有效防止食草动物的取食，也具有利用化感物质进行防御的潜在可能。作为 物理屏障的腺毛体具有能够产生参与化学防御体系的化感物质的特异性细胞。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/2.png\" class=\"\">\n\n<h1 id=\"次级代谢物的分类\"><a href=\"#次级代谢物的分类\" class=\"headerlink\" title=\"次级代谢物的分类\"></a>次级代谢物的分类</h1><p>可以根据碳骨架结构和功能基团对次级代谢物进行分类，但是最常用的分类系统是根据代谢物的生物遗传起源对代谢物进行分类（下图）。根据Walton、Brown及Rice等人的研究，可以将植物代谢物和化感物质分为三大类：酚类、萜类和生物碱。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/3.png\" class=\"\">\n\n<h2 id=\"酚类及其衍生物\"><a href=\"#酚类及其衍生物\" class=\"headerlink\" title=\"酚类及其衍生物\"></a>酚类及其衍生物</h2><p>植物多酚中的多类有机化合物都含有一个共同的结构，它们由一个芳香环组成，至少含有一个羟基，可能还有其他取代基。可以将植物酚类细分为酚酸类、黄酮类、二苯乙烯类、香豆素类、木质素类和单宁类。酚类是衍生自苯丙烷-乙酸酯生物合成途径的次级代谢产物。到目前为止天然的次级代谢产物中大约有8000种属于酚类。这些酚类物质在植物中有着多样的结构和物理化学功能。酚类在高等植物的防御中扮演者重要的作用，也是报道最多的。毒性的多样性导致酚类物质能够在细胞的多个位置发挥功能。植物结构基础的40%是由木质素和单宁酸组成的，而木质素和单宁酸就属于酚类。这些物质还能随着时间变化降解在根际土壤中，进而保证有足够多的丰度来完成合成、转化、释放及降解的生态循环。</p>\n<p>已经有大量关于酚类物质的化感机制研究的报道，这些研究发现酚类物质不仅会干扰多个植物关键酶，还会影响一些生理过程。如，肉桂酸（cinnamic）和苯甲酸（benzoic acids）会影响激素活性、膜的通透性、光合作用、呼吸作用及有机物的合成等（下图）。但是还没有实验数据表明酚类物质会影响细胞分化和基因翻译。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/4.png\" class=\"\">\n\n<p>包括苜蓿和三叶草在内的多年生豆科植物会在牧场施肥后产生化感作用。三叶草和苜蓿等也会有自毒作用。这些植物会抑制同种植物的生长。CArlsen等人研究三叶草的植物毒性后发现三叶草会释放黄酮类和糖苷类次级代谢物来抑制杂草生长。</p>\n<h2 id=\"萜类\"><a href=\"#萜类\" class=\"headerlink\" title=\"萜类\"></a>萜类</h2><p>萜类是一类特殊的化感物质，其生物合成通路有甲羟戊酸和异戊烯基焦磷酸两个途径。<code>terpene</code>或<code>terpenoid</code>来自希腊语<code>terpentin</code>，因为首次报道的<code>terpeniod</code>是从<code>turpentine</code>分离得到的。自然存在的大约24000个萜类化合物是由五个碳异戊二烯亚基组成的（下图）。这些压机它们通过常见的头对头或次要的头尾连接而连接在一起，但有些特征还在于头对中环闭合。根据拥有的异戊二烯亚基的相对数量，可以将萜类化合物分成半萜烯、单萜、倍半萜、二萜、三萜、四萜及多萜。由于萜类具有挥发性，因此它们在植物中具有多种功能，如信号分子、光保护剂、生殖激素及化感物质等。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/5.png\" class=\"\">\n\n<p>植物精油的主要成分单萜对植物生长和幼苗发芽具有很强的抑制作用。研究较好的是单萜1,4-cineole和1,8-cineole（下图）的生长抑制作用，而且是新型除草剂的有效候选物质。这些单萜尽管在结构上具有相似性，但是作用方式却不尽相同，如1,8-cineole影响有丝分裂的所有阶段，1,4-cineole会造成芽的生长异常。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/6.png\" class=\"\">\n\n<p>倍半萜及其相关的代谢物也是植物精油的组成成分，它们对植物具有植物毒性。倍半萜$\\beta$-石竹烯（下图）是大多数植物挥发物的有效成分，在很低浓度下就能抑制 甘蓝型油菜和萝卜种子的萌发和生长。葛根叶片中的黄嘌呤的几何异构体在极低浓度下便能抑制了许多小种子一年生阔叶和草的幼苗根生长。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/7.png\" class=\"\">\n\n<h2 id=\"生物碱\"><a href=\"#生物碱\" class=\"headerlink\" title=\"生物碱\"></a>生物碱</h2><p>生物碱是源自植物的杂环含氮碱性化合物（下图）。之所以被称为生物碱是因为它们的碱性本质。菊科、夹竹桃科、紫草科及豆科等四类植物能够合成生物碱。自古以来，由于它们独特的药理特性，因此一直被关注。生物碱是最大的次级代谢产物组类，迄今已鉴定出约20,000种化合物，代表了巨大的结构生物合成多样性。根据生物合成来源，可以将生物碱分成不同的类。如，吲哚生物碱衍生自色氨酸；吡咯嗪核生物碱衍生自鸟氨酸或精氨酸；喹喔啉生物碱衍生自赖氨酸。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/8.png\" class=\"\">\n\n<p>生物碱在植物中分布广泛。生物碱在植物中常见的报道是其参与了植物的防御反应，如食草动物取食、真菌等微生物侵染及临近植物干扰等情况。研究人员已评估了几种天然存在的吡咯烷核生物碱对人类和放牧牲畜的肝脏毒性，而且这些物质还能作为植物地上防御系统的一部分，阻止草食动物取食。然而，其他的生物碱在某些时候会抑制植物生长。野生烟草被食草动物取食或破坏后，其体内尼古丁产物增加；有趣的是尼古丁对一年生杂草具有化感活性。生物碱可以通过干扰DNA、酶活性、蛋白质生物合成及膜完整性等机制来抑制植物的生长。Lovett等研究了大麦能够从根部释放生物碱草胺和鱼藤碱（这两种物质对幼苗具有化感活性）增强防御反应的机制。Wink等研究发现豆类植物会合成喹唑烷生物碱，这种物质能够通过影响膜通透性和蛋白质合成来引发强烈的抑制作用。</p>\n<h2 id=\"苯并恶嗪类化合物的异羟肟酸：农学案例研究\"><a href=\"#苯并恶嗪类化合物的异羟肟酸：农学案例研究\" class=\"headerlink\" title=\"苯并恶嗪类化合物的异羟肟酸：农学案例研究\"></a>苯并恶嗪类化合物的异羟肟酸：农学案例研究</h2><p>苯酚衍生物异羟肟酸是次级代谢产物中具有生物活性的苯并噁嗪来化合物的基本骨架（下图）。大量研究表明苯并噁嗪类化合物具有抗菌、抗真菌、拒食及植物毒性等作用。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/9.png\" class=\"\">\n\n<p>玉米、黑麦及小麦等栽培作物中的异羟肟酸的化感活性有着广泛的研究，这种物质的含量与植物对昆虫和病原菌的抗性高度相关。DIMBOA（2,4-Dihydroxy-7-methoxy-2H-1,4-benzoxazin-3-one）和DIBOA（2,4-dihydroxy-2H-1,4-benzoxazin-3-one）以及相关微生物转化物质对许多阔叶杂草和生菜、小麦等作物具有很强的化感活性。这些物质通常是通过植物受伤部位释放到土壤中的，除此之外，收获后留下的植物残体降解后也会产生这类物质。DIBOA和DIMBOA的糖苷（以及它们各自的糖苷配基和黑麦（黑麦谷物）根残留物中释放的降解产物）是主要的化感活性成分（对阔叶作物、杂草及一些一年生草）。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/10.png\" class=\"\">\n\n<h1 id=\"化感物质的作用模型\"><a href=\"#化感物质的作用模型\" class=\"headerlink\" title=\"化感物质的作用模型\"></a>化感物质的作用模型</h1><p>化感研究中一个挑战是鉴定高等植物中化感物质的特定的作用模型。已经有很多的方法来研究化感物质对高等植物生长的直接影响并进一步研究其作用机制。但是这可能是比较困难的，因为某个化感物质潜在的靶标位点特异性的酶可能是多样性的，而且需要大量对催化位点和靶标位点结构相关的先验知识。在某些例子中，通过对植物生长和/或形态学的观察得到的化感物质作用的靶标位点可能不是真真正正的靶标位点。此外，某些通过体外测定进行的化感方式的研究的结果已经受到一定的质疑，而且更重要的是体外测定得到的结果和自然状态下的结果的差异性也受到了一定的质疑。</p>\n<p>需要注意的是在自然状态下化感物质的浓度通常是很低的，而且存留的时间很短，因此添加到土壤或环境中的单一化感物质或化感物质群的浓度是很难估计或测定的。因此，在一定浓度下需要进行适当的生物测定来评估化感物质对高等植物生长的影响。在许多例子中，需要使用多种生物测定方法评估化感物质对植物生长的影响。如，利用自然系统中的土壤和植物品种对得到统一可重复的数据结果是很重要的。一些研究人员已经利用准确敏感的的方法去评估天然/合成化感物质在农业化学系统中的作用模型，并得到了强大可靠的模型。一种典型的方法是利用多种分析条件来得到数据，如利用能够在一周内迅速生长并繁殖出更多苗的紫菜或浮萍等水生植物。利用浮萍的话只需要很低的浓度即可，另外一个好处是化感物质可以溶解在水中。此外，还有许多研究利用局部土壤和/或琼脂来评估化感物质对地上或地下部分的影响。但是这种验证方法需要更长的时间让植物达到评估条件。最后，一种用于评估植物残体降解影响的方法已经被用于评估植物残体的植物毒性。通过使用适当的检测方法进行筛选，已经鉴定并验证了一些不同的作用机制，如膜通透性、水分/营养吸收、呼吸作用、光合作用、蛋白质/核酸合成及生长调节等。</p>\n<h2 id=\"膜通透性\"><a href=\"#膜通透性\" class=\"headerlink\" title=\"膜通透性\"></a>膜通透性</h2><p>包括化感物质在内的次级代谢产物在浓度足够时能够调节膜通透性和膜的功能。暴露在这些代谢物中时可能会导致细胞内容物的泄露，进而通过凋亡或死亡导致细胞死亡。这个过程最终导致植物组织死亡及特定功能的丧失。如，几种存在化感效应的物质能够调节质膜的通透性。这些物质能够通过扩散或辅助运输机制很轻易地通过细胞膜。一旦膜通透性发生改变，钾离子通道就会受到影响，并且经常导致对氯离子的渗透性降低。Yoon等研究发现，单萜$\\alpha$-蒎烯能对质膜造成氧化应激，还会造成膜结构破坏，进而导致细胞死亡。Chain等也发现酚类物质浓度超过1mM后会增加风信子叶片组织的膜通透性。与未处理的对照相比，膜损伤通常在体外通过测量处理过的植物的相对电解质渗漏来评估。</p>\n<h2 id=\"水分和养分吸收\"><a href=\"#水分和养分吸收\" class=\"headerlink\" title=\"水分和养分吸收\"></a>水分和养分吸收</h2><p>为了进一步探究释放到环境中的化感物质的作用模式，需要关注植物根系的相对健康状态与功能完整性。在根中，化感物质通常影响其参与跨膜离子吸收的$Na^+/K^+$泵的活性。如，Abenavoli等研究发现肉桂酸、阿魏酸及对香豆酸等物质不仅会影响玉米的营养吸收，还会影响其膜上$H^+-ATP$ 酶活性。Franche等也报道了酚类化合物肉桂酸和阿魏酸会影响植物对P和Fe的吸收，从而抑制目标植物的生长。种植完甜菜后再种植大豆或玉米等对锌敏感的作物，甜菜产生的植物毒素能增强这些作物对锌的吸收。</p>\n<h1 id=\"呼吸作用\"><a href=\"#呼吸作用\" class=\"headerlink\" title=\"呼吸作用\"></a>呼吸作用</h1><p><code>Donor</code>植物释放的化感物质能够通过以下途径影响周围植物的呼吸作用进而影响其生长：线粒体中的电子转移、氧气吸收、CO$_2$产生及ATP产生过程中的氧化磷酸化。如，Abrahim等研究发现$\\alpha$蒎烯和柠檬烯会通过多种机制影响多种植物的下胚轴线粒体呼吸活性，这些机制分别是线粒体解偶联、细胞色素途径中的电子流和氧吸收。Czarnota等发现高粱根系分泌的抑制剂高粱油酮不仅会通过D1结合蛋白来影响Ⅱ型光合系统中电子的转运，还会通过解耦所植物中的电子流来抑制线粒体电子运输。与成熟植物相比，化感物质对幼苗生长和萌发的影响更大。相关研究认为化感物质抑制通过频繁破坏线粒体进行呼吸的能力来影响幼苗生长和萌发。</p>\n<h2 id=\"光合作用\"><a href=\"#光合作用\" class=\"headerlink\" title=\"光合作用\"></a>光合作用</h2><p>化感物质也能通过多种途径来影响植物的光合作用过程，如干扰PS Ⅰ和Ⅱ中的电子流、影响光合色素的合成及刺激光合色素的降解等。植物茎叶中光合色素含量降低会导致ATP的合成（主要发生在光合系统Ⅱ中）。对PS Ⅱ除草剂抑制剂具有抗性的在D1结合位点有多个改变的杂草同样也能抵抗高粱油酮对这个位点的影响。Poonpaiboonpipat等观察到从柠檬草中提取的精油能够显著降低稗草中叶绿素a和叶绿素b的浓度，从而减缓光合作用，最终影响植物生长。这些发现认为精油对叶绿素的合成具有直接影响。许多植物中都存在的化感物质柠檬醛不仅会通过呼吸作用、光合作用来影响幼苗的代谢，还会通过抑制生长、调节植物氧化状态来影响成熟植物。这个研究说明特定化感物质的作用模型是和植物组织、植物生长年龄相关的，而且还和植物吸收化感物质的位点（置）相关。</p>\n<h2 id=\"蛋白质-核酸合成及生长调节\"><a href=\"#蛋白质-核酸合成及生长调节\" class=\"headerlink\" title=\"蛋白质/核酸合成及生长调节\"></a>蛋白质/核酸合成及生长调节</h2><p>化感物质能够靶向调控能够影响植物生长的关键机制来影响临近植物的生长。这些特定的机制包括DNA插入、抑制DNA聚合酶I、抑制蛋白质合成等。酚类化感物质也能干扰核酸的形成、胞内代谢及基因表达。Li等研究发现阿魏酸和肉桂酸对总蛋白质合成有不利影响。<code>Donor</code>植物产生的化感物质能够调节靶标植物防御基因的表达。如，水稻与稗草在一起时，水稻中参与酚类物质生物合成的酶的合成会上调。稗草存在时，幼苗期的水稻体内的化感物质momilolactone的含量会增加。这表明植物竞争或化感导致的胁迫会影响靶标植物合成防御物质的能力。通过提高化感物质的含量来衡量的话，化感响应可能在数小时至数天之内发生。Yang等的研究发现类似的酚类物质还可以氧化高等植物细胞伸长所必须的激素：氧化吲哚-3-乙酸。</p>\n<h1 id=\"Donor植物体内化感物质的定位和运输\"><a href=\"#Donor植物体内化感物质的定位和运输\" class=\"headerlink\" title=\"Donor植物体内化感物质的定位和运输\"></a>Donor植物体内化感物质的定位和运输</h1><p>植物有特定的组织部位来完成次级代谢物的合成并向环境中进行释放，这些特定的部位包括茎部的气孔和腺毛；根部的根毛、边缘细胞、表皮及周皮。根表皮的单个细胞延伸物—根毛在根-土壤界面复杂的互作中有着重要作用。根毛能够分泌离子、氨基酸、生长调节剂及化感物质等低/高分子量的有机物（下图）。一些物质能够直接在根毛中进行合成然后直接分泌到环境中，如<em>Echium plantagineum</em> L.幼苗直接分泌的高梁素和紫草素类。最近有研究报道了强性入侵杂草<em>E. plantagineum</em> L. 活根的外周皮分泌的红色生物活性萘醌；随着时间的流逝，这种植物会在主根的外皮中积累这些抗菌和植物毒性的萘醌，并且还会以红色液滴的形式从幼苗的根毛中释放这些分子。共聚焦显微荧光法加速了类似的定位研究。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/11.png\" class=\"\">\n\n<p>在茎部，化感物质能够通过叶片表面的腺毛进行直接释放，也会先转运到气孔然后再进行分泌。猫薄荷腺体分泌的21种挥发性化合物能够抑制种子的萌发及幼苗的生长（用悬浮在发芽幼苗附近但不与幼苗接触的叶子进行测定时的结果）。这表明挥发对于植物生长过程的扩散和抑制很重要。能够强烈抑制水芹生长的 2-（2-乙氧基乙氧基）-乙醇、异木香烯和卡丹烯这三种物质不仅能够在挥发物和甲醇提取液中检测到，还能在水提液中检测到。Eom等研究多年生地被植物后发现猫薄荷的叶面挥发物能够显著抑制水芹及常见的路边杂草的生长。猫薄荷产生的亲脂性或挥发性物质可以直接通过脂质双层扩散，而更多的极性化合物则需要专门的膜结合转运蛋白来协助转运过程。</p>\n<p>大多数化感物质一旦在植物组织中被合成并积累，便会被分泌释放导到植物体外，从而有效避免自毒；或是存储在液泡、膜状小囊泡或储存器官中。初次之外，这些化感物质还会通过扩散或特定的转运蛋白转运到植物的其他组织中（下图）。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/10.png\" class=\"\">\n\n<h2 id=\"化感物质的根系分泌\"><a href=\"#化感物质的根系分泌\" class=\"headerlink\" title=\"化感物质的根系分泌\"></a>化感物质的根系分泌</h2><p>化感物质从根系分泌最常见的方式是通过根系分泌物进行分泌释放，尤 尤其是通过根毛分泌。根—土壤界面或根际含有来自根毛分泌、植物残体降解及微生物相关的各种浓度的有机物，因此根际被认为是土壤中活性最强的部位。次级代谢产物的变化使得根际成为及其复杂的环境。硅胶微探针管和固相根区提取技术的发展为精确地描述土壤中活植物根系释放的非极性到中等极性的化感物质提供了机会。硅胶微针管插入到根表周围的土壤中，极少的极性分子附着在管子的硅胶上，后续的溶解提取能够将这些极性分子选择性地清楚掉。</p>\n<p>根系分泌物的组成极为复杂，通常是含碳物质，如多糖、氨基酸、有机酸、酚类、生物碱、单宁酸、萜类、黄酮类、生长调节剂、维生素、营养物质，还有离子、水、电解质等无碳物质。化感物质一旦被释放，就会经受土壤中的物理、化学及生物学变化。因此，一个化感物质的生物活性在达到潜在靶标之前可能会被微生物的降解作用、氧化等影响，甚至还会通过与土壤颗粒不可逆结合而固定。</p>\n<p>Wseton等描述了根系分泌的诸多机制，如扩散、囊泡运输及离子通道转运等。下面将进行简要描述。</p>\n<h2 id=\"扩散\"><a href=\"#扩散\" class=\"headerlink\" title=\"扩散\"></a>扩散</h2><p>糖、氨基酸、羧酸及酚类等低分子量的有机物在活根表皮细胞和土壤之间通过浓度梯度进行释放。这种类型的分泌释放取决于根细胞的生理状态和有机物的极性。双层疏水的质膜通常通过扩散促进亲脂性化合物的运输。</p>\n<h2 id=\"囊泡运输\"><a href=\"#囊泡运输\" class=\"headerlink\" title=\"囊泡运输\"></a>囊泡运输</h2><p>高分子量的有机化合物的转运通过根帽分泌细胞形成高尔基囊泡介导完成。这些细胞随后从根表面退化或脱落。在膜结合多核糖体水平合成的酸性磷酸酶和过氧化物酶等酶通过矢状分离进入内质网管腔。囊泡的这种胞吐作用依赖于细胞内和细胞外的钙水平。</p>\n<h2 id=\"离子通道\"><a href=\"#离子通道\" class=\"headerlink\" title=\"离子通道\"></a>离子通道</h2><p>某些植物在经受胁迫时，柠檬酸、苹果酸及草酸等物质在高浓度时是不能通过简单的扩散完成分泌的。相关研究利用离子通道拮抗剂等方法发现表皮根细胞质膜上的离子通道参与了小麦和玉米体内苹果酸和柠檬酸的释放。</p>\n<h1 id=\"影响植物化感物质释放的因素\"><a href=\"#影响植物化感物质释放的因素\" class=\"headerlink\" title=\"影响植物化感物质释放的因素\"></a>影响植物化感物质释放的因素</h1><p>植物释放到根际等环境中的化感物质的浓度和性质取决于植物本身和其他生物/非生物因素（下图）。植物因素包括植物品种（栽培种）、植物年龄、组织类型等。调节化感物质合成和释放的环境因素有病原菌的侵染；物理损伤；干旱、温度、土壤理化性质、水流、营养状态、灌溉、竞争及紫外辐射等非生物因素。气候变化也可能影响化感物质的合成，这也成为了近几年的研究焦点。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/13.png\" class=\"\">\n\n<p>在分类学上相近的物种并不总是释放相似的化感物质或相似浓度的代谢物到环境中。极端环境下化感物质的释放和扩散与化感物质的化学性质相关，如分子量、极性和浓度等。化感物质通常会和相关的代谢物共同进行释放。需要注意的是，这些代谢物在植物中具有多种功能。一种化合物还可以保护其寄主免受几种不相关竞争者或取食者的干扰。如，酚类物质能够刺激或抑制真菌；特定的真菌利用酚氧化酶活性去代谢、减轻高等植物产生的酚类化合物的毒性。</p>\n<p>评估相关代谢物的化感潜力的方法的选择和使用必须要小心注意。多种代谢物组成的混合物可能会严重影响代谢物的化感活性。活性可能与复杂的分子相互作用有关，包括协同作用、拮抗作用和在其他代谢物存在下的增强作用。为了评估化感物质的生物学活性，剂量/响应研究对评估化感物质的化感活性是必须的。如果研究时使用的浓度显著高于其在土壤中的浓度，那这个研究结果是很难解释该物质的化感活性的。此外，如果研究时使用的浓度高于其在环境中的真实浓度，那该化感物质在该浓度下的作用模式也可能不同。</p>\n<h1 id=\"化感物质对根际、近邻植物及其他生物的影响\"><a href=\"#化感物质对根际、近邻植物及其他生物的影响\" class=\"headerlink\" title=\"化感物质对根际、近邻植物及其他生物的影响\"></a>化感物质对根际、近邻植物及其他生物的影响</h1><p>根际是植物根系周围很小的一块区域，生存着大量的微生物。 植物根系不仅会与临近植物根系发生竞争，还会和真/细菌等微生物发生竞争。很难通过大小对根际进行衡量，但是可以根据其物理化学性质进行划分。根际从根开始向外，化学物质的浓度往往呈现递降趋势。Newman等研究后发现典型的高等植物会将光合作用固定的10-40%的碳以有/无机物的形式释放到根际。根部产生的物质被统称为<code>rhizodeposits</code>，包括分泌物、粘液，脱落边缘细胞及根冠细胞。根系分泌物中的大多数物质都是低分子量的物质。</p>\n<p>可控条件下对根际化感干扰的研究已经很成熟。但是，在田间条件下研究不同品种的植物竞争过程中发生的化感对生长的抑制的研究还比较困难。近些年关于根系理化性质的研究取得了新的进展。根际中的根系与微生物的互作时刻发生着。复杂的土壤环境使得相关研究变得较为苦难。越来越多的证据表明根系分泌物能够促进临近植物的交流，共生与病原生物通过生物和物理相互作用。根系分泌物能够调节根际微生物的共生关系、保护植物免受食草动物的取食、调节土壤的理化性质、影响其他植物的生长。最近的研究表明植物产生的次级代谢产物能够抑制入侵植物根际微生物介导的反硝化作用，从而限制入侵植物的生长。根系及其分泌物产生的静电和趋化响应能够促进植物—微生物之间有效的共生。</p>\n<p>根系分泌物会通过吸引对植物生长有正向影响或能够直接影响植物代谢的微生物来刺激植物的生长。根系分泌物中的化感物质对临近物质的影响取决于化感物质在根系分泌物中的浓度、相对分泌速率、靶标植物的生长阶段及生物/非生物条件。需要注意的是，如果化感物质释放的量足够而且在环境中存在的时间 足够长的话，这些化感物质只会表现出负向干扰效应。Weidenhamer研究发现植物生长阶段、生物量、密度等因素是影响释放到根际的化感物质的可利用性的关键因素，因此在进行化感物质的相关实验时，需要考虑这些因素。受体植物密度更高时也就需要供体植物释放出更高浓度的化感物质。</p>\n<p>化感物质从植物组织中释放后在达到靶标植物之前会受到诸多因素的影响，如淋溶、氧化、生物降解、临近植物吸收等。生物、化学等刺激下分泌释放的根系分泌物也可能对根际细菌具有抗菌活性。植物会通过可分离的边界细胞来抵抗根际真/细菌的侵染，位于根尖的这些细胞会释放出化感物质在内的大量具有生物活性的物质。如，新出出芽的植物会利用边界细胞产生的物质来协助植物进行防御，尤其是在田间根系还没有完全发育完善前。根部的边界细胞产生的胞外DNA和蛋白质会成为土传病害的”陷阱“，这些土传病原菌会受到化感物质的负向调控。燕麦产生的<code>avenicin</code>能抑制相关的病原微生物。Osbourn实验室研究发现燕麦产生的三萜物质对土壤微生物具有很好的防御效果，而且在植物应对非生物胁迫中也有着重要的作用。</p>\n<h2 id=\"对化感物质的耐受性\"><a href=\"#对化感物质的耐受性\" class=\"headerlink\" title=\"对化感物质的耐受性\"></a>对化感物质的耐受性</h2><p>某些植物对特定的植物毒素很敏感，或者是进化出特有的机制来防御自身或其他植物产生的化感物质。能够产生并吸收化感物质的植物通常有着较强的抗毒能力，作用机制包括主动隔离膜结合结构、液泡或囊泡中的毒素、吸收后立即分泌化合物或通过一级和二级代谢改变其化学结构。如，<em>Polygonella myriophylla</em>  (Small) Horton能够以熊果苷的形式释放对苯二酚和苯醌，以此来避免自毒发生。超过百万年的进化使得某些植物具备了耐受或代谢植物毒素的能力。那些不经常遇到植物毒素的物种不太可能产生抗药性。最近的一个假说认为那些成功定殖繁育的入侵性杂草会通过释放特有的化感物质来负向影响本土植物的生长，这些本土植物对那些入侵性杂草产生的化感物质的代谢能力较弱甚至是没有。</p>\n<h1 id=\"植物-土壤提取物中化感物质的代谢研究\"><a href=\"#植物-土壤提取物中化感物质的代谢研究\" class=\"headerlink\" title=\"植物/土壤提取物中化感物质的代谢研究\"></a>植物/土壤提取物中化感物质的代谢研究</h1><p>陆地生态学中研究得最好的领域是根际生物化学互作。尽管存在一定的挑战性，但是代谢检测和鉴定技术的发展极大地加速了对复杂系统/互作关系的研究，进而解释化感物质调节及其在生态系统功能中的相关科学问题。代谢profiling是研究复杂植物互作的有利工具。通过提取植物组织并评估代谢组，可以在特定时间点评估生物系统的功能状态。</p>\n<p>Weston等利用一种新的代谢组学方法来研究感兴趣的靶标物质，如某个化感物质处理下的生物学系统响应。通过代谢profiling，能够为研究根际生物在化感物质处理后的生物化学状态。代谢组学还可以和转录组、蛋白组等组学相结合来研究感兴趣的靶标物质的生物合成通路。特定化感物质的代谢profiling可以用于研究入侵性杂草的潜在机制。Skoneczny等利用LS-MS技术，通过田间试验与室内试验研究发现，与<em>Echium vulgare</em> L.相比，入侵性更强的<em>E. plantagineum</em> L. 体内的吡咯嗪核生物碱和氮氧化物含量更高。</p>\n<p>代谢组是一种高通量的方法，分析大量样本时能够在短时间内得到结果。这个领域发展出很多新的分析平台，如配备高分辨率质谱的气相和液相，靶向代谢组和非靶向代谢组等。最近的三重四极杆MS或敏感离子阱质谱增强了分析的精度和准度，能够对复合物中低量的上千种具有生物活性的物质进行注释。代谢profiling也被用于研究植物根际。有研究利用这种方法研究了三叶草向根际释放的多种黄酮类物质。也有研究利用UPLC QToF-MS来研究植物根系中15余种萘醌和紫草素对植物防御和化感的影响。使用LC/MS技术也成功地回收了一些更持久的化感物质，包括在受侵染的土壤中含量在ppm级别的乙酰基紫草素和紫草素。越来越多的研究利用代谢组学研究代谢物的动态变化和生物合成通路。这些方法的使用毫无疑问会增强我们对土壤环境中化感物质的研究和认识。</p>\n<p>通过代谢组学分析后，尝试处理大量质谱数据并随后表征代谢物。不可能鉴定到复合物中所有的代谢成分。高通量的计算和分析工具能够在一定程度上有效解决这些问题，如数据转换、特征值检测、归一化及质量控制等。将存在的化合物的分子特征归一化（用于基线变化），并与可用的结构库对齐。天然产物比对最常用的库是METLIN库。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>研究复杂的植物—植物、植物—微生物互作的化感是植物科学研究中一个具有活力的领域。本领域相关的研究人员和论文数量已经呈现指数级增长了。土壤学家、化学家、生态学家、遗传学家及分子生物学家的紧密合作将会极大地促进对调控高等植物中化感物质的因素的研究，不仅如此，还会促进这些代谢物对入侵生态学、植物竞争、植物干扰及作物产量等研究的发展。代谢组学新的分析技术的使用及其与其他组学的结合将有利于鉴定新的化感物质及其生物合成通路，甚至是气候对化感物质的影响等。进一步理解化感物质在植物防御中的作用将有助于我们开发管理作物、限制入侵性杂草的扩张、保护本地植物，甚至是从这些化感物质中找到潜在的新型农药。</p>\n<p>越来越多的研究开始担忧除草剂带来的影响，对天然产物中的农药的开发的呼吁声不断。包含化感物质在内的新型植物代谢物的鉴定为开发基于生物源的农药提供了材料来源（通过提供合成化合物的互补结构或辅助开发新的分子靶位）。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/1.png\" class=\"\">\n\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>化感（Allelopathy）指的是植物间或植物与其他生物之间通过植物产生的具有生物活性的次级代谢产物（化感物质，allelochemicals）介导的化学互作导致的生长干扰现象。","more":"已有大量的研究探明了植物不同组织部位的化感物质的释放机制，如裸露在空气中的部位的挥发和淋溶、根系分泌及植物残体在土壤中的降解等。尽管这些化感物质有着不同的生物活性和作用方式，但是它们却具有类似的生物合成通路（某类代谢物可以通过多种生物合成通路进行合成产生）。最近大量的研究阐明了在原生/非原生生态中，化感物质对植物演替和入侵的重要影响作用。此外，许多研究还关注了能够抑制杂草的作物，对其进行筛选和利用，以此来管理田间杂草，实现农业可持续发展。更好地理解化感物质与植物防御之间的关系有助于我们更好地保护和管理农作物、限制入侵杂草的扩张、保存本地植物并促进新型农药的发展与应用。与代谢组学相关的技术的使用已经极大地促进了特有化感物质、生物合成通路及其在土壤中的复杂作用的研究。包括化感物质在内的植物新型代谢物的鉴定为新型农药的研发奠定了生物学基础，为今后的合成提供互补结构，并可以辅助开发新的分子靶标位点。</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>植物及其微生物区系持续不断地产生着大量的化学物质，这些物质中的大部分在初级代谢（植物生长发育必须）中不具有生物学功能。这些低分子量的有机化合物被称为植物次级产物或次级代谢物。某些被称为化感物质的次级代谢物对邻近植物的生长、健康和行为具有刺激或抑制效应，这种现象被称为化感作用。化感作用首次被提出使用是在1937年，当时被广泛地定义为植物间或植物-微生物间直接或间接的生物化学互作。</p>\n<p>国际化感协会（The International Society of Allelopathy，ISA）将化感作用定义为植物与其他生物（不包括食草动物）之间的化学互作。鉴于此，大多数研究化感的研究人员关注的是植物之间的化学互作。然而，值得注意的是微生物也能够降解和激活次级代谢产物，某些情况下这些微生物具有更强的植物生长抑制效果。次级代谢物中具有潜在化感活性的物质叫做化感物质（allelochemicals）。此外，化感物质造成的化感干扰不同于植物之间对水分、空间、光、气、大量/微量元素的竞争干扰。随着植物的生长，化感和竞争都会造成生长减缓或生长干扰。</p>\n<p>化感并不是一种新的现象，2000年以前的文献中就有了化感的相关记录。在这些古老的手稿中，植频繁记录着植物能够让土壤”生病“，并产生毒素影响其他植物的生长。希腊植物学家Theophrastus首次注意到鹰嘴豆会”耗尽“土壤并抑制杂草。后来的罗马学者Pliny记录描述了核桃树对周围植物的毒害作用。1832年，De Candolle完成了第一个较完整的实验对化感品种的根系分泌物的毒性进行了研究。近些年，基于这些基础性的研究，关于化感互作机制的研究呈现指数级增长。关于化感最新的研究极大地促进了我们对植物生态系统及其驱动力的理解。这些研究的关注点有这些：</p>\n<ul>\n<li>化感物质对入侵植物在非原生生态中成功入侵的影响；</li>\n<li>动态生态系统中化感物质对植物演替的影响；</li>\n<li>杂草抑制作物的筛选与利用；</li>\n<li>根系中根系分泌物在驱动植物-微生物互作中的作用。</li>\n</ul>\n<p>本文主要关注的是植物间的化感互作、植物防御机制、化感物质的生化分类、化感物质作用模型及发生在根际或植物—土壤界面上的关键的化感互作。</p>\n<h1 id=\"植物防御与化感物质的作用\"><a href=\"#植物防御与化感物质的作用\" class=\"headerlink\" title=\"植物防御与化感物质的作用\"></a>植物防御与化感物质的作用</h1><p>植物是固生的，因此不管是面对威胁还是面对有益资源都不能移动。在进化的过程中，植物进化出了物理/化学机制来抵抗昆虫和病原菌。传统上认为资源竞争是影响植物交流最重要的单一影响因子。然而，最近的研究发现化感作用影响植物防御进而影响植物交流的多样性。在这个过程中，植物释放出多种低分子量的次级代谢物，这些物质能够与周围的植物互作抑制其出芽和生长。现已知的能够产生化感物质的植物大多属于维管植物。近些年对非维管植物的次级代谢产物的研究在逐渐增加。化感物质在植物演替中扮演着重要的作用。</p>\n<p>到目前为止在植物中鉴定到了大约10万种次级代谢物质。但是只有一小部分具有生物化感活性，这些具有化感活性的次级代谢产物通常属于特定的化学家族，如酚类、萜类、糖类固醇及生物碱。植物会分配大量的碳资源来合成、调控及存储参与植物防御的具有化感活性的次级代谢物。然而，许多植物进化出了高效的策略来产生和循环这些具有生物活性的代谢物。一种物质通过植物代谢转换成另外一种物质后可能具有完全不同的生物学功能。在一些例子中，一个单一的物质或其相关化合物家族会有多种功能。如，独角金内酯能够促进寄生植物的萌发而其他内酯会抑制萌发。尽管在生物活性和作用方式上具有差异，相关化合物通常共享相似的生物合成通路，而分类等代谢物能够通过多种生物合成通路和多种前体进行合成。</p>\n<p>面对食草动物及病原菌等”取食者“，植物进化出了对应的物理或化学保护机制。植物页面毛等专门的结构能够提供物理防护功能。特定的防御机制包括具有生物活性代谢物的合成与释放。这些具有生物活性的代谢物中的某些在所有植物中都存在，一些专门为了应对生物/非生物胁迫而合成。病原菌侵染后立即形成的前体物质叫植物抗毒素（phytoalexins）。寄主植物在多种胁迫下产生的低分子量的代谢物具有广谱抑制活性及额外的化学多样性。</p>\n<p>微生物共生也在影响着维管植物的生存与发展。如，广泛分布在生态系统中的菌根真菌与90%的维管植物形成了共生关系。这些微生物影响着土壤中氮磷向植物的移动运输，因此它们在地下部分通常扮演着基础性作用。植物释放化感物质、动物取食、其他代谢物被释放到根际并被其他植物吸收转运等情况下，这些微生物有时也参与化感干扰，并被成为地下”高速公路“，促进化感物质在植物间的转运。</p>\n<h2 id=\"化感物质在环境中的定位和释放\"><a href=\"#化感物质在环境中的定位和释放\" class=\"headerlink\" title=\"化感物质在环境中的定位和释放\"></a>化感物质在环境中的定位和释放</h2><p>包括化感物质在内的次级代谢产物在自然界中是很常见的。植物生长过程中各个部位都会释放出次级代谢产物。空中部分的挥发与淋溶、根系分泌、残体在土壤中的降解等方面相关的机制研究已经有很多了（下图）。雨水、雾滴及露水等直接的挥发和沉降也影响着植物空气部分化感物质的溶解性和释放，尤其是那些含有化感物质的腺毛等部位。毛滴（trichomes）是植物叶片、茎秆或花序表面的毛状附属物。这些毛滴能够有效防止食草动物的取食，也具有利用化感物质进行防御的潜在可能。作为 物理屏障的腺毛体具有能够产生参与化学防御体系的化感物质的特异性细胞。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/2.png\" class=\"\">\n\n<h1 id=\"次级代谢物的分类\"><a href=\"#次级代谢物的分类\" class=\"headerlink\" title=\"次级代谢物的分类\"></a>次级代谢物的分类</h1><p>可以根据碳骨架结构和功能基团对次级代谢物进行分类，但是最常用的分类系统是根据代谢物的生物遗传起源对代谢物进行分类（下图）。根据Walton、Brown及Rice等人的研究，可以将植物代谢物和化感物质分为三大类：酚类、萜类和生物碱。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/3.png\" class=\"\">\n\n<h2 id=\"酚类及其衍生物\"><a href=\"#酚类及其衍生物\" class=\"headerlink\" title=\"酚类及其衍生物\"></a>酚类及其衍生物</h2><p>植物多酚中的多类有机化合物都含有一个共同的结构，它们由一个芳香环组成，至少含有一个羟基，可能还有其他取代基。可以将植物酚类细分为酚酸类、黄酮类、二苯乙烯类、香豆素类、木质素类和单宁类。酚类是衍生自苯丙烷-乙酸酯生物合成途径的次级代谢产物。到目前为止天然的次级代谢产物中大约有8000种属于酚类。这些酚类物质在植物中有着多样的结构和物理化学功能。酚类在高等植物的防御中扮演者重要的作用，也是报道最多的。毒性的多样性导致酚类物质能够在细胞的多个位置发挥功能。植物结构基础的40%是由木质素和单宁酸组成的，而木质素和单宁酸就属于酚类。这些物质还能随着时间变化降解在根际土壤中，进而保证有足够多的丰度来完成合成、转化、释放及降解的生态循环。</p>\n<p>已经有大量关于酚类物质的化感机制研究的报道，这些研究发现酚类物质不仅会干扰多个植物关键酶，还会影响一些生理过程。如，肉桂酸（cinnamic）和苯甲酸（benzoic acids）会影响激素活性、膜的通透性、光合作用、呼吸作用及有机物的合成等（下图）。但是还没有实验数据表明酚类物质会影响细胞分化和基因翻译。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/4.png\" class=\"\">\n\n<p>包括苜蓿和三叶草在内的多年生豆科植物会在牧场施肥后产生化感作用。三叶草和苜蓿等也会有自毒作用。这些植物会抑制同种植物的生长。CArlsen等人研究三叶草的植物毒性后发现三叶草会释放黄酮类和糖苷类次级代谢物来抑制杂草生长。</p>\n<h2 id=\"萜类\"><a href=\"#萜类\" class=\"headerlink\" title=\"萜类\"></a>萜类</h2><p>萜类是一类特殊的化感物质，其生物合成通路有甲羟戊酸和异戊烯基焦磷酸两个途径。<code>terpene</code>或<code>terpenoid</code>来自希腊语<code>terpentin</code>，因为首次报道的<code>terpeniod</code>是从<code>turpentine</code>分离得到的。自然存在的大约24000个萜类化合物是由五个碳异戊二烯亚基组成的（下图）。这些压机它们通过常见的头对头或次要的头尾连接而连接在一起，但有些特征还在于头对中环闭合。根据拥有的异戊二烯亚基的相对数量，可以将萜类化合物分成半萜烯、单萜、倍半萜、二萜、三萜、四萜及多萜。由于萜类具有挥发性，因此它们在植物中具有多种功能，如信号分子、光保护剂、生殖激素及化感物质等。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/5.png\" class=\"\">\n\n<p>植物精油的主要成分单萜对植物生长和幼苗发芽具有很强的抑制作用。研究较好的是单萜1,4-cineole和1,8-cineole（下图）的生长抑制作用，而且是新型除草剂的有效候选物质。这些单萜尽管在结构上具有相似性，但是作用方式却不尽相同，如1,8-cineole影响有丝分裂的所有阶段，1,4-cineole会造成芽的生长异常。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/6.png\" class=\"\">\n\n<p>倍半萜及其相关的代谢物也是植物精油的组成成分，它们对植物具有植物毒性。倍半萜$\\beta$-石竹烯（下图）是大多数植物挥发物的有效成分，在很低浓度下就能抑制 甘蓝型油菜和萝卜种子的萌发和生长。葛根叶片中的黄嘌呤的几何异构体在极低浓度下便能抑制了许多小种子一年生阔叶和草的幼苗根生长。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/7.png\" class=\"\">\n\n<h2 id=\"生物碱\"><a href=\"#生物碱\" class=\"headerlink\" title=\"生物碱\"></a>生物碱</h2><p>生物碱是源自植物的杂环含氮碱性化合物（下图）。之所以被称为生物碱是因为它们的碱性本质。菊科、夹竹桃科、紫草科及豆科等四类植物能够合成生物碱。自古以来，由于它们独特的药理特性，因此一直被关注。生物碱是最大的次级代谢产物组类，迄今已鉴定出约20,000种化合物，代表了巨大的结构生物合成多样性。根据生物合成来源，可以将生物碱分成不同的类。如，吲哚生物碱衍生自色氨酸；吡咯嗪核生物碱衍生自鸟氨酸或精氨酸；喹喔啉生物碱衍生自赖氨酸。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/8.png\" class=\"\">\n\n<p>生物碱在植物中分布广泛。生物碱在植物中常见的报道是其参与了植物的防御反应，如食草动物取食、真菌等微生物侵染及临近植物干扰等情况。研究人员已评估了几种天然存在的吡咯烷核生物碱对人类和放牧牲畜的肝脏毒性，而且这些物质还能作为植物地上防御系统的一部分，阻止草食动物取食。然而，其他的生物碱在某些时候会抑制植物生长。野生烟草被食草动物取食或破坏后，其体内尼古丁产物增加；有趣的是尼古丁对一年生杂草具有化感活性。生物碱可以通过干扰DNA、酶活性、蛋白质生物合成及膜完整性等机制来抑制植物的生长。Lovett等研究了大麦能够从根部释放生物碱草胺和鱼藤碱（这两种物质对幼苗具有化感活性）增强防御反应的机制。Wink等研究发现豆类植物会合成喹唑烷生物碱，这种物质能够通过影响膜通透性和蛋白质合成来引发强烈的抑制作用。</p>\n<h2 id=\"苯并恶嗪类化合物的异羟肟酸：农学案例研究\"><a href=\"#苯并恶嗪类化合物的异羟肟酸：农学案例研究\" class=\"headerlink\" title=\"苯并恶嗪类化合物的异羟肟酸：农学案例研究\"></a>苯并恶嗪类化合物的异羟肟酸：农学案例研究</h2><p>苯酚衍生物异羟肟酸是次级代谢产物中具有生物活性的苯并噁嗪来化合物的基本骨架（下图）。大量研究表明苯并噁嗪类化合物具有抗菌、抗真菌、拒食及植物毒性等作用。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/9.png\" class=\"\">\n\n<p>玉米、黑麦及小麦等栽培作物中的异羟肟酸的化感活性有着广泛的研究，这种物质的含量与植物对昆虫和病原菌的抗性高度相关。DIMBOA（2,4-Dihydroxy-7-methoxy-2H-1,4-benzoxazin-3-one）和DIBOA（2,4-dihydroxy-2H-1,4-benzoxazin-3-one）以及相关微生物转化物质对许多阔叶杂草和生菜、小麦等作物具有很强的化感活性。这些物质通常是通过植物受伤部位释放到土壤中的，除此之外，收获后留下的植物残体降解后也会产生这类物质。DIBOA和DIMBOA的糖苷（以及它们各自的糖苷配基和黑麦（黑麦谷物）根残留物中释放的降解产物）是主要的化感活性成分（对阔叶作物、杂草及一些一年生草）。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/10.png\" class=\"\">\n\n<h1 id=\"化感物质的作用模型\"><a href=\"#化感物质的作用模型\" class=\"headerlink\" title=\"化感物质的作用模型\"></a>化感物质的作用模型</h1><p>化感研究中一个挑战是鉴定高等植物中化感物质的特定的作用模型。已经有很多的方法来研究化感物质对高等植物生长的直接影响并进一步研究其作用机制。但是这可能是比较困难的，因为某个化感物质潜在的靶标位点特异性的酶可能是多样性的，而且需要大量对催化位点和靶标位点结构相关的先验知识。在某些例子中，通过对植物生长和/或形态学的观察得到的化感物质作用的靶标位点可能不是真真正正的靶标位点。此外，某些通过体外测定进行的化感方式的研究的结果已经受到一定的质疑，而且更重要的是体外测定得到的结果和自然状态下的结果的差异性也受到了一定的质疑。</p>\n<p>需要注意的是在自然状态下化感物质的浓度通常是很低的，而且存留的时间很短，因此添加到土壤或环境中的单一化感物质或化感物质群的浓度是很难估计或测定的。因此，在一定浓度下需要进行适当的生物测定来评估化感物质对高等植物生长的影响。在许多例子中，需要使用多种生物测定方法评估化感物质对植物生长的影响。如，利用自然系统中的土壤和植物品种对得到统一可重复的数据结果是很重要的。一些研究人员已经利用准确敏感的的方法去评估天然/合成化感物质在农业化学系统中的作用模型，并得到了强大可靠的模型。一种典型的方法是利用多种分析条件来得到数据，如利用能够在一周内迅速生长并繁殖出更多苗的紫菜或浮萍等水生植物。利用浮萍的话只需要很低的浓度即可，另外一个好处是化感物质可以溶解在水中。此外，还有许多研究利用局部土壤和/或琼脂来评估化感物质对地上或地下部分的影响。但是这种验证方法需要更长的时间让植物达到评估条件。最后，一种用于评估植物残体降解影响的方法已经被用于评估植物残体的植物毒性。通过使用适当的检测方法进行筛选，已经鉴定并验证了一些不同的作用机制，如膜通透性、水分/营养吸收、呼吸作用、光合作用、蛋白质/核酸合成及生长调节等。</p>\n<h2 id=\"膜通透性\"><a href=\"#膜通透性\" class=\"headerlink\" title=\"膜通透性\"></a>膜通透性</h2><p>包括化感物质在内的次级代谢产物在浓度足够时能够调节膜通透性和膜的功能。暴露在这些代谢物中时可能会导致细胞内容物的泄露，进而通过凋亡或死亡导致细胞死亡。这个过程最终导致植物组织死亡及特定功能的丧失。如，几种存在化感效应的物质能够调节质膜的通透性。这些物质能够通过扩散或辅助运输机制很轻易地通过细胞膜。一旦膜通透性发生改变，钾离子通道就会受到影响，并且经常导致对氯离子的渗透性降低。Yoon等研究发现，单萜$\\alpha$-蒎烯能对质膜造成氧化应激，还会造成膜结构破坏，进而导致细胞死亡。Chain等也发现酚类物质浓度超过1mM后会增加风信子叶片组织的膜通透性。与未处理的对照相比，膜损伤通常在体外通过测量处理过的植物的相对电解质渗漏来评估。</p>\n<h2 id=\"水分和养分吸收\"><a href=\"#水分和养分吸收\" class=\"headerlink\" title=\"水分和养分吸收\"></a>水分和养分吸收</h2><p>为了进一步探究释放到环境中的化感物质的作用模式，需要关注植物根系的相对健康状态与功能完整性。在根中，化感物质通常影响其参与跨膜离子吸收的$Na^+/K^+$泵的活性。如，Abenavoli等研究发现肉桂酸、阿魏酸及对香豆酸等物质不仅会影响玉米的营养吸收，还会影响其膜上$H^+-ATP$ 酶活性。Franche等也报道了酚类化合物肉桂酸和阿魏酸会影响植物对P和Fe的吸收，从而抑制目标植物的生长。种植完甜菜后再种植大豆或玉米等对锌敏感的作物，甜菜产生的植物毒素能增强这些作物对锌的吸收。</p>\n<h1 id=\"呼吸作用\"><a href=\"#呼吸作用\" class=\"headerlink\" title=\"呼吸作用\"></a>呼吸作用</h1><p><code>Donor</code>植物释放的化感物质能够通过以下途径影响周围植物的呼吸作用进而影响其生长：线粒体中的电子转移、氧气吸收、CO$_2$产生及ATP产生过程中的氧化磷酸化。如，Abrahim等研究发现$\\alpha$蒎烯和柠檬烯会通过多种机制影响多种植物的下胚轴线粒体呼吸活性，这些机制分别是线粒体解偶联、细胞色素途径中的电子流和氧吸收。Czarnota等发现高粱根系分泌的抑制剂高粱油酮不仅会通过D1结合蛋白来影响Ⅱ型光合系统中电子的转运，还会通过解耦所植物中的电子流来抑制线粒体电子运输。与成熟植物相比，化感物质对幼苗生长和萌发的影响更大。相关研究认为化感物质抑制通过频繁破坏线粒体进行呼吸的能力来影响幼苗生长和萌发。</p>\n<h2 id=\"光合作用\"><a href=\"#光合作用\" class=\"headerlink\" title=\"光合作用\"></a>光合作用</h2><p>化感物质也能通过多种途径来影响植物的光合作用过程，如干扰PS Ⅰ和Ⅱ中的电子流、影响光合色素的合成及刺激光合色素的降解等。植物茎叶中光合色素含量降低会导致ATP的合成（主要发生在光合系统Ⅱ中）。对PS Ⅱ除草剂抑制剂具有抗性的在D1结合位点有多个改变的杂草同样也能抵抗高粱油酮对这个位点的影响。Poonpaiboonpipat等观察到从柠檬草中提取的精油能够显著降低稗草中叶绿素a和叶绿素b的浓度，从而减缓光合作用，最终影响植物生长。这些发现认为精油对叶绿素的合成具有直接影响。许多植物中都存在的化感物质柠檬醛不仅会通过呼吸作用、光合作用来影响幼苗的代谢，还会通过抑制生长、调节植物氧化状态来影响成熟植物。这个研究说明特定化感物质的作用模型是和植物组织、植物生长年龄相关的，而且还和植物吸收化感物质的位点（置）相关。</p>\n<h2 id=\"蛋白质-核酸合成及生长调节\"><a href=\"#蛋白质-核酸合成及生长调节\" class=\"headerlink\" title=\"蛋白质/核酸合成及生长调节\"></a>蛋白质/核酸合成及生长调节</h2><p>化感物质能够靶向调控能够影响植物生长的关键机制来影响临近植物的生长。这些特定的机制包括DNA插入、抑制DNA聚合酶I、抑制蛋白质合成等。酚类化感物质也能干扰核酸的形成、胞内代谢及基因表达。Li等研究发现阿魏酸和肉桂酸对总蛋白质合成有不利影响。<code>Donor</code>植物产生的化感物质能够调节靶标植物防御基因的表达。如，水稻与稗草在一起时，水稻中参与酚类物质生物合成的酶的合成会上调。稗草存在时，幼苗期的水稻体内的化感物质momilolactone的含量会增加。这表明植物竞争或化感导致的胁迫会影响靶标植物合成防御物质的能力。通过提高化感物质的含量来衡量的话，化感响应可能在数小时至数天之内发生。Yang等的研究发现类似的酚类物质还可以氧化高等植物细胞伸长所必须的激素：氧化吲哚-3-乙酸。</p>\n<h1 id=\"Donor植物体内化感物质的定位和运输\"><a href=\"#Donor植物体内化感物质的定位和运输\" class=\"headerlink\" title=\"Donor植物体内化感物质的定位和运输\"></a>Donor植物体内化感物质的定位和运输</h1><p>植物有特定的组织部位来完成次级代谢物的合成并向环境中进行释放，这些特定的部位包括茎部的气孔和腺毛；根部的根毛、边缘细胞、表皮及周皮。根表皮的单个细胞延伸物—根毛在根-土壤界面复杂的互作中有着重要作用。根毛能够分泌离子、氨基酸、生长调节剂及化感物质等低/高分子量的有机物（下图）。一些物质能够直接在根毛中进行合成然后直接分泌到环境中，如<em>Echium plantagineum</em> L.幼苗直接分泌的高梁素和紫草素类。最近有研究报道了强性入侵杂草<em>E. plantagineum</em> L. 活根的外周皮分泌的红色生物活性萘醌；随着时间的流逝，这种植物会在主根的外皮中积累这些抗菌和植物毒性的萘醌，并且还会以红色液滴的形式从幼苗的根毛中释放这些分子。共聚焦显微荧光法加速了类似的定位研究。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/11.png\" class=\"\">\n\n<p>在茎部，化感物质能够通过叶片表面的腺毛进行直接释放，也会先转运到气孔然后再进行分泌。猫薄荷腺体分泌的21种挥发性化合物能够抑制种子的萌发及幼苗的生长（用悬浮在发芽幼苗附近但不与幼苗接触的叶子进行测定时的结果）。这表明挥发对于植物生长过程的扩散和抑制很重要。能够强烈抑制水芹生长的 2-（2-乙氧基乙氧基）-乙醇、异木香烯和卡丹烯这三种物质不仅能够在挥发物和甲醇提取液中检测到，还能在水提液中检测到。Eom等研究多年生地被植物后发现猫薄荷的叶面挥发物能够显著抑制水芹及常见的路边杂草的生长。猫薄荷产生的亲脂性或挥发性物质可以直接通过脂质双层扩散，而更多的极性化合物则需要专门的膜结合转运蛋白来协助转运过程。</p>\n<p>大多数化感物质一旦在植物组织中被合成并积累，便会被分泌释放导到植物体外，从而有效避免自毒；或是存储在液泡、膜状小囊泡或储存器官中。初次之外，这些化感物质还会通过扩散或特定的转运蛋白转运到植物的其他组织中（下图）。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/10.png\" class=\"\">\n\n<h2 id=\"化感物质的根系分泌\"><a href=\"#化感物质的根系分泌\" class=\"headerlink\" title=\"化感物质的根系分泌\"></a>化感物质的根系分泌</h2><p>化感物质从根系分泌最常见的方式是通过根系分泌物进行分泌释放，尤 尤其是通过根毛分泌。根—土壤界面或根际含有来自根毛分泌、植物残体降解及微生物相关的各种浓度的有机物，因此根际被认为是土壤中活性最强的部位。次级代谢产物的变化使得根际成为及其复杂的环境。硅胶微探针管和固相根区提取技术的发展为精确地描述土壤中活植物根系释放的非极性到中等极性的化感物质提供了机会。硅胶微针管插入到根表周围的土壤中，极少的极性分子附着在管子的硅胶上，后续的溶解提取能够将这些极性分子选择性地清楚掉。</p>\n<p>根系分泌物的组成极为复杂，通常是含碳物质，如多糖、氨基酸、有机酸、酚类、生物碱、单宁酸、萜类、黄酮类、生长调节剂、维生素、营养物质，还有离子、水、电解质等无碳物质。化感物质一旦被释放，就会经受土壤中的物理、化学及生物学变化。因此，一个化感物质的生物活性在达到潜在靶标之前可能会被微生物的降解作用、氧化等影响，甚至还会通过与土壤颗粒不可逆结合而固定。</p>\n<p>Wseton等描述了根系分泌的诸多机制，如扩散、囊泡运输及离子通道转运等。下面将进行简要描述。</p>\n<h2 id=\"扩散\"><a href=\"#扩散\" class=\"headerlink\" title=\"扩散\"></a>扩散</h2><p>糖、氨基酸、羧酸及酚类等低分子量的有机物在活根表皮细胞和土壤之间通过浓度梯度进行释放。这种类型的分泌释放取决于根细胞的生理状态和有机物的极性。双层疏水的质膜通常通过扩散促进亲脂性化合物的运输。</p>\n<h2 id=\"囊泡运输\"><a href=\"#囊泡运输\" class=\"headerlink\" title=\"囊泡运输\"></a>囊泡运输</h2><p>高分子量的有机化合物的转运通过根帽分泌细胞形成高尔基囊泡介导完成。这些细胞随后从根表面退化或脱落。在膜结合多核糖体水平合成的酸性磷酸酶和过氧化物酶等酶通过矢状分离进入内质网管腔。囊泡的这种胞吐作用依赖于细胞内和细胞外的钙水平。</p>\n<h2 id=\"离子通道\"><a href=\"#离子通道\" class=\"headerlink\" title=\"离子通道\"></a>离子通道</h2><p>某些植物在经受胁迫时，柠檬酸、苹果酸及草酸等物质在高浓度时是不能通过简单的扩散完成分泌的。相关研究利用离子通道拮抗剂等方法发现表皮根细胞质膜上的离子通道参与了小麦和玉米体内苹果酸和柠檬酸的释放。</p>\n<h1 id=\"影响植物化感物质释放的因素\"><a href=\"#影响植物化感物质释放的因素\" class=\"headerlink\" title=\"影响植物化感物质释放的因素\"></a>影响植物化感物质释放的因素</h1><p>植物释放到根际等环境中的化感物质的浓度和性质取决于植物本身和其他生物/非生物因素（下图）。植物因素包括植物品种（栽培种）、植物年龄、组织类型等。调节化感物质合成和释放的环境因素有病原菌的侵染；物理损伤；干旱、温度、土壤理化性质、水流、营养状态、灌溉、竞争及紫外辐射等非生物因素。气候变化也可能影响化感物质的合成，这也成为了近几年的研究焦点。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/13.png\" class=\"\">\n\n<p>在分类学上相近的物种并不总是释放相似的化感物质或相似浓度的代谢物到环境中。极端环境下化感物质的释放和扩散与化感物质的化学性质相关，如分子量、极性和浓度等。化感物质通常会和相关的代谢物共同进行释放。需要注意的是，这些代谢物在植物中具有多种功能。一种化合物还可以保护其寄主免受几种不相关竞争者或取食者的干扰。如，酚类物质能够刺激或抑制真菌；特定的真菌利用酚氧化酶活性去代谢、减轻高等植物产生的酚类化合物的毒性。</p>\n<p>评估相关代谢物的化感潜力的方法的选择和使用必须要小心注意。多种代谢物组成的混合物可能会严重影响代谢物的化感活性。活性可能与复杂的分子相互作用有关，包括协同作用、拮抗作用和在其他代谢物存在下的增强作用。为了评估化感物质的生物学活性，剂量/响应研究对评估化感物质的化感活性是必须的。如果研究时使用的浓度显著高于其在土壤中的浓度，那这个研究结果是很难解释该物质的化感活性的。此外，如果研究时使用的浓度高于其在环境中的真实浓度，那该化感物质在该浓度下的作用模式也可能不同。</p>\n<h1 id=\"化感物质对根际、近邻植物及其他生物的影响\"><a href=\"#化感物质对根际、近邻植物及其他生物的影响\" class=\"headerlink\" title=\"化感物质对根际、近邻植物及其他生物的影响\"></a>化感物质对根际、近邻植物及其他生物的影响</h1><p>根际是植物根系周围很小的一块区域，生存着大量的微生物。 植物根系不仅会与临近植物根系发生竞争，还会和真/细菌等微生物发生竞争。很难通过大小对根际进行衡量，但是可以根据其物理化学性质进行划分。根际从根开始向外，化学物质的浓度往往呈现递降趋势。Newman等研究后发现典型的高等植物会将光合作用固定的10-40%的碳以有/无机物的形式释放到根际。根部产生的物质被统称为<code>rhizodeposits</code>，包括分泌物、粘液，脱落边缘细胞及根冠细胞。根系分泌物中的大多数物质都是低分子量的物质。</p>\n<p>可控条件下对根际化感干扰的研究已经很成熟。但是，在田间条件下研究不同品种的植物竞争过程中发生的化感对生长的抑制的研究还比较困难。近些年关于根系理化性质的研究取得了新的进展。根际中的根系与微生物的互作时刻发生着。复杂的土壤环境使得相关研究变得较为苦难。越来越多的证据表明根系分泌物能够促进临近植物的交流，共生与病原生物通过生物和物理相互作用。根系分泌物能够调节根际微生物的共生关系、保护植物免受食草动物的取食、调节土壤的理化性质、影响其他植物的生长。最近的研究表明植物产生的次级代谢产物能够抑制入侵植物根际微生物介导的反硝化作用，从而限制入侵植物的生长。根系及其分泌物产生的静电和趋化响应能够促进植物—微生物之间有效的共生。</p>\n<p>根系分泌物会通过吸引对植物生长有正向影响或能够直接影响植物代谢的微生物来刺激植物的生长。根系分泌物中的化感物质对临近物质的影响取决于化感物质在根系分泌物中的浓度、相对分泌速率、靶标植物的生长阶段及生物/非生物条件。需要注意的是，如果化感物质释放的量足够而且在环境中存在的时间 足够长的话，这些化感物质只会表现出负向干扰效应。Weidenhamer研究发现植物生长阶段、生物量、密度等因素是影响释放到根际的化感物质的可利用性的关键因素，因此在进行化感物质的相关实验时，需要考虑这些因素。受体植物密度更高时也就需要供体植物释放出更高浓度的化感物质。</p>\n<p>化感物质从植物组织中释放后在达到靶标植物之前会受到诸多因素的影响，如淋溶、氧化、生物降解、临近植物吸收等。生物、化学等刺激下分泌释放的根系分泌物也可能对根际细菌具有抗菌活性。植物会通过可分离的边界细胞来抵抗根际真/细菌的侵染，位于根尖的这些细胞会释放出化感物质在内的大量具有生物活性的物质。如，新出出芽的植物会利用边界细胞产生的物质来协助植物进行防御，尤其是在田间根系还没有完全发育完善前。根部的边界细胞产生的胞外DNA和蛋白质会成为土传病害的”陷阱“，这些土传病原菌会受到化感物质的负向调控。燕麦产生的<code>avenicin</code>能抑制相关的病原微生物。Osbourn实验室研究发现燕麦产生的三萜物质对土壤微生物具有很好的防御效果，而且在植物应对非生物胁迫中也有着重要的作用。</p>\n<h2 id=\"对化感物质的耐受性\"><a href=\"#对化感物质的耐受性\" class=\"headerlink\" title=\"对化感物质的耐受性\"></a>对化感物质的耐受性</h2><p>某些植物对特定的植物毒素很敏感，或者是进化出特有的机制来防御自身或其他植物产生的化感物质。能够产生并吸收化感物质的植物通常有着较强的抗毒能力，作用机制包括主动隔离膜结合结构、液泡或囊泡中的毒素、吸收后立即分泌化合物或通过一级和二级代谢改变其化学结构。如，<em>Polygonella myriophylla</em>  (Small) Horton能够以熊果苷的形式释放对苯二酚和苯醌，以此来避免自毒发生。超过百万年的进化使得某些植物具备了耐受或代谢植物毒素的能力。那些不经常遇到植物毒素的物种不太可能产生抗药性。最近的一个假说认为那些成功定殖繁育的入侵性杂草会通过释放特有的化感物质来负向影响本土植物的生长，这些本土植物对那些入侵性杂草产生的化感物质的代谢能力较弱甚至是没有。</p>\n<h1 id=\"植物-土壤提取物中化感物质的代谢研究\"><a href=\"#植物-土壤提取物中化感物质的代谢研究\" class=\"headerlink\" title=\"植物/土壤提取物中化感物质的代谢研究\"></a>植物/土壤提取物中化感物质的代谢研究</h1><p>陆地生态学中研究得最好的领域是根际生物化学互作。尽管存在一定的挑战性，但是代谢检测和鉴定技术的发展极大地加速了对复杂系统/互作关系的研究，进而解释化感物质调节及其在生态系统功能中的相关科学问题。代谢profiling是研究复杂植物互作的有利工具。通过提取植物组织并评估代谢组，可以在特定时间点评估生物系统的功能状态。</p>\n<p>Weston等利用一种新的代谢组学方法来研究感兴趣的靶标物质，如某个化感物质处理下的生物学系统响应。通过代谢profiling，能够为研究根际生物在化感物质处理后的生物化学状态。代谢组学还可以和转录组、蛋白组等组学相结合来研究感兴趣的靶标物质的生物合成通路。特定化感物质的代谢profiling可以用于研究入侵性杂草的潜在机制。Skoneczny等利用LS-MS技术，通过田间试验与室内试验研究发现，与<em>Echium vulgare</em> L.相比，入侵性更强的<em>E. plantagineum</em> L. 体内的吡咯嗪核生物碱和氮氧化物含量更高。</p>\n<p>代谢组是一种高通量的方法，分析大量样本时能够在短时间内得到结果。这个领域发展出很多新的分析平台，如配备高分辨率质谱的气相和液相，靶向代谢组和非靶向代谢组等。最近的三重四极杆MS或敏感离子阱质谱增强了分析的精度和准度，能够对复合物中低量的上千种具有生物活性的物质进行注释。代谢profiling也被用于研究植物根际。有研究利用这种方法研究了三叶草向根际释放的多种黄酮类物质。也有研究利用UPLC QToF-MS来研究植物根系中15余种萘醌和紫草素对植物防御和化感的影响。使用LC/MS技术也成功地回收了一些更持久的化感物质，包括在受侵染的土壤中含量在ppm级别的乙酰基紫草素和紫草素。越来越多的研究利用代谢组学研究代谢物的动态变化和生物合成通路。这些方法的使用毫无疑问会增强我们对土壤环境中化感物质的研究和认识。</p>\n<p>通过代谢组学分析后，尝试处理大量质谱数据并随后表征代谢物。不可能鉴定到复合物中所有的代谢成分。高通量的计算和分析工具能够在一定程度上有效解决这些问题，如数据转换、特征值检测、归一化及质量控制等。将存在的化合物的分子特征归一化（用于基线变化），并与可用的结构库对齐。天然产物比对最常用的库是METLIN库。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>研究复杂的植物—植物、植物—微生物互作的化感是植物科学研究中一个具有活力的领域。本领域相关的研究人员和论文数量已经呈现指数级增长了。土壤学家、化学家、生态学家、遗传学家及分子生物学家的紧密合作将会极大地促进对调控高等植物中化感物质的因素的研究，不仅如此，还会促进这些代谢物对入侵生态学、植物竞争、植物干扰及作物产量等研究的发展。代谢组学新的分析技术的使用及其与其他组学的结合将有利于鉴定新的化感物质及其生物合成通路，甚至是气候对化感物质的影响等。进一步理解化感物质在植物防御中的作用将有助于我们开发管理作物、限制入侵性杂草的扩张、保护本地植物，甚至是从这些化感物质中找到潜在的新型农药。</p>\n<p>越来越多的研究开始担忧除草剂带来的影响，对天然产物中的农药的开发的呼吁声不断。包含化感物质在内的新型植物代谢物的鉴定为开发基于生物源的农药提供了材料来源（通过提供合成化合物的互补结构或辅助开发新的分子靶位）。</p>\n<img src=\"/2021/01/19/%E5%8C%96%E6%84%9F%E5%92%8C%E5%8C%96%E6%84%9F%E7%89%A9%E8%B4%A8%E5%9C%A8%E6%A4%8D%E7%89%A9%E9%98%B2%E5%BE%A1%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/1.png\" class=\"\">\n\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#103;&#x31;&#x31;&#x37;&#52;&#50;&#51;&#x40;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#x6c;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#x37;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n</blockquote>"},{"title":"使用ImageJ计算叶片面积","abbrlink":"da044cd8","date":"2021-01-30T09:59:40.000Z","_content":"\n后续要扫描大量的水稻叶片然后计算病斑数量，之前没有使用过ImageJ这个软件，今天下午学了一下，成功get扫描一个图片中多个叶片面积的方法。\n\n<!-- more -->\n\n# 软件安装\n\n可以从官网下载安装（[点击下载](https://imagej.nih.gov/ij/download.html)），但是网速感人，我把软件放在坚果云上面了，高速下载（[点击下载](https://www.jianguoyun.com/p/DXXP9zgQkOqUCRjesN8D )）。下载后解压，然后双击就能打开软件：\n\n{% asset_img 1.png %}\n\n# 准备图片\n\n准备扫描的图片需要注意的是叶片不能和接触到边界，不然不能计算面积。\n\n{% asset_img 2.png %}\n\n# 导入图片\n\nFile→Open...即可打开图片：\n\n{% asset_img 3.png %}\n\n{% asset_img 4.png %}\n\n# 处理图片\n\n导入的图片需要转换成`8-bit`格式：\n\n{% asset_img 5.png %}\n\n转换后面的图片是这样的：\n\n{% asset_img 6.png %}\n\n# 改变阈值\n\n改变图片的颜色阈值，让叶片与背景分开：\n\n{% asset_img 7.png %}\n\n{% asset_img 8.png %}\n\n# 计算面积\n\n设置完上述这些参数后，依次点击Analyze→Analyze Particles，然后在弹窗中设置参数：\n\n{% asset_img 9.png %}\n\n设置完成后点击`OK`即可：\n\n{% asset_img 10.png %}\n\n左边的弹窗是总面积数，右边的弹窗是每个叶片的面积。单位mm$^2$。\n\n保存结果即可。\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/使用ImageJ计算叶片面积.md","raw":"---\ntitle: 使用ImageJ计算叶片面积\ntags: 技能\ncategories: 技能\nabbrlink: da044cd8\ndate: 2021-01-30 17:59:40\n---\n\n后续要扫描大量的水稻叶片然后计算病斑数量，之前没有使用过ImageJ这个软件，今天下午学了一下，成功get扫描一个图片中多个叶片面积的方法。\n\n<!-- more -->\n\n# 软件安装\n\n可以从官网下载安装（[点击下载](https://imagej.nih.gov/ij/download.html)），但是网速感人，我把软件放在坚果云上面了，高速下载（[点击下载](https://www.jianguoyun.com/p/DXXP9zgQkOqUCRjesN8D )）。下载后解压，然后双击就能打开软件：\n\n{% asset_img 1.png %}\n\n# 准备图片\n\n准备扫描的图片需要注意的是叶片不能和接触到边界，不然不能计算面积。\n\n{% asset_img 2.png %}\n\n# 导入图片\n\nFile→Open...即可打开图片：\n\n{% asset_img 3.png %}\n\n{% asset_img 4.png %}\n\n# 处理图片\n\n导入的图片需要转换成`8-bit`格式：\n\n{% asset_img 5.png %}\n\n转换后面的图片是这样的：\n\n{% asset_img 6.png %}\n\n# 改变阈值\n\n改变图片的颜色阈值，让叶片与背景分开：\n\n{% asset_img 7.png %}\n\n{% asset_img 8.png %}\n\n# 计算面积\n\n设置完上述这些参数后，依次点击Analyze→Analyze Particles，然后在弹窗中设置参数：\n\n{% asset_img 9.png %}\n\n设置完成后点击`OK`即可：\n\n{% asset_img 10.png %}\n\n左边的弹窗是总面积数，右边的弹窗是每个叶片的面积。单位mm$^2$。\n\n保存结果即可。\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"使用ImageJ计算叶片面积","published":1,"updated":"2021-02-02T07:38:44.102Z","_id":"ckwbqwcl0004yr0g041r89wih","comments":1,"layout":"post","photos":[],"link":"","content":"<p>后续要扫描大量的水稻叶片然后计算病斑数量，之前没有使用过ImageJ这个软件，今天下午学了一下，成功get扫描一个图片中多个叶片面积的方法。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><p>可以从官网下载安装（<a href=\"https://imagej.nih.gov/ij/download.html\">点击下载</a>），但是网速感人，我把软件放在坚果云上面了，高速下载（<a href=\"https://www.jianguoyun.com/p/DXXP9zgQkOqUCRjesN8D\">点击下载</a>）。下载后解压，然后双击就能打开软件：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/1.png\" class=\"\">\n\n<h1 id=\"准备图片\"><a href=\"#准备图片\" class=\"headerlink\" title=\"准备图片\"></a>准备图片</h1><p>准备扫描的图片需要注意的是叶片不能和接触到边界，不然不能计算面积。</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/2.png\" class=\"\">\n\n<h1 id=\"导入图片\"><a href=\"#导入图片\" class=\"headerlink\" title=\"导入图片\"></a>导入图片</h1><p>File→Open…即可打开图片：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/3.png\" class=\"\">\n\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/4.png\" class=\"\">\n\n<h1 id=\"处理图片\"><a href=\"#处理图片\" class=\"headerlink\" title=\"处理图片\"></a>处理图片</h1><p>导入的图片需要转换成<code>8-bit</code>格式：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/5.png\" class=\"\">\n\n<p>转换后面的图片是这样的：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/6.png\" class=\"\">\n\n<h1 id=\"改变阈值\"><a href=\"#改变阈值\" class=\"headerlink\" title=\"改变阈值\"></a>改变阈值</h1><p>改变图片的颜色阈值，让叶片与背景分开：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/7.png\" class=\"\">\n\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/8.png\" class=\"\">\n\n<h1 id=\"计算面积\"><a href=\"#计算面积\" class=\"headerlink\" title=\"计算面积\"></a>计算面积</h1><p>设置完上述这些参数后，依次点击Analyze→Analyze Particles，然后在弹窗中设置参数：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/9.png\" class=\"\">\n\n<p>设置完成后点击<code>OK</code>即可：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/10.png\" class=\"\">\n\n<p>左边的弹窗是总面积数，右边的弹窗是每个叶片的面积。单位mm$^2$。</p>\n<p>保存结果即可。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#109;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#109;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>后续要扫描大量的水稻叶片然后计算病斑数量，之前没有使用过ImageJ这个软件，今天下午学了一下，成功get扫描一个图片中多个叶片面积的方法。</p>","more":"<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><p>可以从官网下载安装（<a href=\"https://imagej.nih.gov/ij/download.html\">点击下载</a>），但是网速感人，我把软件放在坚果云上面了，高速下载（<a href=\"https://www.jianguoyun.com/p/DXXP9zgQkOqUCRjesN8D\">点击下载</a>）。下载后解压，然后双击就能打开软件：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/1.png\" class=\"\">\n\n<h1 id=\"准备图片\"><a href=\"#准备图片\" class=\"headerlink\" title=\"准备图片\"></a>准备图片</h1><p>准备扫描的图片需要注意的是叶片不能和接触到边界，不然不能计算面积。</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/2.png\" class=\"\">\n\n<h1 id=\"导入图片\"><a href=\"#导入图片\" class=\"headerlink\" title=\"导入图片\"></a>导入图片</h1><p>File→Open…即可打开图片：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/3.png\" class=\"\">\n\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/4.png\" class=\"\">\n\n<h1 id=\"处理图片\"><a href=\"#处理图片\" class=\"headerlink\" title=\"处理图片\"></a>处理图片</h1><p>导入的图片需要转换成<code>8-bit</code>格式：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/5.png\" class=\"\">\n\n<p>转换后面的图片是这样的：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/6.png\" class=\"\">\n\n<h1 id=\"改变阈值\"><a href=\"#改变阈值\" class=\"headerlink\" title=\"改变阈值\"></a>改变阈值</h1><p>改变图片的颜色阈值，让叶片与背景分开：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/7.png\" class=\"\">\n\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/8.png\" class=\"\">\n\n<h1 id=\"计算面积\"><a href=\"#计算面积\" class=\"headerlink\" title=\"计算面积\"></a>计算面积</h1><p>设置完上述这些参数后，依次点击Analyze→Analyze Particles，然后在弹窗中设置参数：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/9.png\" class=\"\">\n\n<p>设置完成后点击<code>OK</code>即可：</p>\n<img src=\"/2021/01/30/%E4%BD%BF%E7%94%A8ImageJ%E8%AE%A1%E7%AE%97%E5%8F%B6%E7%89%87%E9%9D%A2%E7%A7%AF/10.png\" class=\"\">\n\n<p>左边的弹窗是总面积数，右边的弹窗是每个叶片的面积。单位mm$^2$。</p>\n<p>保存结果即可。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#x69;&#x61;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#x32;&#x33;&#x40;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#109;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#52;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#109;&#97;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"听他十年，成长十年","abbrlink":"2b23a230","date":"2020-01-07T10:12:52.000Z","_content":"\n《[蓝莲花](https://v.qq.com/x/search/?q=蓝莲花许巍&stag=0&smartbox_ab=)》—许巍\n\n------\n\n“又见小蓝哥”。她在舍友空间说说下评论到。\n\n------\n\n<!-- more -->\n\n这双陪伴我一年多的蓝色跑鞋，后跟已经磨破露出海绵。蓝色的皮肤衣已经掉线了。蓝色的跑步短裤已经变形了。田径场上总是有个浑身蓝色的人。于是，有个姑娘叫我小蓝哥。\n\n是许巍，才有了《蓝莲花》；听了他的歌，十年来我整个人都在改变。\n\n我心里的蓝莲花和西藏的蓝天一样。\n\n{% asset_img 1.jpeg %}\n\n------\n\n# 缘起\n\n第一次听到许巍这个名字，是十年前，我那时候初一下学期，翻看语文老师的QQ日志，看到“许巍”这两个字，“春春曾至爱许巍”。我那时候用着一个手写屏的手机，有张512M的内存卡，托同学从网吧帮我下载了许巍的一些歌。回家一个人，放的是《[完美生活](http://music.163.com/song?id=167955&userid=89683798)》。第一句就是“青春的岁月，我们身不由己，只因这心中燃烧的梦想”。在之后，听到了《[晴朗](http://music.163.com/song?id=167871&userid=89683798)》。“一切就像是电影，比电影还要精彩。”我忘记了是什么时候听到《[蓝莲花](http://music.163.com/song?id=168091&userid=89683798)》。不管怎么样，这首歌成了我的最爱，以至于我骑车进藏的路上都是蓝莲花在陪伴。\n\n{% asset_img 2.jpg %}\n\n------\n\n# 《故乡》.《家》\n\n那时候家里没电视机，伯伯家的电视机里面播放绿箭口香糖的广告，背景音乐是“我在远方，很多的岁月，总是会想起你，给予我的一切”。我一直想找这首歌，没找到，直到有天听到了许巍的《[家](http://music.163.com/song?id=167751&userid=89683798)》。“如家我对自己故乡，像来往匆匆的过客”，是无数人的真实写照。有人给我说“能给你家的感觉的那个人在哪，家就在哪。”在我内心深处，家是那个地方，是爸妈家人和那间小房子，是我十几年青春所在，是那些荒山，是那些土地瓜。如今说到回家，我很期待。回家的路上，我总是会听《[故乡](http://music.163.com/song?id=167925&userid=89683798)》。网易云的这首歌下面，有很多有意思的评论。“电吉他一响起我的心都碎了”。“你在我的心里是故乡，是一个男人对自己所爱的人最高的评价”。你在我心里永远是故乡。几度不敢听这首歌，一听就会流泪。尽管习惯了城市的便捷生活，我还是喜欢家里的东西，本地面条、包谷饭、酸菜红豆汤、炸洋芋....这学期开学来在学校附近发现一家老乡开的饭店，点了一碗红豆酸汤面，是老家的味道。差不多，这是我一个人生活的第十年，初中姐姐在县里读高中，爸妈都外出打工了。我一个人在家。自己做饭吃，很多时候就是煮“活油面”（一点猪油加点开水葱花调料），尽管如此我还是很喜欢吃面条。我对家和故乡有着自己的理解的感情，这和我的经历是密不可分的。我对外面的世界充满向往，我对故乡满是回望。\n\n{% asset_img 3.jpeg %}\n\n------\n\n# 许巍在我前面20m\n\n2015年12月12日，昆明，同德广场。许巍作为嘉宾献唱。那天中午我就赶过去了，没有得到内场的邀请券，只能在栏杆外面。舞台，就在20m开外。我带了很大的一面蓝莲花旗子。遗憾的是没有带旗杆，其他几个有旗杆的旗子都被邀请进内场了。等了差不多快8个小时，没有吃饭在等着。终于等到许巍的出现了。我是茫茫人海中的一个。我知道一定会有《蓝莲花》。\n\n“没有什么能够阻挡，你对自由的向往。”\n\n这是我第一次见许巍，尽管没有看清楚乐队。我还是很欣喜。\n\n{% asset_img 4.png %}\n\n![img](听他十年，成长十年/5.jpg)\n\n------\n\n# 抑郁之后的超脱\n\n关于许巍的抑郁症，我记得最清楚的是高中的时候，去旧书店翻出了一本在记忆中都快模糊了的杂志，里面有篇文章是写许巍的抑郁症的。他熬过抑郁症的更多细节我无从得知，我记得很深刻的是他的妻子在他抑郁期间一直陪着他。他妻子是军队文职，两个人走在街头的时候，许巍一身摇滚范，长发、皮衣、牛仔裤；他妻子一身军装。对的人就是对的人。在抑郁症期间，是他妻子和朋友陪他度过。也许是因为这个，他在《故事》的开头便唱到“也许是出发太久，我竟然迷失在旅途，我最亲爱的朋友，你让我再一次醒来。 ”在抑郁症之前，许巍的歌是真的摇滚。《两天》里的“我只有两天，一天用来出生，一天原来死亡；我只有两天，一天用来希望，一天用来绝望。”在抑郁症之后，歌曲的风格渐渐变了。“故事里始终都有爱，无论有什么样的艰难曲折”\n\n------\n\n# 此时此刻\n\n2012年12月12日，许巍发布了全新专辑《此时此刻》。专辑里有10首歌。我比较喜欢《喜悦》和《爱情》。“心中升起的喜悦，总在归乡的旅程，当家门在开启时，这世界变得温暖”。出门在外，《家》里那句“如今我对自己故乡像来往匆匆的过客”；每次在回家路上都听《喜悦》。每次离开家，都会听《故乡》。对我来说，“家”这个概念很复杂，是浙江台州，爸妈在那里打工；是姐姐读书的城市；是昆明，我在这玩；也是老家，年底一家人匆匆忙忙聚上那么十来天，春节过后，阳光温暖的春天，又双叒叕得离开。都说不知从何时起，故乡只有冬，再没有春夏秋。或许有一天，连冬都不会有了。不过，心若在，家就在。\n\n都说《爱情》这首歌是许巍专门为他妻子写的。刚好5′20″。当年被田震唱遍大江南北的《执着》，也是许巍写给他妻子的。“我为你歌唱，感谢你的恩典，你在我生命里，在岁月深处 你是美丽天空……这恩赐对我的震撼，如我初见大海”。我感受过山水、荒原、雪山，唯独没见过大海。《曾经的你》里面那句“每一次难过的时候，就独自看一看大海”。我很想去看海。﻿\n\n![img](听他十年，成长十年/6.jpeg)\n\n------\n\n# 无尽光芒\n\n去年12月26日，许巍团队发布了最新专辑《无尽光芒》。﻿\n\n![img](https://upload-images.jianshu.io/upload_images/3454743-34729f042744c53b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50)\n\n------\n\n突然写不下去了。\n\n------\n\n脚下有路，眼里有光。\n\n心中有爱，梦里有你。\n\n余生，像他一样永葆赤子之心。\n\n{% asset_img 7.png %}\n\n2018年3月14日  夜  于宿舍\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/听他十年，成长十年.md","raw":"---\ntitle: 听他十年，成长十年\ntags: 杂文\ncategories: 杂文\nabbrlink: 2b23a230\ndate: 2020-01-07 18:12:52\n---\n\n《[蓝莲花](https://v.qq.com/x/search/?q=蓝莲花许巍&stag=0&smartbox_ab=)》—许巍\n\n------\n\n“又见小蓝哥”。她在舍友空间说说下评论到。\n\n------\n\n<!-- more -->\n\n这双陪伴我一年多的蓝色跑鞋，后跟已经磨破露出海绵。蓝色的皮肤衣已经掉线了。蓝色的跑步短裤已经变形了。田径场上总是有个浑身蓝色的人。于是，有个姑娘叫我小蓝哥。\n\n是许巍，才有了《蓝莲花》；听了他的歌，十年来我整个人都在改变。\n\n我心里的蓝莲花和西藏的蓝天一样。\n\n{% asset_img 1.jpeg %}\n\n------\n\n# 缘起\n\n第一次听到许巍这个名字，是十年前，我那时候初一下学期，翻看语文老师的QQ日志，看到“许巍”这两个字，“春春曾至爱许巍”。我那时候用着一个手写屏的手机，有张512M的内存卡，托同学从网吧帮我下载了许巍的一些歌。回家一个人，放的是《[完美生活](http://music.163.com/song?id=167955&userid=89683798)》。第一句就是“青春的岁月，我们身不由己，只因这心中燃烧的梦想”。在之后，听到了《[晴朗](http://music.163.com/song?id=167871&userid=89683798)》。“一切就像是电影，比电影还要精彩。”我忘记了是什么时候听到《[蓝莲花](http://music.163.com/song?id=168091&userid=89683798)》。不管怎么样，这首歌成了我的最爱，以至于我骑车进藏的路上都是蓝莲花在陪伴。\n\n{% asset_img 2.jpg %}\n\n------\n\n# 《故乡》.《家》\n\n那时候家里没电视机，伯伯家的电视机里面播放绿箭口香糖的广告，背景音乐是“我在远方，很多的岁月，总是会想起你，给予我的一切”。我一直想找这首歌，没找到，直到有天听到了许巍的《[家](http://music.163.com/song?id=167751&userid=89683798)》。“如家我对自己故乡，像来往匆匆的过客”，是无数人的真实写照。有人给我说“能给你家的感觉的那个人在哪，家就在哪。”在我内心深处，家是那个地方，是爸妈家人和那间小房子，是我十几年青春所在，是那些荒山，是那些土地瓜。如今说到回家，我很期待。回家的路上，我总是会听《[故乡](http://music.163.com/song?id=167925&userid=89683798)》。网易云的这首歌下面，有很多有意思的评论。“电吉他一响起我的心都碎了”。“你在我的心里是故乡，是一个男人对自己所爱的人最高的评价”。你在我心里永远是故乡。几度不敢听这首歌，一听就会流泪。尽管习惯了城市的便捷生活，我还是喜欢家里的东西，本地面条、包谷饭、酸菜红豆汤、炸洋芋....这学期开学来在学校附近发现一家老乡开的饭店，点了一碗红豆酸汤面，是老家的味道。差不多，这是我一个人生活的第十年，初中姐姐在县里读高中，爸妈都外出打工了。我一个人在家。自己做饭吃，很多时候就是煮“活油面”（一点猪油加点开水葱花调料），尽管如此我还是很喜欢吃面条。我对家和故乡有着自己的理解的感情，这和我的经历是密不可分的。我对外面的世界充满向往，我对故乡满是回望。\n\n{% asset_img 3.jpeg %}\n\n------\n\n# 许巍在我前面20m\n\n2015年12月12日，昆明，同德广场。许巍作为嘉宾献唱。那天中午我就赶过去了，没有得到内场的邀请券，只能在栏杆外面。舞台，就在20m开外。我带了很大的一面蓝莲花旗子。遗憾的是没有带旗杆，其他几个有旗杆的旗子都被邀请进内场了。等了差不多快8个小时，没有吃饭在等着。终于等到许巍的出现了。我是茫茫人海中的一个。我知道一定会有《蓝莲花》。\n\n“没有什么能够阻挡，你对自由的向往。”\n\n这是我第一次见许巍，尽管没有看清楚乐队。我还是很欣喜。\n\n{% asset_img 4.png %}\n\n![img](听他十年，成长十年/5.jpg)\n\n------\n\n# 抑郁之后的超脱\n\n关于许巍的抑郁症，我记得最清楚的是高中的时候，去旧书店翻出了一本在记忆中都快模糊了的杂志，里面有篇文章是写许巍的抑郁症的。他熬过抑郁症的更多细节我无从得知，我记得很深刻的是他的妻子在他抑郁期间一直陪着他。他妻子是军队文职，两个人走在街头的时候，许巍一身摇滚范，长发、皮衣、牛仔裤；他妻子一身军装。对的人就是对的人。在抑郁症期间，是他妻子和朋友陪他度过。也许是因为这个，他在《故事》的开头便唱到“也许是出发太久，我竟然迷失在旅途，我最亲爱的朋友，你让我再一次醒来。 ”在抑郁症之前，许巍的歌是真的摇滚。《两天》里的“我只有两天，一天用来出生，一天原来死亡；我只有两天，一天用来希望，一天用来绝望。”在抑郁症之后，歌曲的风格渐渐变了。“故事里始终都有爱，无论有什么样的艰难曲折”\n\n------\n\n# 此时此刻\n\n2012年12月12日，许巍发布了全新专辑《此时此刻》。专辑里有10首歌。我比较喜欢《喜悦》和《爱情》。“心中升起的喜悦，总在归乡的旅程，当家门在开启时，这世界变得温暖”。出门在外，《家》里那句“如今我对自己故乡像来往匆匆的过客”；每次在回家路上都听《喜悦》。每次离开家，都会听《故乡》。对我来说，“家”这个概念很复杂，是浙江台州，爸妈在那里打工；是姐姐读书的城市；是昆明，我在这玩；也是老家，年底一家人匆匆忙忙聚上那么十来天，春节过后，阳光温暖的春天，又双叒叕得离开。都说不知从何时起，故乡只有冬，再没有春夏秋。或许有一天，连冬都不会有了。不过，心若在，家就在。\n\n都说《爱情》这首歌是许巍专门为他妻子写的。刚好5′20″。当年被田震唱遍大江南北的《执着》，也是许巍写给他妻子的。“我为你歌唱，感谢你的恩典，你在我生命里，在岁月深处 你是美丽天空……这恩赐对我的震撼，如我初见大海”。我感受过山水、荒原、雪山，唯独没见过大海。《曾经的你》里面那句“每一次难过的时候，就独自看一看大海”。我很想去看海。﻿\n\n![img](听他十年，成长十年/6.jpeg)\n\n------\n\n# 无尽光芒\n\n去年12月26日，许巍团队发布了最新专辑《无尽光芒》。﻿\n\n![img](https://upload-images.jianshu.io/upload_images/3454743-34729f042744c53b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50)\n\n------\n\n突然写不下去了。\n\n------\n\n脚下有路，眼里有光。\n\n心中有爱，梦里有你。\n\n余生，像他一样永葆赤子之心。\n\n{% asset_img 7.png %}\n\n2018年3月14日  夜  于宿舍\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"听他十年，成长十年","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcl10050r0g0dukte5j6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>《<a href=\"https://v.qq.com/x/search/?q=%E8%93%9D%E8%8E%B2%E8%8A%B1%E8%AE%B8%E5%B7%8D&stag=0&smartbox_ab=\">蓝莲花</a>》—许巍</p>\n<hr>\n<p>“又见小蓝哥”。她在舍友空间说说下评论到。</p>\n<hr>\n<span id=\"more\"></span>\n\n<p>这双陪伴我一年多的蓝色跑鞋，后跟已经磨破露出海绵。蓝色的皮肤衣已经掉线了。蓝色的跑步短裤已经变形了。田径场上总是有个浑身蓝色的人。于是，有个姑娘叫我小蓝哥。</p>\n<p>是许巍，才有了《蓝莲花》；听了他的歌，十年来我整个人都在改变。</p>\n<p>我心里的蓝莲花和西藏的蓝天一样。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/1.jpeg\" class=\"\">\n\n<hr>\n<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>第一次听到许巍这个名字，是十年前，我那时候初一下学期，翻看语文老师的QQ日志，看到“许巍”这两个字，“春春曾至爱许巍”。我那时候用着一个手写屏的手机，有张512M的内存卡，托同学从网吧帮我下载了许巍的一些歌。回家一个人，放的是《<a href=\"http://music.163.com/song?id=167955&userid=89683798\">完美生活</a>》。第一句就是“青春的岁月，我们身不由己，只因这心中燃烧的梦想”。在之后，听到了《<a href=\"http://music.163.com/song?id=167871&userid=89683798\">晴朗</a>》。“一切就像是电影，比电影还要精彩。”我忘记了是什么时候听到《<a href=\"http://music.163.com/song?id=168091&userid=89683798\">蓝莲花</a>》。不管怎么样，这首歌成了我的最爱，以至于我骑车进藏的路上都是蓝莲花在陪伴。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/2.jpg\" class=\"\">\n\n<hr>\n<h1 id=\"《故乡》-《家》\"><a href=\"#《故乡》-《家》\" class=\"headerlink\" title=\"《故乡》.《家》\"></a>《故乡》.《家》</h1><p>那时候家里没电视机，伯伯家的电视机里面播放绿箭口香糖的广告，背景音乐是“我在远方，很多的岁月，总是会想起你，给予我的一切”。我一直想找这首歌，没找到，直到有天听到了许巍的《<a href=\"http://music.163.com/song?id=167751&userid=89683798\">家</a>》。“如家我对自己故乡，像来往匆匆的过客”，是无数人的真实写照。有人给我说“能给你家的感觉的那个人在哪，家就在哪。”在我内心深处，家是那个地方，是爸妈家人和那间小房子，是我十几年青春所在，是那些荒山，是那些土地瓜。如今说到回家，我很期待。回家的路上，我总是会听《<a href=\"http://music.163.com/song?id=167925&userid=89683798\">故乡</a>》。网易云的这首歌下面，有很多有意思的评论。“电吉他一响起我的心都碎了”。“你在我的心里是故乡，是一个男人对自己所爱的人最高的评价”。你在我心里永远是故乡。几度不敢听这首歌，一听就会流泪。尽管习惯了城市的便捷生活，我还是喜欢家里的东西，本地面条、包谷饭、酸菜红豆汤、炸洋芋….这学期开学来在学校附近发现一家老乡开的饭店，点了一碗红豆酸汤面，是老家的味道。差不多，这是我一个人生活的第十年，初中姐姐在县里读高中，爸妈都外出打工了。我一个人在家。自己做饭吃，很多时候就是煮“活油面”（一点猪油加点开水葱花调料），尽管如此我还是很喜欢吃面条。我对家和故乡有着自己的理解的感情，这和我的经历是密不可分的。我对外面的世界充满向往，我对故乡满是回望。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/3.jpeg\" class=\"\">\n\n<hr>\n<h1 id=\"许巍在我前面20m\"><a href=\"#许巍在我前面20m\" class=\"headerlink\" title=\"许巍在我前面20m\"></a>许巍在我前面20m</h1><p>2015年12月12日，昆明，同德广场。许巍作为嘉宾献唱。那天中午我就赶过去了，没有得到内场的邀请券，只能在栏杆外面。舞台，就在20m开外。我带了很大的一面蓝莲花旗子。遗憾的是没有带旗杆，其他几个有旗杆的旗子都被邀请进内场了。等了差不多快8个小时，没有吃饭在等着。终于等到许巍的出现了。我是茫茫人海中的一个。我知道一定会有《蓝莲花》。</p>\n<p>“没有什么能够阻挡，你对自由的向往。”</p>\n<p>这是我第一次见许巍，尽管没有看清楚乐队。我还是很欣喜。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/4.png\" class=\"\">\n\n<p><img src=\"%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/5.jpg\" alt=\"img\"></p>\n<hr>\n<h1 id=\"抑郁之后的超脱\"><a href=\"#抑郁之后的超脱\" class=\"headerlink\" title=\"抑郁之后的超脱\"></a>抑郁之后的超脱</h1><p>关于许巍的抑郁症，我记得最清楚的是高中的时候，去旧书店翻出了一本在记忆中都快模糊了的杂志，里面有篇文章是写许巍的抑郁症的。他熬过抑郁症的更多细节我无从得知，我记得很深刻的是他的妻子在他抑郁期间一直陪着他。他妻子是军队文职，两个人走在街头的时候，许巍一身摇滚范，长发、皮衣、牛仔裤；他妻子一身军装。对的人就是对的人。在抑郁症期间，是他妻子和朋友陪他度过。也许是因为这个，他在《故事》的开头便唱到“也许是出发太久，我竟然迷失在旅途，我最亲爱的朋友，你让我再一次醒来。 ”在抑郁症之前，许巍的歌是真的摇滚。《两天》里的“我只有两天，一天用来出生，一天原来死亡；我只有两天，一天用来希望，一天用来绝望。”在抑郁症之后，歌曲的风格渐渐变了。“故事里始终都有爱，无论有什么样的艰难曲折”</p>\n<hr>\n<h1 id=\"此时此刻\"><a href=\"#此时此刻\" class=\"headerlink\" title=\"此时此刻\"></a>此时此刻</h1><p>2012年12月12日，许巍发布了全新专辑《此时此刻》。专辑里有10首歌。我比较喜欢《喜悦》和《爱情》。“心中升起的喜悦，总在归乡的旅程，当家门在开启时，这世界变得温暖”。出门在外，《家》里那句“如今我对自己故乡像来往匆匆的过客”；每次在回家路上都听《喜悦》。每次离开家，都会听《故乡》。对我来说，“家”这个概念很复杂，是浙江台州，爸妈在那里打工；是姐姐读书的城市；是昆明，我在这玩；也是老家，年底一家人匆匆忙忙聚上那么十来天，春节过后，阳光温暖的春天，又双叒叕得离开。都说不知从何时起，故乡只有冬，再没有春夏秋。或许有一天，连冬都不会有了。不过，心若在，家就在。</p>\n<p>都说《爱情》这首歌是许巍专门为他妻子写的。刚好5′20″。当年被田震唱遍大江南北的《执着》，也是许巍写给他妻子的。“我为你歌唱，感谢你的恩典，你在我生命里，在岁月深处 你是美丽天空……这恩赐对我的震撼，如我初见大海”。我感受过山水、荒原、雪山，唯独没见过大海。《曾经的你》里面那句“每一次难过的时候，就独自看一看大海”。我很想去看海。﻿</p>\n<p><img src=\"%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/6.jpeg\" alt=\"img\"></p>\n<hr>\n<h1 id=\"无尽光芒\"><a href=\"#无尽光芒\" class=\"headerlink\" title=\"无尽光芒\"></a>无尽光芒</h1><p>去年12月26日，许巍团队发布了最新专辑《无尽光芒》。﻿</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/3454743-34729f042744c53b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50\" alt=\"img\"></p>\n<hr>\n<p>突然写不下去了。</p>\n<hr>\n<p>脚下有路，眼里有光。</p>\n<p>心中有爱，梦里有你。</p>\n<p>余生，像他一样永葆赤子之心。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/7.png\" class=\"\">\n\n<p>2018年3月14日  夜  于宿舍</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;\">&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>《<a href=\"https://v.qq.com/x/search/?q=%E8%93%9D%E8%8E%B2%E8%8A%B1%E8%AE%B8%E5%B7%8D&stag=0&smartbox_ab=\">蓝莲花</a>》—许巍</p>\n<hr>\n<p>“又见小蓝哥”。她在舍友空间说说下评论到。</p>\n<hr>","more":"<p>这双陪伴我一年多的蓝色跑鞋，后跟已经磨破露出海绵。蓝色的皮肤衣已经掉线了。蓝色的跑步短裤已经变形了。田径场上总是有个浑身蓝色的人。于是，有个姑娘叫我小蓝哥。</p>\n<p>是许巍，才有了《蓝莲花》；听了他的歌，十年来我整个人都在改变。</p>\n<p>我心里的蓝莲花和西藏的蓝天一样。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/1.jpeg\" class=\"\">\n\n<hr>\n<h1 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a>缘起</h1><p>第一次听到许巍这个名字，是十年前，我那时候初一下学期，翻看语文老师的QQ日志，看到“许巍”这两个字，“春春曾至爱许巍”。我那时候用着一个手写屏的手机，有张512M的内存卡，托同学从网吧帮我下载了许巍的一些歌。回家一个人，放的是《<a href=\"http://music.163.com/song?id=167955&userid=89683798\">完美生活</a>》。第一句就是“青春的岁月，我们身不由己，只因这心中燃烧的梦想”。在之后，听到了《<a href=\"http://music.163.com/song?id=167871&userid=89683798\">晴朗</a>》。“一切就像是电影，比电影还要精彩。”我忘记了是什么时候听到《<a href=\"http://music.163.com/song?id=168091&userid=89683798\">蓝莲花</a>》。不管怎么样，这首歌成了我的最爱，以至于我骑车进藏的路上都是蓝莲花在陪伴。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/2.jpg\" class=\"\">\n\n<hr>\n<h1 id=\"《故乡》-《家》\"><a href=\"#《故乡》-《家》\" class=\"headerlink\" title=\"《故乡》.《家》\"></a>《故乡》.《家》</h1><p>那时候家里没电视机，伯伯家的电视机里面播放绿箭口香糖的广告，背景音乐是“我在远方，很多的岁月，总是会想起你，给予我的一切”。我一直想找这首歌，没找到，直到有天听到了许巍的《<a href=\"http://music.163.com/song?id=167751&userid=89683798\">家</a>》。“如家我对自己故乡，像来往匆匆的过客”，是无数人的真实写照。有人给我说“能给你家的感觉的那个人在哪，家就在哪。”在我内心深处，家是那个地方，是爸妈家人和那间小房子，是我十几年青春所在，是那些荒山，是那些土地瓜。如今说到回家，我很期待。回家的路上，我总是会听《<a href=\"http://music.163.com/song?id=167925&userid=89683798\">故乡</a>》。网易云的这首歌下面，有很多有意思的评论。“电吉他一响起我的心都碎了”。“你在我的心里是故乡，是一个男人对自己所爱的人最高的评价”。你在我心里永远是故乡。几度不敢听这首歌，一听就会流泪。尽管习惯了城市的便捷生活，我还是喜欢家里的东西，本地面条、包谷饭、酸菜红豆汤、炸洋芋….这学期开学来在学校附近发现一家老乡开的饭店，点了一碗红豆酸汤面，是老家的味道。差不多，这是我一个人生活的第十年，初中姐姐在县里读高中，爸妈都外出打工了。我一个人在家。自己做饭吃，很多时候就是煮“活油面”（一点猪油加点开水葱花调料），尽管如此我还是很喜欢吃面条。我对家和故乡有着自己的理解的感情，这和我的经历是密不可分的。我对外面的世界充满向往，我对故乡满是回望。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/3.jpeg\" class=\"\">\n\n<hr>\n<h1 id=\"许巍在我前面20m\"><a href=\"#许巍在我前面20m\" class=\"headerlink\" title=\"许巍在我前面20m\"></a>许巍在我前面20m</h1><p>2015年12月12日，昆明，同德广场。许巍作为嘉宾献唱。那天中午我就赶过去了，没有得到内场的邀请券，只能在栏杆外面。舞台，就在20m开外。我带了很大的一面蓝莲花旗子。遗憾的是没有带旗杆，其他几个有旗杆的旗子都被邀请进内场了。等了差不多快8个小时，没有吃饭在等着。终于等到许巍的出现了。我是茫茫人海中的一个。我知道一定会有《蓝莲花》。</p>\n<p>“没有什么能够阻挡，你对自由的向往。”</p>\n<p>这是我第一次见许巍，尽管没有看清楚乐队。我还是很欣喜。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/4.png\" class=\"\">\n\n<p><img src=\"%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/5.jpg\" alt=\"img\"></p>\n<hr>\n<h1 id=\"抑郁之后的超脱\"><a href=\"#抑郁之后的超脱\" class=\"headerlink\" title=\"抑郁之后的超脱\"></a>抑郁之后的超脱</h1><p>关于许巍的抑郁症，我记得最清楚的是高中的时候，去旧书店翻出了一本在记忆中都快模糊了的杂志，里面有篇文章是写许巍的抑郁症的。他熬过抑郁症的更多细节我无从得知，我记得很深刻的是他的妻子在他抑郁期间一直陪着他。他妻子是军队文职，两个人走在街头的时候，许巍一身摇滚范，长发、皮衣、牛仔裤；他妻子一身军装。对的人就是对的人。在抑郁症期间，是他妻子和朋友陪他度过。也许是因为这个，他在《故事》的开头便唱到“也许是出发太久，我竟然迷失在旅途，我最亲爱的朋友，你让我再一次醒来。 ”在抑郁症之前，许巍的歌是真的摇滚。《两天》里的“我只有两天，一天用来出生，一天原来死亡；我只有两天，一天用来希望，一天用来绝望。”在抑郁症之后，歌曲的风格渐渐变了。“故事里始终都有爱，无论有什么样的艰难曲折”</p>\n<hr>\n<h1 id=\"此时此刻\"><a href=\"#此时此刻\" class=\"headerlink\" title=\"此时此刻\"></a>此时此刻</h1><p>2012年12月12日，许巍发布了全新专辑《此时此刻》。专辑里有10首歌。我比较喜欢《喜悦》和《爱情》。“心中升起的喜悦，总在归乡的旅程，当家门在开启时，这世界变得温暖”。出门在外，《家》里那句“如今我对自己故乡像来往匆匆的过客”；每次在回家路上都听《喜悦》。每次离开家，都会听《故乡》。对我来说，“家”这个概念很复杂，是浙江台州，爸妈在那里打工；是姐姐读书的城市；是昆明，我在这玩；也是老家，年底一家人匆匆忙忙聚上那么十来天，春节过后，阳光温暖的春天，又双叒叕得离开。都说不知从何时起，故乡只有冬，再没有春夏秋。或许有一天，连冬都不会有了。不过，心若在，家就在。</p>\n<p>都说《爱情》这首歌是许巍专门为他妻子写的。刚好5′20″。当年被田震唱遍大江南北的《执着》，也是许巍写给他妻子的。“我为你歌唱，感谢你的恩典，你在我生命里，在岁月深处 你是美丽天空……这恩赐对我的震撼，如我初见大海”。我感受过山水、荒原、雪山，唯独没见过大海。《曾经的你》里面那句“每一次难过的时候，就独自看一看大海”。我很想去看海。﻿</p>\n<p><img src=\"%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/6.jpeg\" alt=\"img\"></p>\n<hr>\n<h1 id=\"无尽光芒\"><a href=\"#无尽光芒\" class=\"headerlink\" title=\"无尽光芒\"></a>无尽光芒</h1><p>去年12月26日，许巍团队发布了最新专辑《无尽光芒》。﻿</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/3454743-34729f042744c53b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1080/q/50\" alt=\"img\"></p>\n<hr>\n<p>突然写不下去了。</p>\n<hr>\n<p>脚下有路，眼里有光。</p>\n<p>心中有爱，梦里有你。</p>\n<p>余生，像他一样永葆赤子之心。</p>\n<img src=\"/2020/01/07/%E5%90%AC%E4%BB%96%E5%8D%81%E5%B9%B4%EF%BC%8C%E6%88%90%E9%95%BF%E5%8D%81%E5%B9%B4/7.png\" class=\"\">\n\n<p>2018年3月14日  夜  于宿舍</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#x61;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;\">&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"尿囊素保护番茄免受UV-C胁迫","abbrlink":"a2ac10e2","date":"2021-01-01T08:28:54.000Z","_content":"\n> 编者注：2018年***New Phytologist*** 上发表了一篇文章**Kin recognition in rice (Oryza sativa) lines**$^{[1]}$，在水稻根系分泌物中有一种关键的化合物：尿囊素（allantoin, AT）——可以作为水稻品种间亲缘识别的关键物质。\n>\n> 这篇文章主要讲的是AT在作物非生物胁迫上的效应。\n\n<!-- more -->\n\n{% asset_img 0.png %}\n\n# 摘要\n\nAT能不能有效减缓UVC胁迫还没有报道。本研究报道了在番茄上UVC诱导的非生物胁迫的物理化学机制，包括AT导向的减缓策略。\n\n- UVC胁迫抑制番茄植株生长和光敏色素的合成；\n- 热图和PCA结果表明UVC胁迫下的毒性影响主要是由氧化损伤和渗透压稳态紊乱引起的；\n- UVC胁迫前用AT处理能够有效减缓胁迫危害；\n- AT能够有效减缓氧化损伤；\n- 和胁迫前用AT处理相比，胁迫后用AT处理的情况下，保护作用减弱；\n- UVC胁迫前用AT处理是一种有效减缓UVC胁迫的有效方法，不止是在番茄上，别的作物上也可能是这样。\n\n# 实验设计\n\n首先是个预实验，找到最合适的UVC胁迫剂量，然后按照如下实验设计进行实验：\n\n{% asset_img 01.png %}\n\n然后测定鲜重、干重、光敏色素含量等。\n\n# 结果\n\n## AT浓度选择与UVC胁迫剂量\n\n{% asset_img 02.jpg %}\n\n上图A表示的是UVC胁迫对番茄植株生长的影响，可以看到UVC胁迫对番茄植株的影响呈现浓度效应。比较有趣的是UVC剂量达到0.6W m$^{-2}$及以上时，番茄植株内的AT及尿囊酸盐的含量会急剧减少，但是在0.3W m$^{-2}$时不会影响番茄植株体内的AT及尿囊酸盐含量。**因此，选择0、0.6及1.2W m$^{-2}$作为后续的UVC胁迫剂量。**\n\n在选择合适的UVC胁迫剂量后，再对AT最适浓度进行筛选。通过浓度梯度实验后选择10$^{-4}$M作为最适浓度（上图B）。\n\n## AT改善植株生长、水分关系和光敏色素含量\n\n{% asset_img 1.png %}\n\n上图是9种不同的处理下相对生长速率（RGR）、茎秆鲜重（SFW）、根部鲜重（RFW）、茎秆干重（SDW）、根部干重（RDW）及几种叶绿素的含量情况。从上图可以看出AT处理后，几种指标和对照相比都在一定程度上增加了。因此，AT能够有效改善植株生长及光敏色素含量等。\n\n## AT减缓UVC胁迫对含水量等的影响\n\n{% asset_img 2.png %}\n\n整体上看，UVC胁迫对相对含水量、外表皮蜡质、蛋白含量、自由氨基酸含量、可溶性蛋白含量及可溶性碳水化合物的影响呈现出浓度效应。不管是UVC胁迫前还是胁迫后用AT进行处理，都能有效减缓UVC胁迫对番茄植株的影响；但是UVC胁迫前用AT处理的效果比胁迫后用AT处理的效果好。\n\n## AT减弱UVC胁迫的氧化损伤\n\n{% asset_img 3.png %}\n\n上图表示的是9种不同的处理下氧化相关的物质的变化情况。从整体上可以看出，UVC胁迫后番茄植株体内与氧化相关的各类物质的含量都显著升高了，在“NO AT”这类情况下尤其明显。加了AT之后这些氧化相关物质的含量都有一定程度下降，但是挟迫迁加AT比胁迫后加AT效果更明显。**这表明AT能够有效减弱UVC胁迫对番茄植株的氧化损伤**。\n\n## AT促进非酶抗氧化剂状态及其此生代谢\n\n{% asset_img 4.png %}\n\n上图从左到右从上到下分别表示的是谷胱甘肽含量、抗坏血酸含量、花青素、黄酮、$\\alpha$维生素E及酚类化合物的含量。除$\\alpha$维生素E外，其他几种物质在UVC胁迫后含量都会发生变化。胁迫前加AT处理的情况下这些物质含量都相应地升高了。\n\n## AT调节内源性代谢物、信号分子、GST及PPO活性\n\n{% asset_img 5.png %}\n\n## 聚类分析\n\n{% asset_img 7.png %}\n\n最后将上述的这些物质进行热图绘制和PCA分析。比较有意思的是，UVC胁迫前加AT和UVC胁迫后加AT分别与未加AT比较的情况下，这些物质都能聚成3个cluster。而且，在热图中聚成cluster的物质在PCA图中也基本聚集在一起。\n\n# 总结\n\n{% asset_img 8.png %}\n\n# 文献信息\n\nTitle：Mechanistic Insight of Allantoin in Protecting Tomato Plants Against Ultraviolet C Stress\n\n译名：尿囊素在保护番茄植物免受紫外线C胁迫中的作用机理\n\n期刊：***Planta***\n\nIF：3.4\n\n链接： https://www.mdpi.com/2223-7747/10/1/11\n\n通讯作者：Arafat Abdel Hamed Abdel Latef\n\n主要单位：South Valley University\n\n---\n\n# 参考文献\n\n> [1] Yang X F, Li L L, Xu Y, et al. Kin recognition in rice (Oryza sativa) lines[J]. ***New Phytologist***, 2018, 220(2): 567-578.\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/尿囊素保护番茄免受UV-C胁迫.md","raw":"---\ntitle: 尿囊素保护番茄免受UV-C胁迫\ntags: 文献\ncategories: 文献\nabbrlink: a2ac10e2\ndate: 2021-01-01 16:28:54\n---\n\n> 编者注：2018年***New Phytologist*** 上发表了一篇文章**Kin recognition in rice (Oryza sativa) lines**$^{[1]}$，在水稻根系分泌物中有一种关键的化合物：尿囊素（allantoin, AT）——可以作为水稻品种间亲缘识别的关键物质。\n>\n> 这篇文章主要讲的是AT在作物非生物胁迫上的效应。\n\n<!-- more -->\n\n{% asset_img 0.png %}\n\n# 摘要\n\nAT能不能有效减缓UVC胁迫还没有报道。本研究报道了在番茄上UVC诱导的非生物胁迫的物理化学机制，包括AT导向的减缓策略。\n\n- UVC胁迫抑制番茄植株生长和光敏色素的合成；\n- 热图和PCA结果表明UVC胁迫下的毒性影响主要是由氧化损伤和渗透压稳态紊乱引起的；\n- UVC胁迫前用AT处理能够有效减缓胁迫危害；\n- AT能够有效减缓氧化损伤；\n- 和胁迫前用AT处理相比，胁迫后用AT处理的情况下，保护作用减弱；\n- UVC胁迫前用AT处理是一种有效减缓UVC胁迫的有效方法，不止是在番茄上，别的作物上也可能是这样。\n\n# 实验设计\n\n首先是个预实验，找到最合适的UVC胁迫剂量，然后按照如下实验设计进行实验：\n\n{% asset_img 01.png %}\n\n然后测定鲜重、干重、光敏色素含量等。\n\n# 结果\n\n## AT浓度选择与UVC胁迫剂量\n\n{% asset_img 02.jpg %}\n\n上图A表示的是UVC胁迫对番茄植株生长的影响，可以看到UVC胁迫对番茄植株的影响呈现浓度效应。比较有趣的是UVC剂量达到0.6W m$^{-2}$及以上时，番茄植株内的AT及尿囊酸盐的含量会急剧减少，但是在0.3W m$^{-2}$时不会影响番茄植株体内的AT及尿囊酸盐含量。**因此，选择0、0.6及1.2W m$^{-2}$作为后续的UVC胁迫剂量。**\n\n在选择合适的UVC胁迫剂量后，再对AT最适浓度进行筛选。通过浓度梯度实验后选择10$^{-4}$M作为最适浓度（上图B）。\n\n## AT改善植株生长、水分关系和光敏色素含量\n\n{% asset_img 1.png %}\n\n上图是9种不同的处理下相对生长速率（RGR）、茎秆鲜重（SFW）、根部鲜重（RFW）、茎秆干重（SDW）、根部干重（RDW）及几种叶绿素的含量情况。从上图可以看出AT处理后，几种指标和对照相比都在一定程度上增加了。因此，AT能够有效改善植株生长及光敏色素含量等。\n\n## AT减缓UVC胁迫对含水量等的影响\n\n{% asset_img 2.png %}\n\n整体上看，UVC胁迫对相对含水量、外表皮蜡质、蛋白含量、自由氨基酸含量、可溶性蛋白含量及可溶性碳水化合物的影响呈现出浓度效应。不管是UVC胁迫前还是胁迫后用AT进行处理，都能有效减缓UVC胁迫对番茄植株的影响；但是UVC胁迫前用AT处理的效果比胁迫后用AT处理的效果好。\n\n## AT减弱UVC胁迫的氧化损伤\n\n{% asset_img 3.png %}\n\n上图表示的是9种不同的处理下氧化相关的物质的变化情况。从整体上可以看出，UVC胁迫后番茄植株体内与氧化相关的各类物质的含量都显著升高了，在“NO AT”这类情况下尤其明显。加了AT之后这些氧化相关物质的含量都有一定程度下降，但是挟迫迁加AT比胁迫后加AT效果更明显。**这表明AT能够有效减弱UVC胁迫对番茄植株的氧化损伤**。\n\n## AT促进非酶抗氧化剂状态及其此生代谢\n\n{% asset_img 4.png %}\n\n上图从左到右从上到下分别表示的是谷胱甘肽含量、抗坏血酸含量、花青素、黄酮、$\\alpha$维生素E及酚类化合物的含量。除$\\alpha$维生素E外，其他几种物质在UVC胁迫后含量都会发生变化。胁迫前加AT处理的情况下这些物质含量都相应地升高了。\n\n## AT调节内源性代谢物、信号分子、GST及PPO活性\n\n{% asset_img 5.png %}\n\n## 聚类分析\n\n{% asset_img 7.png %}\n\n最后将上述的这些物质进行热图绘制和PCA分析。比较有意思的是，UVC胁迫前加AT和UVC胁迫后加AT分别与未加AT比较的情况下，这些物质都能聚成3个cluster。而且，在热图中聚成cluster的物质在PCA图中也基本聚集在一起。\n\n# 总结\n\n{% asset_img 8.png %}\n\n# 文献信息\n\nTitle：Mechanistic Insight of Allantoin in Protecting Tomato Plants Against Ultraviolet C Stress\n\n译名：尿囊素在保护番茄植物免受紫外线C胁迫中的作用机理\n\n期刊：***Planta***\n\nIF：3.4\n\n链接： https://www.mdpi.com/2223-7747/10/1/11\n\n通讯作者：Arafat Abdel Hamed Abdel Latef\n\n主要单位：South Valley University\n\n---\n\n# 参考文献\n\n> [1] Yang X F, Li L L, Xu Y, et al. Kin recognition in rice (Oryza sativa) lines[J]. ***New Phytologist***, 2018, 220(2): 567-578.\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"尿囊素保护番茄免受UV-C胁迫","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcm90052r0g0cpxtapqf","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>编者注：2018年<em><strong>New Phytologist</strong></em> 上发表了一篇文章<strong>Kin recognition in rice (Oryza sativa) lines</strong>$^{[1]}$，在水稻根系分泌物中有一种关键的化合物：尿囊素（allantoin, AT）——可以作为水稻品种间亲缘识别的关键物质。</p>\n<p>这篇文章主要讲的是AT在作物非生物胁迫上的效应。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/0.png\" class=\"\">\n\n<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>AT能不能有效减缓UVC胁迫还没有报道。本研究报道了在番茄上UVC诱导的非生物胁迫的物理化学机制，包括AT导向的减缓策略。</p>\n<ul>\n<li>UVC胁迫抑制番茄植株生长和光敏色素的合成；</li>\n<li>热图和PCA结果表明UVC胁迫下的毒性影响主要是由氧化损伤和渗透压稳态紊乱引起的；</li>\n<li>UVC胁迫前用AT处理能够有效减缓胁迫危害；</li>\n<li>AT能够有效减缓氧化损伤；</li>\n<li>和胁迫前用AT处理相比，胁迫后用AT处理的情况下，保护作用减弱；</li>\n<li>UVC胁迫前用AT处理是一种有效减缓UVC胁迫的有效方法，不止是在番茄上，别的作物上也可能是这样。</li>\n</ul>\n<h1 id=\"实验设计\"><a href=\"#实验设计\" class=\"headerlink\" title=\"实验设计\"></a>实验设计</h1><p>首先是个预实验，找到最合适的UVC胁迫剂量，然后按照如下实验设计进行实验：</p>\n<img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/01.png\" class=\"\">\n\n<p>然后测定鲜重、干重、光敏色素含量等。</p>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><h2 id=\"AT浓度选择与UVC胁迫剂量\"><a href=\"#AT浓度选择与UVC胁迫剂量\" class=\"headerlink\" title=\"AT浓度选择与UVC胁迫剂量\"></a>AT浓度选择与UVC胁迫剂量</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/02.jpg\" class=\"\">\n\n<p>上图A表示的是UVC胁迫对番茄植株生长的影响，可以看到UVC胁迫对番茄植株的影响呈现浓度效应。比较有趣的是UVC剂量达到0.6W m$^{-2}$及以上时，番茄植株内的AT及尿囊酸盐的含量会急剧减少，但是在0.3W m$^{-2}$时不会影响番茄植株体内的AT及尿囊酸盐含量。<strong>因此，选择0、0.6及1.2W m$^{-2}$作为后续的UVC胁迫剂量。</strong></p>\n<p>在选择合适的UVC胁迫剂量后，再对AT最适浓度进行筛选。通过浓度梯度实验后选择10$^{-4}$M作为最适浓度（上图B）。</p>\n<h2 id=\"AT改善植株生长、水分关系和光敏色素含量\"><a href=\"#AT改善植株生长、水分关系和光敏色素含量\" class=\"headerlink\" title=\"AT改善植株生长、水分关系和光敏色素含量\"></a>AT改善植株生长、水分关系和光敏色素含量</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/1.png\" class=\"\">\n\n<p>上图是9种不同的处理下相对生长速率（RGR）、茎秆鲜重（SFW）、根部鲜重（RFW）、茎秆干重（SDW）、根部干重（RDW）及几种叶绿素的含量情况。从上图可以看出AT处理后，几种指标和对照相比都在一定程度上增加了。因此，AT能够有效改善植株生长及光敏色素含量等。</p>\n<h2 id=\"AT减缓UVC胁迫对含水量等的影响\"><a href=\"#AT减缓UVC胁迫对含水量等的影响\" class=\"headerlink\" title=\"AT减缓UVC胁迫对含水量等的影响\"></a>AT减缓UVC胁迫对含水量等的影响</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/2.png\" class=\"\">\n\n<p>整体上看，UVC胁迫对相对含水量、外表皮蜡质、蛋白含量、自由氨基酸含量、可溶性蛋白含量及可溶性碳水化合物的影响呈现出浓度效应。不管是UVC胁迫前还是胁迫后用AT进行处理，都能有效减缓UVC胁迫对番茄植株的影响；但是UVC胁迫前用AT处理的效果比胁迫后用AT处理的效果好。</p>\n<h2 id=\"AT减弱UVC胁迫的氧化损伤\"><a href=\"#AT减弱UVC胁迫的氧化损伤\" class=\"headerlink\" title=\"AT减弱UVC胁迫的氧化损伤\"></a>AT减弱UVC胁迫的氧化损伤</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/3.png\" class=\"\">\n\n<p>上图表示的是9种不同的处理下氧化相关的物质的变化情况。从整体上可以看出，UVC胁迫后番茄植株体内与氧化相关的各类物质的含量都显著升高了，在“NO AT”这类情况下尤其明显。加了AT之后这些氧化相关物质的含量都有一定程度下降，但是挟迫迁加AT比胁迫后加AT效果更明显。<strong>这表明AT能够有效减弱UVC胁迫对番茄植株的氧化损伤</strong>。</p>\n<h2 id=\"AT促进非酶抗氧化剂状态及其此生代谢\"><a href=\"#AT促进非酶抗氧化剂状态及其此生代谢\" class=\"headerlink\" title=\"AT促进非酶抗氧化剂状态及其此生代谢\"></a>AT促进非酶抗氧化剂状态及其此生代谢</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/4.png\" class=\"\">\n\n<p>上图从左到右从上到下分别表示的是谷胱甘肽含量、抗坏血酸含量、花青素、黄酮、$\\alpha$维生素E及酚类化合物的含量。除$\\alpha$维生素E外，其他几种物质在UVC胁迫后含量都会发生变化。胁迫前加AT处理的情况下这些物质含量都相应地升高了。</p>\n<h2 id=\"AT调节内源性代谢物、信号分子、GST及PPO活性\"><a href=\"#AT调节内源性代谢物、信号分子、GST及PPO活性\" class=\"headerlink\" title=\"AT调节内源性代谢物、信号分子、GST及PPO活性\"></a>AT调节内源性代谢物、信号分子、GST及PPO活性</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/5.png\" class=\"\">\n\n<h2 id=\"聚类分析\"><a href=\"#聚类分析\" class=\"headerlink\" title=\"聚类分析\"></a>聚类分析</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/7.png\" class=\"\">\n\n<p>最后将上述的这些物质进行热图绘制和PCA分析。比较有意思的是，UVC胁迫前加AT和UVC胁迫后加AT分别与未加AT比较的情况下，这些物质都能聚成3个cluster。而且，在热图中聚成cluster的物质在PCA图中也基本聚集在一起。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/8.png\" class=\"\">\n\n<h1 id=\"文献信息\"><a href=\"#文献信息\" class=\"headerlink\" title=\"文献信息\"></a>文献信息</h1><p>Title：Mechanistic Insight of Allantoin in Protecting Tomato Plants Against Ultraviolet C Stress</p>\n<p>译名：尿囊素在保护番茄植物免受紫外线C胁迫中的作用机理</p>\n<p>期刊：<em><strong>Planta</strong></em></p>\n<p>IF：3.4</p>\n<p>链接： <a href=\"https://www.mdpi.com/2223-7747/10/1/11\">https://www.mdpi.com/2223-7747/10/1/11</a></p>\n<p>通讯作者：Arafat Abdel Hamed Abdel Latef</p>\n<p>主要单位：South Valley University</p>\n<hr>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Yang X F, Li L L, Xu Y, et al. Kin recognition in rice (Oryza sativa) lines[J]. <em><strong>New Phytologist</strong></em>, 2018, 220(2): 567-578.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#102;&#111;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#102;&#111;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<blockquote>\n<p>编者注：2018年<em><strong>New Phytologist</strong></em> 上发表了一篇文章<strong>Kin recognition in rice (Oryza sativa) lines</strong>$^{[1]}$，在水稻根系分泌物中有一种关键的化合物：尿囊素（allantoin, AT）——可以作为水稻品种间亲缘识别的关键物质。</p>\n<p>这篇文章主要讲的是AT在作物非生物胁迫上的效应。</p>\n</blockquote>","more":"<img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/0.png\" class=\"\">\n\n<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>AT能不能有效减缓UVC胁迫还没有报道。本研究报道了在番茄上UVC诱导的非生物胁迫的物理化学机制，包括AT导向的减缓策略。</p>\n<ul>\n<li>UVC胁迫抑制番茄植株生长和光敏色素的合成；</li>\n<li>热图和PCA结果表明UVC胁迫下的毒性影响主要是由氧化损伤和渗透压稳态紊乱引起的；</li>\n<li>UVC胁迫前用AT处理能够有效减缓胁迫危害；</li>\n<li>AT能够有效减缓氧化损伤；</li>\n<li>和胁迫前用AT处理相比，胁迫后用AT处理的情况下，保护作用减弱；</li>\n<li>UVC胁迫前用AT处理是一种有效减缓UVC胁迫的有效方法，不止是在番茄上，别的作物上也可能是这样。</li>\n</ul>\n<h1 id=\"实验设计\"><a href=\"#实验设计\" class=\"headerlink\" title=\"实验设计\"></a>实验设计</h1><p>首先是个预实验，找到最合适的UVC胁迫剂量，然后按照如下实验设计进行实验：</p>\n<img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/01.png\" class=\"\">\n\n<p>然后测定鲜重、干重、光敏色素含量等。</p>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><h2 id=\"AT浓度选择与UVC胁迫剂量\"><a href=\"#AT浓度选择与UVC胁迫剂量\" class=\"headerlink\" title=\"AT浓度选择与UVC胁迫剂量\"></a>AT浓度选择与UVC胁迫剂量</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/02.jpg\" class=\"\">\n\n<p>上图A表示的是UVC胁迫对番茄植株生长的影响，可以看到UVC胁迫对番茄植株的影响呈现浓度效应。比较有趣的是UVC剂量达到0.6W m$^{-2}$及以上时，番茄植株内的AT及尿囊酸盐的含量会急剧减少，但是在0.3W m$^{-2}$时不会影响番茄植株体内的AT及尿囊酸盐含量。<strong>因此，选择0、0.6及1.2W m$^{-2}$作为后续的UVC胁迫剂量。</strong></p>\n<p>在选择合适的UVC胁迫剂量后，再对AT最适浓度进行筛选。通过浓度梯度实验后选择10$^{-4}$M作为最适浓度（上图B）。</p>\n<h2 id=\"AT改善植株生长、水分关系和光敏色素含量\"><a href=\"#AT改善植株生长、水分关系和光敏色素含量\" class=\"headerlink\" title=\"AT改善植株生长、水分关系和光敏色素含量\"></a>AT改善植株生长、水分关系和光敏色素含量</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/1.png\" class=\"\">\n\n<p>上图是9种不同的处理下相对生长速率（RGR）、茎秆鲜重（SFW）、根部鲜重（RFW）、茎秆干重（SDW）、根部干重（RDW）及几种叶绿素的含量情况。从上图可以看出AT处理后，几种指标和对照相比都在一定程度上增加了。因此，AT能够有效改善植株生长及光敏色素含量等。</p>\n<h2 id=\"AT减缓UVC胁迫对含水量等的影响\"><a href=\"#AT减缓UVC胁迫对含水量等的影响\" class=\"headerlink\" title=\"AT减缓UVC胁迫对含水量等的影响\"></a>AT减缓UVC胁迫对含水量等的影响</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/2.png\" class=\"\">\n\n<p>整体上看，UVC胁迫对相对含水量、外表皮蜡质、蛋白含量、自由氨基酸含量、可溶性蛋白含量及可溶性碳水化合物的影响呈现出浓度效应。不管是UVC胁迫前还是胁迫后用AT进行处理，都能有效减缓UVC胁迫对番茄植株的影响；但是UVC胁迫前用AT处理的效果比胁迫后用AT处理的效果好。</p>\n<h2 id=\"AT减弱UVC胁迫的氧化损伤\"><a href=\"#AT减弱UVC胁迫的氧化损伤\" class=\"headerlink\" title=\"AT减弱UVC胁迫的氧化损伤\"></a>AT减弱UVC胁迫的氧化损伤</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/3.png\" class=\"\">\n\n<p>上图表示的是9种不同的处理下氧化相关的物质的变化情况。从整体上可以看出，UVC胁迫后番茄植株体内与氧化相关的各类物质的含量都显著升高了，在“NO AT”这类情况下尤其明显。加了AT之后这些氧化相关物质的含量都有一定程度下降，但是挟迫迁加AT比胁迫后加AT效果更明显。<strong>这表明AT能够有效减弱UVC胁迫对番茄植株的氧化损伤</strong>。</p>\n<h2 id=\"AT促进非酶抗氧化剂状态及其此生代谢\"><a href=\"#AT促进非酶抗氧化剂状态及其此生代谢\" class=\"headerlink\" title=\"AT促进非酶抗氧化剂状态及其此生代谢\"></a>AT促进非酶抗氧化剂状态及其此生代谢</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/4.png\" class=\"\">\n\n<p>上图从左到右从上到下分别表示的是谷胱甘肽含量、抗坏血酸含量、花青素、黄酮、$\\alpha$维生素E及酚类化合物的含量。除$\\alpha$维生素E外，其他几种物质在UVC胁迫后含量都会发生变化。胁迫前加AT处理的情况下这些物质含量都相应地升高了。</p>\n<h2 id=\"AT调节内源性代谢物、信号分子、GST及PPO活性\"><a href=\"#AT调节内源性代谢物、信号分子、GST及PPO活性\" class=\"headerlink\" title=\"AT调节内源性代谢物、信号分子、GST及PPO活性\"></a>AT调节内源性代谢物、信号分子、GST及PPO活性</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/5.png\" class=\"\">\n\n<h2 id=\"聚类分析\"><a href=\"#聚类分析\" class=\"headerlink\" title=\"聚类分析\"></a>聚类分析</h2><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/7.png\" class=\"\">\n\n<p>最后将上述的这些物质进行热图绘制和PCA分析。比较有意思的是，UVC胁迫前加AT和UVC胁迫后加AT分别与未加AT比较的情况下，这些物质都能聚成3个cluster。而且，在热图中聚成cluster的物质在PCA图中也基本聚集在一起。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><img src=\"/2021/01/01/%E5%B0%BF%E5%9B%8A%E7%B4%A0%E4%BF%9D%E6%8A%A4%E7%95%AA%E8%8C%84%E5%85%8D%E5%8F%97UV-C%E8%83%81%E8%BF%AB/8.png\" class=\"\">\n\n<h1 id=\"文献信息\"><a href=\"#文献信息\" class=\"headerlink\" title=\"文献信息\"></a>文献信息</h1><p>Title：Mechanistic Insight of Allantoin in Protecting Tomato Plants Against Ultraviolet C Stress</p>\n<p>译名：尿囊素在保护番茄植物免受紫外线C胁迫中的作用机理</p>\n<p>期刊：<em><strong>Planta</strong></em></p>\n<p>IF：3.4</p>\n<p>链接： <a href=\"https://www.mdpi.com/2223-7747/10/1/11\">https://www.mdpi.com/2223-7747/10/1/11</a></p>\n<p>通讯作者：Arafat Abdel Hamed Abdel Latef</p>\n<p>主要单位：South Valley University</p>\n<hr>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Yang X F, Li L L, Xu Y, et al. Kin recognition in rice (Oryza sativa) lines[J]. <em><strong>New Phytologist</strong></em>, 2018, 220(2): 567-578.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#110;&#x67;&#49;&#x31;&#x37;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#102;&#111;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;\">&#x6c;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#55;&#52;&#50;&#51;&#x40;&#102;&#111;&#120;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应","abbrlink":"5d1ec1f","date":"2021-01-22T02:27:18.000Z","_content":"\n# 摘要\n\n土壤遗产在优先效应的形成过程中有着重要的作用。然而我们还不知道<!-- more -->土壤中的植物种类对“土壤代谢”的影响到底有多大，我们也不知道土壤化学遗产是否影响“后到”植物。为了验证这些猜想，该研究收集了来自西洋石竹和紫羊茅的土壤溶液，然后评估这些不同的土壤溶液对西洋石竹和紫羊茅的影响，包括生长、生物量分布及功能形状等。\n\n结果表明，来自西洋石竹和紫羊茅的土壤溶液的代谢物在组成和化学多样性上具有差异。两类土壤化学遗产对紫羊茅都没有任何影响，但是两类土壤溶液都会影响西洋石竹的“根系觅食”（root foraging）。结构方程模型表明，西洋石竹减少土壤的勘探（reduced soil exploration by *D. deltoides*）是通过根系生长途径( 西洋石竹代谢物)或根系性状途径(紫羊茅代谢物)引起的。根系觅食减少与总氮吸收减少无关。\n\n这个研究说明土壤化学遗产能够通过影响“后到”植物的根系觅食来“创造”地下部分的优先效应。\n\n# 背景\n\n优先效应（Priority effects）：可以简单理解成“先来后到”，即某个地方“先来”的植物会影响”后到“的植物的生长、发育和/或繁殖。\n\n引起优先效应发生的机制主要有两种：\n\n- 生态位抢占（niche preemption）：”先来“的植物会消耗生态位上的关键资源，如空间、光即土壤营养等，如果生态位抢占是形成优先效应主要的因素的话，那”后到“的植物的生长、发育会受到负向影响。\n- 生态位修饰（niche modification）：”先来“的植物会影响生态位的可利用类型，从而影响”后到“的植物，此种情况下”后到“的植物会出现两种情况：被”先来“的植物促进或抑制。\n\n研究生态位修饰驱动的优先效应产生的研究主要几种在植物土壤反馈实验（plant-soil feedback, PSF）。根系分泌物是土传遗产的重要组成部分。先前的研究发现：\n\n- 根系分泌物种的代谢物会影响根际真/细菌群落，受影响的真/细菌群落会激发PSF，进而影响植物的生长和防御；\n- 根系分泌的化感物质会影响邻近植物的生长；根系分泌物可以作为近邻识别的化学线索。\n\n大量的研究证据表明根系分泌物在构建根际微生物组和介导植物—植物互作中扮演着核心作用，但是**我们任然不知道土壤化学遗产在多大程度上影响”后到“植物的生长和发育以及这些化学遗产在多大程度上影响到优先效应的形成**。\n\n# 实验设计\n\n{%asset_img 1.jpg %}\n\n这个研究的实验设计是比较简单的，同样的土，CK里面不种植植物，另外两个处理里面分别种植西洋石柱和紫羊矛，播种65天后开始后收集土壤溶液，每周收集两次，收集5周。每次收集的时候都用水把土壤淹没完，然后让土壤溶液在自然状态下从栽培容器底部的孔内流出，收集。收集完以后为了避免颗粒物和微生物的干扰，将收集到的土壤溶液过0.2$\\mu$m的滤膜。收集到的土壤溶液一部分用于代谢组检测，检测的方法是LC-MS。另外一部分根系分泌物用于浇灌（实验Ⅱ）。\n\n# 植物生长对土壤化学遗产的影响\n\n首先是比较了三种处理下土壤溶液中代谢物的差异（下图a），可以看到的是没有种植物的土壤溶液和种植物的两个不同，分的很开。其次比较了三种处理下的代谢物的丰度情况（下图b），种植植物后，代谢物丰度明显更高了。代谢物丰度和可溶性有机碳（DOC）也呈现出明显的正相关关系（下图c）。\n\n{%asset_img 2.jpg %}\n\n# 土壤化学遗传对”后到“植物的影响\n\n通过对一些列指标的比较，发现不同来源的土壤化学遗传会影响紫羊茅，但是不影响（or影响很小）西洋石竹。\n\n{%asset_img 3.jpg %}\n\n{%asset_img 4.jpg %}\n\n{%asset_img 5.jpg %}\n\n# 结构方程分析\n\n最后还进行了结构方程模型分析。\n\n{%asset_img 6.jpg %}\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","source":"_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应.md","raw":"---\ntitle: 土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应\ntags: 文献\ncategories: 文献\nabbrlink: 5d1ec1f\ndate: 2021-01-22 10:27:18\n---\n\n# 摘要\n\n土壤遗产在优先效应的形成过程中有着重要的作用。然而我们还不知道<!-- more -->土壤中的植物种类对“土壤代谢”的影响到底有多大，我们也不知道土壤化学遗产是否影响“后到”植物。为了验证这些猜想，该研究收集了来自西洋石竹和紫羊茅的土壤溶液，然后评估这些不同的土壤溶液对西洋石竹和紫羊茅的影响，包括生长、生物量分布及功能形状等。\n\n结果表明，来自西洋石竹和紫羊茅的土壤溶液的代谢物在组成和化学多样性上具有差异。两类土壤化学遗产对紫羊茅都没有任何影响，但是两类土壤溶液都会影响西洋石竹的“根系觅食”（root foraging）。结构方程模型表明，西洋石竹减少土壤的勘探（reduced soil exploration by *D. deltoides*）是通过根系生长途径( 西洋石竹代谢物)或根系性状途径(紫羊茅代谢物)引起的。根系觅食减少与总氮吸收减少无关。\n\n这个研究说明土壤化学遗产能够通过影响“后到”植物的根系觅食来“创造”地下部分的优先效应。\n\n# 背景\n\n优先效应（Priority effects）：可以简单理解成“先来后到”，即某个地方“先来”的植物会影响”后到“的植物的生长、发育和/或繁殖。\n\n引起优先效应发生的机制主要有两种：\n\n- 生态位抢占（niche preemption）：”先来“的植物会消耗生态位上的关键资源，如空间、光即土壤营养等，如果生态位抢占是形成优先效应主要的因素的话，那”后到“的植物的生长、发育会受到负向影响。\n- 生态位修饰（niche modification）：”先来“的植物会影响生态位的可利用类型，从而影响”后到“的植物，此种情况下”后到“的植物会出现两种情况：被”先来“的植物促进或抑制。\n\n研究生态位修饰驱动的优先效应产生的研究主要几种在植物土壤反馈实验（plant-soil feedback, PSF）。根系分泌物是土传遗产的重要组成部分。先前的研究发现：\n\n- 根系分泌物种的代谢物会影响根际真/细菌群落，受影响的真/细菌群落会激发PSF，进而影响植物的生长和防御；\n- 根系分泌的化感物质会影响邻近植物的生长；根系分泌物可以作为近邻识别的化学线索。\n\n大量的研究证据表明根系分泌物在构建根际微生物组和介导植物—植物互作中扮演着核心作用，但是**我们任然不知道土壤化学遗产在多大程度上影响”后到“植物的生长和发育以及这些化学遗产在多大程度上影响到优先效应的形成**。\n\n# 实验设计\n\n{%asset_img 1.jpg %}\n\n这个研究的实验设计是比较简单的，同样的土，CK里面不种植植物，另外两个处理里面分别种植西洋石柱和紫羊矛，播种65天后开始后收集土壤溶液，每周收集两次，收集5周。每次收集的时候都用水把土壤淹没完，然后让土壤溶液在自然状态下从栽培容器底部的孔内流出，收集。收集完以后为了避免颗粒物和微生物的干扰，将收集到的土壤溶液过0.2$\\mu$m的滤膜。收集到的土壤溶液一部分用于代谢组检测，检测的方法是LC-MS。另外一部分根系分泌物用于浇灌（实验Ⅱ）。\n\n# 植物生长对土壤化学遗产的影响\n\n首先是比较了三种处理下土壤溶液中代谢物的差异（下图a），可以看到的是没有种植物的土壤溶液和种植物的两个不同，分的很开。其次比较了三种处理下的代谢物的丰度情况（下图b），种植植物后，代谢物丰度明显更高了。代谢物丰度和可溶性有机碳（DOC）也呈现出明显的正相关关系（下图c）。\n\n{%asset_img 2.jpg %}\n\n# 土壤化学遗传对”后到“植物的影响\n\n通过对一些列指标的比较，发现不同来源的土壤化学遗传会影响紫羊茅，但是不影响（or影响很小）西洋石竹。\n\n{%asset_img 3.jpg %}\n\n{%asset_img 4.jpg %}\n\n{%asset_img 5.jpg %}\n\n# 结构方程分析\n\n最后还进行了结构方程模型分析。\n\n{%asset_img 6.jpg %}\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","slug":"土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcma0056r0g034bebed4","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>土壤遗产在优先效应的形成过程中有着重要的作用。然而我们还不知道<span id=\"more\"></span>土壤中的植物种类对“土壤代谢”的影响到底有多大，我们也不知道土壤化学遗产是否影响“后到”植物。为了验证这些猜想，该研究收集了来自西洋石竹和紫羊茅的土壤溶液，然后评估这些不同的土壤溶液对西洋石竹和紫羊茅的影响，包括生长、生物量分布及功能形状等。</p>\n<p>结果表明，来自西洋石竹和紫羊茅的土壤溶液的代谢物在组成和化学多样性上具有差异。两类土壤化学遗产对紫羊茅都没有任何影响，但是两类土壤溶液都会影响西洋石竹的“根系觅食”（root foraging）。结构方程模型表明，西洋石竹减少土壤的勘探（reduced soil exploration by <em>D. deltoides</em>）是通过根系生长途径( 西洋石竹代谢物)或根系性状途径(紫羊茅代谢物)引起的。根系觅食减少与总氮吸收减少无关。</p>\n<p>这个研究说明土壤化学遗产能够通过影响“后到”植物的根系觅食来“创造”地下部分的优先效应。</p>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>优先效应（Priority effects）：可以简单理解成“先来后到”，即某个地方“先来”的植物会影响”后到“的植物的生长、发育和/或繁殖。</p>\n<p>引起优先效应发生的机制主要有两种：</p>\n<ul>\n<li>生态位抢占（niche preemption）：”先来“的植物会消耗生态位上的关键资源，如空间、光即土壤营养等，如果生态位抢占是形成优先效应主要的因素的话，那”后到“的植物的生长、发育会受到负向影响。</li>\n<li>生态位修饰（niche modification）：”先来“的植物会影响生态位的可利用类型，从而影响”后到“的植物，此种情况下”后到“的植物会出现两种情况：被”先来“的植物促进或抑制。</li>\n</ul>\n<p>研究生态位修饰驱动的优先效应产生的研究主要几种在植物土壤反馈实验（plant-soil feedback, PSF）。根系分泌物是土传遗产的重要组成部分。先前的研究发现：</p>\n<ul>\n<li>根系分泌物种的代谢物会影响根际真/细菌群落，受影响的真/细菌群落会激发PSF，进而影响植物的生长和防御；</li>\n<li>根系分泌的化感物质会影响邻近植物的生长；根系分泌物可以作为近邻识别的化学线索。</li>\n</ul>\n<p>大量的研究证据表明根系分泌物在构建根际微生物组和介导植物—植物互作中扮演着核心作用，但是<strong>我们任然不知道土壤化学遗产在多大程度上影响”后到“植物的生长和发育以及这些化学遗产在多大程度上影响到优先效应的形成</strong>。</p>\n<h1 id=\"实验设计\"><a href=\"#实验设计\" class=\"headerlink\" title=\"实验设计\"></a>实验设计</h1><img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/1.jpg\" class=\"\">\n\n<p>这个研究的实验设计是比较简单的，同样的土，CK里面不种植植物，另外两个处理里面分别种植西洋石柱和紫羊矛，播种65天后开始后收集土壤溶液，每周收集两次，收集5周。每次收集的时候都用水把土壤淹没完，然后让土壤溶液在自然状态下从栽培容器底部的孔内流出，收集。收集完以后为了避免颗粒物和微生物的干扰，将收集到的土壤溶液过0.2$\\mu$m的滤膜。收集到的土壤溶液一部分用于代谢组检测，检测的方法是LC-MS。另外一部分根系分泌物用于浇灌（实验Ⅱ）。</p>\n<h1 id=\"植物生长对土壤化学遗产的影响\"><a href=\"#植物生长对土壤化学遗产的影响\" class=\"headerlink\" title=\"植物生长对土壤化学遗产的影响\"></a>植物生长对土壤化学遗产的影响</h1><p>首先是比较了三种处理下土壤溶液中代谢物的差异（下图a），可以看到的是没有种植物的土壤溶液和种植物的两个不同，分的很开。其次比较了三种处理下的代谢物的丰度情况（下图b），种植植物后，代谢物丰度明显更高了。代谢物丰度和可溶性有机碳（DOC）也呈现出明显的正相关关系（下图c）。</p>\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/2.jpg\" class=\"\">\n\n<h1 id=\"土壤化学遗传对”后到“植物的影响\"><a href=\"#土壤化学遗传对”后到“植物的影响\" class=\"headerlink\" title=\"土壤化学遗传对”后到“植物的影响\"></a>土壤化学遗传对”后到“植物的影响</h1><p>通过对一些列指标的比较，发现不同来源的土壤化学遗传会影响紫羊茅，但是不影响（or影响很小）西洋石竹。</p>\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/3.jpg\" class=\"\">\n\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/4.jpg\" class=\"\">\n\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/5.jpg\" class=\"\">\n\n<h1 id=\"结构方程分析\"><a href=\"#结构方程分析\" class=\"headerlink\" title=\"结构方程分析\"></a>结构方程分析</h1><p>最后还进行了结构方程模型分析。</p>\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/6.jpg\" class=\"\">\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>土壤遗产在优先效应的形成过程中有着重要的作用。然而我们还不知道","more":"土壤中的植物种类对“土壤代谢”的影响到底有多大，我们也不知道土壤化学遗产是否影响“后到”植物。为了验证这些猜想，该研究收集了来自西洋石竹和紫羊茅的土壤溶液，然后评估这些不同的土壤溶液对西洋石竹和紫羊茅的影响，包括生长、生物量分布及功能形状等。</p>\n<p>结果表明，来自西洋石竹和紫羊茅的土壤溶液的代谢物在组成和化学多样性上具有差异。两类土壤化学遗产对紫羊茅都没有任何影响，但是两类土壤溶液都会影响西洋石竹的“根系觅食”（root foraging）。结构方程模型表明，西洋石竹减少土壤的勘探（reduced soil exploration by <em>D. deltoides</em>）是通过根系生长途径( 西洋石竹代谢物)或根系性状途径(紫羊茅代谢物)引起的。根系觅食减少与总氮吸收减少无关。</p>\n<p>这个研究说明土壤化学遗产能够通过影响“后到”植物的根系觅食来“创造”地下部分的优先效应。</p>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>优先效应（Priority effects）：可以简单理解成“先来后到”，即某个地方“先来”的植物会影响”后到“的植物的生长、发育和/或繁殖。</p>\n<p>引起优先效应发生的机制主要有两种：</p>\n<ul>\n<li>生态位抢占（niche preemption）：”先来“的植物会消耗生态位上的关键资源，如空间、光即土壤营养等，如果生态位抢占是形成优先效应主要的因素的话，那”后到“的植物的生长、发育会受到负向影响。</li>\n<li>生态位修饰（niche modification）：”先来“的植物会影响生态位的可利用类型，从而影响”后到“的植物，此种情况下”后到“的植物会出现两种情况：被”先来“的植物促进或抑制。</li>\n</ul>\n<p>研究生态位修饰驱动的优先效应产生的研究主要几种在植物土壤反馈实验（plant-soil feedback, PSF）。根系分泌物是土传遗产的重要组成部分。先前的研究发现：</p>\n<ul>\n<li>根系分泌物种的代谢物会影响根际真/细菌群落，受影响的真/细菌群落会激发PSF，进而影响植物的生长和防御；</li>\n<li>根系分泌的化感物质会影响邻近植物的生长；根系分泌物可以作为近邻识别的化学线索。</li>\n</ul>\n<p>大量的研究证据表明根系分泌物在构建根际微生物组和介导植物—植物互作中扮演着核心作用，但是<strong>我们任然不知道土壤化学遗产在多大程度上影响”后到“植物的生长和发育以及这些化学遗产在多大程度上影响到优先效应的形成</strong>。</p>\n<h1 id=\"实验设计\"><a href=\"#实验设计\" class=\"headerlink\" title=\"实验设计\"></a>实验设计</h1><img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/1.jpg\" class=\"\">\n\n<p>这个研究的实验设计是比较简单的，同样的土，CK里面不种植植物，另外两个处理里面分别种植西洋石柱和紫羊矛，播种65天后开始后收集土壤溶液，每周收集两次，收集5周。每次收集的时候都用水把土壤淹没完，然后让土壤溶液在自然状态下从栽培容器底部的孔内流出，收集。收集完以后为了避免颗粒物和微生物的干扰，将收集到的土壤溶液过0.2$\\mu$m的滤膜。收集到的土壤溶液一部分用于代谢组检测，检测的方法是LC-MS。另外一部分根系分泌物用于浇灌（实验Ⅱ）。</p>\n<h1 id=\"植物生长对土壤化学遗产的影响\"><a href=\"#植物生长对土壤化学遗产的影响\" class=\"headerlink\" title=\"植物生长对土壤化学遗产的影响\"></a>植物生长对土壤化学遗产的影响</h1><p>首先是比较了三种处理下土壤溶液中代谢物的差异（下图a），可以看到的是没有种植物的土壤溶液和种植物的两个不同，分的很开。其次比较了三种处理下的代谢物的丰度情况（下图b），种植植物后，代谢物丰度明显更高了。代谢物丰度和可溶性有机碳（DOC）也呈现出明显的正相关关系（下图c）。</p>\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/2.jpg\" class=\"\">\n\n<h1 id=\"土壤化学遗传对”后到“植物的影响\"><a href=\"#土壤化学遗传对”后到“植物的影响\" class=\"headerlink\" title=\"土壤化学遗传对”后到“植物的影响\"></a>土壤化学遗传对”后到“植物的影响</h1><p>通过对一些列指标的比较，发现不同来源的土壤化学遗传会影响紫羊茅，但是不影响（or影响很小）西洋石竹。</p>\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/3.jpg\" class=\"\">\n\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/4.jpg\" class=\"\">\n\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/5.jpg\" class=\"\">\n\n<h1 id=\"结构方程分析\"><a href=\"#结构方程分析\" class=\"headerlink\" title=\"结构方程分析\"></a>结构方程分析</h1><p>最后还进行了结构方程模型分析。</p>\n<img src=\"/2021/01/22/%E5%9C%9F%E5%A3%A4%E5%8C%96%E5%AD%A6%E9%81%97%E4%BA%A7%E6%BF%80%E5%8F%91%E5%90%8E%E8%8C%AC%E6%A4%8D%E7%89%A9%E5%93%81%E7%A7%8D%E7%89%B9%E5%BC%82%E6%80%A7%E5%8F%8A%E8%83%8C%E6%99%AF%E4%BE%9D%E8%B5%96%E6%80%A7%E7%9A%84%E6%A0%B9%E7%B3%BB%E5%93%8D%E5%BA%94/6.jpg\" class=\"\">\n\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;\">&#108;&#x69;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#49;&#x31;&#55;&#x34;&#x32;&#51;&#64;&#102;&#x6f;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"我的统计函数:stat_xiang","abbrlink":"4b6eae4d","date":"2021-01-04T00:46:58.000Z","_content":"\n常用的基础统计函数每次都要对统计分析的结果进行提取，稍微有些麻烦，索性写个函数，后期封装成R包，方便自己直接调用。\n\n<!-- more -->\n\n```R\nlibrary(multcomp)\nlibrary(pgirmess)\n\nstat_xiang <- function(df, value, group, method, level){\n  df_sub <- df[,c(value, group)]\n  colnames(df_sub) <- c('value','group')\n  \n  # mean, sd, se and number\n  number <- as.data.frame(table(df_sub$group))\n  colnames(number) <- c('group','number')\n  df_sub <- merge(df_sub, number, by = 'group')\n  mean_value <- aggregate(df_sub$value, by = list(df_sub$group), FUN = mean)\n  colnames(mean_value) <- c('group','mean')\n  sd_value <- aggregate(df_sub$value, by = list(df_sub$group), FUN = sd)\n  colnames(sd_value) <- c('group','standard_deviation')\n  temp_df <- merge(mean_value, sd_value, by = 'group')\n  df_sub <- merge(df_sub, temp_df, by = 'group')\n  df_sub$standard_error <- df_sub$standard_deviation / sqrt(df_sub$number)\n  \n  # statistical analysis\n  if (length(unique(df_sub$group)) == 2) {\n    if (method == 't.test') {\n      fit <- t.test(value ~ group, data = df_sub)\n      pvalue <- fit[[\"p.value\"]]\n      signif <- ifelse(pvalue < 0.001,'***',\n                       ifelse(pvalue > 0.001 & pvalue < 0.01, '**',\n                              ifelse(pvalue > 0.05, 'NS','*')))\n    }\n    if (method == 'wilcox') {\n      fit <- wilcox.test(value ~ group, data = df_sub)\n      pvalue <- fit[[\"p.value\"]]\n      signif <- ifelse(pvalue < 0.001,'***',\n                       ifelse(pvalue > 0.001 & pvalue < 0.01, '**',\n                              ifelse(pvalue > 0.05, 'NS','*')))\n    }\n    # dataframe for statistical \n    sig <- data.frame(group = unique(df_sub$group),\n                      method = method,\n                      level = level,\n                      pvalue = pvalue,\n                      signif = c(signif,''))\n    \n  }\n  if (length(unique(df_sub$group)) > 2) {\n    if (method == 'anova') {\n      fit <- aov(value ~ group, data = df_sub)\n      pvalue <- summary(fit)[[1]][[\"Pr(>F)\"]][1]\n      tuk <- glht(fit, linfct = mcp(group = 'Tukey'))\n      signif <- cld(tuk, level = level, ddecreasing = TRUE)[[\"mcletters\"]][[\"Letters\"]]\n      signif <- as.data.frame(signif)\n      colnames(signif) = 'signif'\n      signif$group <- rownames(signif)\n      signif$method <- method\n      signif$pvalue <- pvalue\n      signif$level <- level\n      \n      sig <- signif[,c('group','method','level','pvalue','signif')]\n      \n    }\n    if (method == 'kruskal') {\n      fit <- kruskal.test(value ~ group, data = df_sub)\n      pvalue <- fit[[\"p.value\"]]\n      if (pvalue < 0.05) {\n        fit_2 <- as.data.frame(kruskalmc(df_sub$value, df_sub$group, probs = 1-level))\n        signif <- as.data.frame(fit_2)\n        signif$statistic <- rownames(signif)\n        colnames(signif)[2] <- 'group_comp'\n        signif$group <- unique(df_sub$group)\n        \n        sig <- data.frame(group = unique(df_sub$group),\n                          method = method,\n                          level = level,\n                          pvalue = pvalue)\n        sig <- merge(signif, sig, by = 'group')\n      }else{\n        sig <- data.frame(group = unique(df_sub$group),\n                          method = method,\n                          level = level,\n                          pvalue = pvalue,\n                          signif = 'NS')\n      }\n    }\n  }\n  results <- merge(df_sub,sig, by = 'group', all.x = TRUE)\n  \n  return(results)\n}\n```\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/我的统计函数-stat-xiang.md","raw":"---\ntitle: '我的统计函数:stat_xiang'\ntags: R语言\ncategories: R语言\nabbrlink: 4b6eae4d\ndate: 2021-01-04 08:46:58\n---\n\n常用的基础统计函数每次都要对统计分析的结果进行提取，稍微有些麻烦，索性写个函数，后期封装成R包，方便自己直接调用。\n\n<!-- more -->\n\n```R\nlibrary(multcomp)\nlibrary(pgirmess)\n\nstat_xiang <- function(df, value, group, method, level){\n  df_sub <- df[,c(value, group)]\n  colnames(df_sub) <- c('value','group')\n  \n  # mean, sd, se and number\n  number <- as.data.frame(table(df_sub$group))\n  colnames(number) <- c('group','number')\n  df_sub <- merge(df_sub, number, by = 'group')\n  mean_value <- aggregate(df_sub$value, by = list(df_sub$group), FUN = mean)\n  colnames(mean_value) <- c('group','mean')\n  sd_value <- aggregate(df_sub$value, by = list(df_sub$group), FUN = sd)\n  colnames(sd_value) <- c('group','standard_deviation')\n  temp_df <- merge(mean_value, sd_value, by = 'group')\n  df_sub <- merge(df_sub, temp_df, by = 'group')\n  df_sub$standard_error <- df_sub$standard_deviation / sqrt(df_sub$number)\n  \n  # statistical analysis\n  if (length(unique(df_sub$group)) == 2) {\n    if (method == 't.test') {\n      fit <- t.test(value ~ group, data = df_sub)\n      pvalue <- fit[[\"p.value\"]]\n      signif <- ifelse(pvalue < 0.001,'***',\n                       ifelse(pvalue > 0.001 & pvalue < 0.01, '**',\n                              ifelse(pvalue > 0.05, 'NS','*')))\n    }\n    if (method == 'wilcox') {\n      fit <- wilcox.test(value ~ group, data = df_sub)\n      pvalue <- fit[[\"p.value\"]]\n      signif <- ifelse(pvalue < 0.001,'***',\n                       ifelse(pvalue > 0.001 & pvalue < 0.01, '**',\n                              ifelse(pvalue > 0.05, 'NS','*')))\n    }\n    # dataframe for statistical \n    sig <- data.frame(group = unique(df_sub$group),\n                      method = method,\n                      level = level,\n                      pvalue = pvalue,\n                      signif = c(signif,''))\n    \n  }\n  if (length(unique(df_sub$group)) > 2) {\n    if (method == 'anova') {\n      fit <- aov(value ~ group, data = df_sub)\n      pvalue <- summary(fit)[[1]][[\"Pr(>F)\"]][1]\n      tuk <- glht(fit, linfct = mcp(group = 'Tukey'))\n      signif <- cld(tuk, level = level, ddecreasing = TRUE)[[\"mcletters\"]][[\"Letters\"]]\n      signif <- as.data.frame(signif)\n      colnames(signif) = 'signif'\n      signif$group <- rownames(signif)\n      signif$method <- method\n      signif$pvalue <- pvalue\n      signif$level <- level\n      \n      sig <- signif[,c('group','method','level','pvalue','signif')]\n      \n    }\n    if (method == 'kruskal') {\n      fit <- kruskal.test(value ~ group, data = df_sub)\n      pvalue <- fit[[\"p.value\"]]\n      if (pvalue < 0.05) {\n        fit_2 <- as.data.frame(kruskalmc(df_sub$value, df_sub$group, probs = 1-level))\n        signif <- as.data.frame(fit_2)\n        signif$statistic <- rownames(signif)\n        colnames(signif)[2] <- 'group_comp'\n        signif$group <- unique(df_sub$group)\n        \n        sig <- data.frame(group = unique(df_sub$group),\n                          method = method,\n                          level = level,\n                          pvalue = pvalue)\n        sig <- merge(signif, sig, by = 'group')\n      }else{\n        sig <- data.frame(group = unique(df_sub$group),\n                          method = method,\n                          level = level,\n                          pvalue = pvalue,\n                          signif = 'NS')\n      }\n    }\n  }\n  results <- merge(df_sub,sig, by = 'group', all.x = TRUE)\n  \n  return(results)\n}\n```\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"我的统计函数-stat-xiang","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmb0059r0g09dxb1x10","comments":1,"layout":"post","photos":[],"link":"","content":"<p>常用的基础统计函数每次都要对统计分析的结果进行提取，稍微有些麻烦，索性写个函数，后期封装成R包，方便自己直接调用。</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(multcomp)</span><br><span class=\"line\">library(pgirmess)</span><br><span class=\"line\"></span><br><span class=\"line\">stat_xiang &lt;- <span class=\"keyword\">function</span>(df, value, group, method, level)&#123;</span><br><span class=\"line\">  df_sub &lt;- df[,<span class=\"built_in\">c</span>(value, group)]</span><br><span class=\"line\">  colnames(df_sub) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;value&#x27;</span>,<span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># mean, sd, se and number</span></span><br><span class=\"line\">  number &lt;- as.data.frame(table(df_sub$group))</span><br><span class=\"line\">  colnames(number) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;number&#x27;</span>)</span><br><span class=\"line\">  df_sub &lt;- merge(df_sub, number, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  mean_value &lt;- aggregate(df_sub$value, by = <span class=\"built_in\">list</span>(df_sub$group), FUN = mean)</span><br><span class=\"line\">  colnames(mean_value) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;mean&#x27;</span>)</span><br><span class=\"line\">  sd_value &lt;- aggregate(df_sub$value, by = <span class=\"built_in\">list</span>(df_sub$group), FUN = sd)</span><br><span class=\"line\">  colnames(sd_value) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;standard_deviation&#x27;</span>)</span><br><span class=\"line\">  temp_df &lt;- merge(mean_value, sd_value, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  df_sub &lt;- merge(df_sub, temp_df, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  df_sub$standard_error &lt;- df_sub$standard_deviation / <span class=\"built_in\">sqrt</span>(df_sub$number)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># statistical analysis</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">length</span>(unique(df_sub$group)) == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;t.test&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- t.test(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- fit[[<span class=\"string\">&quot;p.value&quot;</span>]]</span><br><span class=\"line\">      signif &lt;- ifelse(pvalue &lt; <span class=\"number\">0.001</span>,<span class=\"string\">&#x27;***&#x27;</span>,</span><br><span class=\"line\">                       ifelse(pvalue &gt; <span class=\"number\">0.001</span> &amp; pvalue &lt; <span class=\"number\">0.01</span>, <span class=\"string\">&#x27;**&#x27;</span>,</span><br><span class=\"line\">                              ifelse(pvalue &gt; <span class=\"number\">0.05</span>, <span class=\"string\">&#x27;NS&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>)))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;wilcox&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- wilcox.test(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- fit[[<span class=\"string\">&quot;p.value&quot;</span>]]</span><br><span class=\"line\">      signif &lt;- ifelse(pvalue &lt; <span class=\"number\">0.001</span>,<span class=\"string\">&#x27;***&#x27;</span>,</span><br><span class=\"line\">                       ifelse(pvalue &gt; <span class=\"number\">0.001</span> &amp; pvalue &lt; <span class=\"number\">0.01</span>, <span class=\"string\">&#x27;**&#x27;</span>,</span><br><span class=\"line\">                              ifelse(pvalue &gt; <span class=\"number\">0.05</span>, <span class=\"string\">&#x27;NS&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>)))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># dataframe for statistical </span></span><br><span class=\"line\">    sig &lt;- data.frame(group = unique(df_sub$group),</span><br><span class=\"line\">                      method = method,</span><br><span class=\"line\">                      level = level,</span><br><span class=\"line\">                      pvalue = pvalue,</span><br><span class=\"line\">                      <span class=\"built_in\">signif</span> = <span class=\"built_in\">c</span>(<span class=\"built_in\">signif</span>,<span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">length</span>(unique(df_sub$group)) &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;anova&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- aov(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- summary(fit)[[<span class=\"number\">1</span>]][[<span class=\"string\">&quot;Pr(&gt;F)&quot;</span>]][<span class=\"number\">1</span>]</span><br><span class=\"line\">      tuk &lt;- glht(fit, linfct = mcp(group = <span class=\"string\">&#x27;Tukey&#x27;</span>))</span><br><span class=\"line\">      signif &lt;- cld(tuk, level = level, ddecreasing = <span class=\"literal\">TRUE</span>)[[<span class=\"string\">&quot;mcletters&quot;</span>]][[<span class=\"string\">&quot;Letters&quot;</span>]]</span><br><span class=\"line\">      signif &lt;- as.data.frame(<span class=\"built_in\">signif</span>)</span><br><span class=\"line\">      colnames(<span class=\"built_in\">signif</span>) = <span class=\"string\">&#x27;signif&#x27;</span></span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$group &lt;- rownames(<span class=\"built_in\">signif</span>)</span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$method &lt;- method</span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$pvalue &lt;- pvalue</span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$level &lt;- level</span><br><span class=\"line\">      </span><br><span class=\"line\">      sig &lt;- <span class=\"built_in\">signif</span>[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;method&#x27;</span>,<span class=\"string\">&#x27;level&#x27;</span>,<span class=\"string\">&#x27;pvalue&#x27;</span>,<span class=\"string\">&#x27;signif&#x27;</span>)]</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;kruskal&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- kruskal.test(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- fit[[<span class=\"string\">&quot;p.value&quot;</span>]]</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pvalue &lt; <span class=\"number\">0.05</span>) &#123;</span><br><span class=\"line\">        fit_2 &lt;- as.data.frame(kruskalmc(df_sub$value, df_sub$group, probs = <span class=\"number\">1</span>-level))</span><br><span class=\"line\">        signif &lt;- as.data.frame(fit_2)</span><br><span class=\"line\">        <span class=\"built_in\">signif</span>$statistic &lt;- rownames(<span class=\"built_in\">signif</span>)</span><br><span class=\"line\">        colnames(<span class=\"built_in\">signif</span>)[<span class=\"number\">2</span>] &lt;- <span class=\"string\">&#x27;group_comp&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">signif</span>$group &lt;- unique(df_sub$group)</span><br><span class=\"line\">        </span><br><span class=\"line\">        sig &lt;- data.frame(group = unique(df_sub$group),</span><br><span class=\"line\">                          method = method,</span><br><span class=\"line\">                          level = level,</span><br><span class=\"line\">                          pvalue = pvalue)</span><br><span class=\"line\">        sig &lt;- merge(<span class=\"built_in\">signif</span>, sig, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        sig &lt;- data.frame(group = unique(df_sub$group),</span><br><span class=\"line\">                          method = method,</span><br><span class=\"line\">                          level = level,</span><br><span class=\"line\">                          pvalue = pvalue,</span><br><span class=\"line\">                          <span class=\"built_in\">signif</span> = <span class=\"string\">&#x27;NS&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  results &lt;- merge(df_sub,sig, by = <span class=\"string\">&#x27;group&#x27;</span>, all.x = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">return</span>(results)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>常用的基础统计函数每次都要对统计分析的结果进行提取，稍微有些麻烦，索性写个函数，后期封装成R包，方便自己直接调用。</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(multcomp)</span><br><span class=\"line\">library(pgirmess)</span><br><span class=\"line\"></span><br><span class=\"line\">stat_xiang &lt;- <span class=\"keyword\">function</span>(df, value, group, method, level)&#123;</span><br><span class=\"line\">  df_sub &lt;- df[,<span class=\"built_in\">c</span>(value, group)]</span><br><span class=\"line\">  colnames(df_sub) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;value&#x27;</span>,<span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># mean, sd, se and number</span></span><br><span class=\"line\">  number &lt;- as.data.frame(table(df_sub$group))</span><br><span class=\"line\">  colnames(number) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;number&#x27;</span>)</span><br><span class=\"line\">  df_sub &lt;- merge(df_sub, number, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  mean_value &lt;- aggregate(df_sub$value, by = <span class=\"built_in\">list</span>(df_sub$group), FUN = mean)</span><br><span class=\"line\">  colnames(mean_value) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;mean&#x27;</span>)</span><br><span class=\"line\">  sd_value &lt;- aggregate(df_sub$value, by = <span class=\"built_in\">list</span>(df_sub$group), FUN = sd)</span><br><span class=\"line\">  colnames(sd_value) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;standard_deviation&#x27;</span>)</span><br><span class=\"line\">  temp_df &lt;- merge(mean_value, sd_value, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  df_sub &lt;- merge(df_sub, temp_df, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">  df_sub$standard_error &lt;- df_sub$standard_deviation / <span class=\"built_in\">sqrt</span>(df_sub$number)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># statistical analysis</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">length</span>(unique(df_sub$group)) == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;t.test&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- t.test(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- fit[[<span class=\"string\">&quot;p.value&quot;</span>]]</span><br><span class=\"line\">      signif &lt;- ifelse(pvalue &lt; <span class=\"number\">0.001</span>,<span class=\"string\">&#x27;***&#x27;</span>,</span><br><span class=\"line\">                       ifelse(pvalue &gt; <span class=\"number\">0.001</span> &amp; pvalue &lt; <span class=\"number\">0.01</span>, <span class=\"string\">&#x27;**&#x27;</span>,</span><br><span class=\"line\">                              ifelse(pvalue &gt; <span class=\"number\">0.05</span>, <span class=\"string\">&#x27;NS&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>)))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;wilcox&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- wilcox.test(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- fit[[<span class=\"string\">&quot;p.value&quot;</span>]]</span><br><span class=\"line\">      signif &lt;- ifelse(pvalue &lt; <span class=\"number\">0.001</span>,<span class=\"string\">&#x27;***&#x27;</span>,</span><br><span class=\"line\">                       ifelse(pvalue &gt; <span class=\"number\">0.001</span> &amp; pvalue &lt; <span class=\"number\">0.01</span>, <span class=\"string\">&#x27;**&#x27;</span>,</span><br><span class=\"line\">                              ifelse(pvalue &gt; <span class=\"number\">0.05</span>, <span class=\"string\">&#x27;NS&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>)))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># dataframe for statistical </span></span><br><span class=\"line\">    sig &lt;- data.frame(group = unique(df_sub$group),</span><br><span class=\"line\">                      method = method,</span><br><span class=\"line\">                      level = level,</span><br><span class=\"line\">                      pvalue = pvalue,</span><br><span class=\"line\">                      <span class=\"built_in\">signif</span> = <span class=\"built_in\">c</span>(<span class=\"built_in\">signif</span>,<span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">length</span>(unique(df_sub$group)) &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;anova&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- aov(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- summary(fit)[[<span class=\"number\">1</span>]][[<span class=\"string\">&quot;Pr(&gt;F)&quot;</span>]][<span class=\"number\">1</span>]</span><br><span class=\"line\">      tuk &lt;- glht(fit, linfct = mcp(group = <span class=\"string\">&#x27;Tukey&#x27;</span>))</span><br><span class=\"line\">      signif &lt;- cld(tuk, level = level, ddecreasing = <span class=\"literal\">TRUE</span>)[[<span class=\"string\">&quot;mcletters&quot;</span>]][[<span class=\"string\">&quot;Letters&quot;</span>]]</span><br><span class=\"line\">      signif &lt;- as.data.frame(<span class=\"built_in\">signif</span>)</span><br><span class=\"line\">      colnames(<span class=\"built_in\">signif</span>) = <span class=\"string\">&#x27;signif&#x27;</span></span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$group &lt;- rownames(<span class=\"built_in\">signif</span>)</span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$method &lt;- method</span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$pvalue &lt;- pvalue</span><br><span class=\"line\">      <span class=\"built_in\">signif</span>$level &lt;- level</span><br><span class=\"line\">      </span><br><span class=\"line\">      sig &lt;- <span class=\"built_in\">signif</span>[,<span class=\"built_in\">c</span>(<span class=\"string\">&#x27;group&#x27;</span>,<span class=\"string\">&#x27;method&#x27;</span>,<span class=\"string\">&#x27;level&#x27;</span>,<span class=\"string\">&#x27;pvalue&#x27;</span>,<span class=\"string\">&#x27;signif&#x27;</span>)]</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;kruskal&#x27;</span>) &#123;</span><br><span class=\"line\">      fit &lt;- kruskal.test(value ~ group, data = df_sub)</span><br><span class=\"line\">      pvalue &lt;- fit[[<span class=\"string\">&quot;p.value&quot;</span>]]</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pvalue &lt; <span class=\"number\">0.05</span>) &#123;</span><br><span class=\"line\">        fit_2 &lt;- as.data.frame(kruskalmc(df_sub$value, df_sub$group, probs = <span class=\"number\">1</span>-level))</span><br><span class=\"line\">        signif &lt;- as.data.frame(fit_2)</span><br><span class=\"line\">        <span class=\"built_in\">signif</span>$statistic &lt;- rownames(<span class=\"built_in\">signif</span>)</span><br><span class=\"line\">        colnames(<span class=\"built_in\">signif</span>)[<span class=\"number\">2</span>] &lt;- <span class=\"string\">&#x27;group_comp&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">signif</span>$group &lt;- unique(df_sub$group)</span><br><span class=\"line\">        </span><br><span class=\"line\">        sig &lt;- data.frame(group = unique(df_sub$group),</span><br><span class=\"line\">                          method = method,</span><br><span class=\"line\">                          level = level,</span><br><span class=\"line\">                          pvalue = pvalue)</span><br><span class=\"line\">        sig &lt;- merge(<span class=\"built_in\">signif</span>, sig, by = <span class=\"string\">&#x27;group&#x27;</span>)</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        sig &lt;- data.frame(group = unique(df_sub$group),</span><br><span class=\"line\">                          method = method,</span><br><span class=\"line\">                          level = level,</span><br><span class=\"line\">                          pvalue = pvalue,</span><br><span class=\"line\">                          <span class=\"built_in\">signif</span> = <span class=\"string\">&#x27;NS&#x27;</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  results &lt;- merge(df_sub,sig, by = <span class=\"string\">&#x27;group&#x27;</span>, all.x = <span class=\"literal\">TRUE</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"built_in\">return</span>(results)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#x6c;&#105;&#120;&#105;&#x61;&#x6e;&#x67;&#x31;&#x31;&#x37;&#x34;&#x32;&#x33;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#110;&#103;&#49;&#x31;&#55;&#52;&#50;&#51;&#64;&#102;&#111;&#120;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"文献检索、追踪、阅读等小总结","abbrlink":"6cdff7bd","date":"2020-12-14T08:29:16.000Z","_content":"\n去年写了个小总结，包含了文献检索等（简书地址：https://www.jianshu.com/p/3e17e9b7fac8）。\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n时间悄然过去一年多了，关于文献检索、追踪及下载有了新的认识。从头梳理一遍，一方面希望能帮助到实验室的师弟师妹，另外一方面也是对自己知识体系的一个梳理。（注：本文部分内容来自互联网，如有侵权，请联系我们进行修改或删除）\n\n# 文献分类\n\n按照文字分类，可以简单将文献分成两类：\n\n1. 中文；\n2. 英文。\n\n按照文章类型来分，可以分成如下几类：\n\n1. Article（我称它为“研究论文”）\n2. Review（“综述”）\n3. Letter（“信”）\n\n其中最常见的是Article，其次是Review。\n\n# 文献阅读顺序\n\n文献千千万，那怎么开始阅读呢？\n\n如果进入的领域是全新的，那我的经验是这样的：\n\n本实验室和自己方向相关的师兄师姐的毕业论文→本领域的优秀博士论文→优秀中文综述→优秀英文综述→优秀Article。\n\n为什么先看师兄师姐的论文？\n\n1. 毕业论文中有详尽的研究背景、试验方法等；\n2. 毕业论文中用到的仪器通常是本实验室就有的，实现了解什么仪器能解决什么问题；\n3. 从师兄师姐毕业论文中的展望部分说不定就是自己的研究方向呢。\n\n其次是优秀的博士论文的原因有这样几点：\n\n1. 文字是中文，看起来OK；\n2. 优秀的博士论文有详尽的文献综述，对专业名词还有详尽的解释，不用漫山遍野查专业名词的意思；\n3. 优秀博士论文的参考文献通常是本领域最新的。\n\n优秀的中文综述和英文综述是互补的。\n\n我还记得导师给我的第一篇文章是：**Root exudates: the hidden part of plant defense**$^{[1]}$。真的是看到崩溃啊，根本看不懂那些专有名词啊。果断放弃了，后面再去看的时候好很多了。\n\n优秀的综述有什么用呢？一个最大的用处在后面揭晓。\n\nArticle就是日常浏览or精读的文献类型了。\n\n# 一篇文献的组成及功能\n\n以Article文章为例，一篇文献通常有如下部分组成：\n\n1. 文献标题：通常文献标题就是文献内容的高度概括，在浏览文献的时候看看标题就知道是不是自己要的文献了；\n2. 作者信息：每个领域做得非常好的机构/研究者往往就那么几个，可以重点关注某些大佬的是实验室动态；\n3. 摘要：摘要是一篇文章的精髓。通常包含了背景、目的、方法、结果、结论、展望等几个部分，日常看文献也大多是看这个部分；\n4. 关键词：这个部分就是这篇文献的主要相关的东西，而这个部分通常是后面我们讲文献追踪时用到的；\n5. 研究背景：在这个部分通常会对本领域的研究进行简单的总结，然后说还有说明问题有待解决，而“我这个研究刚好解决了这个问题”；\n6. 材料与方法：在这个部分，优秀的期刊通常会写得很详细，如用什么植株、有没有用突变体、怎么得到突变体等，这个部分有个越来越重要的内容是数据和代码，尤其是生命科学领域，通常会涉及到测序和分析，优秀的文章通常是提供对应的数据和代码的，在这个部分通常能知道当前主流的方法是什么，用了什么软件等；\n7. 结果：这个部分就是对每个图的描述；\n8. 讨论：结合前人的研究，对自己的试验结果进行讨论；\n9. 结论：这篇文献的结论是什么；\n10. 致谢：对研究有帮助的人/机构/公司进行感谢；\n11. 附件材料：正文的图表是最关键最重要的内容，有些文献会附上附件进行更详尽的解释；\n12. 参考文献：这篇文献引用的文献。\n\n# 如何检索文献\n\n首先先找实验室师兄师姐相关的毕业论文进行阅读。\n\n检索网站：\n\n1. 中文：中国知网基本够了，其他的还有万方、百度学术、必应学术等。推荐的顺序是：知网＞必应学术＞百度学术。关于知网的使用技巧参照知乎帖子：https://zhuanlan.zhihu.com/p/52476553\n\n2. 英文：谷歌学术、WOS（Web Of Science）、Pubmed、必应学术、百度学术、知网。推荐的使用顺序是： 谷歌学术＞Pubmed＞WOS>必应学术＞百度学术。WOS的话需要登录才能使用，通过WOS检索是最准确的，如果学校没有购买数据库的话只能去淘宝买账号了。PubMed的话访问速度比较慢，如果习惯使用PubMed的话，可以参照https://mp.weixin.qq.com/s?src=11&timestamp=1603760985&ver=2669&signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&new=1设置影响因子筛选器，就可以按照影响因子对文献进行筛选了。百度学术、必应学术及知网我使用较少。\n   谷歌学术在国内是无法正常访问的，但是可以通过浏览器插件或者镜像网站进行访问。浏览器插件的使用参照：https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&mid=2247492278&idx=1&sn=ff9afc876e1f6da5029d27fde52e8c08&chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&scene=21#wechat_redirect\n   镜像网站目前这几个可以用：\n\n    https://xueshu.lanfanshu.cn/\n   https://xueshu.kiphub.com/\n    https://xueshu.lanfanshu.cn/\n   除此之外，推荐一个集成网站：大木虫学术导航http://www.4243.net/，里面能够找到各种常用的学术网站，包括谷歌学术等。\n\n   {% asset_img 2.png %}\n\n如何检索文献呢？我们根据文献的组成来看看怎么检索文献：\n\n1. 按标题进行检索：快准狠，没得说，随便找个数据库都可以；\n2. 按作者进行检索：通常能够找到某个研究者的所有论文，这时候就需要根据时间、影响因子、被引等信息进行筛选；\n3. 按关键词进行筛选：这是最常见的检索方式，如以`Root exudates`进行检索，还可以假设一些检索限定词进行检索，如`\"Root exudates\"`和`Root exudates` 是不一样的，加上引号以后就是把引号里面的内容当成了一个整体进行检索了，`”root exudates“ 2015`表示的是限定在2015年进行检索；除此之外，还可以加上一些逻辑连接词进行检索，如`AND`、`OR`以及`NOT`；\n4. 从参考文献反推：找到一篇优秀的综述，优秀的综述引用的文献通常是最经典、最新的，直接从这篇综述的参考文献里面去找文献，这样最大的好处是这些文献都是和这个领域高度相关的，再稍加研究就能发现这个领域的大佬是那些了，如**Root exudates: the hidden part of plant defense**$^{[1]}$这篇综述的参考文献就有100篇，如果看（浏览）完这100篇文献，那对根系分泌物肯定能有个了解了。\n\n{% asset_img 3.png %}\n\n\n\n# 文献下载\n\n检索完文献后通常需要对文献进行下载，下载分成那么几种情况：\n\n1. 学校购买了对应数据库的直接连接上校园网下载即可，如中国知网，大多高校都购买了，直接连上校园网下载即可；\n\n2. 如果学校没有购买数据库或者是需要下载文献的时候没法连接校园网呢：\n\n   - 请别人下载，我就经常请985的同学帮忙下载文献，好的学校通常数据库也买得多；\n\n   - 知网免费下载网站：https://www.cn-ki.net/，每天可以免费下载3篇（好像）；\n\n   - Sci-Hub：这个网站（http://sci-hub.ren/）在科研圈的重要性，那是不言自明的，通常能够下载到90%以上的文献。不过由于被各大出版社封杀，网站也在不断换地址，网址无法使用时去维基百科看看新的网址就可以了：https://en.wikipedia.org/wiki/Sci-Hub。这个网站我的体验是校园网下载比手机热点块。\n     {% asset_img 4.png %}\n\n     除了通过DOI或者PMID进行下载外，Sci-Hub还有个更酷的使用的方法：Chrome装上油猴插件，再装上**Sci-hub button**这个插件，然后就会对网页上的DOI号进行自动标识，只需要点那个图标就能进行文献下载了，如下图：\n\n     {% asset_img 5.png %}\n\n3. 其他文献下载方法\n   对那些在知网上需要收费的文献，可以直接到期刊的网站看看是不是可以下载，我试了很多次，通常在期刊网页是可以免费下载的。对英文期刊，如果Sci-Hub无法下载的话，可以去researchgate看看有没有完整的PDF版本；如果上述所有方法都无法下载到的话，可以发邮件给通讯作者试试看能不能得到PDF版本。\n\n4. 书籍下载\n   通常需要下载一些书籍，我下载书籍通常只用两种方法就能搞定：\n\n   - 就摸搜素：https://www.jiumodiary.com/。这个网站能找到大部分书籍，不管是中文还是英文的都可以找到；\n   - 上面这个网站找不到的，我就去淘宝，淘宝也没有的话，我就放弃了。\n\n5. 试验方法下载\n\n   当前最新的系统的试验方法下载的网站是https://bio-protocol.org/cn/Default.aspx。详细到用什么耗材都会写，更酷炫的是还有视频啊。这个网站上的试验方法通常是优秀文献中的试验方法进行总结的；还能发现数据分析教程，可以说是个宝藏了。\n\n# 文献追踪\n\n每时每刻新的文献浩如烟海，该怎么知道感兴趣领域的最新进展呢？这里说的“最新进展”是相对的，真真正正最新的东西在研究人员的脑海中，发表出来的说不定都是一两年前的工作了。那该怎么追踪这些最新的动态呢？我主要有下面这几种方法：\n\n1. 关注公众号\n   关注优秀的公众号，这些优秀的公众号通常会推送最新发表的文献，如10月27日凌晨中科院遗传发育所在***Nature genetic***上发表了小麦的群体遗传文章，马上就有公众号进行推送了。\n   {% asset_img 6.png %}\n2. Stork文献鸟\n   网址：https://www.storkapp.me/?logout=1。这个网站是免费注册的，使用超级简单，邮箱注册，然后添加关键词，再设置推送频率（每天或每周）就可以了。关键词可以是研究人员的姓名、研究者机构(高校、院所等)、也可以是真真正正的关键词，也就是文献里面的`Key words`。现在添加关键词以后还能自动评估关键词的质量。\n   {% asset_img 8.png %}\n   {% asset_img 7.png %}\n3. 不定期浏览期刊网站\n   这种方法很难get到很相关的文献，但是可以浏览浏览，如果运气好的话，能发现新的东西。\n4. RSS订阅\n   我后来很少用RSS订阅了，就不展开说了，有前面几种方法足够了。\n\n# 文献管理\n\n文献管理软件有好多种，针对中文英文都有不同的软件，具体比较可以参照这个帖子：https://www.biomart.cn/experiment/793/2714581.htm，然后选择自己喜欢的软件即可。我最常用的是Endnote，加上OneDrive云同步，简直不要太爽，可以多台电脑无缝衔接。使用教程的话可以参考中科大罗昭锋老师的教程：https://www.bilibili.com/video/BV1Bz411B7qZ?from=search&seid=12380402443859107521。公众号的话可以看看`子聿学长`。我使用Endnote的原因有几点：\n\n1. 插入文献管理方便（习惯了就不想换软件了）\n   {% asset_img 9.png %}\n\n2. 插入参考文献方便\n\n   写毕业论文的时候就知道Endnote有多爽了，不但有现成的期刊引文格式，还能自定义，足以应付各种参考文献格式要求。\n\n在使用过程中发现几个小的不足：\n\n1. 谷歌学术导出的参考文献格式通常会把期刊显示到作者一栏，需要手动修改；\n2. 直接在文献主页导出`RIS`格式的比`enw`格式的更容易正确识别。\n\n在公众号后台回复`endnote`就能下载到中科大大账号版本的Endnote，无需破解，完全正版。\n\n# 文献笔记与输出\n\n输入与输出是同等重要的，输入是吸收的过程，输出是对吸收的知识进行重塑的过程，有没有真真正正了解某个知识点，最好的方法就是看看能不能无压力输出。关于文献输入，我有一些小的体会：\n\n1. 在文献中看当前的研究前沿热点，看看那些优秀的文章都在做啥；\n2. 在材料与方法中找到当下最新的方法，重点关注自己能够用到的方法、软件等；\n3. 在讨论部分看看这个研究工作还有啥能做的，指出这个研究的不足之处（这个还有待加进）；\n4. 仔细研究研究文章中的图表，看看别人是怎么用图表来展示数据的，往后自己的类似数据就可以借鉴类似的展示方法；\n5. 往往第一篇英文文献是最痛苦的，专业名词看不懂、句子看不懂、图看不懂，没办法，只能慢慢来；\n6. 不推荐某些全文翻译软件，如X云文献翻译，翻译出来了虽然看着很快，但是在无形中失去了那个过程，以后遇到英文文献还是看不懂（个人观点）（PS：专业名词的翻译的话推荐`知网学术翻译`：http://dict.cnki.net/，日常翻译推荐谷歌翻译：https://translate.google.cn/）。\n\n有了输入之后应该有输出，输出的方式很多，如做报告、写公众号（`南农LorMe`在文献分享方面做得真的很棒）等，也有很多的个人平台可以进行输出，如简书等。\n\n# 后记\n\n文献阅读是个过程。研一，导师的要求是一周一篇英文文献精读+PPT汇报，那时候的感受就是痛苦啊；现在是基本每周一篇英文文献+公众号，也很庆幸这两年都是这样过来的，现在看文献基本不用翻译了，看本领域的英文书籍也基本能应付，偶尔遇到专业知识的盲点的时候再查缺补漏。\n\n>人生没有无用的经历。\n\n# 参考文献\n\n>[1] Baetz U, Martinoia E. Root exudates: the hidden part of plant defense[J]. ***Trends in Plant Science***, 2014, 19(2): 90-98.\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/文献检索、追踪、阅读等小总结.md","raw":"---\ntitle: 文献检索、追踪、阅读等小总结\ntags: 文献\ncategories: 杂文\nabbrlink: 6cdff7bd\ndate: 2020-12-14 16:29:16\n---\n\n去年写了个小总结，包含了文献检索等（简书地址：https://www.jianshu.com/p/3e17e9b7fac8）。\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n时间悄然过去一年多了，关于文献检索、追踪及下载有了新的认识。从头梳理一遍，一方面希望能帮助到实验室的师弟师妹，另外一方面也是对自己知识体系的一个梳理。（注：本文部分内容来自互联网，如有侵权，请联系我们进行修改或删除）\n\n# 文献分类\n\n按照文字分类，可以简单将文献分成两类：\n\n1. 中文；\n2. 英文。\n\n按照文章类型来分，可以分成如下几类：\n\n1. Article（我称它为“研究论文”）\n2. Review（“综述”）\n3. Letter（“信”）\n\n其中最常见的是Article，其次是Review。\n\n# 文献阅读顺序\n\n文献千千万，那怎么开始阅读呢？\n\n如果进入的领域是全新的，那我的经验是这样的：\n\n本实验室和自己方向相关的师兄师姐的毕业论文→本领域的优秀博士论文→优秀中文综述→优秀英文综述→优秀Article。\n\n为什么先看师兄师姐的论文？\n\n1. 毕业论文中有详尽的研究背景、试验方法等；\n2. 毕业论文中用到的仪器通常是本实验室就有的，实现了解什么仪器能解决什么问题；\n3. 从师兄师姐毕业论文中的展望部分说不定就是自己的研究方向呢。\n\n其次是优秀的博士论文的原因有这样几点：\n\n1. 文字是中文，看起来OK；\n2. 优秀的博士论文有详尽的文献综述，对专业名词还有详尽的解释，不用漫山遍野查专业名词的意思；\n3. 优秀博士论文的参考文献通常是本领域最新的。\n\n优秀的中文综述和英文综述是互补的。\n\n我还记得导师给我的第一篇文章是：**Root exudates: the hidden part of plant defense**$^{[1]}$。真的是看到崩溃啊，根本看不懂那些专有名词啊。果断放弃了，后面再去看的时候好很多了。\n\n优秀的综述有什么用呢？一个最大的用处在后面揭晓。\n\nArticle就是日常浏览or精读的文献类型了。\n\n# 一篇文献的组成及功能\n\n以Article文章为例，一篇文献通常有如下部分组成：\n\n1. 文献标题：通常文献标题就是文献内容的高度概括，在浏览文献的时候看看标题就知道是不是自己要的文献了；\n2. 作者信息：每个领域做得非常好的机构/研究者往往就那么几个，可以重点关注某些大佬的是实验室动态；\n3. 摘要：摘要是一篇文章的精髓。通常包含了背景、目的、方法、结果、结论、展望等几个部分，日常看文献也大多是看这个部分；\n4. 关键词：这个部分就是这篇文献的主要相关的东西，而这个部分通常是后面我们讲文献追踪时用到的；\n5. 研究背景：在这个部分通常会对本领域的研究进行简单的总结，然后说还有说明问题有待解决，而“我这个研究刚好解决了这个问题”；\n6. 材料与方法：在这个部分，优秀的期刊通常会写得很详细，如用什么植株、有没有用突变体、怎么得到突变体等，这个部分有个越来越重要的内容是数据和代码，尤其是生命科学领域，通常会涉及到测序和分析，优秀的文章通常是提供对应的数据和代码的，在这个部分通常能知道当前主流的方法是什么，用了什么软件等；\n7. 结果：这个部分就是对每个图的描述；\n8. 讨论：结合前人的研究，对自己的试验结果进行讨论；\n9. 结论：这篇文献的结论是什么；\n10. 致谢：对研究有帮助的人/机构/公司进行感谢；\n11. 附件材料：正文的图表是最关键最重要的内容，有些文献会附上附件进行更详尽的解释；\n12. 参考文献：这篇文献引用的文献。\n\n# 如何检索文献\n\n首先先找实验室师兄师姐相关的毕业论文进行阅读。\n\n检索网站：\n\n1. 中文：中国知网基本够了，其他的还有万方、百度学术、必应学术等。推荐的顺序是：知网＞必应学术＞百度学术。关于知网的使用技巧参照知乎帖子：https://zhuanlan.zhihu.com/p/52476553\n\n2. 英文：谷歌学术、WOS（Web Of Science）、Pubmed、必应学术、百度学术、知网。推荐的使用顺序是： 谷歌学术＞Pubmed＞WOS>必应学术＞百度学术。WOS的话需要登录才能使用，通过WOS检索是最准确的，如果学校没有购买数据库的话只能去淘宝买账号了。PubMed的话访问速度比较慢，如果习惯使用PubMed的话，可以参照https://mp.weixin.qq.com/s?src=11&timestamp=1603760985&ver=2669&signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&new=1设置影响因子筛选器，就可以按照影响因子对文献进行筛选了。百度学术、必应学术及知网我使用较少。\n   谷歌学术在国内是无法正常访问的，但是可以通过浏览器插件或者镜像网站进行访问。浏览器插件的使用参照：https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&mid=2247492278&idx=1&sn=ff9afc876e1f6da5029d27fde52e8c08&chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&scene=21#wechat_redirect\n   镜像网站目前这几个可以用：\n\n    https://xueshu.lanfanshu.cn/\n   https://xueshu.kiphub.com/\n    https://xueshu.lanfanshu.cn/\n   除此之外，推荐一个集成网站：大木虫学术导航http://www.4243.net/，里面能够找到各种常用的学术网站，包括谷歌学术等。\n\n   {% asset_img 2.png %}\n\n如何检索文献呢？我们根据文献的组成来看看怎么检索文献：\n\n1. 按标题进行检索：快准狠，没得说，随便找个数据库都可以；\n2. 按作者进行检索：通常能够找到某个研究者的所有论文，这时候就需要根据时间、影响因子、被引等信息进行筛选；\n3. 按关键词进行筛选：这是最常见的检索方式，如以`Root exudates`进行检索，还可以假设一些检索限定词进行检索，如`\"Root exudates\"`和`Root exudates` 是不一样的，加上引号以后就是把引号里面的内容当成了一个整体进行检索了，`”root exudates“ 2015`表示的是限定在2015年进行检索；除此之外，还可以加上一些逻辑连接词进行检索，如`AND`、`OR`以及`NOT`；\n4. 从参考文献反推：找到一篇优秀的综述，优秀的综述引用的文献通常是最经典、最新的，直接从这篇综述的参考文献里面去找文献，这样最大的好处是这些文献都是和这个领域高度相关的，再稍加研究就能发现这个领域的大佬是那些了，如**Root exudates: the hidden part of plant defense**$^{[1]}$这篇综述的参考文献就有100篇，如果看（浏览）完这100篇文献，那对根系分泌物肯定能有个了解了。\n\n{% asset_img 3.png %}\n\n\n\n# 文献下载\n\n检索完文献后通常需要对文献进行下载，下载分成那么几种情况：\n\n1. 学校购买了对应数据库的直接连接上校园网下载即可，如中国知网，大多高校都购买了，直接连上校园网下载即可；\n\n2. 如果学校没有购买数据库或者是需要下载文献的时候没法连接校园网呢：\n\n   - 请别人下载，我就经常请985的同学帮忙下载文献，好的学校通常数据库也买得多；\n\n   - 知网免费下载网站：https://www.cn-ki.net/，每天可以免费下载3篇（好像）；\n\n   - Sci-Hub：这个网站（http://sci-hub.ren/）在科研圈的重要性，那是不言自明的，通常能够下载到90%以上的文献。不过由于被各大出版社封杀，网站也在不断换地址，网址无法使用时去维基百科看看新的网址就可以了：https://en.wikipedia.org/wiki/Sci-Hub。这个网站我的体验是校园网下载比手机热点块。\n     {% asset_img 4.png %}\n\n     除了通过DOI或者PMID进行下载外，Sci-Hub还有个更酷的使用的方法：Chrome装上油猴插件，再装上**Sci-hub button**这个插件，然后就会对网页上的DOI号进行自动标识，只需要点那个图标就能进行文献下载了，如下图：\n\n     {% asset_img 5.png %}\n\n3. 其他文献下载方法\n   对那些在知网上需要收费的文献，可以直接到期刊的网站看看是不是可以下载，我试了很多次，通常在期刊网页是可以免费下载的。对英文期刊，如果Sci-Hub无法下载的话，可以去researchgate看看有没有完整的PDF版本；如果上述所有方法都无法下载到的话，可以发邮件给通讯作者试试看能不能得到PDF版本。\n\n4. 书籍下载\n   通常需要下载一些书籍，我下载书籍通常只用两种方法就能搞定：\n\n   - 就摸搜素：https://www.jiumodiary.com/。这个网站能找到大部分书籍，不管是中文还是英文的都可以找到；\n   - 上面这个网站找不到的，我就去淘宝，淘宝也没有的话，我就放弃了。\n\n5. 试验方法下载\n\n   当前最新的系统的试验方法下载的网站是https://bio-protocol.org/cn/Default.aspx。详细到用什么耗材都会写，更酷炫的是还有视频啊。这个网站上的试验方法通常是优秀文献中的试验方法进行总结的；还能发现数据分析教程，可以说是个宝藏了。\n\n# 文献追踪\n\n每时每刻新的文献浩如烟海，该怎么知道感兴趣领域的最新进展呢？这里说的“最新进展”是相对的，真真正正最新的东西在研究人员的脑海中，发表出来的说不定都是一两年前的工作了。那该怎么追踪这些最新的动态呢？我主要有下面这几种方法：\n\n1. 关注公众号\n   关注优秀的公众号，这些优秀的公众号通常会推送最新发表的文献，如10月27日凌晨中科院遗传发育所在***Nature genetic***上发表了小麦的群体遗传文章，马上就有公众号进行推送了。\n   {% asset_img 6.png %}\n2. Stork文献鸟\n   网址：https://www.storkapp.me/?logout=1。这个网站是免费注册的，使用超级简单，邮箱注册，然后添加关键词，再设置推送频率（每天或每周）就可以了。关键词可以是研究人员的姓名、研究者机构(高校、院所等)、也可以是真真正正的关键词，也就是文献里面的`Key words`。现在添加关键词以后还能自动评估关键词的质量。\n   {% asset_img 8.png %}\n   {% asset_img 7.png %}\n3. 不定期浏览期刊网站\n   这种方法很难get到很相关的文献，但是可以浏览浏览，如果运气好的话，能发现新的东西。\n4. RSS订阅\n   我后来很少用RSS订阅了，就不展开说了，有前面几种方法足够了。\n\n# 文献管理\n\n文献管理软件有好多种，针对中文英文都有不同的软件，具体比较可以参照这个帖子：https://www.biomart.cn/experiment/793/2714581.htm，然后选择自己喜欢的软件即可。我最常用的是Endnote，加上OneDrive云同步，简直不要太爽，可以多台电脑无缝衔接。使用教程的话可以参考中科大罗昭锋老师的教程：https://www.bilibili.com/video/BV1Bz411B7qZ?from=search&seid=12380402443859107521。公众号的话可以看看`子聿学长`。我使用Endnote的原因有几点：\n\n1. 插入文献管理方便（习惯了就不想换软件了）\n   {% asset_img 9.png %}\n\n2. 插入参考文献方便\n\n   写毕业论文的时候就知道Endnote有多爽了，不但有现成的期刊引文格式，还能自定义，足以应付各种参考文献格式要求。\n\n在使用过程中发现几个小的不足：\n\n1. 谷歌学术导出的参考文献格式通常会把期刊显示到作者一栏，需要手动修改；\n2. 直接在文献主页导出`RIS`格式的比`enw`格式的更容易正确识别。\n\n在公众号后台回复`endnote`就能下载到中科大大账号版本的Endnote，无需破解，完全正版。\n\n# 文献笔记与输出\n\n输入与输出是同等重要的，输入是吸收的过程，输出是对吸收的知识进行重塑的过程，有没有真真正正了解某个知识点，最好的方法就是看看能不能无压力输出。关于文献输入，我有一些小的体会：\n\n1. 在文献中看当前的研究前沿热点，看看那些优秀的文章都在做啥；\n2. 在材料与方法中找到当下最新的方法，重点关注自己能够用到的方法、软件等；\n3. 在讨论部分看看这个研究工作还有啥能做的，指出这个研究的不足之处（这个还有待加进）；\n4. 仔细研究研究文章中的图表，看看别人是怎么用图表来展示数据的，往后自己的类似数据就可以借鉴类似的展示方法；\n5. 往往第一篇英文文献是最痛苦的，专业名词看不懂、句子看不懂、图看不懂，没办法，只能慢慢来；\n6. 不推荐某些全文翻译软件，如X云文献翻译，翻译出来了虽然看着很快，但是在无形中失去了那个过程，以后遇到英文文献还是看不懂（个人观点）（PS：专业名词的翻译的话推荐`知网学术翻译`：http://dict.cnki.net/，日常翻译推荐谷歌翻译：https://translate.google.cn/）。\n\n有了输入之后应该有输出，输出的方式很多，如做报告、写公众号（`南农LorMe`在文献分享方面做得真的很棒）等，也有很多的个人平台可以进行输出，如简书等。\n\n# 后记\n\n文献阅读是个过程。研一，导师的要求是一周一篇英文文献精读+PPT汇报，那时候的感受就是痛苦啊；现在是基本每周一篇英文文献+公众号，也很庆幸这两年都是这样过来的，现在看文献基本不用翻译了，看本领域的英文书籍也基本能应付，偶尔遇到专业知识的盲点的时候再查缺补漏。\n\n>人生没有无用的经历。\n\n# 参考文献\n\n>[1] Baetz U, Martinoia E. Root exudates: the hidden part of plant defense[J]. ***Trends in Plant Science***, 2014, 19(2): 90-98.\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"文献检索、追踪、阅读等小总结","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmc005br0g0b8ut2q2o","comments":1,"layout":"post","photos":[],"link":"","content":"<p>去年写了个小总结，包含了文献检索等（简书地址：<a href=\"https://www.jianshu.com/p/3e17e9b7fac8%EF%BC%89%E3%80%82\">https://www.jianshu.com/p/3e17e9b7fac8）。</a></p>\n<span id=\"more\"></span>\n\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/1.png\" class=\"\">\n\n<p>时间悄然过去一年多了，关于文献检索、追踪及下载有了新的认识。从头梳理一遍，一方面希望能帮助到实验室的师弟师妹，另外一方面也是对自己知识体系的一个梳理。（注：本文部分内容来自互联网，如有侵权，请联系我们进行修改或删除）</p>\n<h1 id=\"文献分类\"><a href=\"#文献分类\" class=\"headerlink\" title=\"文献分类\"></a>文献分类</h1><p>按照文字分类，可以简单将文献分成两类：</p>\n<ol>\n<li>中文；</li>\n<li>英文。</li>\n</ol>\n<p>按照文章类型来分，可以分成如下几类：</p>\n<ol>\n<li>Article（我称它为“研究论文”）</li>\n<li>Review（“综述”）</li>\n<li>Letter（“信”）</li>\n</ol>\n<p>其中最常见的是Article，其次是Review。</p>\n<h1 id=\"文献阅读顺序\"><a href=\"#文献阅读顺序\" class=\"headerlink\" title=\"文献阅读顺序\"></a>文献阅读顺序</h1><p>文献千千万，那怎么开始阅读呢？</p>\n<p>如果进入的领域是全新的，那我的经验是这样的：</p>\n<p>本实验室和自己方向相关的师兄师姐的毕业论文→本领域的优秀博士论文→优秀中文综述→优秀英文综述→优秀Article。</p>\n<p>为什么先看师兄师姐的论文？</p>\n<ol>\n<li>毕业论文中有详尽的研究背景、试验方法等；</li>\n<li>毕业论文中用到的仪器通常是本实验室就有的，实现了解什么仪器能解决什么问题；</li>\n<li>从师兄师姐毕业论文中的展望部分说不定就是自己的研究方向呢。</li>\n</ol>\n<p>其次是优秀的博士论文的原因有这样几点：</p>\n<ol>\n<li>文字是中文，看起来OK；</li>\n<li>优秀的博士论文有详尽的文献综述，对专业名词还有详尽的解释，不用漫山遍野查专业名词的意思；</li>\n<li>优秀博士论文的参考文献通常是本领域最新的。</li>\n</ol>\n<p>优秀的中文综述和英文综述是互补的。</p>\n<p>我还记得导师给我的第一篇文章是：<strong>Root exudates: the hidden part of plant defense</strong>$^{[1]}$。真的是看到崩溃啊，根本看不懂那些专有名词啊。果断放弃了，后面再去看的时候好很多了。</p>\n<p>优秀的综述有什么用呢？一个最大的用处在后面揭晓。</p>\n<p>Article就是日常浏览or精读的文献类型了。</p>\n<h1 id=\"一篇文献的组成及功能\"><a href=\"#一篇文献的组成及功能\" class=\"headerlink\" title=\"一篇文献的组成及功能\"></a>一篇文献的组成及功能</h1><p>以Article文章为例，一篇文献通常有如下部分组成：</p>\n<ol>\n<li>文献标题：通常文献标题就是文献内容的高度概括，在浏览文献的时候看看标题就知道是不是自己要的文献了；</li>\n<li>作者信息：每个领域做得非常好的机构/研究者往往就那么几个，可以重点关注某些大佬的是实验室动态；</li>\n<li>摘要：摘要是一篇文章的精髓。通常包含了背景、目的、方法、结果、结论、展望等几个部分，日常看文献也大多是看这个部分；</li>\n<li>关键词：这个部分就是这篇文献的主要相关的东西，而这个部分通常是后面我们讲文献追踪时用到的；</li>\n<li>研究背景：在这个部分通常会对本领域的研究进行简单的总结，然后说还有说明问题有待解决，而“我这个研究刚好解决了这个问题”；</li>\n<li>材料与方法：在这个部分，优秀的期刊通常会写得很详细，如用什么植株、有没有用突变体、怎么得到突变体等，这个部分有个越来越重要的内容是数据和代码，尤其是生命科学领域，通常会涉及到测序和分析，优秀的文章通常是提供对应的数据和代码的，在这个部分通常能知道当前主流的方法是什么，用了什么软件等；</li>\n<li>结果：这个部分就是对每个图的描述；</li>\n<li>讨论：结合前人的研究，对自己的试验结果进行讨论；</li>\n<li>结论：这篇文献的结论是什么；</li>\n<li>致谢：对研究有帮助的人/机构/公司进行感谢；</li>\n<li>附件材料：正文的图表是最关键最重要的内容，有些文献会附上附件进行更详尽的解释；</li>\n<li>参考文献：这篇文献引用的文献。</li>\n</ol>\n<h1 id=\"如何检索文献\"><a href=\"#如何检索文献\" class=\"headerlink\" title=\"如何检索文献\"></a>如何检索文献</h1><p>首先先找实验室师兄师姐相关的毕业论文进行阅读。</p>\n<p>检索网站：</p>\n<ol>\n<li><p>中文：中国知网基本够了，其他的还有万方、百度学术、必应学术等。推荐的顺序是：知网＞必应学术＞百度学术。关于知网的使用技巧参照知乎帖子：<a href=\"https://zhuanlan.zhihu.com/p/52476553\">https://zhuanlan.zhihu.com/p/52476553</a></p>\n</li>\n<li><p>英文：谷歌学术、WOS（Web Of Science）、Pubmed、必应学术、百度学术、知网。推荐的使用顺序是： 谷歌学术＞Pubmed＞WOS&gt;必应学术＞百度学术。WOS的话需要登录才能使用，通过WOS检索是最准确的，如果学校没有购买数据库的话只能去淘宝买账号了。PubMed的话访问速度比较慢，如果习惯使用PubMed的话，可以参照<a href=\"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1603760985&amp;ver=2669&amp;signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&amp;new=1%E8%AE%BE%E7%BD%AE%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90%E7%AD%9B%E9%80%89%E5%99%A8%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E6%8C%89%E7%85%A7%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90%E5%AF%B9%E6%96%87%E7%8C%AE%E8%BF%9B%E8%A1%8C%E7%AD%9B%E9%80%89%E4%BA%86%E3%80%82%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF%E3%80%81%E5%BF%85%E5%BA%94%E5%AD%A6%E6%9C%AF%E5%8F%8A%E7%9F%A5%E7%BD%91%E6%88%91%E4%BD%BF%E7%94%A8%E8%BE%83%E5%B0%91%E3%80%82\">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1603760985&amp;ver=2669&amp;signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&amp;new=1设置影响因子筛选器，就可以按照影响因子对文献进行筛选了。百度学术、必应学术及知网我使用较少。</a><br>谷歌学术在国内是无法正常访问的，但是可以通过浏览器插件或者镜像网站进行访问。浏览器插件的使用参照：<a href=\"https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&amp;mid=2247492278&amp;idx=1&amp;sn=ff9afc876e1f6da5029d27fde52e8c08&amp;chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&amp;scene=21#wechat_redirect\">https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&amp;mid=2247492278&amp;idx=1&amp;sn=ff9afc876e1f6da5029d27fde52e8c08&amp;chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&amp;scene=21#wechat_redirect</a><br>镜像网站目前这几个可以用：</p>\n<p> <a href=\"https://xueshu.lanfanshu.cn/\">https://xueshu.lanfanshu.cn/</a><br><a href=\"https://xueshu.kiphub.com/\">https://xueshu.kiphub.com/</a><br> <a href=\"https://xueshu.lanfanshu.cn/\">https://xueshu.lanfanshu.cn/</a><br>除此之外，推荐一个集成网站：大木虫学术导航<a href=\"http://www.4243.net/%EF%BC%8C%E9%87%8C%E9%9D%A2%E8%83%BD%E5%A4%9F%E6%89%BE%E5%88%B0%E5%90%84%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%A6%E6%9C%AF%E7%BD%91%E7%AB%99%EF%BC%8C%E5%8C%85%E6%8B%AC%E8%B0%B7%E6%AD%8C%E5%AD%A6%E6%9C%AF%E7%AD%89%E3%80%82\">http://www.4243.net/，里面能够找到各种常用的学术网站，包括谷歌学术等。</a></p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/2.png\" class=\"\"></li>\n</ol>\n<p>如何检索文献呢？我们根据文献的组成来看看怎么检索文献：</p>\n<ol>\n<li>按标题进行检索：快准狠，没得说，随便找个数据库都可以；</li>\n<li>按作者进行检索：通常能够找到某个研究者的所有论文，这时候就需要根据时间、影响因子、被引等信息进行筛选；</li>\n<li>按关键词进行筛选：这是最常见的检索方式，如以<code>Root exudates</code>进行检索，还可以假设一些检索限定词进行检索，如<code>&quot;Root exudates&quot;</code>和<code>Root exudates</code> 是不一样的，加上引号以后就是把引号里面的内容当成了一个整体进行检索了，<code>”root exudates“ 2015</code>表示的是限定在2015年进行检索；除此之外，还可以加上一些逻辑连接词进行检索，如<code>AND</code>、<code>OR</code>以及<code>NOT</code>；</li>\n<li>从参考文献反推：找到一篇优秀的综述，优秀的综述引用的文献通常是最经典、最新的，直接从这篇综述的参考文献里面去找文献，这样最大的好处是这些文献都是和这个领域高度相关的，再稍加研究就能发现这个领域的大佬是那些了，如<strong>Root exudates: the hidden part of plant defense</strong>$^{[1]}$这篇综述的参考文献就有100篇，如果看（浏览）完这100篇文献，那对根系分泌物肯定能有个了解了。</li>\n</ol>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/3.png\" class=\"\">\n\n\n\n<h1 id=\"文献下载\"><a href=\"#文献下载\" class=\"headerlink\" title=\"文献下载\"></a>文献下载</h1><p>检索完文献后通常需要对文献进行下载，下载分成那么几种情况：</p>\n<ol>\n<li><p>学校购买了对应数据库的直接连接上校园网下载即可，如中国知网，大多高校都购买了，直接连上校园网下载即可；</p>\n</li>\n<li><p>如果学校没有购买数据库或者是需要下载文献的时候没法连接校园网呢：</p>\n<ul>\n<li><p>请别人下载，我就经常请985的同学帮忙下载文献，好的学校通常数据库也买得多；</p>\n</li>\n<li><p>知网免费下载网站：<a href=\"https://www.cn-ki.net/%EF%BC%8C%E6%AF%8F%E5%A4%A9%E5%8F%AF%E4%BB%A5%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD3%E7%AF%87%EF%BC%88%E5%A5%BD%E5%83%8F%EF%BC%89%EF%BC%9B\">https://www.cn-ki.net/，每天可以免费下载3篇（好像）；</a></p>\n</li>\n<li><p>Sci-Hub：这个网站（<a href=\"http://sci-hub.ren/%EF%BC%89%E5%9C%A8%E7%A7%91%E7%A0%94%E5%9C%88%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%EF%BC%8C%E9%82%A3%E6%98%AF%E4%B8%8D%E8%A8%80%E8%87%AA%E6%98%8E%E7%9A%84%EF%BC%8C%E9%80%9A%E5%B8%B8%E8%83%BD%E5%A4%9F%E4%B8%8B%E8%BD%BD%E5%88%B090%%E4%BB%A5%E4%B8%8A%E7%9A%84%E6%96%87%E7%8C%AE%E3%80%82%E4%B8%8D%E8%BF%87%E7%94%B1%E4%BA%8E%E8%A2%AB%E5%90%84%E5%A4%A7%E5%87%BA%E7%89%88%E7%A4%BE%E5%B0%81%E6%9D%80%EF%BC%8C%E7%BD%91%E7%AB%99%E4%B9%9F%E5%9C%A8%E4%B8%8D%E6%96%AD%E6%8D%A2%E5%9C%B0%E5%9D%80%EF%BC%8C%E7%BD%91%E5%9D%80%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E6%97%B6%E5%8E%BB%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%9C%8B%E7%9C%8B%E6%96%B0%E7%9A%84%E7%BD%91%E5%9D%80%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%EF%BC%9Ahttps://en.wikipedia.org/wiki/Sci-Hub%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%88%91%E7%9A%84%E4%BD%93%E9%AA%8C%E6%98%AF%E6%A0%A1%E5%9B%AD%E7%BD%91%E4%B8%8B%E8%BD%BD%E6%AF%94%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E5%9D%97%E3%80%82\">http://sci-hub.ren/）在科研圈的重要性，那是不言自明的，通常能够下载到90%以上的文献。不过由于被各大出版社封杀，网站也在不断换地址，网址无法使用时去维基百科看看新的网址就可以了：https://en.wikipedia.org/wiki/Sci-Hub。这个网站我的体验是校园网下载比手机热点块。</a></p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/4.png\" class=\"\">\n\n<p>除了通过DOI或者PMID进行下载外，Sci-Hub还有个更酷的使用的方法：Chrome装上油猴插件，再装上<strong>Sci-hub button</strong>这个插件，然后就会对网页上的DOI号进行自动标识，只需要点那个图标就能进行文献下载了，如下图：</p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/5.png\" class=\"\"></li>\n</ul>\n</li>\n<li><p>其他文献下载方法<br>对那些在知网上需要收费的文献，可以直接到期刊的网站看看是不是可以下载，我试了很多次，通常在期刊网页是可以免费下载的。对英文期刊，如果Sci-Hub无法下载的话，可以去researchgate看看有没有完整的PDF版本；如果上述所有方法都无法下载到的话，可以发邮件给通讯作者试试看能不能得到PDF版本。</p>\n</li>\n<li><p>书籍下载<br>通常需要下载一些书籍，我下载书籍通常只用两种方法就能搞定：</p>\n<ul>\n<li>就摸搜素：<a href=\"https://www.jiumodiary.com/%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E8%83%BD%E6%89%BE%E5%88%B0%E5%A4%A7%E9%83%A8%E5%88%86%E4%B9%A6%E7%B1%8D%EF%BC%8C%E4%B8%8D%E7%AE%A1%E6%98%AF%E4%B8%AD%E6%96%87%E8%BF%98%E6%98%AF%E8%8B%B1%E6%96%87%E7%9A%84%E9%83%BD%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%EF%BC%9B\">https://www.jiumodiary.com/。这个网站能找到大部分书籍，不管是中文还是英文的都可以找到；</a></li>\n<li>上面这个网站找不到的，我就去淘宝，淘宝也没有的话，我就放弃了。</li>\n</ul>\n</li>\n<li><p>试验方法下载</p>\n<p>当前最新的系统的试验方法下载的网站是<a href=\"https://bio-protocol.org/cn/Default.aspx%E3%80%82%E8%AF%A6%E7%BB%86%E5%88%B0%E7%94%A8%E4%BB%80%E4%B9%88%E8%80%97%E6%9D%90%E9%83%BD%E4%BC%9A%E5%86%99%EF%BC%8C%E6%9B%B4%E9%85%B7%E7%82%AB%E7%9A%84%E6%98%AF%E8%BF%98%E6%9C%89%E8%A7%86%E9%A2%91%E5%95%8A%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E4%B8%8A%E7%9A%84%E8%AF%95%E9%AA%8C%E6%96%B9%E6%B3%95%E9%80%9A%E5%B8%B8%E6%98%AF%E4%BC%98%E7%A7%80%E6%96%87%E7%8C%AE%E4%B8%AD%E7%9A%84%E8%AF%95%E9%AA%8C%E6%96%B9%E6%B3%95%E8%BF%9B%E8%A1%8C%E6%80%BB%E7%BB%93%E7%9A%84%EF%BC%9B%E8%BF%98%E8%83%BD%E5%8F%91%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%95%99%E7%A8%8B%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%AF%B4%E6%98%AF%E4%B8%AA%E5%AE%9D%E8%97%8F%E4%BA%86%E3%80%82\">https://bio-protocol.org/cn/Default.aspx。详细到用什么耗材都会写，更酷炫的是还有视频啊。这个网站上的试验方法通常是优秀文献中的试验方法进行总结的；还能发现数据分析教程，可以说是个宝藏了。</a></p>\n</li>\n</ol>\n<h1 id=\"文献追踪\"><a href=\"#文献追踪\" class=\"headerlink\" title=\"文献追踪\"></a>文献追踪</h1><p>每时每刻新的文献浩如烟海，该怎么知道感兴趣领域的最新进展呢？这里说的“最新进展”是相对的，真真正正最新的东西在研究人员的脑海中，发表出来的说不定都是一两年前的工作了。那该怎么追踪这些最新的动态呢？我主要有下面这几种方法：</p>\n<ol>\n<li>关注公众号<br>关注优秀的公众号，这些优秀的公众号通常会推送最新发表的文献，如10月27日凌晨中科院遗传发育所在<em><strong>Nature genetic</strong></em>上发表了小麦的群体遗传文章，马上就有公众号进行推送了。<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/6.png\" class=\"\"></li>\n<li>Stork文献鸟<br>网址：<a href=\"https://www.storkapp.me/?logout=1%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%98%AF%E5%85%8D%E8%B4%B9%E6%B3%A8%E5%86%8C%E7%9A%84%EF%BC%8C%E4%BD%BF%E7%94%A8%E8%B6%85%E7%BA%A7%E7%AE%80%E5%8D%95%EF%BC%8C%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C%EF%BC%8C%E7%84%B6%E5%90%8E%E6%B7%BB%E5%8A%A0%E5%85%B3%E9%94%AE%E8%AF%8D%EF%BC%8C%E5%86%8D%E8%AE%BE%E7%BD%AE%E6%8E%A8%E9%80%81%E9%A2%91%E7%8E%87%EF%BC%88%E6%AF%8F%E5%A4%A9%E6%88%96%E6%AF%8F%E5%91%A8%EF%BC%89%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82%E5%85%B3%E9%94%AE%E8%AF%8D%E5%8F%AF%E4%BB%A5%E6%98%AF%E7%A0%94%E7%A9%B6%E4%BA%BA%E5%91%98%E7%9A%84%E5%A7%93%E5%90%8D%E3%80%81%E7%A0%94%E7%A9%B6%E8%80%85%E6%9C%BA%E6%9E%84(%E9%AB%98%E6%A0%A1%E3%80%81%E9%99%A2%E6%89%80%E7%AD%89)%E3%80%81%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E7%9C%9F%E7%9C%9F%E6%AD%A3%E6%AD%A3%E7%9A%84%E5%85%B3%E9%94%AE%E8%AF%8D%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E6%96%87%E7%8C%AE%E9%87%8C%E9%9D%A2%E7%9A%84%60Key\">https://www.storkapp.me/?logout=1。这个网站是免费注册的，使用超级简单，邮箱注册，然后添加关键词，再设置推送频率（每天或每周）就可以了。关键词可以是研究人员的姓名、研究者机构(高校、院所等)、也可以是真真正正的关键词，也就是文献里面的`Key</a> words`。现在添加关键词以后还能自动评估关键词的质量。<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/8.png\" class=\"\">\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/7.png\" class=\"\"></li>\n<li>不定期浏览期刊网站<br>这种方法很难get到很相关的文献，但是可以浏览浏览，如果运气好的话，能发现新的东西。</li>\n<li>RSS订阅<br>我后来很少用RSS订阅了，就不展开说了，有前面几种方法足够了。</li>\n</ol>\n<h1 id=\"文献管理\"><a href=\"#文献管理\" class=\"headerlink\" title=\"文献管理\"></a>文献管理</h1><p>文献管理软件有好多种，针对中文英文都有不同的软件，具体比较可以参照这个帖子：<a href=\"https://www.biomart.cn/experiment/793/2714581.htm%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%89%E6%8B%A9%E8%87%AA%E5%B7%B1%E5%96%9C%E6%AC%A2%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8D%B3%E5%8F%AF%E3%80%82%E6%88%91%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%98%AFEndnote%EF%BC%8C%E5%8A%A0%E4%B8%8AOneDrive%E4%BA%91%E5%90%8C%E6%AD%A5%EF%BC%8C%E7%AE%80%E7%9B%B4%E4%B8%8D%E8%A6%81%E5%A4%AA%E7%88%BD%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E6%97%A0%E7%BC%9D%E8%A1%94%E6%8E%A5%E3%80%82%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E7%9A%84%E8%AF%9D%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E4%B8%AD%E7%A7%91%E5%A4%A7%E7%BD%97%E6%98%AD%E9%94%8B%E8%80%81%E5%B8%88%E7%9A%84%E6%95%99%E7%A8%8B%EF%BC%9Ahttps://www.bilibili.com/video/BV1Bz411B7qZ?from=search&amp;seid=12380402443859107521%E3%80%82%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84%E8%AF%9D%E5%8F%AF%E4%BB%A5%E7%9C%8B%E7%9C%8B%60%E5%AD%90%E8%81%BF%E5%AD%A6%E9%95%BF%60%E3%80%82%E6%88%91%E4%BD%BF%E7%94%A8Endnote%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%87%A0%E7%82%B9%EF%BC%9A\">https://www.biomart.cn/experiment/793/2714581.htm，然后选择自己喜欢的软件即可。我最常用的是Endnote，加上OneDrive云同步，简直不要太爽，可以多台电脑无缝衔接。使用教程的话可以参考中科大罗昭锋老师的教程：https://www.bilibili.com/video/BV1Bz411B7qZ?from=search&amp;seid=12380402443859107521。公众号的话可以看看`子聿学长`。我使用Endnote的原因有几点：</a></p>\n<ol>\n<li><p>插入文献管理方便（习惯了就不想换软件了）</p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/9.png\" class=\"\"></li>\n<li><p>插入参考文献方便</p>\n<p>写毕业论文的时候就知道Endnote有多爽了，不但有现成的期刊引文格式，还能自定义，足以应付各种参考文献格式要求。</p>\n</li>\n</ol>\n<p>在使用过程中发现几个小的不足：</p>\n<ol>\n<li>谷歌学术导出的参考文献格式通常会把期刊显示到作者一栏，需要手动修改；</li>\n<li>直接在文献主页导出<code>RIS</code>格式的比<code>enw</code>格式的更容易正确识别。</li>\n</ol>\n<p>在公众号后台回复<code>endnote</code>就能下载到中科大大账号版本的Endnote，无需破解，完全正版。</p>\n<h1 id=\"文献笔记与输出\"><a href=\"#文献笔记与输出\" class=\"headerlink\" title=\"文献笔记与输出\"></a>文献笔记与输出</h1><p>输入与输出是同等重要的，输入是吸收的过程，输出是对吸收的知识进行重塑的过程，有没有真真正正了解某个知识点，最好的方法就是看看能不能无压力输出。关于文献输入，我有一些小的体会：</p>\n<ol>\n<li>在文献中看当前的研究前沿热点，看看那些优秀的文章都在做啥；</li>\n<li>在材料与方法中找到当下最新的方法，重点关注自己能够用到的方法、软件等；</li>\n<li>在讨论部分看看这个研究工作还有啥能做的，指出这个研究的不足之处（这个还有待加进）；</li>\n<li>仔细研究研究文章中的图表，看看别人是怎么用图表来展示数据的，往后自己的类似数据就可以借鉴类似的展示方法；</li>\n<li>往往第一篇英文文献是最痛苦的，专业名词看不懂、句子看不懂、图看不懂，没办法，只能慢慢来；</li>\n<li>不推荐某些全文翻译软件，如X云文献翻译，翻译出来了虽然看着很快，但是在无形中失去了那个过程，以后遇到英文文献还是看不懂（个人观点）（PS：专业名词的翻译的话推荐<code>知网学术翻译</code>：<a href=\"http://dict.cnki.net/%EF%BC%8C%E6%97%A5%E5%B8%B8%E7%BF%BB%E8%AF%91%E6%8E%A8%E8%8D%90%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91%EF%BC%9Ahttps://translate.google.cn/%EF%BC%89%E3%80%82\">http://dict.cnki.net/，日常翻译推荐谷歌翻译：https://translate.google.cn/）。</a></li>\n</ol>\n<p>有了输入之后应该有输出，输出的方式很多，如做报告、写公众号（<code>南农LorMe</code>在文献分享方面做得真的很棒）等，也有很多的个人平台可以进行输出，如简书等。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>文献阅读是个过程。研一，导师的要求是一周一篇英文文献精读+PPT汇报，那时候的感受就是痛苦啊；现在是基本每周一篇英文文献+公众号，也很庆幸这两年都是这样过来的，现在看文献基本不用翻译了，看本领域的英文书籍也基本能应付，偶尔遇到专业知识的盲点的时候再查缺补漏。</p>\n<blockquote>\n<p>人生没有无用的经历。</p>\n</blockquote>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Baetz U, Martinoia E. Root exudates: the hidden part of plant defense[J]. <em><strong>Trends in Plant Science</strong></em>, 2014, 19(2): 90-98.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>去年写了个小总结，包含了文献检索等（简书地址：<a href=\"https://www.jianshu.com/p/3e17e9b7fac8%EF%BC%89%E3%80%82\">https://www.jianshu.com/p/3e17e9b7fac8）。</a></p>","more":"<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/1.png\" class=\"\">\n\n<p>时间悄然过去一年多了，关于文献检索、追踪及下载有了新的认识。从头梳理一遍，一方面希望能帮助到实验室的师弟师妹，另外一方面也是对自己知识体系的一个梳理。（注：本文部分内容来自互联网，如有侵权，请联系我们进行修改或删除）</p>\n<h1 id=\"文献分类\"><a href=\"#文献分类\" class=\"headerlink\" title=\"文献分类\"></a>文献分类</h1><p>按照文字分类，可以简单将文献分成两类：</p>\n<ol>\n<li>中文；</li>\n<li>英文。</li>\n</ol>\n<p>按照文章类型来分，可以分成如下几类：</p>\n<ol>\n<li>Article（我称它为“研究论文”）</li>\n<li>Review（“综述”）</li>\n<li>Letter（“信”）</li>\n</ol>\n<p>其中最常见的是Article，其次是Review。</p>\n<h1 id=\"文献阅读顺序\"><a href=\"#文献阅读顺序\" class=\"headerlink\" title=\"文献阅读顺序\"></a>文献阅读顺序</h1><p>文献千千万，那怎么开始阅读呢？</p>\n<p>如果进入的领域是全新的，那我的经验是这样的：</p>\n<p>本实验室和自己方向相关的师兄师姐的毕业论文→本领域的优秀博士论文→优秀中文综述→优秀英文综述→优秀Article。</p>\n<p>为什么先看师兄师姐的论文？</p>\n<ol>\n<li>毕业论文中有详尽的研究背景、试验方法等；</li>\n<li>毕业论文中用到的仪器通常是本实验室就有的，实现了解什么仪器能解决什么问题；</li>\n<li>从师兄师姐毕业论文中的展望部分说不定就是自己的研究方向呢。</li>\n</ol>\n<p>其次是优秀的博士论文的原因有这样几点：</p>\n<ol>\n<li>文字是中文，看起来OK；</li>\n<li>优秀的博士论文有详尽的文献综述，对专业名词还有详尽的解释，不用漫山遍野查专业名词的意思；</li>\n<li>优秀博士论文的参考文献通常是本领域最新的。</li>\n</ol>\n<p>优秀的中文综述和英文综述是互补的。</p>\n<p>我还记得导师给我的第一篇文章是：<strong>Root exudates: the hidden part of plant defense</strong>$^{[1]}$。真的是看到崩溃啊，根本看不懂那些专有名词啊。果断放弃了，后面再去看的时候好很多了。</p>\n<p>优秀的综述有什么用呢？一个最大的用处在后面揭晓。</p>\n<p>Article就是日常浏览or精读的文献类型了。</p>\n<h1 id=\"一篇文献的组成及功能\"><a href=\"#一篇文献的组成及功能\" class=\"headerlink\" title=\"一篇文献的组成及功能\"></a>一篇文献的组成及功能</h1><p>以Article文章为例，一篇文献通常有如下部分组成：</p>\n<ol>\n<li>文献标题：通常文献标题就是文献内容的高度概括，在浏览文献的时候看看标题就知道是不是自己要的文献了；</li>\n<li>作者信息：每个领域做得非常好的机构/研究者往往就那么几个，可以重点关注某些大佬的是实验室动态；</li>\n<li>摘要：摘要是一篇文章的精髓。通常包含了背景、目的、方法、结果、结论、展望等几个部分，日常看文献也大多是看这个部分；</li>\n<li>关键词：这个部分就是这篇文献的主要相关的东西，而这个部分通常是后面我们讲文献追踪时用到的；</li>\n<li>研究背景：在这个部分通常会对本领域的研究进行简单的总结，然后说还有说明问题有待解决，而“我这个研究刚好解决了这个问题”；</li>\n<li>材料与方法：在这个部分，优秀的期刊通常会写得很详细，如用什么植株、有没有用突变体、怎么得到突变体等，这个部分有个越来越重要的内容是数据和代码，尤其是生命科学领域，通常会涉及到测序和分析，优秀的文章通常是提供对应的数据和代码的，在这个部分通常能知道当前主流的方法是什么，用了什么软件等；</li>\n<li>结果：这个部分就是对每个图的描述；</li>\n<li>讨论：结合前人的研究，对自己的试验结果进行讨论；</li>\n<li>结论：这篇文献的结论是什么；</li>\n<li>致谢：对研究有帮助的人/机构/公司进行感谢；</li>\n<li>附件材料：正文的图表是最关键最重要的内容，有些文献会附上附件进行更详尽的解释；</li>\n<li>参考文献：这篇文献引用的文献。</li>\n</ol>\n<h1 id=\"如何检索文献\"><a href=\"#如何检索文献\" class=\"headerlink\" title=\"如何检索文献\"></a>如何检索文献</h1><p>首先先找实验室师兄师姐相关的毕业论文进行阅读。</p>\n<p>检索网站：</p>\n<ol>\n<li><p>中文：中国知网基本够了，其他的还有万方、百度学术、必应学术等。推荐的顺序是：知网＞必应学术＞百度学术。关于知网的使用技巧参照知乎帖子：<a href=\"https://zhuanlan.zhihu.com/p/52476553\">https://zhuanlan.zhihu.com/p/52476553</a></p>\n</li>\n<li><p>英文：谷歌学术、WOS（Web Of Science）、Pubmed、必应学术、百度学术、知网。推荐的使用顺序是： 谷歌学术＞Pubmed＞WOS&gt;必应学术＞百度学术。WOS的话需要登录才能使用，通过WOS检索是最准确的，如果学校没有购买数据库的话只能去淘宝买账号了。PubMed的话访问速度比较慢，如果习惯使用PubMed的话，可以参照<a href=\"https://mp.weixin.qq.com/s?src=11&amp;timestamp=1603760985&amp;ver=2669&amp;signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&amp;new=1%E8%AE%BE%E7%BD%AE%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90%E7%AD%9B%E9%80%89%E5%99%A8%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E6%8C%89%E7%85%A7%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90%E5%AF%B9%E6%96%87%E7%8C%AE%E8%BF%9B%E8%A1%8C%E7%AD%9B%E9%80%89%E4%BA%86%E3%80%82%E7%99%BE%E5%BA%A6%E5%AD%A6%E6%9C%AF%E3%80%81%E5%BF%85%E5%BA%94%E5%AD%A6%E6%9C%AF%E5%8F%8A%E7%9F%A5%E7%BD%91%E6%88%91%E4%BD%BF%E7%94%A8%E8%BE%83%E5%B0%91%E3%80%82\">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1603760985&amp;ver=2669&amp;signature=qwoNIQex7cdUBgbRrNSxEWKvuzB-FX0Z-6pijGHcEakdRkOYMl-WH5772iuwKYUeYN7PEvTLKE9LiEM3BOoi0kgq7c2450K8MZ7ls4zoMYQ5cagb6Qf1IRV6eBjsxVuV&amp;new=1设置影响因子筛选器，就可以按照影响因子对文献进行筛选了。百度学术、必应学术及知网我使用较少。</a><br>谷歌学术在国内是无法正常访问的，但是可以通过浏览器插件或者镜像网站进行访问。浏览器插件的使用参照：<a href=\"https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&amp;mid=2247492278&amp;idx=1&amp;sn=ff9afc876e1f6da5029d27fde52e8c08&amp;chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&amp;scene=21#wechat_redirect\">https://mp.weixin.qq.com/s?__biz=MzI4NDQ4NjU0MA==&amp;mid=2247492278&amp;idx=1&amp;sn=ff9afc876e1f6da5029d27fde52e8c08&amp;chksm=ebf81c55dc8f9543aacf8eb82fc34bfa0b651a8254ec66d3f2727ce5b02367d6374b80f67968&amp;scene=21#wechat_redirect</a><br>镜像网站目前这几个可以用：</p>\n<p> <a href=\"https://xueshu.lanfanshu.cn/\">https://xueshu.lanfanshu.cn/</a><br><a href=\"https://xueshu.kiphub.com/\">https://xueshu.kiphub.com/</a><br> <a href=\"https://xueshu.lanfanshu.cn/\">https://xueshu.lanfanshu.cn/</a><br>除此之外，推荐一个集成网站：大木虫学术导航<a href=\"http://www.4243.net/%EF%BC%8C%E9%87%8C%E9%9D%A2%E8%83%BD%E5%A4%9F%E6%89%BE%E5%88%B0%E5%90%84%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%A6%E6%9C%AF%E7%BD%91%E7%AB%99%EF%BC%8C%E5%8C%85%E6%8B%AC%E8%B0%B7%E6%AD%8C%E5%AD%A6%E6%9C%AF%E7%AD%89%E3%80%82\">http://www.4243.net/，里面能够找到各种常用的学术网站，包括谷歌学术等。</a></p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/2.png\" class=\"\"></li>\n</ol>\n<p>如何检索文献呢？我们根据文献的组成来看看怎么检索文献：</p>\n<ol>\n<li>按标题进行检索：快准狠，没得说，随便找个数据库都可以；</li>\n<li>按作者进行检索：通常能够找到某个研究者的所有论文，这时候就需要根据时间、影响因子、被引等信息进行筛选；</li>\n<li>按关键词进行筛选：这是最常见的检索方式，如以<code>Root exudates</code>进行检索，还可以假设一些检索限定词进行检索，如<code>&quot;Root exudates&quot;</code>和<code>Root exudates</code> 是不一样的，加上引号以后就是把引号里面的内容当成了一个整体进行检索了，<code>”root exudates“ 2015</code>表示的是限定在2015年进行检索；除此之外，还可以加上一些逻辑连接词进行检索，如<code>AND</code>、<code>OR</code>以及<code>NOT</code>；</li>\n<li>从参考文献反推：找到一篇优秀的综述，优秀的综述引用的文献通常是最经典、最新的，直接从这篇综述的参考文献里面去找文献，这样最大的好处是这些文献都是和这个领域高度相关的，再稍加研究就能发现这个领域的大佬是那些了，如<strong>Root exudates: the hidden part of plant defense</strong>$^{[1]}$这篇综述的参考文献就有100篇，如果看（浏览）完这100篇文献，那对根系分泌物肯定能有个了解了。</li>\n</ol>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/3.png\" class=\"\">\n\n\n\n<h1 id=\"文献下载\"><a href=\"#文献下载\" class=\"headerlink\" title=\"文献下载\"></a>文献下载</h1><p>检索完文献后通常需要对文献进行下载，下载分成那么几种情况：</p>\n<ol>\n<li><p>学校购买了对应数据库的直接连接上校园网下载即可，如中国知网，大多高校都购买了，直接连上校园网下载即可；</p>\n</li>\n<li><p>如果学校没有购买数据库或者是需要下载文献的时候没法连接校园网呢：</p>\n<ul>\n<li><p>请别人下载，我就经常请985的同学帮忙下载文献，好的学校通常数据库也买得多；</p>\n</li>\n<li><p>知网免费下载网站：<a href=\"https://www.cn-ki.net/%EF%BC%8C%E6%AF%8F%E5%A4%A9%E5%8F%AF%E4%BB%A5%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD3%E7%AF%87%EF%BC%88%E5%A5%BD%E5%83%8F%EF%BC%89%EF%BC%9B\">https://www.cn-ki.net/，每天可以免费下载3篇（好像）；</a></p>\n</li>\n<li><p>Sci-Hub：这个网站（<a href=\"http://sci-hub.ren/%EF%BC%89%E5%9C%A8%E7%A7%91%E7%A0%94%E5%9C%88%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%EF%BC%8C%E9%82%A3%E6%98%AF%E4%B8%8D%E8%A8%80%E8%87%AA%E6%98%8E%E7%9A%84%EF%BC%8C%E9%80%9A%E5%B8%B8%E8%83%BD%E5%A4%9F%E4%B8%8B%E8%BD%BD%E5%88%B090%%E4%BB%A5%E4%B8%8A%E7%9A%84%E6%96%87%E7%8C%AE%E3%80%82%E4%B8%8D%E8%BF%87%E7%94%B1%E4%BA%8E%E8%A2%AB%E5%90%84%E5%A4%A7%E5%87%BA%E7%89%88%E7%A4%BE%E5%B0%81%E6%9D%80%EF%BC%8C%E7%BD%91%E7%AB%99%E4%B9%9F%E5%9C%A8%E4%B8%8D%E6%96%AD%E6%8D%A2%E5%9C%B0%E5%9D%80%EF%BC%8C%E7%BD%91%E5%9D%80%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E6%97%B6%E5%8E%BB%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E7%9C%8B%E7%9C%8B%E6%96%B0%E7%9A%84%E7%BD%91%E5%9D%80%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%EF%BC%9Ahttps://en.wikipedia.org/wiki/Sci-Hub%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%88%91%E7%9A%84%E4%BD%93%E9%AA%8C%E6%98%AF%E6%A0%A1%E5%9B%AD%E7%BD%91%E4%B8%8B%E8%BD%BD%E6%AF%94%E6%89%8B%E6%9C%BA%E7%83%AD%E7%82%B9%E5%9D%97%E3%80%82\">http://sci-hub.ren/）在科研圈的重要性，那是不言自明的，通常能够下载到90%以上的文献。不过由于被各大出版社封杀，网站也在不断换地址，网址无法使用时去维基百科看看新的网址就可以了：https://en.wikipedia.org/wiki/Sci-Hub。这个网站我的体验是校园网下载比手机热点块。</a></p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/4.png\" class=\"\">\n\n<p>除了通过DOI或者PMID进行下载外，Sci-Hub还有个更酷的使用的方法：Chrome装上油猴插件，再装上<strong>Sci-hub button</strong>这个插件，然后就会对网页上的DOI号进行自动标识，只需要点那个图标就能进行文献下载了，如下图：</p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/5.png\" class=\"\"></li>\n</ul>\n</li>\n<li><p>其他文献下载方法<br>对那些在知网上需要收费的文献，可以直接到期刊的网站看看是不是可以下载，我试了很多次，通常在期刊网页是可以免费下载的。对英文期刊，如果Sci-Hub无法下载的话，可以去researchgate看看有没有完整的PDF版本；如果上述所有方法都无法下载到的话，可以发邮件给通讯作者试试看能不能得到PDF版本。</p>\n</li>\n<li><p>书籍下载<br>通常需要下载一些书籍，我下载书籍通常只用两种方法就能搞定：</p>\n<ul>\n<li>就摸搜素：<a href=\"https://www.jiumodiary.com/%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E8%83%BD%E6%89%BE%E5%88%B0%E5%A4%A7%E9%83%A8%E5%88%86%E4%B9%A6%E7%B1%8D%EF%BC%8C%E4%B8%8D%E7%AE%A1%E6%98%AF%E4%B8%AD%E6%96%87%E8%BF%98%E6%98%AF%E8%8B%B1%E6%96%87%E7%9A%84%E9%83%BD%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%EF%BC%9B\">https://www.jiumodiary.com/。这个网站能找到大部分书籍，不管是中文还是英文的都可以找到；</a></li>\n<li>上面这个网站找不到的，我就去淘宝，淘宝也没有的话，我就放弃了。</li>\n</ul>\n</li>\n<li><p>试验方法下载</p>\n<p>当前最新的系统的试验方法下载的网站是<a href=\"https://bio-protocol.org/cn/Default.aspx%E3%80%82%E8%AF%A6%E7%BB%86%E5%88%B0%E7%94%A8%E4%BB%80%E4%B9%88%E8%80%97%E6%9D%90%E9%83%BD%E4%BC%9A%E5%86%99%EF%BC%8C%E6%9B%B4%E9%85%B7%E7%82%AB%E7%9A%84%E6%98%AF%E8%BF%98%E6%9C%89%E8%A7%86%E9%A2%91%E5%95%8A%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E4%B8%8A%E7%9A%84%E8%AF%95%E9%AA%8C%E6%96%B9%E6%B3%95%E9%80%9A%E5%B8%B8%E6%98%AF%E4%BC%98%E7%A7%80%E6%96%87%E7%8C%AE%E4%B8%AD%E7%9A%84%E8%AF%95%E9%AA%8C%E6%96%B9%E6%B3%95%E8%BF%9B%E8%A1%8C%E6%80%BB%E7%BB%93%E7%9A%84%EF%BC%9B%E8%BF%98%E8%83%BD%E5%8F%91%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%95%99%E7%A8%8B%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%AF%B4%E6%98%AF%E4%B8%AA%E5%AE%9D%E8%97%8F%E4%BA%86%E3%80%82\">https://bio-protocol.org/cn/Default.aspx。详细到用什么耗材都会写，更酷炫的是还有视频啊。这个网站上的试验方法通常是优秀文献中的试验方法进行总结的；还能发现数据分析教程，可以说是个宝藏了。</a></p>\n</li>\n</ol>\n<h1 id=\"文献追踪\"><a href=\"#文献追踪\" class=\"headerlink\" title=\"文献追踪\"></a>文献追踪</h1><p>每时每刻新的文献浩如烟海，该怎么知道感兴趣领域的最新进展呢？这里说的“最新进展”是相对的，真真正正最新的东西在研究人员的脑海中，发表出来的说不定都是一两年前的工作了。那该怎么追踪这些最新的动态呢？我主要有下面这几种方法：</p>\n<ol>\n<li>关注公众号<br>关注优秀的公众号，这些优秀的公众号通常会推送最新发表的文献，如10月27日凌晨中科院遗传发育所在<em><strong>Nature genetic</strong></em>上发表了小麦的群体遗传文章，马上就有公众号进行推送了。<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/6.png\" class=\"\"></li>\n<li>Stork文献鸟<br>网址：<a href=\"https://www.storkapp.me/?logout=1%E3%80%82%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E6%98%AF%E5%85%8D%E8%B4%B9%E6%B3%A8%E5%86%8C%E7%9A%84%EF%BC%8C%E4%BD%BF%E7%94%A8%E8%B6%85%E7%BA%A7%E7%AE%80%E5%8D%95%EF%BC%8C%E9%82%AE%E7%AE%B1%E6%B3%A8%E5%86%8C%EF%BC%8C%E7%84%B6%E5%90%8E%E6%B7%BB%E5%8A%A0%E5%85%B3%E9%94%AE%E8%AF%8D%EF%BC%8C%E5%86%8D%E8%AE%BE%E7%BD%AE%E6%8E%A8%E9%80%81%E9%A2%91%E7%8E%87%EF%BC%88%E6%AF%8F%E5%A4%A9%E6%88%96%E6%AF%8F%E5%91%A8%EF%BC%89%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82%E5%85%B3%E9%94%AE%E8%AF%8D%E5%8F%AF%E4%BB%A5%E6%98%AF%E7%A0%94%E7%A9%B6%E4%BA%BA%E5%91%98%E7%9A%84%E5%A7%93%E5%90%8D%E3%80%81%E7%A0%94%E7%A9%B6%E8%80%85%E6%9C%BA%E6%9E%84(%E9%AB%98%E6%A0%A1%E3%80%81%E9%99%A2%E6%89%80%E7%AD%89)%E3%80%81%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E7%9C%9F%E7%9C%9F%E6%AD%A3%E6%AD%A3%E7%9A%84%E5%85%B3%E9%94%AE%E8%AF%8D%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E6%96%87%E7%8C%AE%E9%87%8C%E9%9D%A2%E7%9A%84%60Key\">https://www.storkapp.me/?logout=1。这个网站是免费注册的，使用超级简单，邮箱注册，然后添加关键词，再设置推送频率（每天或每周）就可以了。关键词可以是研究人员的姓名、研究者机构(高校、院所等)、也可以是真真正正的关键词，也就是文献里面的`Key</a> words`。现在添加关键词以后还能自动评估关键词的质量。<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/8.png\" class=\"\">\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/7.png\" class=\"\"></li>\n<li>不定期浏览期刊网站<br>这种方法很难get到很相关的文献，但是可以浏览浏览，如果运气好的话，能发现新的东西。</li>\n<li>RSS订阅<br>我后来很少用RSS订阅了，就不展开说了，有前面几种方法足够了。</li>\n</ol>\n<h1 id=\"文献管理\"><a href=\"#文献管理\" class=\"headerlink\" title=\"文献管理\"></a>文献管理</h1><p>文献管理软件有好多种，针对中文英文都有不同的软件，具体比较可以参照这个帖子：<a href=\"https://www.biomart.cn/experiment/793/2714581.htm%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%89%E6%8B%A9%E8%87%AA%E5%B7%B1%E5%96%9C%E6%AC%A2%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8D%B3%E5%8F%AF%E3%80%82%E6%88%91%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%98%AFEndnote%EF%BC%8C%E5%8A%A0%E4%B8%8AOneDrive%E4%BA%91%E5%90%8C%E6%AD%A5%EF%BC%8C%E7%AE%80%E7%9B%B4%E4%B8%8D%E8%A6%81%E5%A4%AA%E7%88%BD%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E6%97%A0%E7%BC%9D%E8%A1%94%E6%8E%A5%E3%80%82%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E7%9A%84%E8%AF%9D%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E4%B8%AD%E7%A7%91%E5%A4%A7%E7%BD%97%E6%98%AD%E9%94%8B%E8%80%81%E5%B8%88%E7%9A%84%E6%95%99%E7%A8%8B%EF%BC%9Ahttps://www.bilibili.com/video/BV1Bz411B7qZ?from=search&amp;seid=12380402443859107521%E3%80%82%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84%E8%AF%9D%E5%8F%AF%E4%BB%A5%E7%9C%8B%E7%9C%8B%60%E5%AD%90%E8%81%BF%E5%AD%A6%E9%95%BF%60%E3%80%82%E6%88%91%E4%BD%BF%E7%94%A8Endnote%E7%9A%84%E5%8E%9F%E5%9B%A0%E6%9C%89%E5%87%A0%E7%82%B9%EF%BC%9A\">https://www.biomart.cn/experiment/793/2714581.htm，然后选择自己喜欢的软件即可。我最常用的是Endnote，加上OneDrive云同步，简直不要太爽，可以多台电脑无缝衔接。使用教程的话可以参考中科大罗昭锋老师的教程：https://www.bilibili.com/video/BV1Bz411B7qZ?from=search&amp;seid=12380402443859107521。公众号的话可以看看`子聿学长`。我使用Endnote的原因有几点：</a></p>\n<ol>\n<li><p>插入文献管理方便（习惯了就不想换软件了）</p>\n<img src=\"/2020/12/14/%E6%96%87%E7%8C%AE%E6%A3%80%E7%B4%A2%E3%80%81%E8%BF%BD%E8%B8%AA%E3%80%81%E9%98%85%E8%AF%BB%E7%AD%89%E5%B0%8F%E6%80%BB%E7%BB%93/9.png\" class=\"\"></li>\n<li><p>插入参考文献方便</p>\n<p>写毕业论文的时候就知道Endnote有多爽了，不但有现成的期刊引文格式，还能自定义，足以应付各种参考文献格式要求。</p>\n</li>\n</ol>\n<p>在使用过程中发现几个小的不足：</p>\n<ol>\n<li>谷歌学术导出的参考文献格式通常会把期刊显示到作者一栏，需要手动修改；</li>\n<li>直接在文献主页导出<code>RIS</code>格式的比<code>enw</code>格式的更容易正确识别。</li>\n</ol>\n<p>在公众号后台回复<code>endnote</code>就能下载到中科大大账号版本的Endnote，无需破解，完全正版。</p>\n<h1 id=\"文献笔记与输出\"><a href=\"#文献笔记与输出\" class=\"headerlink\" title=\"文献笔记与输出\"></a>文献笔记与输出</h1><p>输入与输出是同等重要的，输入是吸收的过程，输出是对吸收的知识进行重塑的过程，有没有真真正正了解某个知识点，最好的方法就是看看能不能无压力输出。关于文献输入，我有一些小的体会：</p>\n<ol>\n<li>在文献中看当前的研究前沿热点，看看那些优秀的文章都在做啥；</li>\n<li>在材料与方法中找到当下最新的方法，重点关注自己能够用到的方法、软件等；</li>\n<li>在讨论部分看看这个研究工作还有啥能做的，指出这个研究的不足之处（这个还有待加进）；</li>\n<li>仔细研究研究文章中的图表，看看别人是怎么用图表来展示数据的，往后自己的类似数据就可以借鉴类似的展示方法；</li>\n<li>往往第一篇英文文献是最痛苦的，专业名词看不懂、句子看不懂、图看不懂，没办法，只能慢慢来；</li>\n<li>不推荐某些全文翻译软件，如X云文献翻译，翻译出来了虽然看着很快，但是在无形中失去了那个过程，以后遇到英文文献还是看不懂（个人观点）（PS：专业名词的翻译的话推荐<code>知网学术翻译</code>：<a href=\"http://dict.cnki.net/%EF%BC%8C%E6%97%A5%E5%B8%B8%E7%BF%BB%E8%AF%91%E6%8E%A8%E8%8D%90%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91%EF%BC%9Ahttps://translate.google.cn/%EF%BC%89%E3%80%82\">http://dict.cnki.net/，日常翻译推荐谷歌翻译：https://translate.google.cn/）。</a></li>\n</ol>\n<p>有了输入之后应该有输出，输出的方式很多，如做报告、写公众号（<code>南农LorMe</code>在文献分享方面做得真的很棒）等，也有很多的个人平台可以进行输出，如简书等。</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p>文献阅读是个过程。研一，导师的要求是一周一篇英文文献精读+PPT汇报，那时候的感受就是痛苦啊；现在是基本每周一篇英文文献+公众号，也很庆幸这两年都是这样过来的，现在看文献基本不用翻译了，看本领域的英文书籍也基本能应付，偶尔遇到专业知识的盲点的时候再查缺补漏。</p>\n<blockquote>\n<p>人生没有无用的经历。</p>\n</blockquote>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>[1] Baetz U, Martinoia E. Root exudates: the hidden part of plant defense[J]. <em><strong>Trends in Plant Science</strong></em>, 2014, 19(2): 90-98.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#103;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#64;&#x67;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#102;&#111;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"批量OPLS-DA函数","abbrlink":"6ec23e3c","date":"2020-12-31T04:08:27.000Z","_content":"\n每次分组过多都要写`for`循环，还容易出错，直接写个函数搞定！\n\n<!-- more -->\n\n```R\nmulti_opls <- function(df, group, method){\n  # load  packages\n  library(ropls)\n  colnames(group) <- c('sample','group_name')\n  group[,2] = as.character(group[,2])\n  group_num <- as.numeric(length(unique(group[,2])))\n  group_unique <- as.character(unique(group[,2]))\n  \n  for (i in 1:(group_num - 1)) {\n    for (j in (i+1):group_num) {\n      \n      dir.create(paste(group_unique[i],' VS ',group_unique[j], sep = ''))\n      selected_group <- c(group_unique[i],group_unique[j])\n      group_sub <- dplyr::filter(group, group_name %in% selected_group)\n      df_sub <- df[group_sub$sample,]\n      \n      if (method == 'opls') {\n        opls_res <- opls(df_sub,group_sub$group_name)\n        \n        sample_scores <- as.data.frame(opls_res@scoreMN)\n        loading_scores <- as.data.frame(opls_res@loadingMN)\n        modelDF <- as.data.frame(opls_res@modelDF)\n        vip_value <- as.data.frame(opls_res@vipVn)\n      }\n      else {\n        oplsda_res <- opls(df_sub,\n                           group_sub$group_name,\n                           predI = 1,\n                           orthoI = NA)\n        \n        sample_scores <- as.data.frame(oplsda_res@scoreMN)\n        loading_scores <- as.data.frame(oplsda_res@loadingMN)\n        modelDF <- as.data.frame(oplsda_res@modelDF)\n        vip_value <- as.data.frame(oplsda_res@vipVn)\n      }\n      write.csv(sample_scores, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'sample_scores.csv',sep = ''))\n      write.csv(loading_scores, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'loading_scores.csv',sep = ''))\n      write.csv(modelDF, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'modelDF.csv',sep = ''))\n      write.csv(vip_value, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'vip_value.csv',sep = ''))\n  }\n}\n}\n```\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","source":"_posts/批量OPLS-DA函数.md","raw":"---\ntitle: 批量OPLS-DA函数\ntags: R语言\ncategories: R语言\nabbrlink: 6ec23e3c\ndate: 2020-12-31 12:08:27\n---\n\n每次分组过多都要写`for`循环，还容易出错，直接写个函数搞定！\n\n<!-- more -->\n\n```R\nmulti_opls <- function(df, group, method){\n  # load  packages\n  library(ropls)\n  colnames(group) <- c('sample','group_name')\n  group[,2] = as.character(group[,2])\n  group_num <- as.numeric(length(unique(group[,2])))\n  group_unique <- as.character(unique(group[,2]))\n  \n  for (i in 1:(group_num - 1)) {\n    for (j in (i+1):group_num) {\n      \n      dir.create(paste(group_unique[i],' VS ',group_unique[j], sep = ''))\n      selected_group <- c(group_unique[i],group_unique[j])\n      group_sub <- dplyr::filter(group, group_name %in% selected_group)\n      df_sub <- df[group_sub$sample,]\n      \n      if (method == 'opls') {\n        opls_res <- opls(df_sub,group_sub$group_name)\n        \n        sample_scores <- as.data.frame(opls_res@scoreMN)\n        loading_scores <- as.data.frame(opls_res@loadingMN)\n        modelDF <- as.data.frame(opls_res@modelDF)\n        vip_value <- as.data.frame(opls_res@vipVn)\n      }\n      else {\n        oplsda_res <- opls(df_sub,\n                           group_sub$group_name,\n                           predI = 1,\n                           orthoI = NA)\n        \n        sample_scores <- as.data.frame(oplsda_res@scoreMN)\n        loading_scores <- as.data.frame(oplsda_res@loadingMN)\n        modelDF <- as.data.frame(oplsda_res@modelDF)\n        vip_value <- as.data.frame(oplsda_res@vipVn)\n      }\n      write.csv(sample_scores, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'sample_scores.csv',sep = ''))\n      write.csv(loading_scores, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'loading_scores.csv',sep = ''))\n      write.csv(modelDF, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'modelDF.csv',sep = ''))\n      write.csv(vip_value, \n                file = paste(group_unique[i],' VS ',group_unique[j],\n                             '/',\n                             'vip_value.csv',sep = ''))\n  }\n}\n}\n```\n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com","slug":"批量OPLS-DA函数","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmd005er0g00hon6zjp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>每次分组过多都要写<code>for</code>循环，还容易出错，直接写个函数搞定！</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multi_opls &lt;- <span class=\"keyword\">function</span>(df, group, method)&#123;</span><br><span class=\"line\">  <span class=\"comment\"># load  packages</span></span><br><span class=\"line\">  library(ropls)</span><br><span class=\"line\">  colnames(group) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;sample&#x27;</span>,<span class=\"string\">&#x27;group_name&#x27;</span>)</span><br><span class=\"line\">  group[,<span class=\"number\">2</span>] = <span class=\"built_in\">as.character</span>(group[,<span class=\"number\">2</span>])</span><br><span class=\"line\">  group_num &lt;- <span class=\"built_in\">as.numeric</span>(<span class=\"built_in\">length</span>(unique(group[,<span class=\"number\">2</span>])))</span><br><span class=\"line\">  group_unique &lt;- <span class=\"built_in\">as.character</span>(unique(group[,<span class=\"number\">2</span>]))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:(group_num - <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j <span class=\"keyword\">in</span> (i+<span class=\"number\">1</span>):group_num) &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      dir.create(paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j], sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      selected_group &lt;- <span class=\"built_in\">c</span>(group_unique[i],group_unique[j])</span><br><span class=\"line\">      group_sub &lt;- dplyr::filter(group, group_name %in% selected_group)</span><br><span class=\"line\">      df_sub &lt;- df[group_sub$sample,]</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;opls&#x27;</span>) &#123;</span><br><span class=\"line\">        opls_res &lt;- opls(df_sub,group_sub$group_name)</span><br><span class=\"line\">        </span><br><span class=\"line\">        sample_scores &lt;- as.data.frame(opls_res@scoreMN)</span><br><span class=\"line\">        loading_scores &lt;- as.data.frame(opls_res@loadingMN)</span><br><span class=\"line\">        modelDF &lt;- as.data.frame(opls_res@modelDF)</span><br><span class=\"line\">        vip_value &lt;- as.data.frame(opls_res@vipVn)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        oplsda_res &lt;- opls(df_sub,</span><br><span class=\"line\">                           group_sub$group_name,</span><br><span class=\"line\">                           predI = <span class=\"number\">1</span>,</span><br><span class=\"line\">                           orthoI = <span class=\"literal\">NA</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        sample_scores &lt;- as.data.frame(oplsda_res@scoreMN)</span><br><span class=\"line\">        loading_scores &lt;- as.data.frame(oplsda_res@loadingMN)</span><br><span class=\"line\">        modelDF &lt;- as.data.frame(oplsda_res@modelDF)</span><br><span class=\"line\">        vip_value &lt;- as.data.frame(oplsda_res@vipVn)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      write.csv(sample_scores, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;sample_scores.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      write.csv(loading_scores, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;loading_scores.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      write.csv(modelDF, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;modelDF.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      write.csv(vip_value, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;vip_value.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>每次分组过多都要写<code>for</code>循环，还容易出错，直接写个函数搞定！</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multi_opls &lt;- <span class=\"keyword\">function</span>(df, group, method)&#123;</span><br><span class=\"line\">  <span class=\"comment\"># load  packages</span></span><br><span class=\"line\">  library(ropls)</span><br><span class=\"line\">  colnames(group) &lt;- <span class=\"built_in\">c</span>(<span class=\"string\">&#x27;sample&#x27;</span>,<span class=\"string\">&#x27;group_name&#x27;</span>)</span><br><span class=\"line\">  group[,<span class=\"number\">2</span>] = <span class=\"built_in\">as.character</span>(group[,<span class=\"number\">2</span>])</span><br><span class=\"line\">  group_num &lt;- <span class=\"built_in\">as.numeric</span>(<span class=\"built_in\">length</span>(unique(group[,<span class=\"number\">2</span>])))</span><br><span class=\"line\">  group_unique &lt;- <span class=\"built_in\">as.character</span>(unique(group[,<span class=\"number\">2</span>]))</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:(group_num - <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j <span class=\"keyword\">in</span> (i+<span class=\"number\">1</span>):group_num) &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      dir.create(paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j], sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      selected_group &lt;- <span class=\"built_in\">c</span>(group_unique[i],group_unique[j])</span><br><span class=\"line\">      group_sub &lt;- dplyr::filter(group, group_name %in% selected_group)</span><br><span class=\"line\">      df_sub &lt;- df[group_sub$sample,]</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (method == <span class=\"string\">&#x27;opls&#x27;</span>) &#123;</span><br><span class=\"line\">        opls_res &lt;- opls(df_sub,group_sub$group_name)</span><br><span class=\"line\">        </span><br><span class=\"line\">        sample_scores &lt;- as.data.frame(opls_res@scoreMN)</span><br><span class=\"line\">        loading_scores &lt;- as.data.frame(opls_res@loadingMN)</span><br><span class=\"line\">        modelDF &lt;- as.data.frame(opls_res@modelDF)</span><br><span class=\"line\">        vip_value &lt;- as.data.frame(opls_res@vipVn)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        oplsda_res &lt;- opls(df_sub,</span><br><span class=\"line\">                           group_sub$group_name,</span><br><span class=\"line\">                           predI = <span class=\"number\">1</span>,</span><br><span class=\"line\">                           orthoI = <span class=\"literal\">NA</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        sample_scores &lt;- as.data.frame(oplsda_res@scoreMN)</span><br><span class=\"line\">        loading_scores &lt;- as.data.frame(oplsda_res@loadingMN)</span><br><span class=\"line\">        modelDF &lt;- as.data.frame(oplsda_res@modelDF)</span><br><span class=\"line\">        vip_value &lt;- as.data.frame(oplsda_res@vipVn)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      write.csv(sample_scores, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;sample_scores.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      write.csv(loading_scores, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;loading_scores.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      write.csv(modelDF, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;modelDF.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">      write.csv(vip_value, </span><br><span class=\"line\">                file = paste(group_unique[i],<span class=\"string\">&#x27; VS &#x27;</span>,group_unique[j],</span><br><span class=\"line\">                             <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">                             <span class=\"string\">&#x27;vip_value.csv&#x27;</span>,sep = <span class=\"string\">&#x27;&#x27;</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#x31;&#49;&#x37;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;\">&#108;&#105;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;</a></p>\n</blockquote>"},{"title":"新希望—野生（近缘）种质资源","abbrlink":"baab187","date":"2021-02-12T10:37:15.000Z","_content":"\n种质资源是极其重要的资源，随着世界人口的增加，对粮食产量的要求越来越高，包括产量和质量。但是，<!-- more -->作物生长会受到各种各样的胁迫，包括生物胁迫和非生物胁迫。生物胁迫主要是病原侵染和昆虫取食；非生物胁迫包括干旱胁迫、盐胁迫、重金属胁迫等。应对病原菌侵染胁迫常见的方法是使用抗病品种和使用化学农药，但是这两种方法都有一定的局限性：\n\n- 种植几年后，抗病品种携带的抗性基因的抗性会逐渐丧失；\n- 光谱抗性基因通常会影响作物的产量和质量等性状；\n- 抗性基因叠加较为困难；\n- 化学农药的滥用会带来一系列的问题，如食品安全、环境污染等。\n\n虽然这些问题都有一定的解决办法，如在化学农药的研发中利用`RNAi`技术。各种组学技术的发展极大地促进了作物抗性基因的挖掘和利用。“绿色革命”以后，大量的品种被培育推广，这些单一品种的大面积推广种植导致其可利用的抗性基因数量逐渐减少。而那些未被大面积推广，甚至是没有被发现利用的品种则成为了关键基因挖掘利用的关键材料，如中科院遗传发育所的储成才研究员利用100余个农家品种成功挖掘到水稻氮素高效利用的关键基因$^{[1]}$。除开这种利用未被发掘的种质资源外，一个比较新的方向是利用野生/近缘种植资源挖掘关键的遗传资源。最近最经典的案例是遗传发育所的李家洋院士利用四倍体野生稻直接实现了野生到的从头驯化，利用十余年的研究就实现了需要几千年才能完成的自然驯化，开辟了育种的新方向$^{[2]}$。这两天，塞恩斯伯里实验室在***Nature Plants***上发表了一篇文章，在茄属种植物中发现并成功克隆了新的对马铃薯晚疫病具有光谱抗性的基因$^{[3]}$。大年初一下载了文献，通读一遍，简直就是精彩啊！\n\n# 文献心得\n\n读完这篇文献，感触良多，总结几点：\n\n- 实验室（课题组）的前期研究（传承）很重要，在某个领域的点滴积累是发现新方向新东西的重要基础，研究要利用课题组优势；\n- 野生（近缘）种质资源是非常重要的资源，保护、开发、利用这些种质资源对未来社会具有重要影响；\n- 技术的发展能够极大地促进科学研究的发展，这个研究中利用了许多技术，如RenSeq、GenSeq、单分子实时测序、关联基因组学等技术，需要不断地学习才能了解技术的发展方向并合理地利用这些技术；\n- 合理的可视化方法能够极大地增强文章的可读性，倒数第二张图片直接是让我拍案叫绝啊，学习了；\n- 推理能力很重要，作者从进化树上推理出基因（蛋白）之间的依赖关系，这种推理能力的基础是大量的文献阅读，没有大量的知识储备是不可能完成这种推理的。\n\n# 马铃薯晚疫病\n\n马铃薯晚疫病（potato late blight，PLB）是由致病疫霉[*Phytophthora infestans*(Mont) deBary，*P. infestans*]引起的。严重时会造成50%的损失，某些地区甚至会绝收$^{[4]}$。下图是致病疫霉侵染马铃薯的症状图$^{[5]}$。\n\n{% asset_img 1.png %}\n\n# 本研究简述\n\n研究人员从茄属植物中克隆到了许多抗性基因，并通过育种的方法将这些抗性基因导入到马铃薯中。但是，单个的抗性基因在面对进化速度较快的致病疫霉*P.infestans*时，抗性会丢失，因此需要挖掘利用具有持久抗性的基因。研究人员从光果龙葵中克隆到了一个抗性基因：*Rpi-amr1*。利用来自不同国家的19个致病疫霉进行侵染测试，发现这个基因对19个致病疫霉都具有抗性。进一步利用关联基因组学和长读长RenSeq技术，研究人员又在其他的光果龙葵中及其近缘种中发现了8个*Rpi-amr1*的等位基因。尽管这些等位基因的蛋白序列与*Rpi-amr1*的蛋白序列只有90%左右的相似性，但是它们对致病疫霉均具有光谱抗性，但是对*Avramr1*的直系同源物和旁系同源物的识别能力不一样。这个研究为挖掘对*P.infestans* 具有抗性的基因提供了新的思路。\n\n# 研究过程\n\n研究团队在之前就在光果龙葵中鉴定到了对*P.infestans* 具有抗性的基因*Rpi-amr3*，未来挖掘到新的*Rpi-amr*基因，团队利用14个对*P.infestans* 具有抗性的光果龙葵品系及其近缘植物*S. nigrescens* 和 *S. nodiflorum*来构建F1和F2群体。利用RenSeq得到的marker，借助基因分型测序（GBS）和全基因组鸟枪测序（WGS）在11号染色体的短臂上定位到了基因*Rpi-amr1*。进一步利用单分子测序技术发现有11个潜在的编码序列，其中9个编码NLR基因。为了验证这些基因是不是都可以表达，利用cDNA RenSeq数据比对发现其中有7个基因都发生了表达，分别是*Rpi-amr1a*到*Rpi-amr1h*（下图a-c）。\n\n{% asset_img 2.png %}\n\n找到那么多个潜在的功能基因，那是不是都有功能呢？通过接种发现只有*Rpi-amr1e*这个能够减缓*P.infestans*的生长（下图）。\n\n{% asset_img 3.png %}\n\n那这个*Rpi-amr1e*对*P.infestans*到底有没有抗性呢？直接将这个基因克隆到马铃薯中，同时以没有功能的*Rpi-amr1a*作为阴性对照。发现克隆了*Rpi-amr1e*的马铃薯对*P.infestans*的抗性简直完美啊 （下图）。\n\n{% asset_img 4.png %}\n\n这个基因结构是啥样的呢？研究者将cDNA RenSeq数据mapping到*Rpi-amr1*的全长数据上，发现有4种可变剪切结构（下图）。这个基因是典型的CC-NB-LRR抗性基因，具有CC、NB和LRRs结构域，这三种结构域都在第一个外显子上。剩下的三个外显子上没有发现已知结构域的同系物。\n\n{% asset_img 5.png %}\n\n{% asset_img 6.png %}\n\n在之前的研究中他们发现14个光果龙葵极其近缘种对马铃薯晚疫病都有抗性，为了验证*Rpi-amr1*是不是也能赋予了其他光果龙葵抗性，研究人员从亲本为抗性品系的F2群体中选择了10-50株感病植株进行验证，在*Rpi-amr1*位置上挑选了个marker。结果发现这些干饼F2植株都缺少这个marker，这个个结果就表明光果龙葵对致病疫霉的抗性是由*Rpi-amr1* locus赋予的。那对致病疫霉具有抗性的光果龙葵的抗性是不是由*Rpi-amr1*的同系物赋予的呢？为了验证这个猜想，研究者利用SMRT RenSeq从头组装了那些抗性品系，以此来寻找*Rpi-amr1*的同系物，此外还利用了BSA RenSeq、cDNA RenSeq、关联基因组学和GenSeq等技术，最终找到8个*Rpi-amr1*同系物对88069这个菌株具有抗性。\n\n{% asset_img 7.png %}\n\n找到了功能基因及其同系物，下一步那就应该看看它们对致病疫霉的抗性能力怎么样了。研究者挑选了两个同系物，*Rpi-amr1-2272*和*Rpi-amr1-2273*，用于测试的19个菌株来自不同国家。结果发现转入这两种同系物的马铃薯对这19株致病疫霉均有抗性，而野生型的马铃薯对这19株菌都没有抗性。这个结果表明*Rpi-amr1*对致病疫霉*P.infestans*具有广谱抗性。\n\n植物免疫响应的重要组成部分之一是ETI，那*Rpi-amr1*及其同系物能不能有效识别到致病疫霉*P.infestans*中的效应子呢？为此，研究人员合成了*Avramr1*及其3个同系物，这三个同系物与*Avramr1*在进化树上属于不同的分支（分别属于Clade A-D）。除此之外，还从*P.parasitica*和*P.cactorum*中也合成了*Avaamr1*的同系物。\n\n结果发现*Rpi-amr1*不同的等位基因与不同的*Avramr1*同系物组合时，产生的免疫反应不一样（下图）。从图中可以看出的是，*Rpi-amr1*的功能性同系物至少能够识别一种*Avramr1*。\n\n{% asset_img 8.png %}\n\n*Rpi-amr1*介导的抗性和效应子识别是它自己独立完成的呢还是需要依赖于其他成分呢？研究者首先对茄科植物代表性的NLR蛋白构建进化树，发现Rpi-amr1分组在CNL-3这个分支中，这个分支中之前没有克隆到任何的功能基因。与之最近的已被克隆到的基因是属于CNL-13这个分支位于4号染色体上的*Rpi-amr3*，这个基因与*Rpi-amr1*在氨基酸序列上具有31.2%的相似性。通过进化树研究人员猜测Rpi-amr1很可能需要NRC分支的帮助才能完成其功能。这个是怎么看出来的呢？作者解释的是CNL-3这个分支所在的分组（蓝色框）需要依赖于NRC才能完成相应的功能。利用瞬时表达发现*Rpi-amr1*介导的抗性需要NRC2或者NRC3的帮助才能完成。更多的研究结果进一步说明了*Rpi-amr1*介导的抗性和效应子识别需要依赖NRC2或者NRC3才能完成。\n\n{% asset_img 9.png %}\n\n似乎，研究到这里就应该结束了。但是还探究了*Rpi-amr1*同系物是否存在于其他的茄科植物中。进一步的研究发现在六倍体茄科植物*S.nigrum*中也存在*Rpi-amr1*的同系物。\n\n还有一个问题：*Rpi-amr1*有那么多的等位基因，是怎么来的呢？研究人员进一步研究发现是由于直系同源和旁系同源间序列交换才形成了如此高的等位基因多样性。\n\n# 参考文献\n\n>1. Liu Y, Wang H, Jiang Z, et al. Genomic basis of geographical adaptation to soil nitrogen in rice[J]. ***Nature***, 2021: 1-6.\n>2. Yu H, Lin T, Meng X, et al. A route to de novo domestication of wild allotetraploid rice[J]. ***Cell***, 2021.\n>3. Witek, K., Lin, X., Karki, H.S. *et al.* A complex resistance locus in *Solanum americanum* recognizes a conserved *Phytophthora* effector. ***Nature Plants*** (2021).\n>4. 赵中华,朱杰华,朱晓明.马铃薯晚疫病发生特点与防治对策[J].中国植保导刊,2012,32(04):16-17.\n>5. 祝菊澧,梁静思,王伟伟,王洪洋,刘晶,李灿辉,唐唯.马铃薯致病疫霉研究进展[J].微生物学通报,2020,47(03):952-966.\n\n# 文献信息\n\n{% asset_img 10.png %}","source":"_posts/新希望—野生（近缘）种质资源.md","raw":"---\ntitle: 新希望—野生（近缘）种质资源\ntags: 文献\ncategories: 文献\nabbrlink: baab187\ndate: 2021-02-12 18:37:15\n---\n\n种质资源是极其重要的资源，随着世界人口的增加，对粮食产量的要求越来越高，包括产量和质量。但是，<!-- more -->作物生长会受到各种各样的胁迫，包括生物胁迫和非生物胁迫。生物胁迫主要是病原侵染和昆虫取食；非生物胁迫包括干旱胁迫、盐胁迫、重金属胁迫等。应对病原菌侵染胁迫常见的方法是使用抗病品种和使用化学农药，但是这两种方法都有一定的局限性：\n\n- 种植几年后，抗病品种携带的抗性基因的抗性会逐渐丧失；\n- 光谱抗性基因通常会影响作物的产量和质量等性状；\n- 抗性基因叠加较为困难；\n- 化学农药的滥用会带来一系列的问题，如食品安全、环境污染等。\n\n虽然这些问题都有一定的解决办法，如在化学农药的研发中利用`RNAi`技术。各种组学技术的发展极大地促进了作物抗性基因的挖掘和利用。“绿色革命”以后，大量的品种被培育推广，这些单一品种的大面积推广种植导致其可利用的抗性基因数量逐渐减少。而那些未被大面积推广，甚至是没有被发现利用的品种则成为了关键基因挖掘利用的关键材料，如中科院遗传发育所的储成才研究员利用100余个农家品种成功挖掘到水稻氮素高效利用的关键基因$^{[1]}$。除开这种利用未被发掘的种质资源外，一个比较新的方向是利用野生/近缘种植资源挖掘关键的遗传资源。最近最经典的案例是遗传发育所的李家洋院士利用四倍体野生稻直接实现了野生到的从头驯化，利用十余年的研究就实现了需要几千年才能完成的自然驯化，开辟了育种的新方向$^{[2]}$。这两天，塞恩斯伯里实验室在***Nature Plants***上发表了一篇文章，在茄属种植物中发现并成功克隆了新的对马铃薯晚疫病具有光谱抗性的基因$^{[3]}$。大年初一下载了文献，通读一遍，简直就是精彩啊！\n\n# 文献心得\n\n读完这篇文献，感触良多，总结几点：\n\n- 实验室（课题组）的前期研究（传承）很重要，在某个领域的点滴积累是发现新方向新东西的重要基础，研究要利用课题组优势；\n- 野生（近缘）种质资源是非常重要的资源，保护、开发、利用这些种质资源对未来社会具有重要影响；\n- 技术的发展能够极大地促进科学研究的发展，这个研究中利用了许多技术，如RenSeq、GenSeq、单分子实时测序、关联基因组学等技术，需要不断地学习才能了解技术的发展方向并合理地利用这些技术；\n- 合理的可视化方法能够极大地增强文章的可读性，倒数第二张图片直接是让我拍案叫绝啊，学习了；\n- 推理能力很重要，作者从进化树上推理出基因（蛋白）之间的依赖关系，这种推理能力的基础是大量的文献阅读，没有大量的知识储备是不可能完成这种推理的。\n\n# 马铃薯晚疫病\n\n马铃薯晚疫病（potato late blight，PLB）是由致病疫霉[*Phytophthora infestans*(Mont) deBary，*P. infestans*]引起的。严重时会造成50%的损失，某些地区甚至会绝收$^{[4]}$。下图是致病疫霉侵染马铃薯的症状图$^{[5]}$。\n\n{% asset_img 1.png %}\n\n# 本研究简述\n\n研究人员从茄属植物中克隆到了许多抗性基因，并通过育种的方法将这些抗性基因导入到马铃薯中。但是，单个的抗性基因在面对进化速度较快的致病疫霉*P.infestans*时，抗性会丢失，因此需要挖掘利用具有持久抗性的基因。研究人员从光果龙葵中克隆到了一个抗性基因：*Rpi-amr1*。利用来自不同国家的19个致病疫霉进行侵染测试，发现这个基因对19个致病疫霉都具有抗性。进一步利用关联基因组学和长读长RenSeq技术，研究人员又在其他的光果龙葵中及其近缘种中发现了8个*Rpi-amr1*的等位基因。尽管这些等位基因的蛋白序列与*Rpi-amr1*的蛋白序列只有90%左右的相似性，但是它们对致病疫霉均具有光谱抗性，但是对*Avramr1*的直系同源物和旁系同源物的识别能力不一样。这个研究为挖掘对*P.infestans* 具有抗性的基因提供了新的思路。\n\n# 研究过程\n\n研究团队在之前就在光果龙葵中鉴定到了对*P.infestans* 具有抗性的基因*Rpi-amr3*，未来挖掘到新的*Rpi-amr*基因，团队利用14个对*P.infestans* 具有抗性的光果龙葵品系及其近缘植物*S. nigrescens* 和 *S. nodiflorum*来构建F1和F2群体。利用RenSeq得到的marker，借助基因分型测序（GBS）和全基因组鸟枪测序（WGS）在11号染色体的短臂上定位到了基因*Rpi-amr1*。进一步利用单分子测序技术发现有11个潜在的编码序列，其中9个编码NLR基因。为了验证这些基因是不是都可以表达，利用cDNA RenSeq数据比对发现其中有7个基因都发生了表达，分别是*Rpi-amr1a*到*Rpi-amr1h*（下图a-c）。\n\n{% asset_img 2.png %}\n\n找到那么多个潜在的功能基因，那是不是都有功能呢？通过接种发现只有*Rpi-amr1e*这个能够减缓*P.infestans*的生长（下图）。\n\n{% asset_img 3.png %}\n\n那这个*Rpi-amr1e*对*P.infestans*到底有没有抗性呢？直接将这个基因克隆到马铃薯中，同时以没有功能的*Rpi-amr1a*作为阴性对照。发现克隆了*Rpi-amr1e*的马铃薯对*P.infestans*的抗性简直完美啊 （下图）。\n\n{% asset_img 4.png %}\n\n这个基因结构是啥样的呢？研究者将cDNA RenSeq数据mapping到*Rpi-amr1*的全长数据上，发现有4种可变剪切结构（下图）。这个基因是典型的CC-NB-LRR抗性基因，具有CC、NB和LRRs结构域，这三种结构域都在第一个外显子上。剩下的三个外显子上没有发现已知结构域的同系物。\n\n{% asset_img 5.png %}\n\n{% asset_img 6.png %}\n\n在之前的研究中他们发现14个光果龙葵极其近缘种对马铃薯晚疫病都有抗性，为了验证*Rpi-amr1*是不是也能赋予了其他光果龙葵抗性，研究人员从亲本为抗性品系的F2群体中选择了10-50株感病植株进行验证，在*Rpi-amr1*位置上挑选了个marker。结果发现这些干饼F2植株都缺少这个marker，这个个结果就表明光果龙葵对致病疫霉的抗性是由*Rpi-amr1* locus赋予的。那对致病疫霉具有抗性的光果龙葵的抗性是不是由*Rpi-amr1*的同系物赋予的呢？为了验证这个猜想，研究者利用SMRT RenSeq从头组装了那些抗性品系，以此来寻找*Rpi-amr1*的同系物，此外还利用了BSA RenSeq、cDNA RenSeq、关联基因组学和GenSeq等技术，最终找到8个*Rpi-amr1*同系物对88069这个菌株具有抗性。\n\n{% asset_img 7.png %}\n\n找到了功能基因及其同系物，下一步那就应该看看它们对致病疫霉的抗性能力怎么样了。研究者挑选了两个同系物，*Rpi-amr1-2272*和*Rpi-amr1-2273*，用于测试的19个菌株来自不同国家。结果发现转入这两种同系物的马铃薯对这19株致病疫霉均有抗性，而野生型的马铃薯对这19株菌都没有抗性。这个结果表明*Rpi-amr1*对致病疫霉*P.infestans*具有广谱抗性。\n\n植物免疫响应的重要组成部分之一是ETI，那*Rpi-amr1*及其同系物能不能有效识别到致病疫霉*P.infestans*中的效应子呢？为此，研究人员合成了*Avramr1*及其3个同系物，这三个同系物与*Avramr1*在进化树上属于不同的分支（分别属于Clade A-D）。除此之外，还从*P.parasitica*和*P.cactorum*中也合成了*Avaamr1*的同系物。\n\n结果发现*Rpi-amr1*不同的等位基因与不同的*Avramr1*同系物组合时，产生的免疫反应不一样（下图）。从图中可以看出的是，*Rpi-amr1*的功能性同系物至少能够识别一种*Avramr1*。\n\n{% asset_img 8.png %}\n\n*Rpi-amr1*介导的抗性和效应子识别是它自己独立完成的呢还是需要依赖于其他成分呢？研究者首先对茄科植物代表性的NLR蛋白构建进化树，发现Rpi-amr1分组在CNL-3这个分支中，这个分支中之前没有克隆到任何的功能基因。与之最近的已被克隆到的基因是属于CNL-13这个分支位于4号染色体上的*Rpi-amr3*，这个基因与*Rpi-amr1*在氨基酸序列上具有31.2%的相似性。通过进化树研究人员猜测Rpi-amr1很可能需要NRC分支的帮助才能完成其功能。这个是怎么看出来的呢？作者解释的是CNL-3这个分支所在的分组（蓝色框）需要依赖于NRC才能完成相应的功能。利用瞬时表达发现*Rpi-amr1*介导的抗性需要NRC2或者NRC3的帮助才能完成。更多的研究结果进一步说明了*Rpi-amr1*介导的抗性和效应子识别需要依赖NRC2或者NRC3才能完成。\n\n{% asset_img 9.png %}\n\n似乎，研究到这里就应该结束了。但是还探究了*Rpi-amr1*同系物是否存在于其他的茄科植物中。进一步的研究发现在六倍体茄科植物*S.nigrum*中也存在*Rpi-amr1*的同系物。\n\n还有一个问题：*Rpi-amr1*有那么多的等位基因，是怎么来的呢？研究人员进一步研究发现是由于直系同源和旁系同源间序列交换才形成了如此高的等位基因多样性。\n\n# 参考文献\n\n>1. Liu Y, Wang H, Jiang Z, et al. Genomic basis of geographical adaptation to soil nitrogen in rice[J]. ***Nature***, 2021: 1-6.\n>2. Yu H, Lin T, Meng X, et al. A route to de novo domestication of wild allotetraploid rice[J]. ***Cell***, 2021.\n>3. Witek, K., Lin, X., Karki, H.S. *et al.* A complex resistance locus in *Solanum americanum* recognizes a conserved *Phytophthora* effector. ***Nature Plants*** (2021).\n>4. 赵中华,朱杰华,朱晓明.马铃薯晚疫病发生特点与防治对策[J].中国植保导刊,2012,32(04):16-17.\n>5. 祝菊澧,梁静思,王伟伟,王洪洋,刘晶,李灿辉,唐唯.马铃薯致病疫霉研究进展[J].微生物学通报,2020,47(03):952-966.\n\n# 文献信息\n\n{% asset_img 10.png %}","slug":"新希望—野生（近缘）种质资源","published":1,"updated":"2021-02-21T00:59:51.565Z","_id":"ckwbqwcme005hr0g02i8xfpsf","comments":1,"layout":"post","photos":[],"link":"","content":"<p>种质资源是极其重要的资源，随着世界人口的增加，对粮食产量的要求越来越高，包括产量和质量。但是，<span id=\"more\"></span>作物生长会受到各种各样的胁迫，包括生物胁迫和非生物胁迫。生物胁迫主要是病原侵染和昆虫取食；非生物胁迫包括干旱胁迫、盐胁迫、重金属胁迫等。应对病原菌侵染胁迫常见的方法是使用抗病品种和使用化学农药，但是这两种方法都有一定的局限性：</p>\n<ul>\n<li>种植几年后，抗病品种携带的抗性基因的抗性会逐渐丧失；</li>\n<li>光谱抗性基因通常会影响作物的产量和质量等性状；</li>\n<li>抗性基因叠加较为困难；</li>\n<li>化学农药的滥用会带来一系列的问题，如食品安全、环境污染等。</li>\n</ul>\n<p>虽然这些问题都有一定的解决办法，如在化学农药的研发中利用<code>RNAi</code>技术。各种组学技术的发展极大地促进了作物抗性基因的挖掘和利用。“绿色革命”以后，大量的品种被培育推广，这些单一品种的大面积推广种植导致其可利用的抗性基因数量逐渐减少。而那些未被大面积推广，甚至是没有被发现利用的品种则成为了关键基因挖掘利用的关键材料，如中科院遗传发育所的储成才研究员利用100余个农家品种成功挖掘到水稻氮素高效利用的关键基因$^{[1]}$。除开这种利用未被发掘的种质资源外，一个比较新的方向是利用野生/近缘种植资源挖掘关键的遗传资源。最近最经典的案例是遗传发育所的李家洋院士利用四倍体野生稻直接实现了野生到的从头驯化，利用十余年的研究就实现了需要几千年才能完成的自然驯化，开辟了育种的新方向$^{[2]}$。这两天，塞恩斯伯里实验室在<em><strong>Nature Plants</strong></em>上发表了一篇文章，在茄属种植物中发现并成功克隆了新的对马铃薯晚疫病具有光谱抗性的基因$^{[3]}$。大年初一下载了文献，通读一遍，简直就是精彩啊！</p>\n<h1 id=\"文献心得\"><a href=\"#文献心得\" class=\"headerlink\" title=\"文献心得\"></a>文献心得</h1><p>读完这篇文献，感触良多，总结几点：</p>\n<ul>\n<li>实验室（课题组）的前期研究（传承）很重要，在某个领域的点滴积累是发现新方向新东西的重要基础，研究要利用课题组优势；</li>\n<li>野生（近缘）种质资源是非常重要的资源，保护、开发、利用这些种质资源对未来社会具有重要影响；</li>\n<li>技术的发展能够极大地促进科学研究的发展，这个研究中利用了许多技术，如RenSeq、GenSeq、单分子实时测序、关联基因组学等技术，需要不断地学习才能了解技术的发展方向并合理地利用这些技术；</li>\n<li>合理的可视化方法能够极大地增强文章的可读性，倒数第二张图片直接是让我拍案叫绝啊，学习了；</li>\n<li>推理能力很重要，作者从进化树上推理出基因（蛋白）之间的依赖关系，这种推理能力的基础是大量的文献阅读，没有大量的知识储备是不可能完成这种推理的。</li>\n</ul>\n<h1 id=\"马铃薯晚疫病\"><a href=\"#马铃薯晚疫病\" class=\"headerlink\" title=\"马铃薯晚疫病\"></a>马铃薯晚疫病</h1><p>马铃薯晚疫病（potato late blight，PLB）是由致病疫霉[<em>Phytophthora infestans</em>(Mont) deBary，<em>P. infestans</em>]引起的。严重时会造成50%的损失，某些地区甚至会绝收$^{[4]}$。下图是致病疫霉侵染马铃薯的症状图$^{[5]}$。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/1.png\" class=\"\">\n\n<h1 id=\"本研究简述\"><a href=\"#本研究简述\" class=\"headerlink\" title=\"本研究简述\"></a>本研究简述</h1><p>研究人员从茄属植物中克隆到了许多抗性基因，并通过育种的方法将这些抗性基因导入到马铃薯中。但是，单个的抗性基因在面对进化速度较快的致病疫霉<em>P.infestans</em>时，抗性会丢失，因此需要挖掘利用具有持久抗性的基因。研究人员从光果龙葵中克隆到了一个抗性基因：<em>Rpi-amr1</em>。利用来自不同国家的19个致病疫霉进行侵染测试，发现这个基因对19个致病疫霉都具有抗性。进一步利用关联基因组学和长读长RenSeq技术，研究人员又在其他的光果龙葵中及其近缘种中发现了8个<em>Rpi-amr1</em>的等位基因。尽管这些等位基因的蛋白序列与<em>Rpi-amr1</em>的蛋白序列只有90%左右的相似性，但是它们对致病疫霉均具有光谱抗性，但是对<em>Avramr1</em>的直系同源物和旁系同源物的识别能力不一样。这个研究为挖掘对<em>P.infestans</em> 具有抗性的基因提供了新的思路。</p>\n<h1 id=\"研究过程\"><a href=\"#研究过程\" class=\"headerlink\" title=\"研究过程\"></a>研究过程</h1><p>研究团队在之前就在光果龙葵中鉴定到了对<em>P.infestans</em> 具有抗性的基因<em>Rpi-amr3</em>，未来挖掘到新的<em>Rpi-amr</em>基因，团队利用14个对<em>P.infestans</em> 具有抗性的光果龙葵品系及其近缘植物<em>S. nigrescens</em> 和 <em>S. nodiflorum</em>来构建F1和F2群体。利用RenSeq得到的marker，借助基因分型测序（GBS）和全基因组鸟枪测序（WGS）在11号染色体的短臂上定位到了基因<em>Rpi-amr1</em>。进一步利用单分子测序技术发现有11个潜在的编码序列，其中9个编码NLR基因。为了验证这些基因是不是都可以表达，利用cDNA RenSeq数据比对发现其中有7个基因都发生了表达，分别是<em>Rpi-amr1a</em>到<em>Rpi-amr1h</em>（下图a-c）。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/2.png\" class=\"\">\n\n<p>找到那么多个潜在的功能基因，那是不是都有功能呢？通过接种发现只有<em>Rpi-amr1e</em>这个能够减缓<em>P.infestans</em>的生长（下图）。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/3.png\" class=\"\">\n\n<p>那这个<em>Rpi-amr1e</em>对<em>P.infestans</em>到底有没有抗性呢？直接将这个基因克隆到马铃薯中，同时以没有功能的<em>Rpi-amr1a</em>作为阴性对照。发现克隆了<em>Rpi-amr1e</em>的马铃薯对<em>P.infestans</em>的抗性简直完美啊 （下图）。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/4.png\" class=\"\">\n\n<p>这个基因结构是啥样的呢？研究者将cDNA RenSeq数据mapping到<em>Rpi-amr1</em>的全长数据上，发现有4种可变剪切结构（下图）。这个基因是典型的CC-NB-LRR抗性基因，具有CC、NB和LRRs结构域，这三种结构域都在第一个外显子上。剩下的三个外显子上没有发现已知结构域的同系物。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/5.png\" class=\"\">\n\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/6.png\" class=\"\">\n\n<p>在之前的研究中他们发现14个光果龙葵极其近缘种对马铃薯晚疫病都有抗性，为了验证<em>Rpi-amr1</em>是不是也能赋予了其他光果龙葵抗性，研究人员从亲本为抗性品系的F2群体中选择了10-50株感病植株进行验证，在<em>Rpi-amr1</em>位置上挑选了个marker。结果发现这些干饼F2植株都缺少这个marker，这个个结果就表明光果龙葵对致病疫霉的抗性是由<em>Rpi-amr1</em> locus赋予的。那对致病疫霉具有抗性的光果龙葵的抗性是不是由<em>Rpi-amr1</em>的同系物赋予的呢？为了验证这个猜想，研究者利用SMRT RenSeq从头组装了那些抗性品系，以此来寻找<em>Rpi-amr1</em>的同系物，此外还利用了BSA RenSeq、cDNA RenSeq、关联基因组学和GenSeq等技术，最终找到8个<em>Rpi-amr1</em>同系物对88069这个菌株具有抗性。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/7.png\" class=\"\">\n\n<p>找到了功能基因及其同系物，下一步那就应该看看它们对致病疫霉的抗性能力怎么样了。研究者挑选了两个同系物，<em>Rpi-amr1-2272</em>和<em>Rpi-amr1-2273</em>，用于测试的19个菌株来自不同国家。结果发现转入这两种同系物的马铃薯对这19株致病疫霉均有抗性，而野生型的马铃薯对这19株菌都没有抗性。这个结果表明<em>Rpi-amr1</em>对致病疫霉<em>P.infestans</em>具有广谱抗性。</p>\n<p>植物免疫响应的重要组成部分之一是ETI，那<em>Rpi-amr1</em>及其同系物能不能有效识别到致病疫霉<em>P.infestans</em>中的效应子呢？为此，研究人员合成了<em>Avramr1</em>及其3个同系物，这三个同系物与<em>Avramr1</em>在进化树上属于不同的分支（分别属于Clade A-D）。除此之外，还从<em>P.parasitica</em>和<em>P.cactorum</em>中也合成了<em>Avaamr1</em>的同系物。</p>\n<p>结果发现<em>Rpi-amr1</em>不同的等位基因与不同的<em>Avramr1</em>同系物组合时，产生的免疫反应不一样（下图）。从图中可以看出的是，<em>Rpi-amr1</em>的功能性同系物至少能够识别一种<em>Avramr1</em>。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/8.png\" class=\"\">\n\n<p><em>Rpi-amr1</em>介导的抗性和效应子识别是它自己独立完成的呢还是需要依赖于其他成分呢？研究者首先对茄科植物代表性的NLR蛋白构建进化树，发现Rpi-amr1分组在CNL-3这个分支中，这个分支中之前没有克隆到任何的功能基因。与之最近的已被克隆到的基因是属于CNL-13这个分支位于4号染色体上的<em>Rpi-amr3</em>，这个基因与<em>Rpi-amr1</em>在氨基酸序列上具有31.2%的相似性。通过进化树研究人员猜测Rpi-amr1很可能需要NRC分支的帮助才能完成其功能。这个是怎么看出来的呢？作者解释的是CNL-3这个分支所在的分组（蓝色框）需要依赖于NRC才能完成相应的功能。利用瞬时表达发现<em>Rpi-amr1</em>介导的抗性需要NRC2或者NRC3的帮助才能完成。更多的研究结果进一步说明了<em>Rpi-amr1</em>介导的抗性和效应子识别需要依赖NRC2或者NRC3才能完成。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/9.png\" class=\"\">\n\n<p>似乎，研究到这里就应该结束了。但是还探究了<em>Rpi-amr1</em>同系物是否存在于其他的茄科植物中。进一步的研究发现在六倍体茄科植物<em>S.nigrum</em>中也存在<em>Rpi-amr1</em>的同系物。</p>\n<p>还有一个问题：<em>Rpi-amr1</em>有那么多的等位基因，是怎么来的呢？研究人员进一步研究发现是由于直系同源和旁系同源间序列交换才形成了如此高的等位基因多样性。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<ol>\n<li>Liu Y, Wang H, Jiang Z, et al. Genomic basis of geographical adaptation to soil nitrogen in rice[J]. <em><strong>Nature</strong></em>, 2021: 1-6.</li>\n<li>Yu H, Lin T, Meng X, et al. A route to de novo domestication of wild allotetraploid rice[J]. <em><strong>Cell</strong></em>, 2021.</li>\n<li>Witek, K., Lin, X., Karki, H.S. <em>et al.</em> A complex resistance locus in <em>Solanum americanum</em> recognizes a conserved <em>Phytophthora</em> effector. <em><strong>Nature Plants</strong></em> (2021).</li>\n<li>赵中华,朱杰华,朱晓明.马铃薯晚疫病发生特点与防治对策[J].中国植保导刊,2012,32(04):16-17.</li>\n<li>祝菊澧,梁静思,王伟伟,王洪洋,刘晶,李灿辉,唐唯.马铃薯致病疫霉研究进展[J].微生物学通报,2020,47(03):952-966.</li>\n</ol>\n</blockquote>\n<h1 id=\"文献信息\"><a href=\"#文献信息\" class=\"headerlink\" title=\"文献信息\"></a>文献信息</h1><img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/10.png\" class=\"\">","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>种质资源是极其重要的资源，随着世界人口的增加，对粮食产量的要求越来越高，包括产量和质量。但是，","more":"作物生长会受到各种各样的胁迫，包括生物胁迫和非生物胁迫。生物胁迫主要是病原侵染和昆虫取食；非生物胁迫包括干旱胁迫、盐胁迫、重金属胁迫等。应对病原菌侵染胁迫常见的方法是使用抗病品种和使用化学农药，但是这两种方法都有一定的局限性：</p>\n<ul>\n<li>种植几年后，抗病品种携带的抗性基因的抗性会逐渐丧失；</li>\n<li>光谱抗性基因通常会影响作物的产量和质量等性状；</li>\n<li>抗性基因叠加较为困难；</li>\n<li>化学农药的滥用会带来一系列的问题，如食品安全、环境污染等。</li>\n</ul>\n<p>虽然这些问题都有一定的解决办法，如在化学农药的研发中利用<code>RNAi</code>技术。各种组学技术的发展极大地促进了作物抗性基因的挖掘和利用。“绿色革命”以后，大量的品种被培育推广，这些单一品种的大面积推广种植导致其可利用的抗性基因数量逐渐减少。而那些未被大面积推广，甚至是没有被发现利用的品种则成为了关键基因挖掘利用的关键材料，如中科院遗传发育所的储成才研究员利用100余个农家品种成功挖掘到水稻氮素高效利用的关键基因$^{[1]}$。除开这种利用未被发掘的种质资源外，一个比较新的方向是利用野生/近缘种植资源挖掘关键的遗传资源。最近最经典的案例是遗传发育所的李家洋院士利用四倍体野生稻直接实现了野生到的从头驯化，利用十余年的研究就实现了需要几千年才能完成的自然驯化，开辟了育种的新方向$^{[2]}$。这两天，塞恩斯伯里实验室在<em><strong>Nature Plants</strong></em>上发表了一篇文章，在茄属种植物中发现并成功克隆了新的对马铃薯晚疫病具有光谱抗性的基因$^{[3]}$。大年初一下载了文献，通读一遍，简直就是精彩啊！</p>\n<h1 id=\"文献心得\"><a href=\"#文献心得\" class=\"headerlink\" title=\"文献心得\"></a>文献心得</h1><p>读完这篇文献，感触良多，总结几点：</p>\n<ul>\n<li>实验室（课题组）的前期研究（传承）很重要，在某个领域的点滴积累是发现新方向新东西的重要基础，研究要利用课题组优势；</li>\n<li>野生（近缘）种质资源是非常重要的资源，保护、开发、利用这些种质资源对未来社会具有重要影响；</li>\n<li>技术的发展能够极大地促进科学研究的发展，这个研究中利用了许多技术，如RenSeq、GenSeq、单分子实时测序、关联基因组学等技术，需要不断地学习才能了解技术的发展方向并合理地利用这些技术；</li>\n<li>合理的可视化方法能够极大地增强文章的可读性，倒数第二张图片直接是让我拍案叫绝啊，学习了；</li>\n<li>推理能力很重要，作者从进化树上推理出基因（蛋白）之间的依赖关系，这种推理能力的基础是大量的文献阅读，没有大量的知识储备是不可能完成这种推理的。</li>\n</ul>\n<h1 id=\"马铃薯晚疫病\"><a href=\"#马铃薯晚疫病\" class=\"headerlink\" title=\"马铃薯晚疫病\"></a>马铃薯晚疫病</h1><p>马铃薯晚疫病（potato late blight，PLB）是由致病疫霉[<em>Phytophthora infestans</em>(Mont) deBary，<em>P. infestans</em>]引起的。严重时会造成50%的损失，某些地区甚至会绝收$^{[4]}$。下图是致病疫霉侵染马铃薯的症状图$^{[5]}$。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/1.png\" class=\"\">\n\n<h1 id=\"本研究简述\"><a href=\"#本研究简述\" class=\"headerlink\" title=\"本研究简述\"></a>本研究简述</h1><p>研究人员从茄属植物中克隆到了许多抗性基因，并通过育种的方法将这些抗性基因导入到马铃薯中。但是，单个的抗性基因在面对进化速度较快的致病疫霉<em>P.infestans</em>时，抗性会丢失，因此需要挖掘利用具有持久抗性的基因。研究人员从光果龙葵中克隆到了一个抗性基因：<em>Rpi-amr1</em>。利用来自不同国家的19个致病疫霉进行侵染测试，发现这个基因对19个致病疫霉都具有抗性。进一步利用关联基因组学和长读长RenSeq技术，研究人员又在其他的光果龙葵中及其近缘种中发现了8个<em>Rpi-amr1</em>的等位基因。尽管这些等位基因的蛋白序列与<em>Rpi-amr1</em>的蛋白序列只有90%左右的相似性，但是它们对致病疫霉均具有光谱抗性，但是对<em>Avramr1</em>的直系同源物和旁系同源物的识别能力不一样。这个研究为挖掘对<em>P.infestans</em> 具有抗性的基因提供了新的思路。</p>\n<h1 id=\"研究过程\"><a href=\"#研究过程\" class=\"headerlink\" title=\"研究过程\"></a>研究过程</h1><p>研究团队在之前就在光果龙葵中鉴定到了对<em>P.infestans</em> 具有抗性的基因<em>Rpi-amr3</em>，未来挖掘到新的<em>Rpi-amr</em>基因，团队利用14个对<em>P.infestans</em> 具有抗性的光果龙葵品系及其近缘植物<em>S. nigrescens</em> 和 <em>S. nodiflorum</em>来构建F1和F2群体。利用RenSeq得到的marker，借助基因分型测序（GBS）和全基因组鸟枪测序（WGS）在11号染色体的短臂上定位到了基因<em>Rpi-amr1</em>。进一步利用单分子测序技术发现有11个潜在的编码序列，其中9个编码NLR基因。为了验证这些基因是不是都可以表达，利用cDNA RenSeq数据比对发现其中有7个基因都发生了表达，分别是<em>Rpi-amr1a</em>到<em>Rpi-amr1h</em>（下图a-c）。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/2.png\" class=\"\">\n\n<p>找到那么多个潜在的功能基因，那是不是都有功能呢？通过接种发现只有<em>Rpi-amr1e</em>这个能够减缓<em>P.infestans</em>的生长（下图）。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/3.png\" class=\"\">\n\n<p>那这个<em>Rpi-amr1e</em>对<em>P.infestans</em>到底有没有抗性呢？直接将这个基因克隆到马铃薯中，同时以没有功能的<em>Rpi-amr1a</em>作为阴性对照。发现克隆了<em>Rpi-amr1e</em>的马铃薯对<em>P.infestans</em>的抗性简直完美啊 （下图）。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/4.png\" class=\"\">\n\n<p>这个基因结构是啥样的呢？研究者将cDNA RenSeq数据mapping到<em>Rpi-amr1</em>的全长数据上，发现有4种可变剪切结构（下图）。这个基因是典型的CC-NB-LRR抗性基因，具有CC、NB和LRRs结构域，这三种结构域都在第一个外显子上。剩下的三个外显子上没有发现已知结构域的同系物。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/5.png\" class=\"\">\n\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/6.png\" class=\"\">\n\n<p>在之前的研究中他们发现14个光果龙葵极其近缘种对马铃薯晚疫病都有抗性，为了验证<em>Rpi-amr1</em>是不是也能赋予了其他光果龙葵抗性，研究人员从亲本为抗性品系的F2群体中选择了10-50株感病植株进行验证，在<em>Rpi-amr1</em>位置上挑选了个marker。结果发现这些干饼F2植株都缺少这个marker，这个个结果就表明光果龙葵对致病疫霉的抗性是由<em>Rpi-amr1</em> locus赋予的。那对致病疫霉具有抗性的光果龙葵的抗性是不是由<em>Rpi-amr1</em>的同系物赋予的呢？为了验证这个猜想，研究者利用SMRT RenSeq从头组装了那些抗性品系，以此来寻找<em>Rpi-amr1</em>的同系物，此外还利用了BSA RenSeq、cDNA RenSeq、关联基因组学和GenSeq等技术，最终找到8个<em>Rpi-amr1</em>同系物对88069这个菌株具有抗性。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/7.png\" class=\"\">\n\n<p>找到了功能基因及其同系物，下一步那就应该看看它们对致病疫霉的抗性能力怎么样了。研究者挑选了两个同系物，<em>Rpi-amr1-2272</em>和<em>Rpi-amr1-2273</em>，用于测试的19个菌株来自不同国家。结果发现转入这两种同系物的马铃薯对这19株致病疫霉均有抗性，而野生型的马铃薯对这19株菌都没有抗性。这个结果表明<em>Rpi-amr1</em>对致病疫霉<em>P.infestans</em>具有广谱抗性。</p>\n<p>植物免疫响应的重要组成部分之一是ETI，那<em>Rpi-amr1</em>及其同系物能不能有效识别到致病疫霉<em>P.infestans</em>中的效应子呢？为此，研究人员合成了<em>Avramr1</em>及其3个同系物，这三个同系物与<em>Avramr1</em>在进化树上属于不同的分支（分别属于Clade A-D）。除此之外，还从<em>P.parasitica</em>和<em>P.cactorum</em>中也合成了<em>Avaamr1</em>的同系物。</p>\n<p>结果发现<em>Rpi-amr1</em>不同的等位基因与不同的<em>Avramr1</em>同系物组合时，产生的免疫反应不一样（下图）。从图中可以看出的是，<em>Rpi-amr1</em>的功能性同系物至少能够识别一种<em>Avramr1</em>。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/8.png\" class=\"\">\n\n<p><em>Rpi-amr1</em>介导的抗性和效应子识别是它自己独立完成的呢还是需要依赖于其他成分呢？研究者首先对茄科植物代表性的NLR蛋白构建进化树，发现Rpi-amr1分组在CNL-3这个分支中，这个分支中之前没有克隆到任何的功能基因。与之最近的已被克隆到的基因是属于CNL-13这个分支位于4号染色体上的<em>Rpi-amr3</em>，这个基因与<em>Rpi-amr1</em>在氨基酸序列上具有31.2%的相似性。通过进化树研究人员猜测Rpi-amr1很可能需要NRC分支的帮助才能完成其功能。这个是怎么看出来的呢？作者解释的是CNL-3这个分支所在的分组（蓝色框）需要依赖于NRC才能完成相应的功能。利用瞬时表达发现<em>Rpi-amr1</em>介导的抗性需要NRC2或者NRC3的帮助才能完成。更多的研究结果进一步说明了<em>Rpi-amr1</em>介导的抗性和效应子识别需要依赖NRC2或者NRC3才能完成。</p>\n<img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/9.png\" class=\"\">\n\n<p>似乎，研究到这里就应该结束了。但是还探究了<em>Rpi-amr1</em>同系物是否存在于其他的茄科植物中。进一步的研究发现在六倍体茄科植物<em>S.nigrum</em>中也存在<em>Rpi-amr1</em>的同系物。</p>\n<p>还有一个问题：<em>Rpi-amr1</em>有那么多的等位基因，是怎么来的呢？研究人员进一步研究发现是由于直系同源和旁系同源间序列交换才形成了如此高的等位基因多样性。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<ol>\n<li>Liu Y, Wang H, Jiang Z, et al. Genomic basis of geographical adaptation to soil nitrogen in rice[J]. <em><strong>Nature</strong></em>, 2021: 1-6.</li>\n<li>Yu H, Lin T, Meng X, et al. A route to de novo domestication of wild allotetraploid rice[J]. <em><strong>Cell</strong></em>, 2021.</li>\n<li>Witek, K., Lin, X., Karki, H.S. <em>et al.</em> A complex resistance locus in <em>Solanum americanum</em> recognizes a conserved <em>Phytophthora</em> effector. <em><strong>Nature Plants</strong></em> (2021).</li>\n<li>赵中华,朱杰华,朱晓明.马铃薯晚疫病发生特点与防治对策[J].中国植保导刊,2012,32(04):16-17.</li>\n<li>祝菊澧,梁静思,王伟伟,王洪洋,刘晶,李灿辉,唐唯.马铃薯致病疫霉研究进展[J].微生物学通报,2020,47(03):952-966.</li>\n</ol>\n</blockquote>\n<h1 id=\"文献信息\"><a href=\"#文献信息\" class=\"headerlink\" title=\"文献信息\"></a>文献信息</h1><img src=\"/2021/02/12/%E6%96%B0%E5%B8%8C%E6%9C%9B%E2%80%94%E9%87%8E%E7%94%9F%EF%BC%88%E8%BF%91%E7%BC%98%EF%BC%89%E7%A7%8D%E8%B4%A8%E8%B5%84%E6%BA%90/10.png\" class=\"\">"},{"title":"水稻-稻瘟病互作转录组分析","abbrlink":"4fc3db2a","date":"2021-05-26T07:20:48.000Z","_content":"\n看到这样一篇文献$^{[1]}$，利用转录组研究水稻-稻瘟病互作过程中的核心基因。想着水稻-稻瘟病互作中转录组研究还有啥好做的呢，结果仔细一看，直呼精彩，尤其是转录组数据分析思路何技巧，让我受益匪浅。\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n# 试验设计\n\n首先是试验设计很巧妙，利用一个感病品种Nipponbare和抗性品种Hui1586为材料，在温室进行稻瘟病接种，然后12h、24h、36h及48h进行采样。每个时间点都设置了对照。对叶片进行转录组分析。\n\n- 间隔12h可以把生物钟的影响考虑进去；\n- 抗感品种可以探究在防御稻瘟病菌过程中亲和/非亲和响应之间的差异；\n- 每个时间点都设置对照，可以进一步探究生物钟的影响。\n\n# 结果解读\n\n从PCA和层次聚类可以看出不同时间段的处理是分开的，不管是接种还是没接种，也就说时间变化是最大的影响因素。尤其是从层次聚类可以看出的是，CK（$H_2O$）和处理是明显分开的，每个时间段都是这样。这表明稻瘟病菌的侵染对水稻基因的转录表达影响明显。但是值得注意的是，基因的转录表达并不是随着时间变化的梯度变化的，12个小时之后并不是24小时，而是36小时。但是很明显的可以看出接种稻瘟病菌12小时后水稻基因的转录表达和其余三个时间段完全不一样。\n\n{% asset_img 2.png %}\n\n进一步分析基因表达上调下调的情况，发现不管是抗性品种还是感病品种，在接种12小时后基因的转录表达变化最大，这个就和之前的研究不一样，之前的研究发现稻瘟病菌侵染24小时的时候基因的变化最明显。作者人为稻瘟病侵染后水稻基因表达变化最显著的时间点还在12小时之前，需要更多的时间点来证明（注：我猜测他们正在做这个）。比较抗感品种差异基因，发现全部差异表达基因中有8211个是共有的，也就说明水稻在响应稻瘟病菌侵染的过程中大量基因的转录表达发生了变化。抗感品种中特异性表达以响应稻瘟病侵染的基因数量差不多。这也说明抗感水稻品种在响应稻瘟病侵染的过程中，部分基因是特异性的。\n\n{% asset_img 3.png %}\n\n为了进一步证明抗感品种响应稻瘟病过程中具有差异，还做了染色，36小时和48小时的结果差异是很明显的。\n\n{% asset_img 4.png %}\n\n抗感品种之间的差异很可能是由基础免疫差异导致的，对CK处理下两个水稻品种进行比较（下图）：很有趣是，即使没有稻瘟病菌的侵染，两个水稻品种的差异表达基因在12h的时候也是最多的，而且差异基因数量随着时间变化在逐渐减少。通过韦恩图分析发现有1331个基因在48小时内的转录表达均有差异。而且对这些差异基因进行KEGG和GO富集分析，发现这些差异基因多和防御相关。通常分析到这里就结束了，但是作者还研究了差异基因中类受体激酶和NLR受体相关基因的比例，发现在这1331个差异基因中，类受体激酶及NLR相关基因所占的比例远比基因组中的比列高，也就是说抗感差异品种的基础免疫差异是很明显的，基础免疫响应过程中富集到的与类受体激酶及NLR受体相关的基因的数量有明显差异的。\n\n{% asset_img 5.png %}\n\n在证明抗感品种的基础免疫具有差异以后，紧接着就应该看稻瘟病菌侵染对水稻基因转录表达的影响。首先是常规的韦恩图分析，首先可以看出在稻瘟病菌侵染后，转录表达发生变化的基因中上调的占多数。还是和之前的结果一样，12小时时发生变化的基因是最多的。然后就对12小时的差异基因进行分析，也就是说稻瘟病菌侵染后的12小时内，水稻植株基因的转录表达发生了急剧变化。KEGG和GO富集发现，12小时的差异基因多和蛋白合成相关，如KEGG中的“Ribosome”及GO中的“translation”。从这个结果作者人为水稻对稻瘟病菌响应的过程中，蛋白质合成发生了明显的变化。将蛋白合成相关的基因进行进一步的研究，进一步证明了该结果。整个部分的结果说明水稻在响应稻瘟病菌侵染的过程中蛋白质相关的机制是很重要的影响因素，其次也可以看出抗性品种中这种蛋白相关基因的变化更为明显。\n\n{% asset_img 6.png %}\n\n这个文章的主要目的是找到核心基因，怎么找呢？直接对抗感品种中差异基因的核心部分基因再找核心，也就是先找每个品种中随之时间变化都显著变化的基因，然后再从这些持续变化的核心基因中找交集，这样就能找到抗感品种中都被稻瘟病菌明显诱导转录表达的基因（353个）。然后将这353个基因绘制热图，发现这353个基因可以分成两类，一类是在稻瘟病菌侵染后表达明显上调的基因，另外一部分是表达下调的基因。然后对表达上调的321个基因进行KEGG富集分析，发现这些基因和植物免疫相关，如二萜化合物的生物合成、黄酮的生物合成、植物-病原互作及MAPK信号通路等。这个结果表明在稻瘟病菌侵染的过程中，这321个基因一直都在做出响应，也就把这321个基因定义为“核心基因”。\n\n{% asset_img 7.png %}\n\n现在有个问题是，“你以为你以为的就是你以为的么？”。你说这些是核心基因就一定是吗？为了进一步证明这些记忆是核心基因，作者从NCBI的GEO数据库中找了2308个基因探针数据和305个转录组数据，探究这些基因在这些研究中的转录表达情况。结果发现这321个基因在水稻抵御水稻白叶枯病、稻曲病及干旱胁迫中都有明显作用，尤其是免疫响应，都显著地上调了。进一步的还对这321个基因中的转录因子进行了研究。\n\n{% asset_img 8.png %}\n\n{% asset_img 9.png %}\n\n似乎到这里就结束了，毕竟核心基因（集）已经找到了，还做了转录因子探究。但是测了那么多样品，不找几个基因敲一下，都好像不完整。然后就根据FPKM值找了三个基因进行敲除验证。其中*Perox*负向调控水稻对稻瘟病抗性，*OsMT1a*和*OsMT1b*正向调控水稻对稻瘟病的抗性。\n\n{% asset_img 10.png %}\n\n{% asset_img 11.png %}\n\n# 文献收获\n\n- 首先是get到生长-免疫平衡的文献，之前找了好久一直没有找到；\n- 转录组分析策略：\n  - 不要盯着一个KEGG结果或者是GO结果分析；\n  - KEGG和GO结果相互验证；\n  - 某些很大的KEGG通路或者GO term也是有意义的，需要足够的背景知识做支撑。\n- 利用公共数据库验证自己的分析结果；\n- 利用FPKM值得筛选关键基因；\n- 植物转录因子预测：\n  - 发表在MP上的iTAK:https://doi.org/10.1016/j.molp.2016.09.014\n  - 植物转录因子数据库:http://plntfdb.bio.uni-potsdam.de/v3.0/ (暂时打不开了)\n\n更多内容详见笔记:https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light\n\n# 参考文献\n\n>Yang, D., Li, S., Xiao, Y., Lu, L., Zheng, Z., Tang, D. and Cui, H. (2021), Transcriptome analysis of rice response to blast fungus identified core genes involved in immunity. ***Plant Cell Environ***. . https://doi.org/10.1111/pce.14098\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/水稻-稻瘟病互作转录组分析.md","raw":"---\ntitle: 水稻-稻瘟病互作转录组分析\ntags: 文献\ncategories: 文献\nabbrlink: 4fc3db2a\ndate: 2021-05-26 15:20:48\n---\n\n看到这样一篇文献$^{[1]}$，利用转录组研究水稻-稻瘟病互作过程中的核心基因。想着水稻-稻瘟病互作中转录组研究还有啥好做的呢，结果仔细一看，直呼精彩，尤其是转录组数据分析思路何技巧，让我受益匪浅。\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n# 试验设计\n\n首先是试验设计很巧妙，利用一个感病品种Nipponbare和抗性品种Hui1586为材料，在温室进行稻瘟病接种，然后12h、24h、36h及48h进行采样。每个时间点都设置了对照。对叶片进行转录组分析。\n\n- 间隔12h可以把生物钟的影响考虑进去；\n- 抗感品种可以探究在防御稻瘟病菌过程中亲和/非亲和响应之间的差异；\n- 每个时间点都设置对照，可以进一步探究生物钟的影响。\n\n# 结果解读\n\n从PCA和层次聚类可以看出不同时间段的处理是分开的，不管是接种还是没接种，也就说时间变化是最大的影响因素。尤其是从层次聚类可以看出的是，CK（$H_2O$）和处理是明显分开的，每个时间段都是这样。这表明稻瘟病菌的侵染对水稻基因的转录表达影响明显。但是值得注意的是，基因的转录表达并不是随着时间变化的梯度变化的，12个小时之后并不是24小时，而是36小时。但是很明显的可以看出接种稻瘟病菌12小时后水稻基因的转录表达和其余三个时间段完全不一样。\n\n{% asset_img 2.png %}\n\n进一步分析基因表达上调下调的情况，发现不管是抗性品种还是感病品种，在接种12小时后基因的转录表达变化最大，这个就和之前的研究不一样，之前的研究发现稻瘟病菌侵染24小时的时候基因的变化最明显。作者人为稻瘟病侵染后水稻基因表达变化最显著的时间点还在12小时之前，需要更多的时间点来证明（注：我猜测他们正在做这个）。比较抗感品种差异基因，发现全部差异表达基因中有8211个是共有的，也就说明水稻在响应稻瘟病菌侵染的过程中大量基因的转录表达发生了变化。抗感品种中特异性表达以响应稻瘟病侵染的基因数量差不多。这也说明抗感水稻品种在响应稻瘟病侵染的过程中，部分基因是特异性的。\n\n{% asset_img 3.png %}\n\n为了进一步证明抗感品种响应稻瘟病过程中具有差异，还做了染色，36小时和48小时的结果差异是很明显的。\n\n{% asset_img 4.png %}\n\n抗感品种之间的差异很可能是由基础免疫差异导致的，对CK处理下两个水稻品种进行比较（下图）：很有趣是，即使没有稻瘟病菌的侵染，两个水稻品种的差异表达基因在12h的时候也是最多的，而且差异基因数量随着时间变化在逐渐减少。通过韦恩图分析发现有1331个基因在48小时内的转录表达均有差异。而且对这些差异基因进行KEGG和GO富集分析，发现这些差异基因多和防御相关。通常分析到这里就结束了，但是作者还研究了差异基因中类受体激酶和NLR受体相关基因的比例，发现在这1331个差异基因中，类受体激酶及NLR相关基因所占的比例远比基因组中的比列高，也就是说抗感差异品种的基础免疫差异是很明显的，基础免疫响应过程中富集到的与类受体激酶及NLR受体相关的基因的数量有明显差异的。\n\n{% asset_img 5.png %}\n\n在证明抗感品种的基础免疫具有差异以后，紧接着就应该看稻瘟病菌侵染对水稻基因转录表达的影响。首先是常规的韦恩图分析，首先可以看出在稻瘟病菌侵染后，转录表达发生变化的基因中上调的占多数。还是和之前的结果一样，12小时时发生变化的基因是最多的。然后就对12小时的差异基因进行分析，也就是说稻瘟病菌侵染后的12小时内，水稻植株基因的转录表达发生了急剧变化。KEGG和GO富集发现，12小时的差异基因多和蛋白合成相关，如KEGG中的“Ribosome”及GO中的“translation”。从这个结果作者人为水稻对稻瘟病菌响应的过程中，蛋白质合成发生了明显的变化。将蛋白合成相关的基因进行进一步的研究，进一步证明了该结果。整个部分的结果说明水稻在响应稻瘟病菌侵染的过程中蛋白质相关的机制是很重要的影响因素，其次也可以看出抗性品种中这种蛋白相关基因的变化更为明显。\n\n{% asset_img 6.png %}\n\n这个文章的主要目的是找到核心基因，怎么找呢？直接对抗感品种中差异基因的核心部分基因再找核心，也就是先找每个品种中随之时间变化都显著变化的基因，然后再从这些持续变化的核心基因中找交集，这样就能找到抗感品种中都被稻瘟病菌明显诱导转录表达的基因（353个）。然后将这353个基因绘制热图，发现这353个基因可以分成两类，一类是在稻瘟病菌侵染后表达明显上调的基因，另外一部分是表达下调的基因。然后对表达上调的321个基因进行KEGG富集分析，发现这些基因和植物免疫相关，如二萜化合物的生物合成、黄酮的生物合成、植物-病原互作及MAPK信号通路等。这个结果表明在稻瘟病菌侵染的过程中，这321个基因一直都在做出响应，也就把这321个基因定义为“核心基因”。\n\n{% asset_img 7.png %}\n\n现在有个问题是，“你以为你以为的就是你以为的么？”。你说这些是核心基因就一定是吗？为了进一步证明这些记忆是核心基因，作者从NCBI的GEO数据库中找了2308个基因探针数据和305个转录组数据，探究这些基因在这些研究中的转录表达情况。结果发现这321个基因在水稻抵御水稻白叶枯病、稻曲病及干旱胁迫中都有明显作用，尤其是免疫响应，都显著地上调了。进一步的还对这321个基因中的转录因子进行了研究。\n\n{% asset_img 8.png %}\n\n{% asset_img 9.png %}\n\n似乎到这里就结束了，毕竟核心基因（集）已经找到了，还做了转录因子探究。但是测了那么多样品，不找几个基因敲一下，都好像不完整。然后就根据FPKM值找了三个基因进行敲除验证。其中*Perox*负向调控水稻对稻瘟病抗性，*OsMT1a*和*OsMT1b*正向调控水稻对稻瘟病的抗性。\n\n{% asset_img 10.png %}\n\n{% asset_img 11.png %}\n\n# 文献收获\n\n- 首先是get到生长-免疫平衡的文献，之前找了好久一直没有找到；\n- 转录组分析策略：\n  - 不要盯着一个KEGG结果或者是GO结果分析；\n  - KEGG和GO结果相互验证；\n  - 某些很大的KEGG通路或者GO term也是有意义的，需要足够的背景知识做支撑。\n- 利用公共数据库验证自己的分析结果；\n- 利用FPKM值得筛选关键基因；\n- 植物转录因子预测：\n  - 发表在MP上的iTAK:https://doi.org/10.1016/j.molp.2016.09.014\n  - 植物转录因子数据库:http://plntfdb.bio.uni-potsdam.de/v3.0/ (暂时打不开了)\n\n更多内容详见笔记:https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light\n\n# 参考文献\n\n>Yang, D., Li, S., Xiao, Y., Lu, L., Zheng, Z., Tang, D. and Cui, H. (2021), Transcriptome analysis of rice response to blast fungus identified core genes involved in immunity. ***Plant Cell Environ***. . https://doi.org/10.1111/pce.14098\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"水稻-稻瘟病互作转录组分析","published":1,"updated":"2021-05-26T09:07:29.544Z","_id":"ckwbqwcmf005kr0g02229h4wh","comments":1,"layout":"post","photos":[],"link":"","content":"<p>看到这样一篇文献$^{[1]}$，利用转录组研究水稻-稻瘟病互作过程中的核心基因。想着水稻-稻瘟病互作中转录组研究还有啥好做的呢，结果仔细一看，直呼精彩，尤其是转录组数据分析思路何技巧，让我受益匪浅。</p>\n<span id=\"more\"></span>\n\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<h1 id=\"试验设计\"><a href=\"#试验设计\" class=\"headerlink\" title=\"试验设计\"></a>试验设计</h1><p>首先是试验设计很巧妙，利用一个感病品种Nipponbare和抗性品种Hui1586为材料，在温室进行稻瘟病接种，然后12h、24h、36h及48h进行采样。每个时间点都设置了对照。对叶片进行转录组分析。</p>\n<ul>\n<li>间隔12h可以把生物钟的影响考虑进去；</li>\n<li>抗感品种可以探究在防御稻瘟病菌过程中亲和/非亲和响应之间的差异；</li>\n<li>每个时间点都设置对照，可以进一步探究生物钟的影响。</li>\n</ul>\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><p>从PCA和层次聚类可以看出不同时间段的处理是分开的，不管是接种还是没接种，也就说时间变化是最大的影响因素。尤其是从层次聚类可以看出的是，CK（$H_2O$）和处理是明显分开的，每个时间段都是这样。这表明稻瘟病菌的侵染对水稻基因的转录表达影响明显。但是值得注意的是，基因的转录表达并不是随着时间变化的梯度变化的，12个小时之后并不是24小时，而是36小时。但是很明显的可以看出接种稻瘟病菌12小时后水稻基因的转录表达和其余三个时间段完全不一样。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>进一步分析基因表达上调下调的情况，发现不管是抗性品种还是感病品种，在接种12小时后基因的转录表达变化最大，这个就和之前的研究不一样，之前的研究发现稻瘟病菌侵染24小时的时候基因的变化最明显。作者人为稻瘟病侵染后水稻基因表达变化最显著的时间点还在12小时之前，需要更多的时间点来证明（注：我猜测他们正在做这个）。比较抗感品种差异基因，发现全部差异表达基因中有8211个是共有的，也就说明水稻在响应稻瘟病菌侵染的过程中大量基因的转录表达发生了变化。抗感品种中特异性表达以响应稻瘟病侵染的基因数量差不多。这也说明抗感水稻品种在响应稻瘟病侵染的过程中，部分基因是特异性的。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<p>为了进一步证明抗感品种响应稻瘟病过程中具有差异，还做了染色，36小时和48小时的结果差异是很明显的。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<p>抗感品种之间的差异很可能是由基础免疫差异导致的，对CK处理下两个水稻品种进行比较（下图）：很有趣是，即使没有稻瘟病菌的侵染，两个水稻品种的差异表达基因在12h的时候也是最多的，而且差异基因数量随着时间变化在逐渐减少。通过韦恩图分析发现有1331个基因在48小时内的转录表达均有差异。而且对这些差异基因进行KEGG和GO富集分析，发现这些差异基因多和防御相关。通常分析到这里就结束了，但是作者还研究了差异基因中类受体激酶和NLR受体相关基因的比例，发现在这1331个差异基因中，类受体激酶及NLR相关基因所占的比例远比基因组中的比列高，也就是说抗感差异品种的基础免疫差异是很明显的，基础免疫响应过程中富集到的与类受体激酶及NLR受体相关的基因的数量有明显差异的。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<p>在证明抗感品种的基础免疫具有差异以后，紧接着就应该看稻瘟病菌侵染对水稻基因转录表达的影响。首先是常规的韦恩图分析，首先可以看出在稻瘟病菌侵染后，转录表达发生变化的基因中上调的占多数。还是和之前的结果一样，12小时时发生变化的基因是最多的。然后就对12小时的差异基因进行分析，也就是说稻瘟病菌侵染后的12小时内，水稻植株基因的转录表达发生了急剧变化。KEGG和GO富集发现，12小时的差异基因多和蛋白合成相关，如KEGG中的“Ribosome”及GO中的“translation”。从这个结果作者人为水稻对稻瘟病菌响应的过程中，蛋白质合成发生了明显的变化。将蛋白合成相关的基因进行进一步的研究，进一步证明了该结果。整个部分的结果说明水稻在响应稻瘟病菌侵染的过程中蛋白质相关的机制是很重要的影响因素，其次也可以看出抗性品种中这种蛋白相关基因的变化更为明显。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/6.png\" class=\"\">\n\n<p>这个文章的主要目的是找到核心基因，怎么找呢？直接对抗感品种中差异基因的核心部分基因再找核心，也就是先找每个品种中随之时间变化都显著变化的基因，然后再从这些持续变化的核心基因中找交集，这样就能找到抗感品种中都被稻瘟病菌明显诱导转录表达的基因（353个）。然后将这353个基因绘制热图，发现这353个基因可以分成两类，一类是在稻瘟病菌侵染后表达明显上调的基因，另外一部分是表达下调的基因。然后对表达上调的321个基因进行KEGG富集分析，发现这些基因和植物免疫相关，如二萜化合物的生物合成、黄酮的生物合成、植物-病原互作及MAPK信号通路等。这个结果表明在稻瘟病菌侵染的过程中，这321个基因一直都在做出响应，也就把这321个基因定义为“核心基因”。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/7.png\" class=\"\">\n\n<p>现在有个问题是，“你以为你以为的就是你以为的么？”。你说这些是核心基因就一定是吗？为了进一步证明这些记忆是核心基因，作者从NCBI的GEO数据库中找了2308个基因探针数据和305个转录组数据，探究这些基因在这些研究中的转录表达情况。结果发现这321个基因在水稻抵御水稻白叶枯病、稻曲病及干旱胁迫中都有明显作用，尤其是免疫响应，都显著地上调了。进一步的还对这321个基因中的转录因子进行了研究。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/8.png\" class=\"\">\n\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/9.png\" class=\"\">\n\n<p>似乎到这里就结束了，毕竟核心基因（集）已经找到了，还做了转录因子探究。但是测了那么多样品，不找几个基因敲一下，都好像不完整。然后就根据FPKM值找了三个基因进行敲除验证。其中<em>Perox</em>负向调控水稻对稻瘟病抗性，<em>OsMT1a</em>和<em>OsMT1b</em>正向调控水稻对稻瘟病的抗性。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/10.png\" class=\"\">\n\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/11.png\" class=\"\">\n\n<h1 id=\"文献收获\"><a href=\"#文献收获\" class=\"headerlink\" title=\"文献收获\"></a>文献收获</h1><ul>\n<li>首先是get到生长-免疫平衡的文献，之前找了好久一直没有找到；</li>\n<li>转录组分析策略：<ul>\n<li>不要盯着一个KEGG结果或者是GO结果分析；</li>\n<li>KEGG和GO结果相互验证；</li>\n<li>某些很大的KEGG通路或者GO term也是有意义的，需要足够的背景知识做支撑。</li>\n</ul>\n</li>\n<li>利用公共数据库验证自己的分析结果；</li>\n<li>利用FPKM值得筛选关键基因；</li>\n<li>植物转录因子预测：<ul>\n<li>发表在MP上的iTAK:<a href=\"https://doi.org/10.1016/j.molp.2016.09.014\">https://doi.org/10.1016/j.molp.2016.09.014</a></li>\n<li>植物转录因子数据库:<a href=\"http://plntfdb.bio.uni-potsdam.de/v3.0/\">http://plntfdb.bio.uni-potsdam.de/v3.0/</a> (暂时打不开了)</li>\n</ul>\n</li>\n</ul>\n<p>更多内容详见笔记:<a href=\"https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light\">https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light</a></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>Yang, D., Li, S., Xiao, Y., Lu, L., Zheng, Z., Tang, D. and Cui, H. (2021), Transcriptome analysis of rice response to blast fungus identified core genes involved in immunity. <em><strong>Plant Cell Environ</strong></em>. . <a href=\"https://doi.org/10.1111/pce.14098\">https://doi.org/10.1111/pce.14098</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#x40;&#102;&#x6f;&#120;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#x40;&#102;&#x6f;&#120;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>看到这样一篇文献$^{[1]}$，利用转录组研究水稻-稻瘟病互作过程中的核心基因。想着水稻-稻瘟病互作中转录组研究还有啥好做的呢，结果仔细一看，直呼精彩，尤其是转录组数据分析思路何技巧，让我受益匪浅。</p>","more":"<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/1.png\" class=\"\">\n\n<h1 id=\"试验设计\"><a href=\"#试验设计\" class=\"headerlink\" title=\"试验设计\"></a>试验设计</h1><p>首先是试验设计很巧妙，利用一个感病品种Nipponbare和抗性品种Hui1586为材料，在温室进行稻瘟病接种，然后12h、24h、36h及48h进行采样。每个时间点都设置了对照。对叶片进行转录组分析。</p>\n<ul>\n<li>间隔12h可以把生物钟的影响考虑进去；</li>\n<li>抗感品种可以探究在防御稻瘟病菌过程中亲和/非亲和响应之间的差异；</li>\n<li>每个时间点都设置对照，可以进一步探究生物钟的影响。</li>\n</ul>\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><p>从PCA和层次聚类可以看出不同时间段的处理是分开的，不管是接种还是没接种，也就说时间变化是最大的影响因素。尤其是从层次聚类可以看出的是，CK（$H_2O$）和处理是明显分开的，每个时间段都是这样。这表明稻瘟病菌的侵染对水稻基因的转录表达影响明显。但是值得注意的是，基因的转录表达并不是随着时间变化的梯度变化的，12个小时之后并不是24小时，而是36小时。但是很明显的可以看出接种稻瘟病菌12小时后水稻基因的转录表达和其余三个时间段完全不一样。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<p>进一步分析基因表达上调下调的情况，发现不管是抗性品种还是感病品种，在接种12小时后基因的转录表达变化最大，这个就和之前的研究不一样，之前的研究发现稻瘟病菌侵染24小时的时候基因的变化最明显。作者人为稻瘟病侵染后水稻基因表达变化最显著的时间点还在12小时之前，需要更多的时间点来证明（注：我猜测他们正在做这个）。比较抗感品种差异基因，发现全部差异表达基因中有8211个是共有的，也就说明水稻在响应稻瘟病菌侵染的过程中大量基因的转录表达发生了变化。抗感品种中特异性表达以响应稻瘟病侵染的基因数量差不多。这也说明抗感水稻品种在响应稻瘟病侵染的过程中，部分基因是特异性的。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<p>为了进一步证明抗感品种响应稻瘟病过程中具有差异，还做了染色，36小时和48小时的结果差异是很明显的。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<p>抗感品种之间的差异很可能是由基础免疫差异导致的，对CK处理下两个水稻品种进行比较（下图）：很有趣是，即使没有稻瘟病菌的侵染，两个水稻品种的差异表达基因在12h的时候也是最多的，而且差异基因数量随着时间变化在逐渐减少。通过韦恩图分析发现有1331个基因在48小时内的转录表达均有差异。而且对这些差异基因进行KEGG和GO富集分析，发现这些差异基因多和防御相关。通常分析到这里就结束了，但是作者还研究了差异基因中类受体激酶和NLR受体相关基因的比例，发现在这1331个差异基因中，类受体激酶及NLR相关基因所占的比例远比基因组中的比列高，也就是说抗感差异品种的基础免疫差异是很明显的，基础免疫响应过程中富集到的与类受体激酶及NLR受体相关的基因的数量有明显差异的。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<p>在证明抗感品种的基础免疫具有差异以后，紧接着就应该看稻瘟病菌侵染对水稻基因转录表达的影响。首先是常规的韦恩图分析，首先可以看出在稻瘟病菌侵染后，转录表达发生变化的基因中上调的占多数。还是和之前的结果一样，12小时时发生变化的基因是最多的。然后就对12小时的差异基因进行分析，也就是说稻瘟病菌侵染后的12小时内，水稻植株基因的转录表达发生了急剧变化。KEGG和GO富集发现，12小时的差异基因多和蛋白合成相关，如KEGG中的“Ribosome”及GO中的“translation”。从这个结果作者人为水稻对稻瘟病菌响应的过程中，蛋白质合成发生了明显的变化。将蛋白合成相关的基因进行进一步的研究，进一步证明了该结果。整个部分的结果说明水稻在响应稻瘟病菌侵染的过程中蛋白质相关的机制是很重要的影响因素，其次也可以看出抗性品种中这种蛋白相关基因的变化更为明显。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/6.png\" class=\"\">\n\n<p>这个文章的主要目的是找到核心基因，怎么找呢？直接对抗感品种中差异基因的核心部分基因再找核心，也就是先找每个品种中随之时间变化都显著变化的基因，然后再从这些持续变化的核心基因中找交集，这样就能找到抗感品种中都被稻瘟病菌明显诱导转录表达的基因（353个）。然后将这353个基因绘制热图，发现这353个基因可以分成两类，一类是在稻瘟病菌侵染后表达明显上调的基因，另外一部分是表达下调的基因。然后对表达上调的321个基因进行KEGG富集分析，发现这些基因和植物免疫相关，如二萜化合物的生物合成、黄酮的生物合成、植物-病原互作及MAPK信号通路等。这个结果表明在稻瘟病菌侵染的过程中，这321个基因一直都在做出响应，也就把这321个基因定义为“核心基因”。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/7.png\" class=\"\">\n\n<p>现在有个问题是，“你以为你以为的就是你以为的么？”。你说这些是核心基因就一定是吗？为了进一步证明这些记忆是核心基因，作者从NCBI的GEO数据库中找了2308个基因探针数据和305个转录组数据，探究这些基因在这些研究中的转录表达情况。结果发现这321个基因在水稻抵御水稻白叶枯病、稻曲病及干旱胁迫中都有明显作用，尤其是免疫响应，都显著地上调了。进一步的还对这321个基因中的转录因子进行了研究。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/8.png\" class=\"\">\n\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/9.png\" class=\"\">\n\n<p>似乎到这里就结束了，毕竟核心基因（集）已经找到了，还做了转录因子探究。但是测了那么多样品，不找几个基因敲一下，都好像不完整。然后就根据FPKM值找了三个基因进行敲除验证。其中<em>Perox</em>负向调控水稻对稻瘟病抗性，<em>OsMT1a</em>和<em>OsMT1b</em>正向调控水稻对稻瘟病的抗性。</p>\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/10.png\" class=\"\">\n\n<img src=\"/2021/05/26/%E6%B0%B4%E7%A8%BB-%E7%A8%BB%E7%98%9F%E7%97%85%E4%BA%92%E4%BD%9C%E8%BD%AC%E5%BD%95%E7%BB%84%E5%88%86%E6%9E%90/11.png\" class=\"\">\n\n<h1 id=\"文献收获\"><a href=\"#文献收获\" class=\"headerlink\" title=\"文献收获\"></a>文献收获</h1><ul>\n<li>首先是get到生长-免疫平衡的文献，之前找了好久一直没有找到；</li>\n<li>转录组分析策略：<ul>\n<li>不要盯着一个KEGG结果或者是GO结果分析；</li>\n<li>KEGG和GO结果相互验证；</li>\n<li>某些很大的KEGG通路或者GO term也是有意义的，需要足够的背景知识做支撑。</li>\n</ul>\n</li>\n<li>利用公共数据库验证自己的分析结果；</li>\n<li>利用FPKM值得筛选关键基因；</li>\n<li>植物转录因子预测：<ul>\n<li>发表在MP上的iTAK:<a href=\"https://doi.org/10.1016/j.molp.2016.09.014\">https://doi.org/10.1016/j.molp.2016.09.014</a></li>\n<li>植物转录因子数据库:<a href=\"http://plntfdb.bio.uni-potsdam.de/v3.0/\">http://plntfdb.bio.uni-potsdam.de/v3.0/</a> (暂时打不开了)</li>\n</ul>\n</li>\n</ul>\n<p>更多内容详见笔记:<a href=\"https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light\">https://www.wolai.com/wolai4xiang/uf4LFk4s7WGuPwRKyBWGtZ?theme=light</a></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><blockquote>\n<p>Yang, D., Li, S., Xiao, Y., Lu, L., Zheng, Z., Tang, D. and Cui, H. (2021), Transcriptome analysis of rice response to blast fungus identified core genes involved in immunity. <em><strong>Plant Cell Environ</strong></em>. . <a href=\"https://doi.org/10.1111/pce.14098\">https://doi.org/10.1111/pce.14098</a></p>\n</blockquote>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#x40;&#102;&#x6f;&#120;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;\">&#108;&#x69;&#120;&#x69;&#97;&#x6e;&#x67;&#x31;&#x31;&#55;&#x34;&#50;&#51;&#x40;&#102;&#x6f;&#120;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a><br>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;\">&#108;&#x69;&#x78;&#x69;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#x40;&#x67;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a></p>\n</blockquote>"},{"title":"水稻Pan-genome","abbrlink":"10d84760","date":"2021-06-01T12:07:03.000Z","_content":"\n5月28日凌晨，***Cell***在线发表了四川农业大学和遗传发育所合作的文章Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations。<!-- more -->到实验室就开始研究文献。很巧的是，5月30日博士面试时有个老师问水稻研究的最新进展，刚好把这个文章内容给讲述一下。刚好在今天（6月1日），文章一作钦鹏教授做了一个线上讲座，认真聆听完以后收获颇丰，受益匪浅。结合文章和讲座内容，对文章进行简单梳理。\n\n{% asset_img 1.png %}\n\n关于Pan-genome，上一个比较经典的工作是遗传发育所田志喜老师主持完成的大豆的Pan-genome，也是通过那篇文章首次了解到“图形基因组”这个概念。在水稻上已经有大量群体重测序的文章，比如经典的Rice 3K项目，以及14个野生稻重测序项目，其他零零散散的项目还有很多。这些之前开展的项目主要是基于二代测序完成的，二代测序在读长上有限制，单个read长度差不多在100bp到300bp之间，这种长度的数据对SNP的检测是没有问题的，但是很难检测到基因组上的结构变异。结构变异包括插入突变、缺失突变、倒位等。关于结构变异的长度，不同的文章的定义不同，通常是1kb-3Mb。随着三代测序的发展，能够实现长读长测序，数M长度的read极大地增加了结构变异检测的准确度。这篇文章里面的很多分析方法和思路很值得学习，还有图表制作也很值得学习。\n\n# 材料选择\n\n水稻种质材料千千万，改如何选择呢？这个研究选择的是32个具有代表性的亚洲栽培稻和1个非洲栽培稻。这些水稻品种在株高、穗型、穗粒数、粒宽和粒长等方面具有明显的差异。更重要的是这33个水稻品种都是各个亚群中具有代表性的品种。为什么要选一个非洲栽培稻呢？文章里面说这个非洲栽培稻是用来做外群的，便于检测亚洲栽培稻中的结构变异。之前的大量研究都是以Nipponbare作为参考的，这样的话呢就不能很好地区分那些结构变异到底是从哪来的，比如以Nipponbare为参考的话，某个结构变异在A这个品种中可能是插入突变，反过来想在Nipponbare中就是缺失突变，那到底是插入突变还是缺失突变呢？这时候就得有个外群做参考。选非洲栽培稻的另外一个原因是亚洲栽培稻和非洲栽培稻之间是独立驯化的，没有基因渗入。所以，好的项目是以好的材料为基础的。\n\n{% asset_img 2.png %}\n\n# 结果解读\n\n文章内容太多了，光讲座就是一个多小时，下面我选择性挑选一些我觉得比较有意思的结果进行简单的解读。\n\n从下面这个图可以看到的是，在几种类型的结构变异中，插入变异的类型更多，这也就意味着亚洲栽培稻在进化和驯化的过程中，为了适应环境等意因素，会在基因组的特定位置上插入一些DNA片段，以此增强适应性。\n\n{% asset_img 3.png %}\n\n之前水稻GWAS研究都基本是基于SNP的，这个研究中直接用结构变异做GWAS，检测到了两个之前用SNP没有检测到的位点。\n\n{% asset_img 4.png %}\n\n下面这个图比较吸引我的地方在于，把转录组中FPKM按表达量进行划分，这样也能展示出基因转录表达变化的情况。当然，这个图主要表示的是那些附近存在结构变异的基因的转录表达对环境更敏感。\n\n{% asset_img 5.png %}\n\n看到这个图的时候是很震惊的，具有有那么多基因存在拷贝数变异。基因拷贝数变异会直接影响该基因的转录表达。\n\n{% asset_img 6.png %}\n\n{% asset_img 7.png %}\n\n其实这篇文章对我最有用的是他们开发的网站：\n\n{% asset_img 8.png %}\n\n这个网站上暂时集成了文章中33个水稻品种的基因组序列、基因组注释文章、基因序列、蛋白序列、GO注释、KEGG注释等超级有用的信息。这些信息都是他们结果严格的注释得到的，我完全可以用在自己的数据分析上。我已经把33个品种的蛋白序列下载好，一共2822792条蛋白序列。现在正在把“月亮谷”蛋白序列Blast到这些序列上，下一步就可以把比对的结果和GO、KEGG等注释信息进一步完善，这样的话在后续分析转录组的时候就很方便了。\n\n{% asset_img 9.png %}\n\n{% asset_img 10.png %}\n\n# 启发和体会\n\n大数据时代，新的测序技术、分析手段、分析软件层出不穷，即使做不了开发着，也应该及时跟上步伐，了解新事物、新手段，不断完善自我框架。\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/水稻Pan-genome.md","raw":"---\ntitle: 水稻Pan-genome\ntags: 文献\ncategories: 文献\nabbrlink: 10d84760\ndate: 2021-06-01 20:07:03\n---\n\n5月28日凌晨，***Cell***在线发表了四川农业大学和遗传发育所合作的文章Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations。<!-- more -->到实验室就开始研究文献。很巧的是，5月30日博士面试时有个老师问水稻研究的最新进展，刚好把这个文章内容给讲述一下。刚好在今天（6月1日），文章一作钦鹏教授做了一个线上讲座，认真聆听完以后收获颇丰，受益匪浅。结合文章和讲座内容，对文章进行简单梳理。\n\n{% asset_img 1.png %}\n\n关于Pan-genome，上一个比较经典的工作是遗传发育所田志喜老师主持完成的大豆的Pan-genome，也是通过那篇文章首次了解到“图形基因组”这个概念。在水稻上已经有大量群体重测序的文章，比如经典的Rice 3K项目，以及14个野生稻重测序项目，其他零零散散的项目还有很多。这些之前开展的项目主要是基于二代测序完成的，二代测序在读长上有限制，单个read长度差不多在100bp到300bp之间，这种长度的数据对SNP的检测是没有问题的，但是很难检测到基因组上的结构变异。结构变异包括插入突变、缺失突变、倒位等。关于结构变异的长度，不同的文章的定义不同，通常是1kb-3Mb。随着三代测序的发展，能够实现长读长测序，数M长度的read极大地增加了结构变异检测的准确度。这篇文章里面的很多分析方法和思路很值得学习，还有图表制作也很值得学习。\n\n# 材料选择\n\n水稻种质材料千千万，改如何选择呢？这个研究选择的是32个具有代表性的亚洲栽培稻和1个非洲栽培稻。这些水稻品种在株高、穗型、穗粒数、粒宽和粒长等方面具有明显的差异。更重要的是这33个水稻品种都是各个亚群中具有代表性的品种。为什么要选一个非洲栽培稻呢？文章里面说这个非洲栽培稻是用来做外群的，便于检测亚洲栽培稻中的结构变异。之前的大量研究都是以Nipponbare作为参考的，这样的话呢就不能很好地区分那些结构变异到底是从哪来的，比如以Nipponbare为参考的话，某个结构变异在A这个品种中可能是插入突变，反过来想在Nipponbare中就是缺失突变，那到底是插入突变还是缺失突变呢？这时候就得有个外群做参考。选非洲栽培稻的另外一个原因是亚洲栽培稻和非洲栽培稻之间是独立驯化的，没有基因渗入。所以，好的项目是以好的材料为基础的。\n\n{% asset_img 2.png %}\n\n# 结果解读\n\n文章内容太多了，光讲座就是一个多小时，下面我选择性挑选一些我觉得比较有意思的结果进行简单的解读。\n\n从下面这个图可以看到的是，在几种类型的结构变异中，插入变异的类型更多，这也就意味着亚洲栽培稻在进化和驯化的过程中，为了适应环境等意因素，会在基因组的特定位置上插入一些DNA片段，以此增强适应性。\n\n{% asset_img 3.png %}\n\n之前水稻GWAS研究都基本是基于SNP的，这个研究中直接用结构变异做GWAS，检测到了两个之前用SNP没有检测到的位点。\n\n{% asset_img 4.png %}\n\n下面这个图比较吸引我的地方在于，把转录组中FPKM按表达量进行划分，这样也能展示出基因转录表达变化的情况。当然，这个图主要表示的是那些附近存在结构变异的基因的转录表达对环境更敏感。\n\n{% asset_img 5.png %}\n\n看到这个图的时候是很震惊的，具有有那么多基因存在拷贝数变异。基因拷贝数变异会直接影响该基因的转录表达。\n\n{% asset_img 6.png %}\n\n{% asset_img 7.png %}\n\n其实这篇文章对我最有用的是他们开发的网站：\n\n{% asset_img 8.png %}\n\n这个网站上暂时集成了文章中33个水稻品种的基因组序列、基因组注释文章、基因序列、蛋白序列、GO注释、KEGG注释等超级有用的信息。这些信息都是他们结果严格的注释得到的，我完全可以用在自己的数据分析上。我已经把33个品种的蛋白序列下载好，一共2822792条蛋白序列。现在正在把“月亮谷”蛋白序列Blast到这些序列上，下一步就可以把比对的结果和GO、KEGG等注释信息进一步完善，这样的话在后续分析转录组的时候就很方便了。\n\n{% asset_img 9.png %}\n\n{% asset_img 10.png %}\n\n# 启发和体会\n\n大数据时代，新的测序技术、分析手段、分析软件层出不穷，即使做不了开发着，也应该及时跟上步伐，了解新事物、新手段，不断完善自我框架。\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"水稻Pan-genome","published":1,"updated":"2021-06-01T13:34:07.366Z","_id":"ckwbqwcmh005nr0g0cdbmgb04","comments":1,"layout":"post","photos":[],"link":"","content":"<p>5月28日凌晨，<em><strong>Cell</strong></em>在线发表了四川农业大学和遗传发育所合作的文章Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations。<span id=\"more\"></span>到实验室就开始研究文献。很巧的是，5月30日博士面试时有个老师问水稻研究的最新进展，刚好把这个文章内容给讲述一下。刚好在今天（6月1日），文章一作钦鹏教授做了一个线上讲座，认真聆听完以后收获颇丰，受益匪浅。结合文章和讲座内容，对文章进行简单梳理。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/1.png\" class=\"\">\n\n<p>关于Pan-genome，上一个比较经典的工作是遗传发育所田志喜老师主持完成的大豆的Pan-genome，也是通过那篇文章首次了解到“图形基因组”这个概念。在水稻上已经有大量群体重测序的文章，比如经典的Rice 3K项目，以及14个野生稻重测序项目，其他零零散散的项目还有很多。这些之前开展的项目主要是基于二代测序完成的，二代测序在读长上有限制，单个read长度差不多在100bp到300bp之间，这种长度的数据对SNP的检测是没有问题的，但是很难检测到基因组上的结构变异。结构变异包括插入突变、缺失突变、倒位等。关于结构变异的长度，不同的文章的定义不同，通常是1kb-3Mb。随着三代测序的发展，能够实现长读长测序，数M长度的read极大地增加了结构变异检测的准确度。这篇文章里面的很多分析方法和思路很值得学习，还有图表制作也很值得学习。</p>\n<h1 id=\"材料选择\"><a href=\"#材料选择\" class=\"headerlink\" title=\"材料选择\"></a>材料选择</h1><p>水稻种质材料千千万，改如何选择呢？这个研究选择的是32个具有代表性的亚洲栽培稻和1个非洲栽培稻。这些水稻品种在株高、穗型、穗粒数、粒宽和粒长等方面具有明显的差异。更重要的是这33个水稻品种都是各个亚群中具有代表性的品种。为什么要选一个非洲栽培稻呢？文章里面说这个非洲栽培稻是用来做外群的，便于检测亚洲栽培稻中的结构变异。之前的大量研究都是以Nipponbare作为参考的，这样的话呢就不能很好地区分那些结构变异到底是从哪来的，比如以Nipponbare为参考的话，某个结构变异在A这个品种中可能是插入突变，反过来想在Nipponbare中就是缺失突变，那到底是插入突变还是缺失突变呢？这时候就得有个外群做参考。选非洲栽培稻的另外一个原因是亚洲栽培稻和非洲栽培稻之间是独立驯化的，没有基因渗入。所以，好的项目是以好的材料为基础的。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/2.png\" class=\"\">\n\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><p>文章内容太多了，光讲座就是一个多小时，下面我选择性挑选一些我觉得比较有意思的结果进行简单的解读。</p>\n<p>从下面这个图可以看到的是，在几种类型的结构变异中，插入变异的类型更多，这也就意味着亚洲栽培稻在进化和驯化的过程中，为了适应环境等意因素，会在基因组的特定位置上插入一些DNA片段，以此增强适应性。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/3.png\" class=\"\">\n\n<p>之前水稻GWAS研究都基本是基于SNP的，这个研究中直接用结构变异做GWAS，检测到了两个之前用SNP没有检测到的位点。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/4.png\" class=\"\">\n\n<p>下面这个图比较吸引我的地方在于，把转录组中FPKM按表达量进行划分，这样也能展示出基因转录表达变化的情况。当然，这个图主要表示的是那些附近存在结构变异的基因的转录表达对环境更敏感。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/5.png\" class=\"\">\n\n<p>看到这个图的时候是很震惊的，具有有那么多基因存在拷贝数变异。基因拷贝数变异会直接影响该基因的转录表达。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/6.png\" class=\"\">\n\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/7.png\" class=\"\">\n\n<p>其实这篇文章对我最有用的是他们开发的网站：</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/8.png\" class=\"\">\n\n<p>这个网站上暂时集成了文章中33个水稻品种的基因组序列、基因组注释文章、基因序列、蛋白序列、GO注释、KEGG注释等超级有用的信息。这些信息都是他们结果严格的注释得到的，我完全可以用在自己的数据分析上。我已经把33个品种的蛋白序列下载好，一共2822792条蛋白序列。现在正在把“月亮谷”蛋白序列Blast到这些序列上，下一步就可以把比对的结果和GO、KEGG等注释信息进一步完善，这样的话在后续分析转录组的时候就很方便了。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/9.png\" class=\"\">\n\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/10.png\" class=\"\">\n\n<h1 id=\"启发和体会\"><a href=\"#启发和体会\" class=\"headerlink\" title=\"启发和体会\"></a>启发和体会</h1><p>大数据时代，新的测序技术、分析手段、分析软件层出不穷，即使做不了开发着，也应该及时跟上步伐，了解新事物、新手段，不断完善自我框架。</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>5月28日凌晨，<em><strong>Cell</strong></em>在线发表了四川农业大学和遗传发育所合作的文章Pan-genome analysis of 33 genetically diverse rice accessions reveals hidden genomic variations。","more":"到实验室就开始研究文献。很巧的是，5月30日博士面试时有个老师问水稻研究的最新进展，刚好把这个文章内容给讲述一下。刚好在今天（6月1日），文章一作钦鹏教授做了一个线上讲座，认真聆听完以后收获颇丰，受益匪浅。结合文章和讲座内容，对文章进行简单梳理。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/1.png\" class=\"\">\n\n<p>关于Pan-genome，上一个比较经典的工作是遗传发育所田志喜老师主持完成的大豆的Pan-genome，也是通过那篇文章首次了解到“图形基因组”这个概念。在水稻上已经有大量群体重测序的文章，比如经典的Rice 3K项目，以及14个野生稻重测序项目，其他零零散散的项目还有很多。这些之前开展的项目主要是基于二代测序完成的，二代测序在读长上有限制，单个read长度差不多在100bp到300bp之间，这种长度的数据对SNP的检测是没有问题的，但是很难检测到基因组上的结构变异。结构变异包括插入突变、缺失突变、倒位等。关于结构变异的长度，不同的文章的定义不同，通常是1kb-3Mb。随着三代测序的发展，能够实现长读长测序，数M长度的read极大地增加了结构变异检测的准确度。这篇文章里面的很多分析方法和思路很值得学习，还有图表制作也很值得学习。</p>\n<h1 id=\"材料选择\"><a href=\"#材料选择\" class=\"headerlink\" title=\"材料选择\"></a>材料选择</h1><p>水稻种质材料千千万，改如何选择呢？这个研究选择的是32个具有代表性的亚洲栽培稻和1个非洲栽培稻。这些水稻品种在株高、穗型、穗粒数、粒宽和粒长等方面具有明显的差异。更重要的是这33个水稻品种都是各个亚群中具有代表性的品种。为什么要选一个非洲栽培稻呢？文章里面说这个非洲栽培稻是用来做外群的，便于检测亚洲栽培稻中的结构变异。之前的大量研究都是以Nipponbare作为参考的，这样的话呢就不能很好地区分那些结构变异到底是从哪来的，比如以Nipponbare为参考的话，某个结构变异在A这个品种中可能是插入突变，反过来想在Nipponbare中就是缺失突变，那到底是插入突变还是缺失突变呢？这时候就得有个外群做参考。选非洲栽培稻的另外一个原因是亚洲栽培稻和非洲栽培稻之间是独立驯化的，没有基因渗入。所以，好的项目是以好的材料为基础的。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/2.png\" class=\"\">\n\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><p>文章内容太多了，光讲座就是一个多小时，下面我选择性挑选一些我觉得比较有意思的结果进行简单的解读。</p>\n<p>从下面这个图可以看到的是，在几种类型的结构变异中，插入变异的类型更多，这也就意味着亚洲栽培稻在进化和驯化的过程中，为了适应环境等意因素，会在基因组的特定位置上插入一些DNA片段，以此增强适应性。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/3.png\" class=\"\">\n\n<p>之前水稻GWAS研究都基本是基于SNP的，这个研究中直接用结构变异做GWAS，检测到了两个之前用SNP没有检测到的位点。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/4.png\" class=\"\">\n\n<p>下面这个图比较吸引我的地方在于，把转录组中FPKM按表达量进行划分，这样也能展示出基因转录表达变化的情况。当然，这个图主要表示的是那些附近存在结构变异的基因的转录表达对环境更敏感。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/5.png\" class=\"\">\n\n<p>看到这个图的时候是很震惊的，具有有那么多基因存在拷贝数变异。基因拷贝数变异会直接影响该基因的转录表达。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/6.png\" class=\"\">\n\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/7.png\" class=\"\">\n\n<p>其实这篇文章对我最有用的是他们开发的网站：</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/8.png\" class=\"\">\n\n<p>这个网站上暂时集成了文章中33个水稻品种的基因组序列、基因组注释文章、基因序列、蛋白序列、GO注释、KEGG注释等超级有用的信息。这些信息都是他们结果严格的注释得到的，我完全可以用在自己的数据分析上。我已经把33个品种的蛋白序列下载好，一共2822792条蛋白序列。现在正在把“月亮谷”蛋白序列Blast到这些序列上，下一步就可以把比对的结果和GO、KEGG等注释信息进一步完善，这样的话在后续分析转录组的时候就很方便了。</p>\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/9.png\" class=\"\">\n\n<img src=\"/2021/06/01/%E6%B0%B4%E7%A8%BBPan-genome/10.png\" class=\"\">\n\n<h1 id=\"启发和体会\"><a href=\"#启发和体会\" class=\"headerlink\" title=\"启发和体会\"></a>启发和体会</h1><p>大数据时代，新的测序技术、分析手段、分析软件层出不穷，即使做不了开发着，也应该及时跟上步伐，了解新事物、新手段，不断完善自我框架。</p>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;\">&#108;&#105;&#x78;&#105;&#x61;&#x6e;&#103;&#49;&#x31;&#55;&#52;&#50;&#x33;&#x40;&#102;&#x6f;&#x78;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;</a><br>💌<a href=\"mailto:&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;\">&#x6c;&#105;&#120;&#105;&#97;&#x6e;&#x67;&#x31;&#49;&#55;&#52;&#x32;&#51;&#64;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"清理WinSXS文件夹","abbrlink":"b4fcbbe6","date":"2020-12-25T08:19:58.000Z","_content":"\n以管理员身份运行`cmd`命令行，输入下方代码即可:\n\n```c\nDism /online /Cleanup-Image /StartComponentCleanup\n```\n\n","source":"_posts/清理WinSXS文件夹.md","raw":"---\ntitle: 清理WinSXS文件夹\ntags: 技能\ncategories: 技能\nabbrlink: b4fcbbe6\ndate: 2020-12-25 16:19:58\n---\n\n以管理员身份运行`cmd`命令行，输入下方代码即可:\n\n```c\nDism /online /Cleanup-Image /StartComponentCleanup\n```\n\n","slug":"清理WinSXS文件夹","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmi005qr0g08hzgf07k","comments":1,"layout":"post","photos":[],"link":"","content":"<p>以管理员身份运行<code>cmd</code>命令行，输入下方代码即可:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dism /online /Cleanup-Image /StartComponentCleanup</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>以管理员身份运行<code>cmd</code>命令行，输入下方代码即可:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dism /online /Cleanup-Image /StartComponentCleanup</span><br></pre></td></tr></table></figure>\n\n"},{"title":"生态和农业中植物亲缘识别的机制","abbrlink":"137f0725","date":"2021-02-03T05:27:50.000Z","_content":"\n# 摘要\n\n许多生物能够有效地区别“近亲”和“陌生人”（这种现象叫亲缘识别，Kin Recognition），并且对“近亲”能够表现出更多的“合作”（positive kin recognition）。但是这种现象在植物中近几年才被关注到。<!-- more -->尽管某些用于研究亲缘识别的方法还存在一些不足，但是已经有足够的证据能够表明在植物中确实存在亲缘识别现象。亲缘识别不仅仅可以减少亲缘植物之间的资源竞争，还能有效影响植物与其共生体（如菌根网络）的互作。亲缘识别在植物性状进化、群体多样性、生态网络及群落结构等方面有着重要的应用。此外，亲缘选择（kin select）可能会减少竞争从而优化群体表现，这在作物育种上有这潜在的应用价值。探索这些在生态和农业上的应用面临一些挑战：亲缘关系的充分控制和度量、基因型水平上足够的重复及亲缘识别表现/适应性的综合度量。首要的关键问题是正向的亲缘识别在何时、何地、如何促进群体的表现。\n\n# 关键词\n\n合作行为，作物育种，群体表现，广义适应度，亲缘歧化，亲缘选择，植物交流，资源竞争，根系分泌物，根系互作\n\n# Introduction\n\n再草地、林地、森林或者是农业田地等环节下，植物间通常都有这紧密的互作。这些互作有多种形式，如资源竞争、栖息地改造及交流等。在植物-植物互作的普遍性和多样性背景下，对某个个体性状的观察不能脱离开其邻居的影响。植物-植物互作在众多的生态过程中均有着重要的作用，如碳吸收、水分/营养均衡、植物-非植物生物互作及作物产量等。\n\n大量植物生态学研究是基于”个体选择“的概念进行的，也就是通常会研究一个既定个体的某个性状对这个个体适应性的影响。然而，合作行为甚至是利他行为在自然界中更常见。为了解释这种”非自私“（non-selfish）的演变，Hamilton（1964）引入了”亲缘选择“（kin selection）这个概念（译者注：关于演化有两种观念，具体请参考[博文](https://luansheng.netlify.app/2018/06/05/group-selection-and-kin-selection/)）。亲缘选择的基本概念是，如果某个个体帮助另外一个与其共享了某个数量等位基因的个体，那么这些等位基因不仅能够传递到下一代，还会增强下一代的适应新来增强其传递性。依赖关系行为的重要前提便是亲缘识别。\n\n亲缘识别在大多数生物中都存在，如动物（包括脊椎动物和非脊椎动物）、真菌、甚至是细菌。但是长期以来人们并不太相信在植物中也存在亲缘识别。虽然有一个既定的事实是植物能够通过光信号或物理接触来感知周围的植物并做出响应，但是人们还是不太详细植物中的亲缘识别。植物甚至能够感知到近邻植物的状态，比如植物能够通过挥发物来感知邻近植物是否受到了攻击，比如植物能够通过声音来判别邻近植物是否受到了干旱胁迫。许多植物能够阻止自花授粉，这表明植物能够区分”自我“与”非我“。研究表明植物不仅能够区分自己的根系和邻近植物的根系，还能区分来自自我的挥发物和”非我“的邻近植物的挥发物。\n\n植物亲缘识别的第一个研究是关于一年生植物*Cakile edentula* 的，这个研究发现*Cakile edentula* 与来自同一母本的植物进行互作时，根系分布会降低（地上部分生物量一定时，产生更少的根）。后续一系列的研究表明植物中确实存在亲缘识别及相关的亲缘歧化（下图）。\n\n{% asset_img 2.png %}\n\n植物中亲缘识别现象的存在对研究植物生态学和进化生物学有着重要的影响。首先，亲缘选择会影响群体的遗传结构和多样性（群体遗传多样性通常会往低的方向走）；其次，”合作“通常会使群体表现更好，这在生态系统功能上会有重要的应用。亲缘识别在农业上可能有潜在的应用价值，农民关注的是作物群体性，而不会在乎单独的个体。这再次涉及到我们关注的问题，亲缘识别在多大程度上影响作物的表现？亲缘识别能不能作为育种靶标？\n\n本篇综述的目的：\n\n- 严格阐述植物中亲缘识别及其潜在的机制；\n- 讨论亲缘识别潜在的生态学应用；\n- 讨论亲缘识别在农作物上的影响程度。\n\n# 一些基础概念\n\n## 合作与欺骗（cooperation vs cheating）\n\n在植物科技文献中存在的一个问题是个体选择与群体表现之间存在“冲突”。拥有能够让群体适应新最大化的性状的植物群体面对更具竞争力的植物时通常是没有“抵抗力“的。进化博弈论认为群体会想向着非最佳状态方向进化。典型的例子是植物株高：株高较矮且在茎秆上”投资更小“的植物会将更多的资源用在增强适应性上，如种子产量，但是这种植物群体会被更高的植物”入侵“。\n\n这种”悲剧”的发生比不上单一的：比起能够让植物群体适应性最大化的性状，植物可能产生更多的叶子、更大的特殊的叶片区域和更多的根系，或者是更大的花。因此，在既定条件下，从最大化适应性角度也许不能优化vegation stands，这可能会对生态系统功能产生影响。\n\n## 亲缘选择：何时&何地\n\n除了合作/欺骗外，自然界中还充满着“利他行为”。Hamilton在1964年提出利他行为的选择可能发生在具有遗传关系的个体中。基本的概念是：如果一个个体能够帮助和他具有一定数量等位基因的几个题，那么这些等位基因就会传递到下一代，并增强下一代的适应性。Hamilton在1964年时将这些凝练成了定理：如果分化遗传关系（r）与受体的适应性（B）的乘积大于参与者的适应性损耗（C），那就会发生利他行为。\n\n$$r×B>C$$\n\n汉密尔顿定理认为，遗传关系越近的个体之间越可能形成合作关系。但是，需要注意的是遗传背景越相近的个体之间竞争也可能越激烈。对于距离较近的植物，差异会导致更强的生态位分化。那么就有个问题：在亲缘竞争存在的情况下，亲缘选择何时发生？根据上面的公式，r和/或B更大或C更小的时候，亲缘选择会发生。\n\n亲缘很大程度上取决于互作过程中的收入/支出比及生态条件。至少有两类生态因素会影响亲缘选择：\n\n- 更高的$r$值时：植物倾向于与遗传关系近的近邻互作；\n- 竞争成为一个负向的非零和博弈：利他行为不仅会改变竞争平衡，还会增加资源的可利用性。\n\n此外，竞争不仅仅只会发生在植物个体间，还会发生在植物群体间，尤其是资源具有高度流动性的时候，如大量开花作物和草地植物之间的传粉媒介竞争。因此，即使合作行为针对的是一个群体，但如果合作的群体比没有合作的群头生产力更强的时候，群体之间也会发生具有偏向性的合作行为。没有亲缘选择时，可能会发生多群体选择。多层选择可能更偏向亲缘选择。\n\n以下情况可能存在通过亲缘选择来实现合作进化：\n\n- “合作成本低”时；\n- 合作互作不仅能够降低竞争强度还能增强资源的可利用性时；\n- ”资源“是高度可移动的时候；\n- 在粘性植物种群中，遗传相关性和物理距离之间存在明显的负相关关系。\n\n# 地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\n\n\n\n\n\n\n\n\n\n因此，即使合作行为是针对一个小组的选择，如果合作小组比不合作的小组更有生产力，也可以在小组之间有选择地偏向合作行为。\n\n\n\n\n\n{% asset_img 1.png %}\n","source":"_posts/生态和农业中植物亲缘识别的机制.md","raw":"---\ntitle: 生态和农业中植物亲缘识别的机制\ntags: 文献\ncategories: 文献\nabbrlink: 137f0725\ndate: 2021-02-03 13:27:50\n---\n\n# 摘要\n\n许多生物能够有效地区别“近亲”和“陌生人”（这种现象叫亲缘识别，Kin Recognition），并且对“近亲”能够表现出更多的“合作”（positive kin recognition）。但是这种现象在植物中近几年才被关注到。<!-- more -->尽管某些用于研究亲缘识别的方法还存在一些不足，但是已经有足够的证据能够表明在植物中确实存在亲缘识别现象。亲缘识别不仅仅可以减少亲缘植物之间的资源竞争，还能有效影响植物与其共生体（如菌根网络）的互作。亲缘识别在植物性状进化、群体多样性、生态网络及群落结构等方面有着重要的应用。此外，亲缘选择（kin select）可能会减少竞争从而优化群体表现，这在作物育种上有这潜在的应用价值。探索这些在生态和农业上的应用面临一些挑战：亲缘关系的充分控制和度量、基因型水平上足够的重复及亲缘识别表现/适应性的综合度量。首要的关键问题是正向的亲缘识别在何时、何地、如何促进群体的表现。\n\n# 关键词\n\n合作行为，作物育种，群体表现，广义适应度，亲缘歧化，亲缘选择，植物交流，资源竞争，根系分泌物，根系互作\n\n# Introduction\n\n再草地、林地、森林或者是农业田地等环节下，植物间通常都有这紧密的互作。这些互作有多种形式，如资源竞争、栖息地改造及交流等。在植物-植物互作的普遍性和多样性背景下，对某个个体性状的观察不能脱离开其邻居的影响。植物-植物互作在众多的生态过程中均有着重要的作用，如碳吸收、水分/营养均衡、植物-非植物生物互作及作物产量等。\n\n大量植物生态学研究是基于”个体选择“的概念进行的，也就是通常会研究一个既定个体的某个性状对这个个体适应性的影响。然而，合作行为甚至是利他行为在自然界中更常见。为了解释这种”非自私“（non-selfish）的演变，Hamilton（1964）引入了”亲缘选择“（kin selection）这个概念（译者注：关于演化有两种观念，具体请参考[博文](https://luansheng.netlify.app/2018/06/05/group-selection-and-kin-selection/)）。亲缘选择的基本概念是，如果某个个体帮助另外一个与其共享了某个数量等位基因的个体，那么这些等位基因不仅能够传递到下一代，还会增强下一代的适应新来增强其传递性。依赖关系行为的重要前提便是亲缘识别。\n\n亲缘识别在大多数生物中都存在，如动物（包括脊椎动物和非脊椎动物）、真菌、甚至是细菌。但是长期以来人们并不太相信在植物中也存在亲缘识别。虽然有一个既定的事实是植物能够通过光信号或物理接触来感知周围的植物并做出响应，但是人们还是不太详细植物中的亲缘识别。植物甚至能够感知到近邻植物的状态，比如植物能够通过挥发物来感知邻近植物是否受到了攻击，比如植物能够通过声音来判别邻近植物是否受到了干旱胁迫。许多植物能够阻止自花授粉，这表明植物能够区分”自我“与”非我“。研究表明植物不仅能够区分自己的根系和邻近植物的根系，还能区分来自自我的挥发物和”非我“的邻近植物的挥发物。\n\n植物亲缘识别的第一个研究是关于一年生植物*Cakile edentula* 的，这个研究发现*Cakile edentula* 与来自同一母本的植物进行互作时，根系分布会降低（地上部分生物量一定时，产生更少的根）。后续一系列的研究表明植物中确实存在亲缘识别及相关的亲缘歧化（下图）。\n\n{% asset_img 2.png %}\n\n植物中亲缘识别现象的存在对研究植物生态学和进化生物学有着重要的影响。首先，亲缘选择会影响群体的遗传结构和多样性（群体遗传多样性通常会往低的方向走）；其次，”合作“通常会使群体表现更好，这在生态系统功能上会有重要的应用。亲缘识别在农业上可能有潜在的应用价值，农民关注的是作物群体性，而不会在乎单独的个体。这再次涉及到我们关注的问题，亲缘识别在多大程度上影响作物的表现？亲缘识别能不能作为育种靶标？\n\n本篇综述的目的：\n\n- 严格阐述植物中亲缘识别及其潜在的机制；\n- 讨论亲缘识别潜在的生态学应用；\n- 讨论亲缘识别在农作物上的影响程度。\n\n# 一些基础概念\n\n## 合作与欺骗（cooperation vs cheating）\n\n在植物科技文献中存在的一个问题是个体选择与群体表现之间存在“冲突”。拥有能够让群体适应新最大化的性状的植物群体面对更具竞争力的植物时通常是没有“抵抗力“的。进化博弈论认为群体会想向着非最佳状态方向进化。典型的例子是植物株高：株高较矮且在茎秆上”投资更小“的植物会将更多的资源用在增强适应性上，如种子产量，但是这种植物群体会被更高的植物”入侵“。\n\n这种”悲剧”的发生比不上单一的：比起能够让植物群体适应性最大化的性状，植物可能产生更多的叶子、更大的特殊的叶片区域和更多的根系，或者是更大的花。因此，在既定条件下，从最大化适应性角度也许不能优化vegation stands，这可能会对生态系统功能产生影响。\n\n## 亲缘选择：何时&何地\n\n除了合作/欺骗外，自然界中还充满着“利他行为”。Hamilton在1964年提出利他行为的选择可能发生在具有遗传关系的个体中。基本的概念是：如果一个个体能够帮助和他具有一定数量等位基因的几个题，那么这些等位基因就会传递到下一代，并增强下一代的适应性。Hamilton在1964年时将这些凝练成了定理：如果分化遗传关系（r）与受体的适应性（B）的乘积大于参与者的适应性损耗（C），那就会发生利他行为。\n\n$$r×B>C$$\n\n汉密尔顿定理认为，遗传关系越近的个体之间越可能形成合作关系。但是，需要注意的是遗传背景越相近的个体之间竞争也可能越激烈。对于距离较近的植物，差异会导致更强的生态位分化。那么就有个问题：在亲缘竞争存在的情况下，亲缘选择何时发生？根据上面的公式，r和/或B更大或C更小的时候，亲缘选择会发生。\n\n亲缘很大程度上取决于互作过程中的收入/支出比及生态条件。至少有两类生态因素会影响亲缘选择：\n\n- 更高的$r$值时：植物倾向于与遗传关系近的近邻互作；\n- 竞争成为一个负向的非零和博弈：利他行为不仅会改变竞争平衡，还会增加资源的可利用性。\n\n此外，竞争不仅仅只会发生在植物个体间，还会发生在植物群体间，尤其是资源具有高度流动性的时候，如大量开花作物和草地植物之间的传粉媒介竞争。因此，即使合作行为针对的是一个群体，但如果合作的群体比没有合作的群头生产力更强的时候，群体之间也会发生具有偏向性的合作行为。没有亲缘选择时，可能会发生多群体选择。多层选择可能更偏向亲缘选择。\n\n以下情况可能存在通过亲缘选择来实现合作进化：\n\n- “合作成本低”时；\n- 合作互作不仅能够降低竞争强度还能增强资源的可利用性时；\n- ”资源“是高度可移动的时候；\n- 在粘性植物种群中，遗传相关性和物理距离之间存在明显的负相关关系。\n\n# 地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\n\n\n\n\n\n\n\n\n\n因此，即使合作行为是针对一个小组的选择，如果合作小组比不合作的小组更有生产力，也可以在小组之间有选择地偏向合作行为。\n\n\n\n\n\n{% asset_img 1.png %}\n","slug":"生态和农业中植物亲缘识别的机制","published":1,"updated":"2021-02-05T06:39:01.184Z","_id":"ckwbqwcmj005tr0g02jus380k","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>许多生物能够有效地区别“近亲”和“陌生人”（这种现象叫亲缘识别，Kin Recognition），并且对“近亲”能够表现出更多的“合作”（positive kin recognition）。但是这种现象在植物中近几年才被关注到。<span id=\"more\"></span>尽管某些用于研究亲缘识别的方法还存在一些不足，但是已经有足够的证据能够表明在植物中确实存在亲缘识别现象。亲缘识别不仅仅可以减少亲缘植物之间的资源竞争，还能有效影响植物与其共生体（如菌根网络）的互作。亲缘识别在植物性状进化、群体多样性、生态网络及群落结构等方面有着重要的应用。此外，亲缘选择（kin select）可能会减少竞争从而优化群体表现，这在作物育种上有这潜在的应用价值。探索这些在生态和农业上的应用面临一些挑战：亲缘关系的充分控制和度量、基因型水平上足够的重复及亲缘识别表现/适应性的综合度量。首要的关键问题是正向的亲缘识别在何时、何地、如何促进群体的表现。</p>\n<h1 id=\"关键词\"><a href=\"#关键词\" class=\"headerlink\" title=\"关键词\"></a>关键词</h1><p>合作行为，作物育种，群体表现，广义适应度，亲缘歧化，亲缘选择，植物交流，资源竞争，根系分泌物，根系互作</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>再草地、林地、森林或者是农业田地等环节下，植物间通常都有这紧密的互作。这些互作有多种形式，如资源竞争、栖息地改造及交流等。在植物-植物互作的普遍性和多样性背景下，对某个个体性状的观察不能脱离开其邻居的影响。植物-植物互作在众多的生态过程中均有着重要的作用，如碳吸收、水分/营养均衡、植物-非植物生物互作及作物产量等。</p>\n<p>大量植物生态学研究是基于”个体选择“的概念进行的，也就是通常会研究一个既定个体的某个性状对这个个体适应性的影响。然而，合作行为甚至是利他行为在自然界中更常见。为了解释这种”非自私“（non-selfish）的演变，Hamilton（1964）引入了”亲缘选择“（kin selection）这个概念（译者注：关于演化有两种观念，具体请参考<a href=\"https://luansheng.netlify.app/2018/06/05/group-selection-and-kin-selection/\">博文</a>）。亲缘选择的基本概念是，如果某个个体帮助另外一个与其共享了某个数量等位基因的个体，那么这些等位基因不仅能够传递到下一代，还会增强下一代的适应新来增强其传递性。依赖关系行为的重要前提便是亲缘识别。</p>\n<p>亲缘识别在大多数生物中都存在，如动物（包括脊椎动物和非脊椎动物）、真菌、甚至是细菌。但是长期以来人们并不太相信在植物中也存在亲缘识别。虽然有一个既定的事实是植物能够通过光信号或物理接触来感知周围的植物并做出响应，但是人们还是不太详细植物中的亲缘识别。植物甚至能够感知到近邻植物的状态，比如植物能够通过挥发物来感知邻近植物是否受到了攻击，比如植物能够通过声音来判别邻近植物是否受到了干旱胁迫。许多植物能够阻止自花授粉，这表明植物能够区分”自我“与”非我“。研究表明植物不仅能够区分自己的根系和邻近植物的根系，还能区分来自自我的挥发物和”非我“的邻近植物的挥发物。</p>\n<p>植物亲缘识别的第一个研究是关于一年生植物<em>Cakile edentula</em> 的，这个研究发现<em>Cakile edentula</em> 与来自同一母本的植物进行互作时，根系分布会降低（地上部分生物量一定时，产生更少的根）。后续一系列的研究表明植物中确实存在亲缘识别及相关的亲缘歧化（下图）。</p>\n<img src=\"/2021/02/03/%E7%94%9F%E6%80%81%E5%92%8C%E5%86%9C%E4%B8%9A%E4%B8%AD%E6%A4%8D%E7%89%A9%E4%BA%B2%E7%BC%98%E8%AF%86%E5%88%AB%E7%9A%84%E6%9C%BA%E5%88%B6/2.png\" class=\"\">\n\n<p>植物中亲缘识别现象的存在对研究植物生态学和进化生物学有着重要的影响。首先，亲缘选择会影响群体的遗传结构和多样性（群体遗传多样性通常会往低的方向走）；其次，”合作“通常会使群体表现更好，这在生态系统功能上会有重要的应用。亲缘识别在农业上可能有潜在的应用价值，农民关注的是作物群体性，而不会在乎单独的个体。这再次涉及到我们关注的问题，亲缘识别在多大程度上影响作物的表现？亲缘识别能不能作为育种靶标？</p>\n<p>本篇综述的目的：</p>\n<ul>\n<li>严格阐述植物中亲缘识别及其潜在的机制；</li>\n<li>讨论亲缘识别潜在的生态学应用；</li>\n<li>讨论亲缘识别在农作物上的影响程度。</li>\n</ul>\n<h1 id=\"一些基础概念\"><a href=\"#一些基础概念\" class=\"headerlink\" title=\"一些基础概念\"></a>一些基础概念</h1><h2 id=\"合作与欺骗（cooperation-vs-cheating）\"><a href=\"#合作与欺骗（cooperation-vs-cheating）\" class=\"headerlink\" title=\"合作与欺骗（cooperation vs cheating）\"></a>合作与欺骗（cooperation vs cheating）</h2><p>在植物科技文献中存在的一个问题是个体选择与群体表现之间存在“冲突”。拥有能够让群体适应新最大化的性状的植物群体面对更具竞争力的植物时通常是没有“抵抗力“的。进化博弈论认为群体会想向着非最佳状态方向进化。典型的例子是植物株高：株高较矮且在茎秆上”投资更小“的植物会将更多的资源用在增强适应性上，如种子产量，但是这种植物群体会被更高的植物”入侵“。</p>\n<p>这种”悲剧”的发生比不上单一的：比起能够让植物群体适应性最大化的性状，植物可能产生更多的叶子、更大的特殊的叶片区域和更多的根系，或者是更大的花。因此，在既定条件下，从最大化适应性角度也许不能优化vegation stands，这可能会对生态系统功能产生影响。</p>\n<h2 id=\"亲缘选择：何时-amp-何地\"><a href=\"#亲缘选择：何时-amp-何地\" class=\"headerlink\" title=\"亲缘选择：何时&amp;何地\"></a>亲缘选择：何时&amp;何地</h2><p>除了合作/欺骗外，自然界中还充满着“利他行为”。Hamilton在1964年提出利他行为的选择可能发生在具有遗传关系的个体中。基本的概念是：如果一个个体能够帮助和他具有一定数量等位基因的几个题，那么这些等位基因就会传递到下一代，并增强下一代的适应性。Hamilton在1964年时将这些凝练成了定理：如果分化遗传关系（r）与受体的适应性（B）的乘积大于参与者的适应性损耗（C），那就会发生利他行为。</p>\n<p>$$r×B&gt;C$$</p>\n<p>汉密尔顿定理认为，遗传关系越近的个体之间越可能形成合作关系。但是，需要注意的是遗传背景越相近的个体之间竞争也可能越激烈。对于距离较近的植物，差异会导致更强的生态位分化。那么就有个问题：在亲缘竞争存在的情况下，亲缘选择何时发生？根据上面的公式，r和/或B更大或C更小的时候，亲缘选择会发生。</p>\n<p>亲缘很大程度上取决于互作过程中的收入/支出比及生态条件。至少有两类生态因素会影响亲缘选择：</p>\n<ul>\n<li>更高的$r$值时：植物倾向于与遗传关系近的近邻互作；</li>\n<li>竞争成为一个负向的非零和博弈：利他行为不仅会改变竞争平衡，还会增加资源的可利用性。</li>\n</ul>\n<p>此外，竞争不仅仅只会发生在植物个体间，还会发生在植物群体间，尤其是资源具有高度流动性的时候，如大量开花作物和草地植物之间的传粉媒介竞争。因此，即使合作行为针对的是一个群体，但如果合作的群体比没有合作的群头生产力更强的时候，群体之间也会发生具有偏向性的合作行为。没有亲缘选择时，可能会发生多群体选择。多层选择可能更偏向亲缘选择。</p>\n<p>以下情况可能存在通过亲缘选择来实现合作进化：</p>\n<ul>\n<li>“合作成本低”时；</li>\n<li>合作互作不仅能够降低竞争强度还能增强资源的可利用性时；</li>\n<li>”资源“是高度可移动的时候；</li>\n<li>在粘性植物种群中，遗传相关性和物理距离之间存在明显的负相关关系。</li>\n</ul>\n<h1 id=\"地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\"><a href=\"#地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\" class=\"headerlink\" title=\"地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\"></a>地下部分围绕可利用资源发生的亲缘识别和亲缘竞争</h1><p>因此，即使合作行为是针对一个小组的选择，如果合作小组比不合作的小组更有生产力，也可以在小组之间有选择地偏向合作行为。</p>\n<img src=\"/2021/02/03/%E7%94%9F%E6%80%81%E5%92%8C%E5%86%9C%E4%B8%9A%E4%B8%AD%E6%A4%8D%E7%89%A9%E4%BA%B2%E7%BC%98%E8%AF%86%E5%88%AB%E7%9A%84%E6%9C%BA%E5%88%B6/1.png\" class=\"\">\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>许多生物能够有效地区别“近亲”和“陌生人”（这种现象叫亲缘识别，Kin Recognition），并且对“近亲”能够表现出更多的“合作”（positive kin recognition）。但是这种现象在植物中近几年才被关注到。","more":"尽管某些用于研究亲缘识别的方法还存在一些不足，但是已经有足够的证据能够表明在植物中确实存在亲缘识别现象。亲缘识别不仅仅可以减少亲缘植物之间的资源竞争，还能有效影响植物与其共生体（如菌根网络）的互作。亲缘识别在植物性状进化、群体多样性、生态网络及群落结构等方面有着重要的应用。此外，亲缘选择（kin select）可能会减少竞争从而优化群体表现，这在作物育种上有这潜在的应用价值。探索这些在生态和农业上的应用面临一些挑战：亲缘关系的充分控制和度量、基因型水平上足够的重复及亲缘识别表现/适应性的综合度量。首要的关键问题是正向的亲缘识别在何时、何地、如何促进群体的表现。</p>\n<h1 id=\"关键词\"><a href=\"#关键词\" class=\"headerlink\" title=\"关键词\"></a>关键词</h1><p>合作行为，作物育种，群体表现，广义适应度，亲缘歧化，亲缘选择，植物交流，资源竞争，根系分泌物，根系互作</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>再草地、林地、森林或者是农业田地等环节下，植物间通常都有这紧密的互作。这些互作有多种形式，如资源竞争、栖息地改造及交流等。在植物-植物互作的普遍性和多样性背景下，对某个个体性状的观察不能脱离开其邻居的影响。植物-植物互作在众多的生态过程中均有着重要的作用，如碳吸收、水分/营养均衡、植物-非植物生物互作及作物产量等。</p>\n<p>大量植物生态学研究是基于”个体选择“的概念进行的，也就是通常会研究一个既定个体的某个性状对这个个体适应性的影响。然而，合作行为甚至是利他行为在自然界中更常见。为了解释这种”非自私“（non-selfish）的演变，Hamilton（1964）引入了”亲缘选择“（kin selection）这个概念（译者注：关于演化有两种观念，具体请参考<a href=\"https://luansheng.netlify.app/2018/06/05/group-selection-and-kin-selection/\">博文</a>）。亲缘选择的基本概念是，如果某个个体帮助另外一个与其共享了某个数量等位基因的个体，那么这些等位基因不仅能够传递到下一代，还会增强下一代的适应新来增强其传递性。依赖关系行为的重要前提便是亲缘识别。</p>\n<p>亲缘识别在大多数生物中都存在，如动物（包括脊椎动物和非脊椎动物）、真菌、甚至是细菌。但是长期以来人们并不太相信在植物中也存在亲缘识别。虽然有一个既定的事实是植物能够通过光信号或物理接触来感知周围的植物并做出响应，但是人们还是不太详细植物中的亲缘识别。植物甚至能够感知到近邻植物的状态，比如植物能够通过挥发物来感知邻近植物是否受到了攻击，比如植物能够通过声音来判别邻近植物是否受到了干旱胁迫。许多植物能够阻止自花授粉，这表明植物能够区分”自我“与”非我“。研究表明植物不仅能够区分自己的根系和邻近植物的根系，还能区分来自自我的挥发物和”非我“的邻近植物的挥发物。</p>\n<p>植物亲缘识别的第一个研究是关于一年生植物<em>Cakile edentula</em> 的，这个研究发现<em>Cakile edentula</em> 与来自同一母本的植物进行互作时，根系分布会降低（地上部分生物量一定时，产生更少的根）。后续一系列的研究表明植物中确实存在亲缘识别及相关的亲缘歧化（下图）。</p>\n<img src=\"/2021/02/03/%E7%94%9F%E6%80%81%E5%92%8C%E5%86%9C%E4%B8%9A%E4%B8%AD%E6%A4%8D%E7%89%A9%E4%BA%B2%E7%BC%98%E8%AF%86%E5%88%AB%E7%9A%84%E6%9C%BA%E5%88%B6/2.png\" class=\"\">\n\n<p>植物中亲缘识别现象的存在对研究植物生态学和进化生物学有着重要的影响。首先，亲缘选择会影响群体的遗传结构和多样性（群体遗传多样性通常会往低的方向走）；其次，”合作“通常会使群体表现更好，这在生态系统功能上会有重要的应用。亲缘识别在农业上可能有潜在的应用价值，农民关注的是作物群体性，而不会在乎单独的个体。这再次涉及到我们关注的问题，亲缘识别在多大程度上影响作物的表现？亲缘识别能不能作为育种靶标？</p>\n<p>本篇综述的目的：</p>\n<ul>\n<li>严格阐述植物中亲缘识别及其潜在的机制；</li>\n<li>讨论亲缘识别潜在的生态学应用；</li>\n<li>讨论亲缘识别在农作物上的影响程度。</li>\n</ul>\n<h1 id=\"一些基础概念\"><a href=\"#一些基础概念\" class=\"headerlink\" title=\"一些基础概念\"></a>一些基础概念</h1><h2 id=\"合作与欺骗（cooperation-vs-cheating）\"><a href=\"#合作与欺骗（cooperation-vs-cheating）\" class=\"headerlink\" title=\"合作与欺骗（cooperation vs cheating）\"></a>合作与欺骗（cooperation vs cheating）</h2><p>在植物科技文献中存在的一个问题是个体选择与群体表现之间存在“冲突”。拥有能够让群体适应新最大化的性状的植物群体面对更具竞争力的植物时通常是没有“抵抗力“的。进化博弈论认为群体会想向着非最佳状态方向进化。典型的例子是植物株高：株高较矮且在茎秆上”投资更小“的植物会将更多的资源用在增强适应性上，如种子产量，但是这种植物群体会被更高的植物”入侵“。</p>\n<p>这种”悲剧”的发生比不上单一的：比起能够让植物群体适应性最大化的性状，植物可能产生更多的叶子、更大的特殊的叶片区域和更多的根系，或者是更大的花。因此，在既定条件下，从最大化适应性角度也许不能优化vegation stands，这可能会对生态系统功能产生影响。</p>\n<h2 id=\"亲缘选择：何时-amp-何地\"><a href=\"#亲缘选择：何时-amp-何地\" class=\"headerlink\" title=\"亲缘选择：何时&amp;何地\"></a>亲缘选择：何时&amp;何地</h2><p>除了合作/欺骗外，自然界中还充满着“利他行为”。Hamilton在1964年提出利他行为的选择可能发生在具有遗传关系的个体中。基本的概念是：如果一个个体能够帮助和他具有一定数量等位基因的几个题，那么这些等位基因就会传递到下一代，并增强下一代的适应性。Hamilton在1964年时将这些凝练成了定理：如果分化遗传关系（r）与受体的适应性（B）的乘积大于参与者的适应性损耗（C），那就会发生利他行为。</p>\n<p>$$r×B&gt;C$$</p>\n<p>汉密尔顿定理认为，遗传关系越近的个体之间越可能形成合作关系。但是，需要注意的是遗传背景越相近的个体之间竞争也可能越激烈。对于距离较近的植物，差异会导致更强的生态位分化。那么就有个问题：在亲缘竞争存在的情况下，亲缘选择何时发生？根据上面的公式，r和/或B更大或C更小的时候，亲缘选择会发生。</p>\n<p>亲缘很大程度上取决于互作过程中的收入/支出比及生态条件。至少有两类生态因素会影响亲缘选择：</p>\n<ul>\n<li>更高的$r$值时：植物倾向于与遗传关系近的近邻互作；</li>\n<li>竞争成为一个负向的非零和博弈：利他行为不仅会改变竞争平衡，还会增加资源的可利用性。</li>\n</ul>\n<p>此外，竞争不仅仅只会发生在植物个体间，还会发生在植物群体间，尤其是资源具有高度流动性的时候，如大量开花作物和草地植物之间的传粉媒介竞争。因此，即使合作行为针对的是一个群体，但如果合作的群体比没有合作的群头生产力更强的时候，群体之间也会发生具有偏向性的合作行为。没有亲缘选择时，可能会发生多群体选择。多层选择可能更偏向亲缘选择。</p>\n<p>以下情况可能存在通过亲缘选择来实现合作进化：</p>\n<ul>\n<li>“合作成本低”时；</li>\n<li>合作互作不仅能够降低竞争强度还能增强资源的可利用性时；</li>\n<li>”资源“是高度可移动的时候；</li>\n<li>在粘性植物种群中，遗传相关性和物理距离之间存在明显的负相关关系。</li>\n</ul>\n<h1 id=\"地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\"><a href=\"#地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\" class=\"headerlink\" title=\"地下部分围绕可利用资源发生的亲缘识别和亲缘竞争\"></a>地下部分围绕可利用资源发生的亲缘识别和亲缘竞争</h1><p>因此，即使合作行为是针对一个小组的选择，如果合作小组比不合作的小组更有生产力，也可以在小组之间有选择地偏向合作行为。</p>\n<img src=\"/2021/02/03/%E7%94%9F%E6%80%81%E5%92%8C%E5%86%9C%E4%B8%9A%E4%B8%AD%E6%A4%8D%E7%89%A9%E4%BA%B2%E7%BC%98%E8%AF%86%E5%88%AB%E7%9A%84%E6%9C%BA%E5%88%B6/1.png\" class=\"\">"},{"title":"通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库","abbrlink":"b213e513","date":"2020-01-07T10:48:21.000Z","_content":"\n每试错一次，就离本质就更近一步。----小蓝哥\n\n------\n\n# 为什么要上传数据\n\n实验室同学找我帮忙上传宏基因组数据到NCBI，大概是45G。NCBI提供了很多种可供选择的上传方式：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n没有海外节点 **+** 学校的龟速网速，网页上传的速度可想而知，ftp又很容易断，据说Aspera上传能够达到满速上传，就想试一下。\n\nAspera有浏览器插件，下载试了几次都不行。决定试一下命令行方式。前前后后上传了大约100G数据，终于把这种满速上传数据的方法掌握了。\n\n命令行方式分成Windows下的方式和Linux命令行模式，Windows还需要配制环境变量，比较麻烦，索性采用Linux命令行上传。\n\n------\n\n# 电脑配置\n\nOracle VM VirtualBox 虚拟机配Ubuntu 18.0操作系统 + FinalShell。虚拟机当个小服务器，FinalShell是国产的Shell，目前接触过的Shell中比较好用的。\n\n{% asset_img 2.png %}\n\n------\n\n# 软件准备\n\n第一步是get到Aspera的Linux版本：\n\n{% asset_img 3.png %}\n\n下载好了之后把本地文件upload到服务器上，然后：\n\nrun一下：\n\n> aspera-cli-x.x.x.xxx.xxxxxxx-linux-64-release.sh\n\n添加可执行权限：\n\n> \\# chmod +x aspera-cli-x.x.x.xxx.xxxxxxx-linux-xx-release.sh\n\n添加环境变量：\n\n> \\# export PATH=~/.aspera/cli/bin:$PATH\n\n我也不知道这个是干啥的，反正复制粘贴run就行：\n\n> \\# export MANPATH=~/.aspera/cli/share/man:$MANPATH\n\nAspera安装配置完成，下面就是上传数据了。\n\n------\n\n# 开始吧、、、、\n\n首先，把硬盘里的数据上传到服务器：\n\n{% asset_img 4.png %}\n\n记得数据上传的**绝对路径**。\n\n然后，我们回到NCBI---------\n\n下载这个key file 并上传到服务器，记得上传的**绝对路径**。一定要记得这个东西！！！！！！！！！！！！！！！！！！！！！！\n\n→\n\n{% asset_img 5.png %}\n\n先看看NCBI给的例子：\n\n> ascp -i <path/to/key_file> -QT -l100m -k1 -d<path/to/folder/containing files>subasp@upload.ncbi.nlm.nih.gov:uploads/13××××××_qq.com_Ofc5bvIL\n\n这些命令都是什么意思呢：\n\n-QT我不知道，也不想知道。\n\n-l100m意思是最大网速，Aspera据说是满速上传，这个设置几乎没什么意义，高兴就设置到1000m吧。\n\n-k1指的是断点续传，这个很重要哟，看中的就是Aspera的断点续传和满速上传。\n\nsubasp@upload.ncbi.nlm.nih.gov:uploads/13××××××_qq.com_Ofc5bvIL这个是NCBI分配给每个上传er的，是独一无二的。\n\n别的参数不用知道，直接拿轮子用就行。\n\n**我第一次上传的时候是这样的：**\n\n> **ascp -i /home/lixiang01/aspera.openssh -QT -l100m -k1 d /home/lixiang01/data/\\*.gz subasp@upload.ncbi.nlm.nih.gov:uploads/123××××××_qq.com_Ofc5bvIL**\n\n数据倒是全部上传完成了，但是我后续找不到数据啊啊啊啊啊啊啊啊啊啊啊啊----\n\n找了找原因，发现了：\n\n**If you upload your files in your root directory, you will not be able to see them or to select the folder during the submission**.Make a new subdirectory for each new submission. Your submission subfolder is a temporary holding area and it will be removed once the whole submission is complete.Do not upload complex directory structures or files that do not contain sequence data.\n\n原来是因为我上传的时候直接上传到NCBI分配给我的root目录了，导致后面无法选择选择预上传完成的文件，于是，机智的我修改了一下命令：\n\n> ascp-i /home/lixiang01/aspera.openssh-QT -l100m -k1 d /home/lixiang01/data/*.gzsubasp@upload.ncbi.nlm.nih.gov:uploads/123××××××_qq.com_Ofc5bvIL/**sra_data**\n\n对，我就是简单的加了个“**/sra_data**”，简单的在root目录下创建了一个子目录 **sra_data**，结果，上传成功了。（这个可以随便取名字的，高兴就好）\n\n------\n\n**看使用说明和帮助文档真的很重要！！！**\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库.md","raw":"---\ntitle: 通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库\ntags: 生物信息学\ncategories: 生物信息学\nabbrlink: b213e513\ndate: 2020-01-07 18:48:21\n---\n\n每试错一次，就离本质就更近一步。----小蓝哥\n\n------\n\n# 为什么要上传数据\n\n实验室同学找我帮忙上传宏基因组数据到NCBI，大概是45G。NCBI提供了很多种可供选择的上传方式：\n\n<!-- more -->\n\n{% asset_img 1.png %}\n\n没有海外节点 **+** 学校的龟速网速，网页上传的速度可想而知，ftp又很容易断，据说Aspera上传能够达到满速上传，就想试一下。\n\nAspera有浏览器插件，下载试了几次都不行。决定试一下命令行方式。前前后后上传了大约100G数据，终于把这种满速上传数据的方法掌握了。\n\n命令行方式分成Windows下的方式和Linux命令行模式，Windows还需要配制环境变量，比较麻烦，索性采用Linux命令行上传。\n\n------\n\n# 电脑配置\n\nOracle VM VirtualBox 虚拟机配Ubuntu 18.0操作系统 + FinalShell。虚拟机当个小服务器，FinalShell是国产的Shell，目前接触过的Shell中比较好用的。\n\n{% asset_img 2.png %}\n\n------\n\n# 软件准备\n\n第一步是get到Aspera的Linux版本：\n\n{% asset_img 3.png %}\n\n下载好了之后把本地文件upload到服务器上，然后：\n\nrun一下：\n\n> aspera-cli-x.x.x.xxx.xxxxxxx-linux-64-release.sh\n\n添加可执行权限：\n\n> \\# chmod +x aspera-cli-x.x.x.xxx.xxxxxxx-linux-xx-release.sh\n\n添加环境变量：\n\n> \\# export PATH=~/.aspera/cli/bin:$PATH\n\n我也不知道这个是干啥的，反正复制粘贴run就行：\n\n> \\# export MANPATH=~/.aspera/cli/share/man:$MANPATH\n\nAspera安装配置完成，下面就是上传数据了。\n\n------\n\n# 开始吧、、、、\n\n首先，把硬盘里的数据上传到服务器：\n\n{% asset_img 4.png %}\n\n记得数据上传的**绝对路径**。\n\n然后，我们回到NCBI---------\n\n下载这个key file 并上传到服务器，记得上传的**绝对路径**。一定要记得这个东西！！！！！！！！！！！！！！！！！！！！！！\n\n→\n\n{% asset_img 5.png %}\n\n先看看NCBI给的例子：\n\n> ascp -i <path/to/key_file> -QT -l100m -k1 -d<path/to/folder/containing files>subasp@upload.ncbi.nlm.nih.gov:uploads/13××××××_qq.com_Ofc5bvIL\n\n这些命令都是什么意思呢：\n\n-QT我不知道，也不想知道。\n\n-l100m意思是最大网速，Aspera据说是满速上传，这个设置几乎没什么意义，高兴就设置到1000m吧。\n\n-k1指的是断点续传，这个很重要哟，看中的就是Aspera的断点续传和满速上传。\n\nsubasp@upload.ncbi.nlm.nih.gov:uploads/13××××××_qq.com_Ofc5bvIL这个是NCBI分配给每个上传er的，是独一无二的。\n\n别的参数不用知道，直接拿轮子用就行。\n\n**我第一次上传的时候是这样的：**\n\n> **ascp -i /home/lixiang01/aspera.openssh -QT -l100m -k1 d /home/lixiang01/data/\\*.gz subasp@upload.ncbi.nlm.nih.gov:uploads/123××××××_qq.com_Ofc5bvIL**\n\n数据倒是全部上传完成了，但是我后续找不到数据啊啊啊啊啊啊啊啊啊啊啊啊----\n\n找了找原因，发现了：\n\n**If you upload your files in your root directory, you will not be able to see them or to select the folder during the submission**.Make a new subdirectory for each new submission. Your submission subfolder is a temporary holding area and it will be removed once the whole submission is complete.Do not upload complex directory structures or files that do not contain sequence data.\n\n原来是因为我上传的时候直接上传到NCBI分配给我的root目录了，导致后面无法选择选择预上传完成的文件，于是，机智的我修改了一下命令：\n\n> ascp-i /home/lixiang01/aspera.openssh-QT -l100m -k1 d /home/lixiang01/data/*.gzsubasp@upload.ncbi.nlm.nih.gov:uploads/123××××××_qq.com_Ofc5bvIL/**sra_data**\n\n对，我就是简单的加了个“**/sra_data**”，简单的在root目录下创建了一个子目录 **sra_data**，结果，上传成功了。（这个可以随便取名字的，高兴就好）\n\n------\n\n**看使用说明和帮助文档真的很重要！！！**\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmk005wr0g0fl2jd3pk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>每试错一次，就离本质就更近一步。—-小蓝哥</p>\n<hr>\n<h1 id=\"为什么要上传数据\"><a href=\"#为什么要上传数据\" class=\"headerlink\" title=\"为什么要上传数据\"></a>为什么要上传数据</h1><p>实验室同学找我帮忙上传宏基因组数据到NCBI，大概是45G。NCBI提供了很多种可供选择的上传方式：</p>\n<span id=\"more\"></span>\n\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/1.png\" class=\"\">\n\n<p>没有海外节点 <strong>+</strong> 学校的龟速网速，网页上传的速度可想而知，ftp又很容易断，据说Aspera上传能够达到满速上传，就想试一下。</p>\n<p>Aspera有浏览器插件，下载试了几次都不行。决定试一下命令行方式。前前后后上传了大约100G数据，终于把这种满速上传数据的方法掌握了。</p>\n<p>命令行方式分成Windows下的方式和Linux命令行模式，Windows还需要配制环境变量，比较麻烦，索性采用Linux命令行上传。</p>\n<hr>\n<h1 id=\"电脑配置\"><a href=\"#电脑配置\" class=\"headerlink\" title=\"电脑配置\"></a>电脑配置</h1><p>Oracle VM VirtualBox 虚拟机配Ubuntu 18.0操作系统 + FinalShell。虚拟机当个小服务器，FinalShell是国产的Shell，目前接触过的Shell中比较好用的。</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/2.png\" class=\"\">\n\n<hr>\n<h1 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h1><p>第一步是get到Aspera的Linux版本：</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/3.png\" class=\"\">\n\n<p>下载好了之后把本地文件upload到服务器上，然后：</p>\n<p>run一下：</p>\n<blockquote>\n<p>aspera-cli-x.x.x.xxx.xxxxxxx-linux-64-release.sh</p>\n</blockquote>\n<p>添加可执行权限：</p>\n<blockquote>\n<p># chmod +x aspera-cli-x.x.x.xxx.xxxxxxx-linux-xx-release.sh</p>\n</blockquote>\n<p>添加环境变量：</p>\n<blockquote>\n<p># export PATH=~/.aspera/cli/bin:$PATH</p>\n</blockquote>\n<p>我也不知道这个是干啥的，反正复制粘贴run就行：</p>\n<blockquote>\n<p># export MANPATH=~/.aspera/cli/share/man:$MANPATH</p>\n</blockquote>\n<p>Aspera安装配置完成，下面就是上传数据了。</p>\n<hr>\n<h1 id=\"开始吧、、、、\"><a href=\"#开始吧、、、、\" class=\"headerlink\" title=\"开始吧、、、、\"></a>开始吧、、、、</h1><p>首先，把硬盘里的数据上传到服务器：</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/4.png\" class=\"\">\n\n<p>记得数据上传的<strong>绝对路径</strong>。</p>\n<p>然后，我们回到NCBI———</p>\n<p>下载这个key file 并上传到服务器，记得上传的<strong>绝对路径</strong>。一定要记得这个东西！！！！！！！！！！！！！！！！！！！！！！</p>\n<p>→</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/5.png\" class=\"\">\n\n<p>先看看NCBI给的例子：</p>\n<blockquote>\n<p>ascp -i &lt;path/to/key_file&gt; -QT -l100m -k1 -d&lt;path/to/folder/containing files&gt;<a href=\"mailto:&#115;&#x75;&#98;&#97;&#115;&#x70;&#64;&#117;&#x70;&#108;&#111;&#97;&#x64;&#x2e;&#110;&#99;&#x62;&#105;&#x2e;&#110;&#x6c;&#x6d;&#x2e;&#110;&#105;&#x68;&#x2e;&#103;&#x6f;&#x76;\">&#115;&#x75;&#98;&#97;&#115;&#x70;&#64;&#117;&#x70;&#108;&#111;&#97;&#x64;&#x2e;&#110;&#99;&#x62;&#105;&#x2e;&#110;&#x6c;&#x6d;&#x2e;&#110;&#105;&#x68;&#x2e;&#103;&#x6f;&#x76;</a>:uploads/13××××××_qq.com_Ofc5bvIL</p>\n</blockquote>\n<p>这些命令都是什么意思呢：</p>\n<p>-QT我不知道，也不想知道。</p>\n<p>-l100m意思是最大网速，Aspera据说是满速上传，这个设置几乎没什么意义，高兴就设置到1000m吧。</p>\n<p>-k1指的是断点续传，这个很重要哟，看中的就是Aspera的断点续传和满速上传。</p>\n<p><a href=\"mailto:&#x73;&#x75;&#98;&#x61;&#115;&#x70;&#x40;&#x75;&#x70;&#108;&#111;&#x61;&#100;&#46;&#110;&#x63;&#x62;&#105;&#46;&#110;&#x6c;&#x6d;&#46;&#x6e;&#105;&#104;&#46;&#x67;&#x6f;&#x76;\">&#x73;&#x75;&#98;&#x61;&#115;&#x70;&#x40;&#x75;&#x70;&#108;&#111;&#x61;&#100;&#46;&#110;&#x63;&#x62;&#105;&#46;&#110;&#x6c;&#x6d;&#46;&#x6e;&#105;&#104;&#46;&#x67;&#x6f;&#x76;</a>:uploads/13××××××_qq.com_Ofc5bvIL这个是NCBI分配给每个上传er的，是独一无二的。</p>\n<p>别的参数不用知道，直接拿轮子用就行。</p>\n<p><strong>我第一次上传的时候是这样的：</strong></p>\n<blockquote>\n<p><strong>ascp -i /home/lixiang01/aspera.openssh -QT -l100m -k1 d /home/lixiang01/data/*.gz <a href=\"mailto:&#115;&#x75;&#98;&#97;&#115;&#112;&#64;&#x75;&#112;&#108;&#111;&#x61;&#100;&#46;&#x6e;&#x63;&#98;&#105;&#x2e;&#x6e;&#x6c;&#109;&#46;&#110;&#105;&#104;&#x2e;&#103;&#111;&#x76;\">&#115;&#x75;&#98;&#97;&#115;&#112;&#64;&#x75;&#112;&#108;&#111;&#x61;&#100;&#46;&#x6e;&#x63;&#98;&#105;&#x2e;&#x6e;&#x6c;&#109;&#46;&#110;&#105;&#104;&#x2e;&#103;&#111;&#x76;</a>:uploads/123××××××_qq.com_Ofc5bvIL</strong></p>\n</blockquote>\n<p>数据倒是全部上传完成了，但是我后续找不到数据啊啊啊啊啊啊啊啊啊啊啊啊—-</p>\n<p>找了找原因，发现了：</p>\n<p><strong>If you upload your files in your root directory, you will not be able to see them or to select the folder during the submission</strong>.Make a new subdirectory for each new submission. Your submission subfolder is a temporary holding area and it will be removed once the whole submission is complete.Do not upload complex directory structures or files that do not contain sequence data.</p>\n<p>原来是因为我上传的时候直接上传到NCBI分配给我的root目录了，导致后面无法选择选择预上传完成的文件，于是，机智的我修改了一下命令：</p>\n<blockquote>\n<p>ascp-i /home/lixiang01/aspera.openssh-QT -l100m -k1 d /home/lixiang01/data/*<a href=\"mailto:&#46;&#x67;&#x7a;&#115;&#117;&#98;&#x61;&#x73;&#x70;&#x40;&#x75;&#112;&#x6c;&#x6f;&#x61;&#x64;&#x2e;&#110;&#99;&#98;&#x69;&#46;&#x6e;&#108;&#x6d;&#46;&#110;&#x69;&#104;&#x2e;&#x67;&#111;&#x76;\">&#46;&#x67;&#x7a;&#115;&#117;&#98;&#x61;&#x73;&#x70;&#x40;&#x75;&#112;&#x6c;&#x6f;&#x61;&#x64;&#x2e;&#110;&#99;&#98;&#x69;&#46;&#x6e;&#108;&#x6d;&#46;&#110;&#x69;&#104;&#x2e;&#x67;&#111;&#x76;</a>:uploads/123××××××_qq.com_Ofc5bvIL/<strong>sra_data</strong></p>\n</blockquote>\n<p>对，我就是简单的加了个“**/sra_data**”，简单的在root目录下创建了一个子目录 <strong>sra_data</strong>，结果，上传成功了。（这个可以随便取名字的，高兴就好）</p>\n<hr>\n<p><strong>看使用说明和帮助文档真的很重要！！！</strong></p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>每试错一次，就离本质就更近一步。—-小蓝哥</p>\n<hr>\n<h1 id=\"为什么要上传数据\"><a href=\"#为什么要上传数据\" class=\"headerlink\" title=\"为什么要上传数据\"></a>为什么要上传数据</h1><p>实验室同学找我帮忙上传宏基因组数据到NCBI，大概是45G。NCBI提供了很多种可供选择的上传方式：</p>","more":"<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/1.png\" class=\"\">\n\n<p>没有海外节点 <strong>+</strong> 学校的龟速网速，网页上传的速度可想而知，ftp又很容易断，据说Aspera上传能够达到满速上传，就想试一下。</p>\n<p>Aspera有浏览器插件，下载试了几次都不行。决定试一下命令行方式。前前后后上传了大约100G数据，终于把这种满速上传数据的方法掌握了。</p>\n<p>命令行方式分成Windows下的方式和Linux命令行模式，Windows还需要配制环境变量，比较麻烦，索性采用Linux命令行上传。</p>\n<hr>\n<h1 id=\"电脑配置\"><a href=\"#电脑配置\" class=\"headerlink\" title=\"电脑配置\"></a>电脑配置</h1><p>Oracle VM VirtualBox 虚拟机配Ubuntu 18.0操作系统 + FinalShell。虚拟机当个小服务器，FinalShell是国产的Shell，目前接触过的Shell中比较好用的。</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/2.png\" class=\"\">\n\n<hr>\n<h1 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h1><p>第一步是get到Aspera的Linux版本：</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/3.png\" class=\"\">\n\n<p>下载好了之后把本地文件upload到服务器上，然后：</p>\n<p>run一下：</p>\n<blockquote>\n<p>aspera-cli-x.x.x.xxx.xxxxxxx-linux-64-release.sh</p>\n</blockquote>\n<p>添加可执行权限：</p>\n<blockquote>\n<p># chmod +x aspera-cli-x.x.x.xxx.xxxxxxx-linux-xx-release.sh</p>\n</blockquote>\n<p>添加环境变量：</p>\n<blockquote>\n<p># export PATH=~/.aspera/cli/bin:$PATH</p>\n</blockquote>\n<p>我也不知道这个是干啥的，反正复制粘贴run就行：</p>\n<blockquote>\n<p># export MANPATH=~/.aspera/cli/share/man:$MANPATH</p>\n</blockquote>\n<p>Aspera安装配置完成，下面就是上传数据了。</p>\n<hr>\n<h1 id=\"开始吧、、、、\"><a href=\"#开始吧、、、、\" class=\"headerlink\" title=\"开始吧、、、、\"></a>开始吧、、、、</h1><p>首先，把硬盘里的数据上传到服务器：</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/4.png\" class=\"\">\n\n<p>记得数据上传的<strong>绝对路径</strong>。</p>\n<p>然后，我们回到NCBI———</p>\n<p>下载这个key file 并上传到服务器，记得上传的<strong>绝对路径</strong>。一定要记得这个东西！！！！！！！！！！！！！！！！！！！！！！</p>\n<p>→</p>\n<img src=\"/2020/01/07/%E9%80%9A%E8%BF%87Linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8Aspera%E5%85%A8%E9%80%9F%E4%B8%8A%E4%BC%A0%E6%B5%8B%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%88%B0NCBI%E6%95%B0%E6%8D%AE%E5%BA%93/5.png\" class=\"\">\n\n<p>先看看NCBI给的例子：</p>\n<blockquote>\n<p>ascp -i &lt;path/to/key_file&gt; -QT -l100m -k1 -d&lt;path/to/folder/containing files&gt;<a href=\"mailto:&#115;&#x75;&#98;&#97;&#115;&#x70;&#64;&#117;&#x70;&#108;&#111;&#97;&#x64;&#x2e;&#110;&#99;&#x62;&#105;&#x2e;&#110;&#x6c;&#x6d;&#x2e;&#110;&#105;&#x68;&#x2e;&#103;&#x6f;&#x76;\">&#115;&#x75;&#98;&#97;&#115;&#x70;&#64;&#117;&#x70;&#108;&#111;&#97;&#x64;&#x2e;&#110;&#99;&#x62;&#105;&#x2e;&#110;&#x6c;&#x6d;&#x2e;&#110;&#105;&#x68;&#x2e;&#103;&#x6f;&#x76;</a>:uploads/13××××××_qq.com_Ofc5bvIL</p>\n</blockquote>\n<p>这些命令都是什么意思呢：</p>\n<p>-QT我不知道，也不想知道。</p>\n<p>-l100m意思是最大网速，Aspera据说是满速上传，这个设置几乎没什么意义，高兴就设置到1000m吧。</p>\n<p>-k1指的是断点续传，这个很重要哟，看中的就是Aspera的断点续传和满速上传。</p>\n<p><a href=\"mailto:&#x73;&#x75;&#98;&#x61;&#115;&#x70;&#x40;&#x75;&#x70;&#108;&#111;&#x61;&#100;&#46;&#110;&#x63;&#x62;&#105;&#46;&#110;&#x6c;&#x6d;&#46;&#x6e;&#105;&#104;&#46;&#x67;&#x6f;&#x76;\">&#x73;&#x75;&#98;&#x61;&#115;&#x70;&#x40;&#x75;&#x70;&#108;&#111;&#x61;&#100;&#46;&#110;&#x63;&#x62;&#105;&#46;&#110;&#x6c;&#x6d;&#46;&#x6e;&#105;&#104;&#46;&#x67;&#x6f;&#x76;</a>:uploads/13××××××_qq.com_Ofc5bvIL这个是NCBI分配给每个上传er的，是独一无二的。</p>\n<p>别的参数不用知道，直接拿轮子用就行。</p>\n<p><strong>我第一次上传的时候是这样的：</strong></p>\n<blockquote>\n<p><strong>ascp -i /home/lixiang01/aspera.openssh -QT -l100m -k1 d /home/lixiang01/data/*.gz <a href=\"mailto:&#115;&#x75;&#98;&#97;&#115;&#112;&#64;&#x75;&#112;&#108;&#111;&#x61;&#100;&#46;&#x6e;&#x63;&#98;&#105;&#x2e;&#x6e;&#x6c;&#109;&#46;&#110;&#105;&#104;&#x2e;&#103;&#111;&#x76;\">&#115;&#x75;&#98;&#97;&#115;&#112;&#64;&#x75;&#112;&#108;&#111;&#x61;&#100;&#46;&#x6e;&#x63;&#98;&#105;&#x2e;&#x6e;&#x6c;&#109;&#46;&#110;&#105;&#104;&#x2e;&#103;&#111;&#x76;</a>:uploads/123××××××_qq.com_Ofc5bvIL</strong></p>\n</blockquote>\n<p>数据倒是全部上传完成了，但是我后续找不到数据啊啊啊啊啊啊啊啊啊啊啊啊—-</p>\n<p>找了找原因，发现了：</p>\n<p><strong>If you upload your files in your root directory, you will not be able to see them or to select the folder during the submission</strong>.Make a new subdirectory for each new submission. Your submission subfolder is a temporary holding area and it will be removed once the whole submission is complete.Do not upload complex directory structures or files that do not contain sequence data.</p>\n<p>原来是因为我上传的时候直接上传到NCBI分配给我的root目录了，导致后面无法选择选择预上传完成的文件，于是，机智的我修改了一下命令：</p>\n<blockquote>\n<p>ascp-i /home/lixiang01/aspera.openssh-QT -l100m -k1 d /home/lixiang01/data/*<a href=\"mailto:&#46;&#x67;&#x7a;&#115;&#117;&#98;&#x61;&#x73;&#x70;&#x40;&#x75;&#112;&#x6c;&#x6f;&#x61;&#x64;&#x2e;&#110;&#99;&#98;&#x69;&#46;&#x6e;&#108;&#x6d;&#46;&#110;&#x69;&#104;&#x2e;&#x67;&#111;&#x76;\">&#46;&#x67;&#x7a;&#115;&#117;&#98;&#x61;&#x73;&#x70;&#x40;&#x75;&#112;&#x6c;&#x6f;&#x61;&#x64;&#x2e;&#110;&#99;&#98;&#x69;&#46;&#x6e;&#108;&#x6d;&#46;&#110;&#x69;&#104;&#x2e;&#x67;&#111;&#x76;</a>:uploads/123××××××_qq.com_Ofc5bvIL/<strong>sra_data</strong></p>\n</blockquote>\n<p>对，我就是简单的加了个“**/sra_data**”，简单的在root目录下创建了一个子目录 <strong>sra_data</strong>，结果，上传成功了。（这个可以随便取名字的，高兴就好）</p>\n<hr>\n<p><strong>看使用说明和帮助文档真的很重要！！！</strong></p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#x69;&#120;&#105;&#97;&#110;&#103;&#x31;&#x31;&#55;&#x34;&#x32;&#x33;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#105;&#97;&#110;&#x67;&#49;&#49;&#55;&#x34;&#x32;&#x33;&#64;&#x66;&#111;&#x78;&#x6d;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>\n</blockquote>"},{"layout":"“r","title":"语言显示函数运行进度”","date":"2020-01-07T04:29:12.000Z","_content":"\n看到《R语言之书：编程与统计》里面一个比较有意思的小程序：\n\n<!-- more -->\n\n```R\nprog.test = function(n){\n  results = 0\n  probar = txtProgressBar(min = 0, max = n, style = 1, char = '+')\n  for (i in 1:n) {\n    results = results+1\n    Sys.sleep(0)\n    setTxtProgressBar(probar,value = i)\n  }\n  close(probar)\n  return(results)\n}\n\nprog.test(100000000)\n```\n运行之后就能看到程序运行的进度。\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/语言显示函数运行进度.md","raw":"---\nlayout: “r\ntitle: 语言显示函数运行进度”\ndate: 2020-01-07 12:29:12\ncategories: R语言\ntags: R语言\n---\n\n看到《R语言之书：编程与统计》里面一个比较有意思的小程序：\n\n<!-- more -->\n\n```R\nprog.test = function(n){\n  results = 0\n  probar = txtProgressBar(min = 0, max = n, style = 1, char = '+')\n  for (i in 1:n) {\n    results = results+1\n    Sys.sleep(0)\n    setTxtProgressBar(probar,value = i)\n  }\n  close(probar)\n  return(results)\n}\n\nprog.test(100000000)\n```\n运行之后就能看到程序运行的进度。\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"语言显示函数运行进度","published":1,"updated":"2021-01-04T04:37:48.000Z","_id":"ckwbqwcml005zr0g0dq7hgcb8","comments":1,"photos":[],"link":"","content":"<p>看到《R语言之书：编程与统计》里面一个比较有意思的小程序：</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prog.test = <span class=\"keyword\">function</span>(n)&#123;</span><br><span class=\"line\">  results = <span class=\"number\">0</span></span><br><span class=\"line\">  probar = txtProgressBar(<span class=\"built_in\">min</span> = <span class=\"number\">0</span>, <span class=\"built_in\">max</span> = n, style = <span class=\"number\">1</span>, char = <span class=\"string\">&#x27;+&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:n) &#123;</span><br><span class=\"line\">    results = results+<span class=\"number\">1</span></span><br><span class=\"line\">    Sys.sleep(<span class=\"number\">0</span>)</span><br><span class=\"line\">    setTxtProgressBar(probar,value = i)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  close(probar)</span><br><span class=\"line\">  <span class=\"built_in\">return</span>(results)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">prog.test(<span class=\"number\">100000000</span>)</span><br></pre></td></tr></table></figure>\n<p>运行之后就能看到程序运行的进度。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>看到《R语言之书：编程与统计》里面一个比较有意思的小程序：</p>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prog.test = <span class=\"keyword\">function</span>(n)&#123;</span><br><span class=\"line\">  results = <span class=\"number\">0</span></span><br><span class=\"line\">  probar = txtProgressBar(<span class=\"built_in\">min</span> = <span class=\"number\">0</span>, <span class=\"built_in\">max</span> = n, style = <span class=\"number\">1</span>, char = <span class=\"string\">&#x27;+&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> <span class=\"number\">1</span>:n) &#123;</span><br><span class=\"line\">    results = results+<span class=\"number\">1</span></span><br><span class=\"line\">    Sys.sleep(<span class=\"number\">0</span>)</span><br><span class=\"line\">    setTxtProgressBar(probar,value = i)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  close(probar)</span><br><span class=\"line\">  <span class=\"built_in\">return</span>(results)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">prog.test(<span class=\"number\">100000000</span>)</span><br></pre></td></tr></table></figure>\n<p>运行之后就能看到程序运行的进度。</p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#97;&#110;&#103;&#x31;&#49;&#x37;&#52;&#x32;&#51;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;\">&#108;&#105;&#120;&#x69;&#97;&#110;&#103;&#x31;&#x31;&#x37;&#x34;&#50;&#51;&#64;&#x66;&#x6f;&#120;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></p>\n</blockquote>"},{"title":"配色包paletteer使用","abbrlink":"d4b49eb0","date":"2021-04-13T01:29:27.000Z","_content":"\n```R\nlibrary(paletteer)\n```\n\n<!-- more -->\n\n```R\n\npaletteer_c(\"scico::berlin\", n = 10)\n\n## <colors>\n## #9EB0FFFF #5AA3DAFF #2D7597FF #194155FF #11181DFF #270C01FF #501802FF #8A3F2AFF #C37469FF #FFACACFF\n\npaletteer_d(\"RColorBrewer::Paired\")\n\n## <colors>\n## #A6CEE3FF #1F78B4FF #B2DF8AFF #33A02CFF #FB9A99FF #E31A1CFF #FDBF6FFF #FF7F00FF #CAB2D6FF #6A3D9AFF #FFFF99FF #B15928FF\n\npaletteer_dynamic(\"cartography::green.pal\", 5)\n\n## <colors>\n## #B8D9A9FF #8DBC80FF #5D9D52FF #287A22FF #17692CFF\n\nlibrary(ggplot2)\nggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +\n  geom_point() +\n  scale_color_paletteer_d(\"basetheme::minimal\")\n  \nggplot(iris, aes(Sepal.Length, Sepal.Width, color = Sepal.Width)) +\n  geom_point() +\n  scale_color_paletteer_c(\"grDevices::PinkYl\")\n  \nlibrary(ggpubr)\ndata(\"ToothGrowth\")\ndf <- ToothGrowth\nggboxplot(df, x = \"dose\", y = \"len\", width = 0.8,color = \"dose\")+\n  scale_color_paletteer_d(\"basetheme::minimal\")  \n  \npheatmap::pheatmap(volcano,color = paletteer_c(\"scico::berlin\", n = 100))\n\nlibrary(ComplexHeatmap)\nHeatmap(t(iris[,1:4]),col = paletteer_c(\"scico::berlin\", n = 100),name = \"iris\")\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","source":"_posts/配色包paletteer使用.md","raw":"---\ntitle: \"配色包\\x96paletteer使用\"\ntags: R语言\ncategories: R语言\nabbrlink: d4b49eb0\ndate: 2021-04-13 09:29:27\n---\n\n```R\nlibrary(paletteer)\n```\n\n<!-- more -->\n\n```R\n\npaletteer_c(\"scico::berlin\", n = 10)\n\n## <colors>\n## #9EB0FFFF #5AA3DAFF #2D7597FF #194155FF #11181DFF #270C01FF #501802FF #8A3F2AFF #C37469FF #FFACACFF\n\npaletteer_d(\"RColorBrewer::Paired\")\n\n## <colors>\n## #A6CEE3FF #1F78B4FF #B2DF8AFF #33A02CFF #FB9A99FF #E31A1CFF #FDBF6FFF #FF7F00FF #CAB2D6FF #6A3D9AFF #FFFF99FF #B15928FF\n\npaletteer_dynamic(\"cartography::green.pal\", 5)\n\n## <colors>\n## #B8D9A9FF #8DBC80FF #5D9D52FF #287A22FF #17692CFF\n\nlibrary(ggplot2)\nggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +\n  geom_point() +\n  scale_color_paletteer_d(\"basetheme::minimal\")\n  \nggplot(iris, aes(Sepal.Length, Sepal.Width, color = Sepal.Width)) +\n  geom_point() +\n  scale_color_paletteer_c(\"grDevices::PinkYl\")\n  \nlibrary(ggpubr)\ndata(\"ToothGrowth\")\ndf <- ToothGrowth\nggboxplot(df, x = \"dose\", y = \"len\", width = 0.8,color = \"dose\")+\n  scale_color_paletteer_d(\"basetheme::minimal\")  \n  \npheatmap::pheatmap(volcano,color = paletteer_c(\"scico::berlin\", n = 100))\n\nlibrary(ComplexHeatmap)\nHeatmap(t(iris[,1:4]),col = paletteer_c(\"scico::berlin\", n = 100),name = \"iris\")\n```\n\n>💌lixiang117423@foxmail.com\n>💌lixiang117423@gmail.com\n\n","slug":"配色包paletteer使用","published":1,"updated":"2021-04-13T01:36:28.004Z","_id":"ckwbqwcmm0062r0g01axman0u","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(paletteer)</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">paletteer_c(<span class=\"string\">&quot;scico::berlin&quot;</span>, n = <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## &lt;colors&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## #9EB0FFFF #5AA3DAFF #2D7597FF #194155FF #11181DFF #270C01FF #501802FF #8A3F2AFF #C37469FF #FFACACFF</span></span><br><span class=\"line\"></span><br><span class=\"line\">paletteer_d(<span class=\"string\">&quot;RColorBrewer::Paired&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## &lt;colors&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## #A6CEE3FF #1F78B4FF #B2DF8AFF #33A02CFF #FB9A99FF #E31A1CFF #FDBF6FFF #FF7F00FF #CAB2D6FF #6A3D9AFF #FFFF99FF #B15928FF</span></span><br><span class=\"line\"></span><br><span class=\"line\">paletteer_dynamic(<span class=\"string\">&quot;cartography::green.pal&quot;</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## &lt;colors&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## #B8D9A9FF #8DBC80FF #5D9D52FF #287A22FF #17692CFF</span></span><br><span class=\"line\"></span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  scale_color_paletteer_d(<span class=\"string\">&quot;basetheme::minimal&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Sepal.Width)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  scale_color_paletteer_c(<span class=\"string\">&quot;grDevices::PinkYl&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">library(ggpubr)</span><br><span class=\"line\">data(<span class=\"string\">&quot;ToothGrowth&quot;</span>)</span><br><span class=\"line\">df &lt;- ToothGrowth</span><br><span class=\"line\">ggboxplot(df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, width = <span class=\"number\">0.8</span>,color = <span class=\"string\">&quot;dose&quot;</span>)+</span><br><span class=\"line\">  scale_color_paletteer_d(<span class=\"string\">&quot;basetheme::minimal&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\">pheatmap::pheatmap(volcano,color = paletteer_c(<span class=\"string\">&quot;scico::berlin&quot;</span>, n = <span class=\"number\">100</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">library(ComplexHeatmap)</span><br><span class=\"line\">Heatmap(t(iris[,<span class=\"number\">1</span>:<span class=\"number\">4</span>]),col = paletteer_c(<span class=\"string\">&quot;scico::berlin&quot;</span>, n = <span class=\"number\">100</span>),name = <span class=\"string\">&quot;iris&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library(paletteer)</span><br></pre></td></tr></table></figure>","more":"<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">paletteer_c(<span class=\"string\">&quot;scico::berlin&quot;</span>, n = <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## &lt;colors&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## #9EB0FFFF #5AA3DAFF #2D7597FF #194155FF #11181DFF #270C01FF #501802FF #8A3F2AFF #C37469FF #FFACACFF</span></span><br><span class=\"line\"></span><br><span class=\"line\">paletteer_d(<span class=\"string\">&quot;RColorBrewer::Paired&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## &lt;colors&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## #A6CEE3FF #1F78B4FF #B2DF8AFF #33A02CFF #FB9A99FF #E31A1CFF #FDBF6FFF #FF7F00FF #CAB2D6FF #6A3D9AFF #FFFF99FF #B15928FF</span></span><br><span class=\"line\"></span><br><span class=\"line\">paletteer_dynamic(<span class=\"string\">&quot;cartography::green.pal&quot;</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## &lt;colors&gt;</span></span><br><span class=\"line\"><span class=\"comment\">## #B8D9A9FF #8DBC80FF #5D9D52FF #287A22FF #17692CFF</span></span><br><span class=\"line\"></span><br><span class=\"line\">library(ggplot2)</span><br><span class=\"line\">ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  scale_color_paletteer_d(<span class=\"string\">&quot;basetheme::minimal&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Sepal.Width)) +</span><br><span class=\"line\">  geom_point() +</span><br><span class=\"line\">  scale_color_paletteer_c(<span class=\"string\">&quot;grDevices::PinkYl&quot;</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">library(ggpubr)</span><br><span class=\"line\">data(<span class=\"string\">&quot;ToothGrowth&quot;</span>)</span><br><span class=\"line\">df &lt;- ToothGrowth</span><br><span class=\"line\">ggboxplot(df, x = <span class=\"string\">&quot;dose&quot;</span>, y = <span class=\"string\">&quot;len&quot;</span>, width = <span class=\"number\">0.8</span>,color = <span class=\"string\">&quot;dose&quot;</span>)+</span><br><span class=\"line\">  scale_color_paletteer_d(<span class=\"string\">&quot;basetheme::minimal&quot;</span>)  </span><br><span class=\"line\">  </span><br><span class=\"line\">pheatmap::pheatmap(volcano,color = paletteer_c(<span class=\"string\">&quot;scico::berlin&quot;</span>, n = <span class=\"number\">100</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">library(ComplexHeatmap)</span><br><span class=\"line\">Heatmap(t(iris[,<span class=\"number\">1</span>:<span class=\"number\">4</span>]),col = paletteer_c(<span class=\"string\">&quot;scico::berlin&quot;</span>, n = <span class=\"number\">100</span>),name = <span class=\"string\">&quot;iris&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#105;&#97;&#x6e;&#x67;&#49;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#x6f;&#x78;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a><br>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#97;&#110;&#x67;&#x31;&#x31;&#55;&#52;&#x32;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"植物科学常用数据库和生物信息学工具","abbrlink":"321b666b","date":"2020-12-17T10:35:07.000Z","_content":"\n# 通用数据库\n\n**http://bigd.big.ac.cn/databasecommons/**\n\n国家基因库下属数据库，涵盖各种生物的全面公开可用的数据信息\n\n<!-- more -->\n\n**https://www.ncbi.nlm.nih.gov/**\n\n美国国家生物技术信息中心的生物医学和基因组信息门户网站\n\n**https://www.oxfordjournals.org/nar/database/cat/13** \n\n牛津大学出版社提供的植物科学相关数据库的汇总网站   \n\n**http://abc.gao-lab.org/index.php** \n\n北京大学应用生物信息学中心  \n\n**https://www.expasy.org/**   \n\n瑞士生物信息研究所的生物信息资源门户网站，涵盖各种生物研究数据库和软件工具  \n\n**http://www.bioinfo.wsu.edu/**  \n\n作物基因组、遗传和育种研究的分析计算工具和数据库  \n\n**https://www.agbiodata.org/** \n\n农业生物数据库和相关资源综合平台   \n\n**https://phytozome.jgi.doe.gov/pz/portal.html**\n\n植物比较基因组学资源库  \n\n**https://bioinformatics.psb.ugent.be/plaza/**\n\n植物比较基因组学数据库  \n\n**http://www.plantontology.org** \n\n集成植物基因组学、表型和遗传学数据的共享型平台   \n\n**http://harvest.ucr.edu/**  \n\n作物 EST 序列及相关分子信息数据平台   \n\n**http://www.gramene.org/**  \n\n用于作物和模式物种的比较功能基因组学分析的综合平台   \n\n**https://www.uniprot.org/**  \n\n蛋白质序列和功能信息资源数据库和分析平台 \n\n**http://urgi.versailles.inra.fr/**  \n\n针对有农学意义的植物研究生物信息平台   \n\n**http://systemsbiology.cau.edu.cn/agriGOv2/index.php#**  \n\nGO 分析工具包和数据库综合平台   \n\n**http://www.bioinformatics.nl/AraQTL**  \n\n基于 Web 的用于表达定量性状位点（eQTL）研究的工作台和数据库   \n\n**http://www.plantgdb.org/** \n\n植物基因组序列数据库   \n\n**https://mpss.danforthcenter.org/index.php**  \n\n二代测序（NGS）数据库，包括植物的 RNA 和基因组信息资源   \n\n**http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp**  \n\n植物基因组数据库   \n\n**http://systemsbiology.cau.edu.cn/chromstates/**  \n\n植物染色质状态信息数据库   \n\n**http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home**  \n\n植物 snoRNA 基因数据库   \n\n**http://bioinformatics.psb.ugent.be/webtools/plantcare/html/** \n\n植物顺式调控元件、增强子和抑制子数据库   \n\n**http://metacrop.ipk-gatersleben.de**  \n\n作物代谢途径数据库   \n\n**http://podb.nibb.ac.jp/Organellome**  \n\n植物器官研究数据库   \n\n**http://www.drastic.org.uk**  \n\n植物细胞的信号转导分析数据库   \n\n**http://www.pathoplant.de**  \n\n植物 - 病原体相互作用的信号转导相关物质成分数据库   \n\n**http://planttfdb.cbi.pku.edu.cn/**\n\n植物转录因子数据库  \n\n**http://plntfdb.bio.uni-potsdam.de/v3.0/**\n\n植物转录因子数据库  \n\n**http://psorf.whu.edu.cn/**  \n\n植物小型开放阅读框架（sORF）数据资源库 \n\n**http://uorflight.whu.edu.cn/**  \n\n植物 uORF 翻译调控相关数据库   \n\n**https://apex.ipk-gatersleben.de/apex/f?p=116:1**  \n\n作物 EST 数据库   \n\n**https://www.dna.affrc.go.jp/PLACE/?action=newplace**  \n\n植物顺式调控 DNA 元件数据库   \n\n**https://webapps.plantenergy.uwa.edu.au/applications/mpic/** \n\n植物线粒体蛋白运输元件数据库  \n\n**https://bioinformatics.cse.unr.edu/fat-ptm** \n\n用于分析蛋白质和代谢途径的翻译后修饰数据库 \n\n**http://sundarlab.ucdavis.edu/smrnas/**\n\n谷物特别是水稻和玉米的小 RNA 数据库  \n\n**http://ppdb.tc.cornell.edu/default.aspx** \n\n拟南芥和玉米蛋白质组数据库  \n\n**http://atted.jp/**   \n\n基于互秩指数统计特性的植物共表达数据库   \n\n**http://ibi.zju.edu.cn/plantcircbase/**   \n\n植物 Circular RNAs 数据库   \n\n**http://plantcrispr.org/cgi-bin/crispr/index.cgi**  \n\n植物基因编辑数据库，收集 CRISPR / Cas9 技术产生植物的信息   \n\n**https://www.try-db.org/TryWeb/Home.php**\n\n植物性状全球数据库   \n\n**http://chibba.agtec.uga.edu/duplication/**\n\n植物基因和基因组加倍的数据库  \n\n**http://www.mirbase.org/**  \n\n生物 microRNA 数据库   \n\n**http://bioinformatics.cau.edu.cn/PMRD/**  \n\n植物 microRNA 数据库   \n\n**http://bis.zju.edu.cn/pmirkb/**  \n\n模式植物拟南芥和水稻的 microRNA 数据库   \n\n**http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl**   \n\n植物相关微生物的多基因座序列分型和分析数据库及网站   \n\n**http://structuralbiology.cau.edu.cn/PlantGSEA**   \n\n植物基因集富集分析平台   \n\n**http://structuralbiology.cau.edu.cn/PNRD** \n\n植物非编码 RNA 数据库   \n\n**http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB**   \n\n植物长非编码 RNA 数据库   \n\n**http://prgdb.org/prgdb/**   \n\n植物抗病 R 基因数据库   \n\n**https://www.inetbio.org/aranet/**   \n\n拟南芥和一些非模式植物的功能基因网络改进数据库 \n\n**http://greenc.sciencedesigners.com/wiki/Main_Page**\n\n基于 Wiki 的植物长非编码 RNAs 数据库   \n\n**http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi**   \n\n植物启动子数据库   \n\n**http://www.pmiren.com/**   \n\n植物 miRNA 综合数据库   \n\n**http://www.mbkbase.org/**  \n\n水稻、小麦和大豆的分子育种资源库   \n\n**http://epigenome.genetics.uga.edu/PlantMethylome/**  \n\n植物 DNA 甲基化数据库   \n\n**http://bioinfo.sibs.ac.cn/plant-regulomics** \n\n从植物多组学数据中检索获取上游调控因子的数据驱动平台  \n\n**http://autosnpdb.appliedbioinformatics.com.au/** \n\n植物 SNP 检索数据库  \n\n**http://www.p3db.org/**   \n\n植物蛋白磷酸化数据库   \n\n**http://phytamp.pfba-lab-tun.org/main.php**  \n\n植物天然抗菌肽数据库   \n\n**http://bis.zju.edu.cn/pcernadb/index.jsp**\n\n植物竞争性内源 RNA 数据库  \n\n**http://www.byanbioinfo.org/plamom/**   \n\n用于检索，分析和预测植物移动大分子包括 RNA 和蛋白质的数据库平台   \n\n**https://cvalues.science.kew.org/**   \n\n用于获取和比较植物基因组大小的数据库   \n\n**https://plantreactome.gramene.org/index.php?lang=en** \n\n植物代谢和调控通路数据库   \n\n**http://plantpis.ba.itb.cnr.it/**  \n\n植物蛋白酶抑制剂数据库   \n\n**http://plantdhs.org/**   \n\n植物 DNase I 超敏位点数据库   \n\n**http://bis.zju.edu.cn/pnatdb/**   \n\n植物天然反义转录本（Natural Antisense Transcripts）数据库   \n\n**http://linux1.softberry.com/berry.phtml?topic=plantprom&group=data&subgroup=plantprom**  \n\n植物启动子数据库   \n\n**http://www.sesame-bioinfo.org/PMDBase/**\n\n用于研究植物物种和基因组进化中的微卫星 DNA 和标记开发的数据库  \n\n**http://pogs.uoregon.edu/#/**  \n\n旨在促进有关植物基因功能和基因模型的跨物种推断的关系数据库   \n\n**http://plants.proteincomplexes.org/**  \n\n植物蛋白复合物组分以及蛋白间稳定互作图谱数据库   \n\n# 拟南芥\n\n**www.arabidopsis.org** \n\n最为常用的拟南芥遗传和分子生物学数据资源库   \n\n**http://rarge.gsc.riken.jp/**   \n\n拟南芥 cDNA、突变体和微阵列数据库   \n\n**https://1001genomes.org/**  \n\n1001 Genomes：拟南芥遗传变异目录  \n\n**https://aragwas.1001genomes.org/#/** \n\nAraGWAS：用于拟南芥的 GWAS 标准结果的公共人工管理数据库  \n\n**http://www.athamap.de/**   \n\n拟南芥的全基因组范围的假定的转录因子结合位点数据库   \n\n**https://www.gabi-kat.de/**   \n\n拟南芥的基于侧翼序列标签（FST）的 T-DNA 插入突变体查找库   \n\n**http://www.plprot.ethz.ch/**   \n\n拟南芥质体蛋白数据库   \n\n**http://seedgenes.org/**\n\n拟南芥发育关键基因数据库  \n\n**http://suba.live/**   \n\n拟南芥蛋白的亚细胞定位数据库   \n\n**http://travadb.org/**  \n\n基于 RNA-seq 分析的拟南芥基因表达谱数据库   \n\n**http://atrm.cbi.pku.edu.cn/**   \n\n拟南芥转录调控图谱数据库\n\n**http://wanglab.sippe.ac.cn/rootatlas/** \n\n拟南芥根部单细胞 RNA 测序数据库  \n\n**http://ipf.sustech.edu.cn/pub/athrna/**\n\n拟南芥 RNA-seq 数据资源，可探索 20,000 多种已发布的拟南芥 RNA-Seq 库  \n\n# 水稻\n\n**http://www.ricedata.cn/index.htm**  \n\n国家水稻数据中心   \n\n**https://omictools.com/bgi-ris-tool**   \n\nBGI-RIS：水稻以及其他谷类作物和植物基因组研究的信息资源和分析平台  \n\n**http://rapdb.dna.affrc.go.jp/**   \n\n粳稻日本晴基因组注释计划   \n\n**http://rice.plantbiology.msu.edu/**   \n\n粳稻日本晴基因组注释计划   \n\n**http://redb.ncpgr.cn/**   \n\n水稻 EST 数据库   \n\n**http://rmd.ncpgr.cn/**   \n\n水稻突变体数据库 \n\n**http://signal.salk.edu/cgi-bin/RiceGE**  \n\n水稻功能基因组表达数据库   \n\n**https://tos.nias.affrc.go.jp/**   \n\n水稻逆转座子 Tos17 插入突变数据库   \n\n**http://urgi.versailles.inra.fr/OryzaTagLine/** \n\n水稻 T-DNA 插入突变数据库   \n\n**http://server.ncgr.ac.cn/ricd/**\n\n籼稻 cDNA 数据库  \n\n**https://shigen.nig.ac.jp/rice/oryzabase/**\n\n水稻遗传学和基因组学数据库  \n\n**https://ricefrend.dna.affrc.go.jp/**\n\n水稻基因共表达数据库  \n\n**https://ricephylogenomics.ucdavis.edu/cellwalls/gt/**   \n\n水稻糖基转移酶数据库   \n\n**http://rice.hzau.edu.cn/rice/**\n\n籼稻基因组的综合生物信息学平台  \n\n**https://www.genome.arizona.edu/cgi-bin/rite/index.cgi**\n\n稻属和假稻属的重复序列和转座因子（TEs）数据库  \n\n**https://ricexpro.dna.affrc.go.jp/index.html**\n\n水稻表达谱数据库  \n\n**http://ricevarmap.ncpgr.cn/v2/**   \n\n水稻基因组变异及其功能注释综合数据库   \n\n**https://snpseek.irri.org/index.zul**   \n\n水稻 SNP 检索数据库   \n\n**http://funricegenes.ncpgr.cn/**   \n\n水稻已克隆基因的数据库   \n\n**http://ibi.zju.edu.cn/ricerelativesgd/**\n\n水稻相关物种基因组数据库  \n\n**http://www.elabcaas.cn/rice/index.html**\n\n水稻专属的表观组学数据库  \n\n# 其他重要植物\n\n**http://www.wheatgenome.org/** \n\n小麦基因组信息数据库   \n\n**https://www.wheatgmap.org/**   \n\n小麦基因图谱和数据共享的综合基因组平台 \n\n**http://wheat.cau.edu.cn/TGT/**  \n\n小麦族同源基因数据库   \n\n**https://wheatproteome.org/**\n\n小麦蛋白质组数据库   \n\n**http://202.194.139.32/**   \n\n小麦组学大数据可视化网站   \n\n**http://wheat.pw.usda.gov**  \n\n小麦族和燕麦属的分子和表型信息数据库\n\n**http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/**\n\n小麦及其祖先的基因组变异数据库  \n\n**http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi**\n\n大麦种质资源和基因组分析数据库  \n\n**https://apex.ipk-gatersleben.de/apex/f?p=284:10::::::** \n\n大麦基因组资源平台  \n\n**http://maize.jcvi.org/**\n\n玉米基因组数据库   \n\n**https://www.maizegdb.org/**\n\n玉米基因组和遗传分析平台   \n\n**https://www.panzea.org/** \n\n玉米及其野生近缘种的基因组工程资源库   \n\n**http://bioinformatics.cau.edu.cn/MCENet/**\n\n玉米多组学基因网络分析平台   \n\n**http://www.zeamap.com/** \n\n适应玉米多组学时代的综合数据库   \n\n**https://soybase.org/**\n\n大豆基因组学和分子生物学数据库  \n\n**http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi**  \n\n大豆蛋白质组数据库   \n\n**http://www.ildis.org/LegumeWeb/** \n\n国际豆科植物数据库和信息服务   \n\n**https://www.cottongen.org/** \n\n棉花基因组学，遗传学和育种数据库   \n\n**http://structuralbiology.cau.edu.cn/GraP/**\n\n棉花功能基因组学数据分析平台  \n\n**http://magen.whu.edu.cn/**  \n\n锦葵科比较基因组数据库   \n\n**http://structuralbiology.cau.edu.cn/gossypium/** \n\n二倍体和多倍体棉花基因网络与功能模块比较分析平台   \n\n**http://ted.bti.cornell.edu/** \n\n番茄功能基因组数据库   \n\n**https://www.inetbio.org/tomatonet/**   \n\n番茄的复杂性状挖掘的全基因组协同网络平台   \n\n**http://ted.bti.cornell.edu/epigenome/** \n\n番茄表观基因组数据库   \n\n**http://tea.solgenomics.net/**  \n\n番茄基因及其产物的高分辨率图谱和搜索工具   \n\n**http://tomexpress.toulouse.inra.fr/** \n\n番茄转录组数据可视化和分析平台   \n\n**https://solgenomics.net/** \n\n茄科物种基因组测序数据库   \n\n**http://tropgenedb.cirad.fr/**   \n\n管理热带作物的遗传和基因组信息的数据库 \n\n**http://medicinalplantgenomics.msu.edu/participants.shtml**  \n\n药用植物基因组和代谢组资源库   \n\n**http://gabipd.org/projects/Pomamo/** \n\n马铃薯生物信息数据库   \n\n**http://vitisgdb.ynau.edu.cn/**\n\n葡萄育种和遗传信息综合数据库  \n\n**http://structuralbiology.cau.edu.cn/sorghum/**\n\n高梁功能基因组学数据库   \n\n**http://structuralbiology.cau.edu.cn/SIFGD/** \n\n谷子功能基因组学数据库   \n\n**http://pepperhub.hzau.edu.cn/pegnm/**\n\n辣椒基因组信息数据库  \n\n**https://www.inetbio.org/wheatnet/**\n\n面包小麦的全基因组规模功能基因网络数据库   \n\n**http://brassicadb.org/brad/** \n\n重要芸苔属作物全基因组规模的遗传数据库 **http://rapeseed.biocloud.net/home**\n\n油菜种质资源遗传信息共享平台网站  \n\n**http://cbi.hzau.edu.cn/bnapus**   \n\n甘蓝型油菜泛基因组数据库   \n\n**http://www.brassicagenome.net/**   \n\n芸苔属作物基因组数据库   \n\n**http://cucurbitgenomics.org/**\n\n葫芦科植物基因组数据库  \n\n**http://coffee-genome.org/**\n\n咖啡基因组学、遗传学、育种数据和分析工具   \n\n**http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp**   \n\n管理热带作物基因组，遗传和表型信息的数据库   \n\n**https://www.rosaceae.org/**  \n\n蔷薇科植物基因组数据库   \n\n# 可用于植物研究的生信工具\n\n**https://bio.tools/**   \n\n生物信息学和生命科学软件工具门户   \n\n**http://abc.gao-lab.org/tools.php**  \n\n北京大学应用生物信息学中心工具库   \n\n**https://github.com/CJ-Chen/TBtools/releases**\n\nTbtools：用于生物大数据交互式分析的集成工具包   \n\n**http://www.cbs.dtu.dk/services/TargetP/** \n\nTargetP：亚细胞定位 / N 端功能肽预测   \n\n**http://bioinformatics.cau.edu.cn/easygo/** \n\nEasyGo：提供一系列待查基因的功能注释以及微阵列探针信息   \n\n**http://smart.embl-heidelberg.de/**  \n\nSMART：蛋白保守结构域预测工具   \n\n**http://biology-assets.anu.edu.au/GenAlEx/Welcome.html** \n\nGenAlEx：群体遗传分析软件   \n\n**https://mapman.gabipd.org/mapman-download/** \n\nMapMan：适用于多组学数据分析的蛋白质分类和注释框架  \n\n**https://genevestigator.com/**\n\nGENEVESTIGATOR: 转录组数据挖掘比对云平台   \n\n**http://skl.scau.edu.cn/**  \n\nCRISPR-GE: 用于 CRISPR 基因组编辑的便捷软件工具包   \n\n**http://skl.scau.edu.cn/dsdecode/**  \n\nDSDecode：基于 Web 的用于对目标突变基因型的序列色谱图进行解码的工具   \n\n**https://github.com/srbehera11/stag-cns**\n\nSTAG-CNS：一种可用于任意数量物种的顺序保守非编码序列发现工具  \n\n**http://www.hi-tom.net/FED**\n\nFED：基因组编辑外源成分检测平台  \n\n**https://m2sb.org/**\n\nGeneCloud：使用语义技术来扫描特定基因列表的基因描述   \n\n**https://mafft.cbrc.jp/alignment/server/**\n\nMAFFT：在线的序列比对工具   \n\n**http://wlab.ethz.ch/protter/start/**  \n\nProtter：在线蛋白结构绘制工具   \n\n**https://www.evolgenius.info/evolview/**\n\nEvolView：用于可视化，注释和管理系统树的网络工具   \n\n**https://itol.embl.de/**  \n\niTOL：用于显示，注释和管理系统发育树的在线工具   \n\n**https://orthovenn2.bioinfotoolkits.net/**\n\nOrthoVenn2：多物种直系同源基因簇比较和注释在线服务工具  \n\n**http://bioinformatics.cau.edu.cn/ARSER/** \n\nARSER: 生物节律表达谱波形分析   \n\n# 植物研究专用工具\n\n**http://www.bar.utoronto.ca/welcome.htm** \n\nBAR：植物生物学分析工具平台  \n\n**http://crispr.hzau.edu.cn/CRISPR2/**  \n\nCRISPR-P: 用于植物基因组编辑的改进的 CRISPR / Cas9 工具包   \n\n**https://www.michalopoulos.net/act/**   \n\nACT：拟南芥共表达分析工具   \n\n**http://orygenesdb.cirad.fr/**\n\nOryGenesDB：用于水稻反向遗传学研究的交互式工具   \n\n**http://signal.salk.edu/cgi-bin/tdnaexpress**\n\nT-DNA Express：拟南芥基因定位工具  \n\n**http://plantgrn.noble.org/pssRNAit/**  \n\npssRNAit: 通过全基因组脱靶基因评估设计有效和特异性的植物 RNAi siRNA   \n\n**http://www.personal.psu.edu/sma3/CLIMtools.html**   \n\nCLIMtools：基于网络的研究拟南芥基因型、表型和环境相关性的交互式数据库工具 \n\n**http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi**  \n\nPlant MetGenMAP：在生化途径的背景下全面挖掘和整合基因表达和代谢物变化的网络工具 \n\n**http://itak.feilab.net/cgi-bin/itak/index.cgi** \n\niTAK：用于识别和分类植物转录因子和蛋白激酶的软件包  \n\n**http://plantpan2.itps.ncku.edu.tw/**  \n\nPlantPAN：检测植物转录因子结合位点的工具  \n\n**http://guoweilong.github.io/SnpHub/**  \n\nSnpHub：用于探索大规模基因组变异数据的统一的网络服务器框架 \n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","source":"_posts/植物科学常用数据库和生物信息学工具.md","raw":"---\ntitle: 植物科学常用数据库和生物信息学工具\ntags: 数据库\ncategories: 数据库\nabbrlink: 321b666b\ndate: 2020-12-17 18:35:07\n---\n\n# 通用数据库\n\n**http://bigd.big.ac.cn/databasecommons/**\n\n国家基因库下属数据库，涵盖各种生物的全面公开可用的数据信息\n\n<!-- more -->\n\n**https://www.ncbi.nlm.nih.gov/**\n\n美国国家生物技术信息中心的生物医学和基因组信息门户网站\n\n**https://www.oxfordjournals.org/nar/database/cat/13** \n\n牛津大学出版社提供的植物科学相关数据库的汇总网站   \n\n**http://abc.gao-lab.org/index.php** \n\n北京大学应用生物信息学中心  \n\n**https://www.expasy.org/**   \n\n瑞士生物信息研究所的生物信息资源门户网站，涵盖各种生物研究数据库和软件工具  \n\n**http://www.bioinfo.wsu.edu/**  \n\n作物基因组、遗传和育种研究的分析计算工具和数据库  \n\n**https://www.agbiodata.org/** \n\n农业生物数据库和相关资源综合平台   \n\n**https://phytozome.jgi.doe.gov/pz/portal.html**\n\n植物比较基因组学资源库  \n\n**https://bioinformatics.psb.ugent.be/plaza/**\n\n植物比较基因组学数据库  \n\n**http://www.plantontology.org** \n\n集成植物基因组学、表型和遗传学数据的共享型平台   \n\n**http://harvest.ucr.edu/**  \n\n作物 EST 序列及相关分子信息数据平台   \n\n**http://www.gramene.org/**  \n\n用于作物和模式物种的比较功能基因组学分析的综合平台   \n\n**https://www.uniprot.org/**  \n\n蛋白质序列和功能信息资源数据库和分析平台 \n\n**http://urgi.versailles.inra.fr/**  \n\n针对有农学意义的植物研究生物信息平台   \n\n**http://systemsbiology.cau.edu.cn/agriGOv2/index.php#**  \n\nGO 分析工具包和数据库综合平台   \n\n**http://www.bioinformatics.nl/AraQTL**  \n\n基于 Web 的用于表达定量性状位点（eQTL）研究的工作台和数据库   \n\n**http://www.plantgdb.org/** \n\n植物基因组序列数据库   \n\n**https://mpss.danforthcenter.org/index.php**  \n\n二代测序（NGS）数据库，包括植物的 RNA 和基因组信息资源   \n\n**http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp**  \n\n植物基因组数据库   \n\n**http://systemsbiology.cau.edu.cn/chromstates/**  \n\n植物染色质状态信息数据库   \n\n**http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home**  \n\n植物 snoRNA 基因数据库   \n\n**http://bioinformatics.psb.ugent.be/webtools/plantcare/html/** \n\n植物顺式调控元件、增强子和抑制子数据库   \n\n**http://metacrop.ipk-gatersleben.de**  \n\n作物代谢途径数据库   \n\n**http://podb.nibb.ac.jp/Organellome**  \n\n植物器官研究数据库   \n\n**http://www.drastic.org.uk**  \n\n植物细胞的信号转导分析数据库   \n\n**http://www.pathoplant.de**  \n\n植物 - 病原体相互作用的信号转导相关物质成分数据库   \n\n**http://planttfdb.cbi.pku.edu.cn/**\n\n植物转录因子数据库  \n\n**http://plntfdb.bio.uni-potsdam.de/v3.0/**\n\n植物转录因子数据库  \n\n**http://psorf.whu.edu.cn/**  \n\n植物小型开放阅读框架（sORF）数据资源库 \n\n**http://uorflight.whu.edu.cn/**  \n\n植物 uORF 翻译调控相关数据库   \n\n**https://apex.ipk-gatersleben.de/apex/f?p=116:1**  \n\n作物 EST 数据库   \n\n**https://www.dna.affrc.go.jp/PLACE/?action=newplace**  \n\n植物顺式调控 DNA 元件数据库   \n\n**https://webapps.plantenergy.uwa.edu.au/applications/mpic/** \n\n植物线粒体蛋白运输元件数据库  \n\n**https://bioinformatics.cse.unr.edu/fat-ptm** \n\n用于分析蛋白质和代谢途径的翻译后修饰数据库 \n\n**http://sundarlab.ucdavis.edu/smrnas/**\n\n谷物特别是水稻和玉米的小 RNA 数据库  \n\n**http://ppdb.tc.cornell.edu/default.aspx** \n\n拟南芥和玉米蛋白质组数据库  \n\n**http://atted.jp/**   \n\n基于互秩指数统计特性的植物共表达数据库   \n\n**http://ibi.zju.edu.cn/plantcircbase/**   \n\n植物 Circular RNAs 数据库   \n\n**http://plantcrispr.org/cgi-bin/crispr/index.cgi**  \n\n植物基因编辑数据库，收集 CRISPR / Cas9 技术产生植物的信息   \n\n**https://www.try-db.org/TryWeb/Home.php**\n\n植物性状全球数据库   \n\n**http://chibba.agtec.uga.edu/duplication/**\n\n植物基因和基因组加倍的数据库  \n\n**http://www.mirbase.org/**  \n\n生物 microRNA 数据库   \n\n**http://bioinformatics.cau.edu.cn/PMRD/**  \n\n植物 microRNA 数据库   \n\n**http://bis.zju.edu.cn/pmirkb/**  \n\n模式植物拟南芥和水稻的 microRNA 数据库   \n\n**http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl**   \n\n植物相关微生物的多基因座序列分型和分析数据库及网站   \n\n**http://structuralbiology.cau.edu.cn/PlantGSEA**   \n\n植物基因集富集分析平台   \n\n**http://structuralbiology.cau.edu.cn/PNRD** \n\n植物非编码 RNA 数据库   \n\n**http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB**   \n\n植物长非编码 RNA 数据库   \n\n**http://prgdb.org/prgdb/**   \n\n植物抗病 R 基因数据库   \n\n**https://www.inetbio.org/aranet/**   \n\n拟南芥和一些非模式植物的功能基因网络改进数据库 \n\n**http://greenc.sciencedesigners.com/wiki/Main_Page**\n\n基于 Wiki 的植物长非编码 RNAs 数据库   \n\n**http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi**   \n\n植物启动子数据库   \n\n**http://www.pmiren.com/**   \n\n植物 miRNA 综合数据库   \n\n**http://www.mbkbase.org/**  \n\n水稻、小麦和大豆的分子育种资源库   \n\n**http://epigenome.genetics.uga.edu/PlantMethylome/**  \n\n植物 DNA 甲基化数据库   \n\n**http://bioinfo.sibs.ac.cn/plant-regulomics** \n\n从植物多组学数据中检索获取上游调控因子的数据驱动平台  \n\n**http://autosnpdb.appliedbioinformatics.com.au/** \n\n植物 SNP 检索数据库  \n\n**http://www.p3db.org/**   \n\n植物蛋白磷酸化数据库   \n\n**http://phytamp.pfba-lab-tun.org/main.php**  \n\n植物天然抗菌肽数据库   \n\n**http://bis.zju.edu.cn/pcernadb/index.jsp**\n\n植物竞争性内源 RNA 数据库  \n\n**http://www.byanbioinfo.org/plamom/**   \n\n用于检索，分析和预测植物移动大分子包括 RNA 和蛋白质的数据库平台   \n\n**https://cvalues.science.kew.org/**   \n\n用于获取和比较植物基因组大小的数据库   \n\n**https://plantreactome.gramene.org/index.php?lang=en** \n\n植物代谢和调控通路数据库   \n\n**http://plantpis.ba.itb.cnr.it/**  \n\n植物蛋白酶抑制剂数据库   \n\n**http://plantdhs.org/**   \n\n植物 DNase I 超敏位点数据库   \n\n**http://bis.zju.edu.cn/pnatdb/**   \n\n植物天然反义转录本（Natural Antisense Transcripts）数据库   \n\n**http://linux1.softberry.com/berry.phtml?topic=plantprom&group=data&subgroup=plantprom**  \n\n植物启动子数据库   \n\n**http://www.sesame-bioinfo.org/PMDBase/**\n\n用于研究植物物种和基因组进化中的微卫星 DNA 和标记开发的数据库  \n\n**http://pogs.uoregon.edu/#/**  \n\n旨在促进有关植物基因功能和基因模型的跨物种推断的关系数据库   \n\n**http://plants.proteincomplexes.org/**  \n\n植物蛋白复合物组分以及蛋白间稳定互作图谱数据库   \n\n# 拟南芥\n\n**www.arabidopsis.org** \n\n最为常用的拟南芥遗传和分子生物学数据资源库   \n\n**http://rarge.gsc.riken.jp/**   \n\n拟南芥 cDNA、突变体和微阵列数据库   \n\n**https://1001genomes.org/**  \n\n1001 Genomes：拟南芥遗传变异目录  \n\n**https://aragwas.1001genomes.org/#/** \n\nAraGWAS：用于拟南芥的 GWAS 标准结果的公共人工管理数据库  \n\n**http://www.athamap.de/**   \n\n拟南芥的全基因组范围的假定的转录因子结合位点数据库   \n\n**https://www.gabi-kat.de/**   \n\n拟南芥的基于侧翼序列标签（FST）的 T-DNA 插入突变体查找库   \n\n**http://www.plprot.ethz.ch/**   \n\n拟南芥质体蛋白数据库   \n\n**http://seedgenes.org/**\n\n拟南芥发育关键基因数据库  \n\n**http://suba.live/**   \n\n拟南芥蛋白的亚细胞定位数据库   \n\n**http://travadb.org/**  \n\n基于 RNA-seq 分析的拟南芥基因表达谱数据库   \n\n**http://atrm.cbi.pku.edu.cn/**   \n\n拟南芥转录调控图谱数据库\n\n**http://wanglab.sippe.ac.cn/rootatlas/** \n\n拟南芥根部单细胞 RNA 测序数据库  \n\n**http://ipf.sustech.edu.cn/pub/athrna/**\n\n拟南芥 RNA-seq 数据资源，可探索 20,000 多种已发布的拟南芥 RNA-Seq 库  \n\n# 水稻\n\n**http://www.ricedata.cn/index.htm**  \n\n国家水稻数据中心   \n\n**https://omictools.com/bgi-ris-tool**   \n\nBGI-RIS：水稻以及其他谷类作物和植物基因组研究的信息资源和分析平台  \n\n**http://rapdb.dna.affrc.go.jp/**   \n\n粳稻日本晴基因组注释计划   \n\n**http://rice.plantbiology.msu.edu/**   \n\n粳稻日本晴基因组注释计划   \n\n**http://redb.ncpgr.cn/**   \n\n水稻 EST 数据库   \n\n**http://rmd.ncpgr.cn/**   \n\n水稻突变体数据库 \n\n**http://signal.salk.edu/cgi-bin/RiceGE**  \n\n水稻功能基因组表达数据库   \n\n**https://tos.nias.affrc.go.jp/**   \n\n水稻逆转座子 Tos17 插入突变数据库   \n\n**http://urgi.versailles.inra.fr/OryzaTagLine/** \n\n水稻 T-DNA 插入突变数据库   \n\n**http://server.ncgr.ac.cn/ricd/**\n\n籼稻 cDNA 数据库  \n\n**https://shigen.nig.ac.jp/rice/oryzabase/**\n\n水稻遗传学和基因组学数据库  \n\n**https://ricefrend.dna.affrc.go.jp/**\n\n水稻基因共表达数据库  \n\n**https://ricephylogenomics.ucdavis.edu/cellwalls/gt/**   \n\n水稻糖基转移酶数据库   \n\n**http://rice.hzau.edu.cn/rice/**\n\n籼稻基因组的综合生物信息学平台  \n\n**https://www.genome.arizona.edu/cgi-bin/rite/index.cgi**\n\n稻属和假稻属的重复序列和转座因子（TEs）数据库  \n\n**https://ricexpro.dna.affrc.go.jp/index.html**\n\n水稻表达谱数据库  \n\n**http://ricevarmap.ncpgr.cn/v2/**   \n\n水稻基因组变异及其功能注释综合数据库   \n\n**https://snpseek.irri.org/index.zul**   \n\n水稻 SNP 检索数据库   \n\n**http://funricegenes.ncpgr.cn/**   \n\n水稻已克隆基因的数据库   \n\n**http://ibi.zju.edu.cn/ricerelativesgd/**\n\n水稻相关物种基因组数据库  \n\n**http://www.elabcaas.cn/rice/index.html**\n\n水稻专属的表观组学数据库  \n\n# 其他重要植物\n\n**http://www.wheatgenome.org/** \n\n小麦基因组信息数据库   \n\n**https://www.wheatgmap.org/**   \n\n小麦基因图谱和数据共享的综合基因组平台 \n\n**http://wheat.cau.edu.cn/TGT/**  \n\n小麦族同源基因数据库   \n\n**https://wheatproteome.org/**\n\n小麦蛋白质组数据库   \n\n**http://202.194.139.32/**   \n\n小麦组学大数据可视化网站   \n\n**http://wheat.pw.usda.gov**  \n\n小麦族和燕麦属的分子和表型信息数据库\n\n**http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/**\n\n小麦及其祖先的基因组变异数据库  \n\n**http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi**\n\n大麦种质资源和基因组分析数据库  \n\n**https://apex.ipk-gatersleben.de/apex/f?p=284:10::::::** \n\n大麦基因组资源平台  \n\n**http://maize.jcvi.org/**\n\n玉米基因组数据库   \n\n**https://www.maizegdb.org/**\n\n玉米基因组和遗传分析平台   \n\n**https://www.panzea.org/** \n\n玉米及其野生近缘种的基因组工程资源库   \n\n**http://bioinformatics.cau.edu.cn/MCENet/**\n\n玉米多组学基因网络分析平台   \n\n**http://www.zeamap.com/** \n\n适应玉米多组学时代的综合数据库   \n\n**https://soybase.org/**\n\n大豆基因组学和分子生物学数据库  \n\n**http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi**  \n\n大豆蛋白质组数据库   \n\n**http://www.ildis.org/LegumeWeb/** \n\n国际豆科植物数据库和信息服务   \n\n**https://www.cottongen.org/** \n\n棉花基因组学，遗传学和育种数据库   \n\n**http://structuralbiology.cau.edu.cn/GraP/**\n\n棉花功能基因组学数据分析平台  \n\n**http://magen.whu.edu.cn/**  \n\n锦葵科比较基因组数据库   \n\n**http://structuralbiology.cau.edu.cn/gossypium/** \n\n二倍体和多倍体棉花基因网络与功能模块比较分析平台   \n\n**http://ted.bti.cornell.edu/** \n\n番茄功能基因组数据库   \n\n**https://www.inetbio.org/tomatonet/**   \n\n番茄的复杂性状挖掘的全基因组协同网络平台   \n\n**http://ted.bti.cornell.edu/epigenome/** \n\n番茄表观基因组数据库   \n\n**http://tea.solgenomics.net/**  \n\n番茄基因及其产物的高分辨率图谱和搜索工具   \n\n**http://tomexpress.toulouse.inra.fr/** \n\n番茄转录组数据可视化和分析平台   \n\n**https://solgenomics.net/** \n\n茄科物种基因组测序数据库   \n\n**http://tropgenedb.cirad.fr/**   \n\n管理热带作物的遗传和基因组信息的数据库 \n\n**http://medicinalplantgenomics.msu.edu/participants.shtml**  \n\n药用植物基因组和代谢组资源库   \n\n**http://gabipd.org/projects/Pomamo/** \n\n马铃薯生物信息数据库   \n\n**http://vitisgdb.ynau.edu.cn/**\n\n葡萄育种和遗传信息综合数据库  \n\n**http://structuralbiology.cau.edu.cn/sorghum/**\n\n高梁功能基因组学数据库   \n\n**http://structuralbiology.cau.edu.cn/SIFGD/** \n\n谷子功能基因组学数据库   \n\n**http://pepperhub.hzau.edu.cn/pegnm/**\n\n辣椒基因组信息数据库  \n\n**https://www.inetbio.org/wheatnet/**\n\n面包小麦的全基因组规模功能基因网络数据库   \n\n**http://brassicadb.org/brad/** \n\n重要芸苔属作物全基因组规模的遗传数据库 **http://rapeseed.biocloud.net/home**\n\n油菜种质资源遗传信息共享平台网站  \n\n**http://cbi.hzau.edu.cn/bnapus**   \n\n甘蓝型油菜泛基因组数据库   \n\n**http://www.brassicagenome.net/**   \n\n芸苔属作物基因组数据库   \n\n**http://cucurbitgenomics.org/**\n\n葫芦科植物基因组数据库  \n\n**http://coffee-genome.org/**\n\n咖啡基因组学、遗传学、育种数据和分析工具   \n\n**http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp**   \n\n管理热带作物基因组，遗传和表型信息的数据库   \n\n**https://www.rosaceae.org/**  \n\n蔷薇科植物基因组数据库   \n\n# 可用于植物研究的生信工具\n\n**https://bio.tools/**   \n\n生物信息学和生命科学软件工具门户   \n\n**http://abc.gao-lab.org/tools.php**  \n\n北京大学应用生物信息学中心工具库   \n\n**https://github.com/CJ-Chen/TBtools/releases**\n\nTbtools：用于生物大数据交互式分析的集成工具包   \n\n**http://www.cbs.dtu.dk/services/TargetP/** \n\nTargetP：亚细胞定位 / N 端功能肽预测   \n\n**http://bioinformatics.cau.edu.cn/easygo/** \n\nEasyGo：提供一系列待查基因的功能注释以及微阵列探针信息   \n\n**http://smart.embl-heidelberg.de/**  \n\nSMART：蛋白保守结构域预测工具   \n\n**http://biology-assets.anu.edu.au/GenAlEx/Welcome.html** \n\nGenAlEx：群体遗传分析软件   \n\n**https://mapman.gabipd.org/mapman-download/** \n\nMapMan：适用于多组学数据分析的蛋白质分类和注释框架  \n\n**https://genevestigator.com/**\n\nGENEVESTIGATOR: 转录组数据挖掘比对云平台   \n\n**http://skl.scau.edu.cn/**  \n\nCRISPR-GE: 用于 CRISPR 基因组编辑的便捷软件工具包   \n\n**http://skl.scau.edu.cn/dsdecode/**  \n\nDSDecode：基于 Web 的用于对目标突变基因型的序列色谱图进行解码的工具   \n\n**https://github.com/srbehera11/stag-cns**\n\nSTAG-CNS：一种可用于任意数量物种的顺序保守非编码序列发现工具  \n\n**http://www.hi-tom.net/FED**\n\nFED：基因组编辑外源成分检测平台  \n\n**https://m2sb.org/**\n\nGeneCloud：使用语义技术来扫描特定基因列表的基因描述   \n\n**https://mafft.cbrc.jp/alignment/server/**\n\nMAFFT：在线的序列比对工具   \n\n**http://wlab.ethz.ch/protter/start/**  \n\nProtter：在线蛋白结构绘制工具   \n\n**https://www.evolgenius.info/evolview/**\n\nEvolView：用于可视化，注释和管理系统树的网络工具   \n\n**https://itol.embl.de/**  \n\niTOL：用于显示，注释和管理系统发育树的在线工具   \n\n**https://orthovenn2.bioinfotoolkits.net/**\n\nOrthoVenn2：多物种直系同源基因簇比较和注释在线服务工具  \n\n**http://bioinformatics.cau.edu.cn/ARSER/** \n\nARSER: 生物节律表达谱波形分析   \n\n# 植物研究专用工具\n\n**http://www.bar.utoronto.ca/welcome.htm** \n\nBAR：植物生物学分析工具平台  \n\n**http://crispr.hzau.edu.cn/CRISPR2/**  \n\nCRISPR-P: 用于植物基因组编辑的改进的 CRISPR / Cas9 工具包   \n\n**https://www.michalopoulos.net/act/**   \n\nACT：拟南芥共表达分析工具   \n\n**http://orygenesdb.cirad.fr/**\n\nOryGenesDB：用于水稻反向遗传学研究的交互式工具   \n\n**http://signal.salk.edu/cgi-bin/tdnaexpress**\n\nT-DNA Express：拟南芥基因定位工具  \n\n**http://plantgrn.noble.org/pssRNAit/**  \n\npssRNAit: 通过全基因组脱靶基因评估设计有效和特异性的植物 RNAi siRNA   \n\n**http://www.personal.psu.edu/sma3/CLIMtools.html**   \n\nCLIMtools：基于网络的研究拟南芥基因型、表型和环境相关性的交互式数据库工具 \n\n**http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi**  \n\nPlant MetGenMAP：在生化途径的背景下全面挖掘和整合基因表达和代谢物变化的网络工具 \n\n**http://itak.feilab.net/cgi-bin/itak/index.cgi** \n\niTAK：用于识别和分类植物转录因子和蛋白激酶的软件包  \n\n**http://plantpan2.itps.ncku.edu.tw/**  \n\nPlantPAN：检测植物转录因子结合位点的工具  \n\n**http://guoweilong.github.io/SnpHub/**  \n\nSnpHub：用于探索大规模基因组变异数据的统一的网络服务器框架 \n\n---\n\n>交流请联系：\n>\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n\n","slug":"植物科学常用数据库和生物信息学工具","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmq006br0g07fp876zr","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"通用数据库\"><a href=\"#通用数据库\" class=\"headerlink\" title=\"通用数据库\"></a>通用数据库</h1><p><strong><a href=\"http://bigd.big.ac.cn/databasecommons/\">http://bigd.big.ac.cn/databasecommons/</a></strong></p>\n<p>国家基因库下属数据库，涵盖各种生物的全面公开可用的数据信息</p>\n<span id=\"more\"></span>\n\n<p><strong><a href=\"https://www.ncbi.nlm.nih.gov/\">https://www.ncbi.nlm.nih.gov/</a></strong></p>\n<p>美国国家生物技术信息中心的生物医学和基因组信息门户网站</p>\n<p><strong><a href=\"https://www.oxfordjournals.org/nar/database/cat/13\">https://www.oxfordjournals.org/nar/database/cat/13</a></strong> </p>\n<p>牛津大学出版社提供的植物科学相关数据库的汇总网站   </p>\n<p><strong><a href=\"http://abc.gao-lab.org/index.php\">http://abc.gao-lab.org/index.php</a></strong> </p>\n<p>北京大学应用生物信息学中心  </p>\n<p><strong><a href=\"https://www.expasy.org/\">https://www.expasy.org/</a></strong>   </p>\n<p>瑞士生物信息研究所的生物信息资源门户网站，涵盖各种生物研究数据库和软件工具  </p>\n<p><strong><a href=\"http://www.bioinfo.wsu.edu/\">http://www.bioinfo.wsu.edu/</a></strong>  </p>\n<p>作物基因组、遗传和育种研究的分析计算工具和数据库  </p>\n<p><strong><a href=\"https://www.agbiodata.org/\">https://www.agbiodata.org/</a></strong> </p>\n<p>农业生物数据库和相关资源综合平台   </p>\n<p><strong><a href=\"https://phytozome.jgi.doe.gov/pz/portal.html\">https://phytozome.jgi.doe.gov/pz/portal.html</a></strong></p>\n<p>植物比较基因组学资源库  </p>\n<p><strong><a href=\"https://bioinformatics.psb.ugent.be/plaza/\">https://bioinformatics.psb.ugent.be/plaza/</a></strong></p>\n<p>植物比较基因组学数据库  </p>\n<p><strong><a href=\"http://www.plantontology.org/\">http://www.plantontology.org</a></strong> </p>\n<p>集成植物基因组学、表型和遗传学数据的共享型平台   </p>\n<p><strong><a href=\"http://harvest.ucr.edu/\">http://harvest.ucr.edu/</a></strong>  </p>\n<p>作物 EST 序列及相关分子信息数据平台   </p>\n<p><strong><a href=\"http://www.gramene.org/\">http://www.gramene.org/</a></strong>  </p>\n<p>用于作物和模式物种的比较功能基因组学分析的综合平台   </p>\n<p><strong><a href=\"https://www.uniprot.org/\">https://www.uniprot.org/</a></strong>  </p>\n<p>蛋白质序列和功能信息资源数据库和分析平台 </p>\n<p><strong><a href=\"http://urgi.versailles.inra.fr/\">http://urgi.versailles.inra.fr/</a></strong>  </p>\n<p>针对有农学意义的植物研究生物信息平台   </p>\n<p><strong><a href=\"http://systemsbiology.cau.edu.cn/agriGOv2/index.php#\">http://systemsbiology.cau.edu.cn/agriGOv2/index.php#</a></strong>  </p>\n<p>GO 分析工具包和数据库综合平台   </p>\n<p><strong><a href=\"http://www.bioinformatics.nl/AraQTL\">http://www.bioinformatics.nl/AraQTL</a></strong>  </p>\n<p>基于 Web 的用于表达定量性状位点（eQTL）研究的工作台和数据库   </p>\n<p><strong><a href=\"http://www.plantgdb.org/\">http://www.plantgdb.org/</a></strong> </p>\n<p>植物基因组序列数据库   </p>\n<p><strong><a href=\"https://mpss.danforthcenter.org/index.php\">https://mpss.danforthcenter.org/index.php</a></strong>  </p>\n<p>二代测序（NGS）数据库，包括植物的 RNA 和基因组信息资源   </p>\n<p><strong><a href=\"http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp\">http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp</a></strong>  </p>\n<p>植物基因组数据库   </p>\n<p><strong><a href=\"http://systemsbiology.cau.edu.cn/chromstates/\">http://systemsbiology.cau.edu.cn/chromstates/</a></strong>  </p>\n<p>植物染色质状态信息数据库   </p>\n<p><strong><a href=\"http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home\">http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home</a></strong>  </p>\n<p>植物 snoRNA 基因数据库   </p>\n<p><strong><a href=\"http://bioinformatics.psb.ugent.be/webtools/plantcare/html/\">http://bioinformatics.psb.ugent.be/webtools/plantcare/html/</a></strong> </p>\n<p>植物顺式调控元件、增强子和抑制子数据库   </p>\n<p><strong><a href=\"http://metacrop.ipk-gatersleben.de/\">http://metacrop.ipk-gatersleben.de</a></strong>  </p>\n<p>作物代谢途径数据库   </p>\n<p><strong><a href=\"http://podb.nibb.ac.jp/Organellome\">http://podb.nibb.ac.jp/Organellome</a></strong>  </p>\n<p>植物器官研究数据库   </p>\n<p><strong><a href=\"http://www.drastic.org.uk/\">http://www.drastic.org.uk</a></strong>  </p>\n<p>植物细胞的信号转导分析数据库   </p>\n<p><strong><a href=\"http://www.pathoplant.de/\">http://www.pathoplant.de</a></strong>  </p>\n<p>植物 - 病原体相互作用的信号转导相关物质成分数据库   </p>\n<p><strong><a href=\"http://planttfdb.cbi.pku.edu.cn/\">http://planttfdb.cbi.pku.edu.cn/</a></strong></p>\n<p>植物转录因子数据库  </p>\n<p><strong><a href=\"http://plntfdb.bio.uni-potsdam.de/v3.0/\">http://plntfdb.bio.uni-potsdam.de/v3.0/</a></strong></p>\n<p>植物转录因子数据库  </p>\n<p><strong><a href=\"http://psorf.whu.edu.cn/\">http://psorf.whu.edu.cn/</a></strong>  </p>\n<p>植物小型开放阅读框架（sORF）数据资源库 </p>\n<p><strong><a href=\"http://uorflight.whu.edu.cn/\">http://uorflight.whu.edu.cn/</a></strong>  </p>\n<p>植物 uORF 翻译调控相关数据库   </p>\n<p><strong><a href=\"https://apex.ipk-gatersleben.de/apex/f?p=116:1\">https://apex.ipk-gatersleben.de/apex/f?p=116:1</a></strong>  </p>\n<p>作物 EST 数据库   </p>\n<p><strong><a href=\"https://www.dna.affrc.go.jp/PLACE/?action=newplace\">https://www.dna.affrc.go.jp/PLACE/?action=newplace</a></strong>  </p>\n<p>植物顺式调控 DNA 元件数据库   </p>\n<p><strong><a href=\"https://webapps.plantenergy.uwa.edu.au/applications/mpic/\">https://webapps.plantenergy.uwa.edu.au/applications/mpic/</a></strong> </p>\n<p>植物线粒体蛋白运输元件数据库  </p>\n<p><strong><a href=\"https://bioinformatics.cse.unr.edu/fat-ptm\">https://bioinformatics.cse.unr.edu/fat-ptm</a></strong> </p>\n<p>用于分析蛋白质和代谢途径的翻译后修饰数据库 </p>\n<p><strong><a href=\"http://sundarlab.ucdavis.edu/smrnas/\">http://sundarlab.ucdavis.edu/smrnas/</a></strong></p>\n<p>谷物特别是水稻和玉米的小 RNA 数据库  </p>\n<p><strong><a href=\"http://ppdb.tc.cornell.edu/default.aspx\">http://ppdb.tc.cornell.edu/default.aspx</a></strong> </p>\n<p>拟南芥和玉米蛋白质组数据库  </p>\n<p><strong><a href=\"http://atted.jp/\">http://atted.jp/</a></strong>   </p>\n<p>基于互秩指数统计特性的植物共表达数据库   </p>\n<p><strong><a href=\"http://ibi.zju.edu.cn/plantcircbase/\">http://ibi.zju.edu.cn/plantcircbase/</a></strong>   </p>\n<p>植物 Circular RNAs 数据库   </p>\n<p><strong><a href=\"http://plantcrispr.org/cgi-bin/crispr/index.cgi\">http://plantcrispr.org/cgi-bin/crispr/index.cgi</a></strong>  </p>\n<p>植物基因编辑数据库，收集 CRISPR / Cas9 技术产生植物的信息   </p>\n<p><strong><a href=\"https://www.try-db.org/TryWeb/Home.php\">https://www.try-db.org/TryWeb/Home.php</a></strong></p>\n<p>植物性状全球数据库   </p>\n<p><strong><a href=\"http://chibba.agtec.uga.edu/duplication/\">http://chibba.agtec.uga.edu/duplication/</a></strong></p>\n<p>植物基因和基因组加倍的数据库  </p>\n<p><strong><a href=\"http://www.mirbase.org/\">http://www.mirbase.org/</a></strong>  </p>\n<p>生物 microRNA 数据库   </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/PMRD/\">http://bioinformatics.cau.edu.cn/PMRD/</a></strong>  </p>\n<p>植物 microRNA 数据库   </p>\n<p><strong><a href=\"http://bis.zju.edu.cn/pmirkb/\">http://bis.zju.edu.cn/pmirkb/</a></strong>  </p>\n<p>模式植物拟南芥和水稻的 microRNA 数据库   </p>\n<p><strong><a href=\"http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl\">http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl</a></strong>   </p>\n<p>植物相关微生物的多基因座序列分型和分析数据库及网站   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/PlantGSEA\">http://structuralbiology.cau.edu.cn/PlantGSEA</a></strong>   </p>\n<p>植物基因集富集分析平台   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/PNRD\">http://structuralbiology.cau.edu.cn/PNRD</a></strong> </p>\n<p>植物非编码 RNA 数据库   </p>\n<p><strong><a href=\"http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB\">http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB</a></strong>   </p>\n<p>植物长非编码 RNA 数据库   </p>\n<p><strong><a href=\"http://prgdb.org/prgdb/\">http://prgdb.org/prgdb/</a></strong>   </p>\n<p>植物抗病 R 基因数据库   </p>\n<p><strong><a href=\"https://www.inetbio.org/aranet/\">https://www.inetbio.org/aranet/</a></strong>   </p>\n<p>拟南芥和一些非模式植物的功能基因网络改进数据库 </p>\n<p><strong><a href=\"http://greenc.sciencedesigners.com/wiki/Main_Page\">http://greenc.sciencedesigners.com/wiki/Main_Page</a></strong></p>\n<p>基于 Wiki 的植物长非编码 RNAs 数据库   </p>\n<p><strong><a href=\"http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi\">http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi</a></strong>   </p>\n<p>植物启动子数据库   </p>\n<p><strong><a href=\"http://www.pmiren.com/\">http://www.pmiren.com/</a></strong>   </p>\n<p>植物 miRNA 综合数据库   </p>\n<p><strong><a href=\"http://www.mbkbase.org/\">http://www.mbkbase.org/</a></strong>  </p>\n<p>水稻、小麦和大豆的分子育种资源库   </p>\n<p><strong><a href=\"http://epigenome.genetics.uga.edu/PlantMethylome/\">http://epigenome.genetics.uga.edu/PlantMethylome/</a></strong>  </p>\n<p>植物 DNA 甲基化数据库   </p>\n<p><strong><a href=\"http://bioinfo.sibs.ac.cn/plant-regulomics\">http://bioinfo.sibs.ac.cn/plant-regulomics</a></strong> </p>\n<p>从植物多组学数据中检索获取上游调控因子的数据驱动平台  </p>\n<p><strong><a href=\"http://autosnpdb.appliedbioinformatics.com.au/\">http://autosnpdb.appliedbioinformatics.com.au/</a></strong> </p>\n<p>植物 SNP 检索数据库  </p>\n<p><strong><a href=\"http://www.p3db.org/\">http://www.p3db.org/</a></strong>   </p>\n<p>植物蛋白磷酸化数据库   </p>\n<p><strong><a href=\"http://phytamp.pfba-lab-tun.org/main.php\">http://phytamp.pfba-lab-tun.org/main.php</a></strong>  </p>\n<p>植物天然抗菌肽数据库   </p>\n<p><strong><a href=\"http://bis.zju.edu.cn/pcernadb/index.jsp\">http://bis.zju.edu.cn/pcernadb/index.jsp</a></strong></p>\n<p>植物竞争性内源 RNA 数据库  </p>\n<p><strong><a href=\"http://www.byanbioinfo.org/plamom/\">http://www.byanbioinfo.org/plamom/</a></strong>   </p>\n<p>用于检索，分析和预测植物移动大分子包括 RNA 和蛋白质的数据库平台   </p>\n<p><strong><a href=\"https://cvalues.science.kew.org/\">https://cvalues.science.kew.org/</a></strong>   </p>\n<p>用于获取和比较植物基因组大小的数据库   </p>\n<p><strong><a href=\"https://plantreactome.gramene.org/index.php?lang=en\">https://plantreactome.gramene.org/index.php?lang=en</a></strong> </p>\n<p>植物代谢和调控通路数据库   </p>\n<p><strong><a href=\"http://plantpis.ba.itb.cnr.it/\">http://plantpis.ba.itb.cnr.it/</a></strong>  </p>\n<p>植物蛋白酶抑制剂数据库   </p>\n<p><strong><a href=\"http://plantdhs.org/\">http://plantdhs.org/</a></strong>   </p>\n<p>植物 DNase I 超敏位点数据库   </p>\n<p><strong><a href=\"http://bis.zju.edu.cn/pnatdb/\">http://bis.zju.edu.cn/pnatdb/</a></strong>   </p>\n<p>植物天然反义转录本（Natural Antisense Transcripts）数据库   </p>\n<p><strong><a href=\"http://linux1.softberry.com/berry.phtml?topic=plantprom&amp;group=data&amp;subgroup=plantprom\">http://linux1.softberry.com/berry.phtml?topic=plantprom&amp;group=data&amp;subgroup=plantprom</a></strong>  </p>\n<p>植物启动子数据库   </p>\n<p><strong><a href=\"http://www.sesame-bioinfo.org/PMDBase/\">http://www.sesame-bioinfo.org/PMDBase/</a></strong></p>\n<p>用于研究植物物种和基因组进化中的微卫星 DNA 和标记开发的数据库  </p>\n<p><strong><a href=\"http://pogs.uoregon.edu/#/\">http://pogs.uoregon.edu/#/</a></strong>  </p>\n<p>旨在促进有关植物基因功能和基因模型的跨物种推断的关系数据库   </p>\n<p><strong><a href=\"http://plants.proteincomplexes.org/\">http://plants.proteincomplexes.org/</a></strong>  </p>\n<p>植物蛋白复合物组分以及蛋白间稳定互作图谱数据库   </p>\n<h1 id=\"拟南芥\"><a href=\"#拟南芥\" class=\"headerlink\" title=\"拟南芥\"></a>拟南芥</h1><p><strong><a href=\"http://www.arabidopsis.org/\">www.arabidopsis.org</a></strong> </p>\n<p>最为常用的拟南芥遗传和分子生物学数据资源库   </p>\n<p><strong><a href=\"http://rarge.gsc.riken.jp/\">http://rarge.gsc.riken.jp/</a></strong>   </p>\n<p>拟南芥 cDNA、突变体和微阵列数据库   </p>\n<p><strong><a href=\"https://1001genomes.org/\">https://1001genomes.org/</a></strong>  </p>\n<p>1001 Genomes：拟南芥遗传变异目录  </p>\n<p><strong><a href=\"https://aragwas.1001genomes.org/#/\">https://aragwas.1001genomes.org/#/</a></strong> </p>\n<p>AraGWAS：用于拟南芥的 GWAS 标准结果的公共人工管理数据库  </p>\n<p><strong><a href=\"http://www.athamap.de/\">http://www.athamap.de/</a></strong>   </p>\n<p>拟南芥的全基因组范围的假定的转录因子结合位点数据库   </p>\n<p><strong><a href=\"https://www.gabi-kat.de/\">https://www.gabi-kat.de/</a></strong>   </p>\n<p>拟南芥的基于侧翼序列标签（FST）的 T-DNA 插入突变体查找库   </p>\n<p><strong><a href=\"http://www.plprot.ethz.ch/\">http://www.plprot.ethz.ch/</a></strong>   </p>\n<p>拟南芥质体蛋白数据库   </p>\n<p><strong><a href=\"http://seedgenes.org/\">http://seedgenes.org/</a></strong></p>\n<p>拟南芥发育关键基因数据库  </p>\n<p><strong><a href=\"http://suba.live/\">http://suba.live/</a></strong>   </p>\n<p>拟南芥蛋白的亚细胞定位数据库   </p>\n<p><strong><a href=\"http://travadb.org/\">http://travadb.org/</a></strong>  </p>\n<p>基于 RNA-seq 分析的拟南芥基因表达谱数据库   </p>\n<p><strong><a href=\"http://atrm.cbi.pku.edu.cn/\">http://atrm.cbi.pku.edu.cn/</a></strong>   </p>\n<p>拟南芥转录调控图谱数据库</p>\n<p><strong><a href=\"http://wanglab.sippe.ac.cn/rootatlas/\">http://wanglab.sippe.ac.cn/rootatlas/</a></strong> </p>\n<p>拟南芥根部单细胞 RNA 测序数据库  </p>\n<p><strong><a href=\"http://ipf.sustech.edu.cn/pub/athrna/\">http://ipf.sustech.edu.cn/pub/athrna/</a></strong></p>\n<p>拟南芥 RNA-seq 数据资源，可探索 20,000 多种已发布的拟南芥 RNA-Seq 库  </p>\n<h1 id=\"水稻\"><a href=\"#水稻\" class=\"headerlink\" title=\"水稻\"></a>水稻</h1><p><strong><a href=\"http://www.ricedata.cn/index.htm\">http://www.ricedata.cn/index.htm</a></strong>  </p>\n<p>国家水稻数据中心   </p>\n<p><strong><a href=\"https://omictools.com/bgi-ris-tool\">https://omictools.com/bgi-ris-tool</a></strong>   </p>\n<p>BGI-RIS：水稻以及其他谷类作物和植物基因组研究的信息资源和分析平台  </p>\n<p><strong><a href=\"http://rapdb.dna.affrc.go.jp/\">http://rapdb.dna.affrc.go.jp/</a></strong>   </p>\n<p>粳稻日本晴基因组注释计划   </p>\n<p><strong><a href=\"http://rice.plantbiology.msu.edu/\">http://rice.plantbiology.msu.edu/</a></strong>   </p>\n<p>粳稻日本晴基因组注释计划   </p>\n<p><strong><a href=\"http://redb.ncpgr.cn/\">http://redb.ncpgr.cn/</a></strong>   </p>\n<p>水稻 EST 数据库   </p>\n<p><strong><a href=\"http://rmd.ncpgr.cn/\">http://rmd.ncpgr.cn/</a></strong>   </p>\n<p>水稻突变体数据库 </p>\n<p><strong><a href=\"http://signal.salk.edu/cgi-bin/RiceGE\">http://signal.salk.edu/cgi-bin/RiceGE</a></strong>  </p>\n<p>水稻功能基因组表达数据库   </p>\n<p><strong><a href=\"https://tos.nias.affrc.go.jp/\">https://tos.nias.affrc.go.jp/</a></strong>   </p>\n<p>水稻逆转座子 Tos17 插入突变数据库   </p>\n<p><strong><a href=\"http://urgi.versailles.inra.fr/OryzaTagLine/\">http://urgi.versailles.inra.fr/OryzaTagLine/</a></strong> </p>\n<p>水稻 T-DNA 插入突变数据库   </p>\n<p><strong><a href=\"http://server.ncgr.ac.cn/ricd/\">http://server.ncgr.ac.cn/ricd/</a></strong></p>\n<p>籼稻 cDNA 数据库  </p>\n<p><strong><a href=\"https://shigen.nig.ac.jp/rice/oryzabase/\">https://shigen.nig.ac.jp/rice/oryzabase/</a></strong></p>\n<p>水稻遗传学和基因组学数据库  </p>\n<p><strong><a href=\"https://ricefrend.dna.affrc.go.jp/\">https://ricefrend.dna.affrc.go.jp/</a></strong></p>\n<p>水稻基因共表达数据库  </p>\n<p><strong><a href=\"https://ricephylogenomics.ucdavis.edu/cellwalls/gt/\">https://ricephylogenomics.ucdavis.edu/cellwalls/gt/</a></strong>   </p>\n<p>水稻糖基转移酶数据库   </p>\n<p><strong><a href=\"http://rice.hzau.edu.cn/rice/\">http://rice.hzau.edu.cn/rice/</a></strong></p>\n<p>籼稻基因组的综合生物信息学平台  </p>\n<p><strong><a href=\"https://www.genome.arizona.edu/cgi-bin/rite/index.cgi\">https://www.genome.arizona.edu/cgi-bin/rite/index.cgi</a></strong></p>\n<p>稻属和假稻属的重复序列和转座因子（TEs）数据库  </p>\n<p><strong><a href=\"https://ricexpro.dna.affrc.go.jp/index.html\">https://ricexpro.dna.affrc.go.jp/index.html</a></strong></p>\n<p>水稻表达谱数据库  </p>\n<p><strong><a href=\"http://ricevarmap.ncpgr.cn/v2/\">http://ricevarmap.ncpgr.cn/v2/</a></strong>   </p>\n<p>水稻基因组变异及其功能注释综合数据库   </p>\n<p><strong><a href=\"https://snpseek.irri.org/index.zul\">https://snpseek.irri.org/index.zul</a></strong>   </p>\n<p>水稻 SNP 检索数据库   </p>\n<p><strong><a href=\"http://funricegenes.ncpgr.cn/\">http://funricegenes.ncpgr.cn/</a></strong>   </p>\n<p>水稻已克隆基因的数据库   </p>\n<p><strong><a href=\"http://ibi.zju.edu.cn/ricerelativesgd/\">http://ibi.zju.edu.cn/ricerelativesgd/</a></strong></p>\n<p>水稻相关物种基因组数据库  </p>\n<p><strong><a href=\"http://www.elabcaas.cn/rice/index.html\">http://www.elabcaas.cn/rice/index.html</a></strong></p>\n<p>水稻专属的表观组学数据库  </p>\n<h1 id=\"其他重要植物\"><a href=\"#其他重要植物\" class=\"headerlink\" title=\"其他重要植物\"></a>其他重要植物</h1><p><strong><a href=\"http://www.wheatgenome.org/\">http://www.wheatgenome.org/</a></strong> </p>\n<p>小麦基因组信息数据库   </p>\n<p><strong><a href=\"https://www.wheatgmap.org/\">https://www.wheatgmap.org/</a></strong>   </p>\n<p>小麦基因图谱和数据共享的综合基因组平台 </p>\n<p><strong><a href=\"http://wheat.cau.edu.cn/TGT/\">http://wheat.cau.edu.cn/TGT/</a></strong>  </p>\n<p>小麦族同源基因数据库   </p>\n<p><strong><a href=\"https://wheatproteome.org/\">https://wheatproteome.org/</a></strong></p>\n<p>小麦蛋白质组数据库   </p>\n<p><strong><a href=\"http://202.194.139.32/\">http://202.194.139.32/</a></strong>   </p>\n<p>小麦组学大数据可视化网站   </p>\n<p><strong><a href=\"http://wheat.pw.usda.gov/\">http://wheat.pw.usda.gov</a></strong>  </p>\n<p>小麦族和燕麦属的分子和表型信息数据库</p>\n<p><strong><a href=\"http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/\">http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/</a></strong></p>\n<p>小麦及其祖先的基因组变异数据库  </p>\n<p><strong><a href=\"http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi\">http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi</a></strong></p>\n<p>大麦种质资源和基因组分析数据库  </p>\n<p><strong><a href=\"https://apex.ipk-gatersleben.de/apex/f?p=284:10\">https://apex.ipk-gatersleben.de/apex/f?p=284:10</a>::::::</strong> </p>\n<p>大麦基因组资源平台  </p>\n<p><strong><a href=\"http://maize.jcvi.org/\">http://maize.jcvi.org/</a></strong></p>\n<p>玉米基因组数据库   </p>\n<p><strong><a href=\"https://www.maizegdb.org/\">https://www.maizegdb.org/</a></strong></p>\n<p>玉米基因组和遗传分析平台   </p>\n<p><strong><a href=\"https://www.panzea.org/\">https://www.panzea.org/</a></strong> </p>\n<p>玉米及其野生近缘种的基因组工程资源库   </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/MCENet/\">http://bioinformatics.cau.edu.cn/MCENet/</a></strong></p>\n<p>玉米多组学基因网络分析平台   </p>\n<p><strong><a href=\"http://www.zeamap.com/\">http://www.zeamap.com/</a></strong> </p>\n<p>适应玉米多组学时代的综合数据库   </p>\n<p><strong><a href=\"https://soybase.org/\">https://soybase.org/</a></strong></p>\n<p>大豆基因组学和分子生物学数据库  </p>\n<p><strong><a href=\"http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi\">http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi</a></strong>  </p>\n<p>大豆蛋白质组数据库   </p>\n<p><strong><a href=\"http://www.ildis.org/LegumeWeb/\">http://www.ildis.org/LegumeWeb/</a></strong> </p>\n<p>国际豆科植物数据库和信息服务   </p>\n<p><strong><a href=\"https://www.cottongen.org/\">https://www.cottongen.org/</a></strong> </p>\n<p>棉花基因组学，遗传学和育种数据库   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/GraP/\">http://structuralbiology.cau.edu.cn/GraP/</a></strong></p>\n<p>棉花功能基因组学数据分析平台  </p>\n<p><strong><a href=\"http://magen.whu.edu.cn/\">http://magen.whu.edu.cn/</a></strong>  </p>\n<p>锦葵科比较基因组数据库   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/gossypium/\">http://structuralbiology.cau.edu.cn/gossypium/</a></strong> </p>\n<p>二倍体和多倍体棉花基因网络与功能模块比较分析平台   </p>\n<p><strong><a href=\"http://ted.bti.cornell.edu/\">http://ted.bti.cornell.edu/</a></strong> </p>\n<p>番茄功能基因组数据库   </p>\n<p><strong><a href=\"https://www.inetbio.org/tomatonet/\">https://www.inetbio.org/tomatonet/</a></strong>   </p>\n<p>番茄的复杂性状挖掘的全基因组协同网络平台   </p>\n<p><strong><a href=\"http://ted.bti.cornell.edu/epigenome/\">http://ted.bti.cornell.edu/epigenome/</a></strong> </p>\n<p>番茄表观基因组数据库   </p>\n<p><strong><a href=\"http://tea.solgenomics.net/\">http://tea.solgenomics.net/</a></strong>  </p>\n<p>番茄基因及其产物的高分辨率图谱和搜索工具   </p>\n<p><strong><a href=\"http://tomexpress.toulouse.inra.fr/\">http://tomexpress.toulouse.inra.fr/</a></strong> </p>\n<p>番茄转录组数据可视化和分析平台   </p>\n<p><strong><a href=\"https://solgenomics.net/\">https://solgenomics.net/</a></strong> </p>\n<p>茄科物种基因组测序数据库   </p>\n<p><strong><a href=\"http://tropgenedb.cirad.fr/\">http://tropgenedb.cirad.fr/</a></strong>   </p>\n<p>管理热带作物的遗传和基因组信息的数据库 </p>\n<p><strong><a href=\"http://medicinalplantgenomics.msu.edu/participants.shtml\">http://medicinalplantgenomics.msu.edu/participants.shtml</a></strong>  </p>\n<p>药用植物基因组和代谢组资源库   </p>\n<p><strong><a href=\"http://gabipd.org/projects/Pomamo/\">http://gabipd.org/projects/Pomamo/</a></strong> </p>\n<p>马铃薯生物信息数据库   </p>\n<p><strong><a href=\"http://vitisgdb.ynau.edu.cn/\">http://vitisgdb.ynau.edu.cn/</a></strong></p>\n<p>葡萄育种和遗传信息综合数据库  </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/sorghum/\">http://structuralbiology.cau.edu.cn/sorghum/</a></strong></p>\n<p>高梁功能基因组学数据库   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/SIFGD/\">http://structuralbiology.cau.edu.cn/SIFGD/</a></strong> </p>\n<p>谷子功能基因组学数据库   </p>\n<p><strong><a href=\"http://pepperhub.hzau.edu.cn/pegnm/\">http://pepperhub.hzau.edu.cn/pegnm/</a></strong></p>\n<p>辣椒基因组信息数据库  </p>\n<p><strong><a href=\"https://www.inetbio.org/wheatnet/\">https://www.inetbio.org/wheatnet/</a></strong></p>\n<p>面包小麦的全基因组规模功能基因网络数据库   </p>\n<p><strong><a href=\"http://brassicadb.org/brad/\">http://brassicadb.org/brad/</a></strong> </p>\n<p>重要芸苔属作物全基因组规模的遗传数据库 <strong><a href=\"http://rapeseed.biocloud.net/home\">http://rapeseed.biocloud.net/home</a></strong></p>\n<p>油菜种质资源遗传信息共享平台网站  </p>\n<p><strong><a href=\"http://cbi.hzau.edu.cn/bnapus\">http://cbi.hzau.edu.cn/bnapus</a></strong>   </p>\n<p>甘蓝型油菜泛基因组数据库   </p>\n<p><strong><a href=\"http://www.brassicagenome.net/\">http://www.brassicagenome.net/</a></strong>   </p>\n<p>芸苔属作物基因组数据库   </p>\n<p><strong><a href=\"http://cucurbitgenomics.org/\">http://cucurbitgenomics.org/</a></strong></p>\n<p>葫芦科植物基因组数据库  </p>\n<p><strong><a href=\"http://coffee-genome.org/\">http://coffee-genome.org/</a></strong></p>\n<p>咖啡基因组学、遗传学、育种数据和分析工具   </p>\n<p><strong><a href=\"http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp\">http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp</a></strong>   </p>\n<p>管理热带作物基因组，遗传和表型信息的数据库   </p>\n<p><strong><a href=\"https://www.rosaceae.org/\">https://www.rosaceae.org/</a></strong>  </p>\n<p>蔷薇科植物基因组数据库   </p>\n<h1 id=\"可用于植物研究的生信工具\"><a href=\"#可用于植物研究的生信工具\" class=\"headerlink\" title=\"可用于植物研究的生信工具\"></a>可用于植物研究的生信工具</h1><p><strong><a href=\"https://bio.tools/\">https://bio.tools/</a></strong>   </p>\n<p>生物信息学和生命科学软件工具门户   </p>\n<p><strong><a href=\"http://abc.gao-lab.org/tools.php\">http://abc.gao-lab.org/tools.php</a></strong>  </p>\n<p>北京大学应用生物信息学中心工具库   </p>\n<p><strong><a href=\"https://github.com/CJ-Chen/TBtools/releases\">https://github.com/CJ-Chen/TBtools/releases</a></strong></p>\n<p>Tbtools：用于生物大数据交互式分析的集成工具包   </p>\n<p><strong><a href=\"http://www.cbs.dtu.dk/services/TargetP/\">http://www.cbs.dtu.dk/services/TargetP/</a></strong> </p>\n<p>TargetP：亚细胞定位 / N 端功能肽预测   </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/easygo/\">http://bioinformatics.cau.edu.cn/easygo/</a></strong> </p>\n<p>EasyGo：提供一系列待查基因的功能注释以及微阵列探针信息   </p>\n<p><strong><a href=\"http://smart.embl-heidelberg.de/\">http://smart.embl-heidelberg.de/</a></strong>  </p>\n<p>SMART：蛋白保守结构域预测工具   </p>\n<p><strong><a href=\"http://biology-assets.anu.edu.au/GenAlEx/Welcome.html\">http://biology-assets.anu.edu.au/GenAlEx/Welcome.html</a></strong> </p>\n<p>GenAlEx：群体遗传分析软件   </p>\n<p><strong><a href=\"https://mapman.gabipd.org/mapman-download/\">https://mapman.gabipd.org/mapman-download/</a></strong> </p>\n<p>MapMan：适用于多组学数据分析的蛋白质分类和注释框架  </p>\n<p><strong><a href=\"https://genevestigator.com/\">https://genevestigator.com/</a></strong></p>\n<p>GENEVESTIGATOR: 转录组数据挖掘比对云平台   </p>\n<p><strong><a href=\"http://skl.scau.edu.cn/\">http://skl.scau.edu.cn/</a></strong>  </p>\n<p>CRISPR-GE: 用于 CRISPR 基因组编辑的便捷软件工具包   </p>\n<p><strong><a href=\"http://skl.scau.edu.cn/dsdecode/\">http://skl.scau.edu.cn/dsdecode/</a></strong>  </p>\n<p>DSDecode：基于 Web 的用于对目标突变基因型的序列色谱图进行解码的工具   </p>\n<p><strong><a href=\"https://github.com/srbehera11/stag-cns\">https://github.com/srbehera11/stag-cns</a></strong></p>\n<p>STAG-CNS：一种可用于任意数量物种的顺序保守非编码序列发现工具  </p>\n<p><strong><a href=\"http://www.hi-tom.net/FED\">http://www.hi-tom.net/FED</a></strong></p>\n<p>FED：基因组编辑外源成分检测平台  </p>\n<p><strong><a href=\"https://m2sb.org/\">https://m2sb.org/</a></strong></p>\n<p>GeneCloud：使用语义技术来扫描特定基因列表的基因描述   </p>\n<p><strong><a href=\"https://mafft.cbrc.jp/alignment/server/\">https://mafft.cbrc.jp/alignment/server/</a></strong></p>\n<p>MAFFT：在线的序列比对工具   </p>\n<p><strong><a href=\"http://wlab.ethz.ch/protter/start/\">http://wlab.ethz.ch/protter/start/</a></strong>  </p>\n<p>Protter：在线蛋白结构绘制工具   </p>\n<p><strong><a href=\"https://www.evolgenius.info/evolview/\">https://www.evolgenius.info/evolview/</a></strong></p>\n<p>EvolView：用于可视化，注释和管理系统树的网络工具   </p>\n<p><strong><a href=\"https://itol.embl.de/\">https://itol.embl.de/</a></strong>  </p>\n<p>iTOL：用于显示，注释和管理系统发育树的在线工具   </p>\n<p><strong><a href=\"https://orthovenn2.bioinfotoolkits.net/\">https://orthovenn2.bioinfotoolkits.net/</a></strong></p>\n<p>OrthoVenn2：多物种直系同源基因簇比较和注释在线服务工具  </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/ARSER/\">http://bioinformatics.cau.edu.cn/ARSER/</a></strong> </p>\n<p>ARSER: 生物节律表达谱波形分析   </p>\n<h1 id=\"植物研究专用工具\"><a href=\"#植物研究专用工具\" class=\"headerlink\" title=\"植物研究专用工具\"></a>植物研究专用工具</h1><p><strong><a href=\"http://www.bar.utoronto.ca/welcome.htm\">http://www.bar.utoronto.ca/welcome.htm</a></strong> </p>\n<p>BAR：植物生物学分析工具平台  </p>\n<p><strong><a href=\"http://crispr.hzau.edu.cn/CRISPR2/\">http://crispr.hzau.edu.cn/CRISPR2/</a></strong>  </p>\n<p>CRISPR-P: 用于植物基因组编辑的改进的 CRISPR / Cas9 工具包   </p>\n<p><strong><a href=\"https://www.michalopoulos.net/act/\">https://www.michalopoulos.net/act/</a></strong>   </p>\n<p>ACT：拟南芥共表达分析工具   </p>\n<p><strong><a href=\"http://orygenesdb.cirad.fr/\">http://orygenesdb.cirad.fr/</a></strong></p>\n<p>OryGenesDB：用于水稻反向遗传学研究的交互式工具   </p>\n<p><strong><a href=\"http://signal.salk.edu/cgi-bin/tdnaexpress\">http://signal.salk.edu/cgi-bin/tdnaexpress</a></strong></p>\n<p>T-DNA Express：拟南芥基因定位工具  </p>\n<p><strong><a href=\"http://plantgrn.noble.org/pssRNAit/\">http://plantgrn.noble.org/pssRNAit/</a></strong>  </p>\n<p>pssRNAit: 通过全基因组脱靶基因评估设计有效和特异性的植物 RNAi siRNA   </p>\n<p><strong><a href=\"http://www.personal.psu.edu/sma3/CLIMtools.html\">http://www.personal.psu.edu/sma3/CLIMtools.html</a></strong>   </p>\n<p>CLIMtools：基于网络的研究拟南芥基因型、表型和环境相关性的交互式数据库工具 </p>\n<p><strong><a href=\"http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi\">http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi</a></strong>  </p>\n<p>Plant MetGenMAP：在生化途径的背景下全面挖掘和整合基因表达和代谢物变化的网络工具 </p>\n<p><strong><a href=\"http://itak.feilab.net/cgi-bin/itak/index.cgi\">http://itak.feilab.net/cgi-bin/itak/index.cgi</a></strong> </p>\n<p>iTAK：用于识别和分类植物转录因子和蛋白激酶的软件包  </p>\n<p><strong><a href=\"http://plantpan2.itps.ncku.edu.tw/\">http://plantpan2.itps.ncku.edu.tw/</a></strong>  </p>\n<p>PlantPAN：检测植物转录因子结合位点的工具  </p>\n<p><strong><a href=\"http://guoweilong.github.io/SnpHub/\">http://guoweilong.github.io/SnpHub/</a></strong>  </p>\n<p>SnpHub：用于探索大规模基因组变异数据的统一的网络服务器框架 </p>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<h1 id=\"通用数据库\"><a href=\"#通用数据库\" class=\"headerlink\" title=\"通用数据库\"></a>通用数据库</h1><p><strong><a href=\"http://bigd.big.ac.cn/databasecommons/\">http://bigd.big.ac.cn/databasecommons/</a></strong></p>\n<p>国家基因库下属数据库，涵盖各种生物的全面公开可用的数据信息</p>","more":"<p><strong><a href=\"https://www.ncbi.nlm.nih.gov/\">https://www.ncbi.nlm.nih.gov/</a></strong></p>\n<p>美国国家生物技术信息中心的生物医学和基因组信息门户网站</p>\n<p><strong><a href=\"https://www.oxfordjournals.org/nar/database/cat/13\">https://www.oxfordjournals.org/nar/database/cat/13</a></strong> </p>\n<p>牛津大学出版社提供的植物科学相关数据库的汇总网站   </p>\n<p><strong><a href=\"http://abc.gao-lab.org/index.php\">http://abc.gao-lab.org/index.php</a></strong> </p>\n<p>北京大学应用生物信息学中心  </p>\n<p><strong><a href=\"https://www.expasy.org/\">https://www.expasy.org/</a></strong>   </p>\n<p>瑞士生物信息研究所的生物信息资源门户网站，涵盖各种生物研究数据库和软件工具  </p>\n<p><strong><a href=\"http://www.bioinfo.wsu.edu/\">http://www.bioinfo.wsu.edu/</a></strong>  </p>\n<p>作物基因组、遗传和育种研究的分析计算工具和数据库  </p>\n<p><strong><a href=\"https://www.agbiodata.org/\">https://www.agbiodata.org/</a></strong> </p>\n<p>农业生物数据库和相关资源综合平台   </p>\n<p><strong><a href=\"https://phytozome.jgi.doe.gov/pz/portal.html\">https://phytozome.jgi.doe.gov/pz/portal.html</a></strong></p>\n<p>植物比较基因组学资源库  </p>\n<p><strong><a href=\"https://bioinformatics.psb.ugent.be/plaza/\">https://bioinformatics.psb.ugent.be/plaza/</a></strong></p>\n<p>植物比较基因组学数据库  </p>\n<p><strong><a href=\"http://www.plantontology.org/\">http://www.plantontology.org</a></strong> </p>\n<p>集成植物基因组学、表型和遗传学数据的共享型平台   </p>\n<p><strong><a href=\"http://harvest.ucr.edu/\">http://harvest.ucr.edu/</a></strong>  </p>\n<p>作物 EST 序列及相关分子信息数据平台   </p>\n<p><strong><a href=\"http://www.gramene.org/\">http://www.gramene.org/</a></strong>  </p>\n<p>用于作物和模式物种的比较功能基因组学分析的综合平台   </p>\n<p><strong><a href=\"https://www.uniprot.org/\">https://www.uniprot.org/</a></strong>  </p>\n<p>蛋白质序列和功能信息资源数据库和分析平台 </p>\n<p><strong><a href=\"http://urgi.versailles.inra.fr/\">http://urgi.versailles.inra.fr/</a></strong>  </p>\n<p>针对有农学意义的植物研究生物信息平台   </p>\n<p><strong><a href=\"http://systemsbiology.cau.edu.cn/agriGOv2/index.php#\">http://systemsbiology.cau.edu.cn/agriGOv2/index.php#</a></strong>  </p>\n<p>GO 分析工具包和数据库综合平台   </p>\n<p><strong><a href=\"http://www.bioinformatics.nl/AraQTL\">http://www.bioinformatics.nl/AraQTL</a></strong>  </p>\n<p>基于 Web 的用于表达定量性状位点（eQTL）研究的工作台和数据库   </p>\n<p><strong><a href=\"http://www.plantgdb.org/\">http://www.plantgdb.org/</a></strong> </p>\n<p>植物基因组序列数据库   </p>\n<p><strong><a href=\"https://mpss.danforthcenter.org/index.php\">https://mpss.danforthcenter.org/index.php</a></strong>  </p>\n<p>二代测序（NGS）数据库，包括植物的 RNA 和基因组信息资源   </p>\n<p><strong><a href=\"http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp\">http://pgsb.helmholtz-muenchen.de/plant/plantsdb.jsp</a></strong>  </p>\n<p>植物基因组数据库   </p>\n<p><strong><a href=\"http://systemsbiology.cau.edu.cn/chromstates/\">http://systemsbiology.cau.edu.cn/chromstates/</a></strong>  </p>\n<p>植物染色质状态信息数据库   </p>\n<p><strong><a href=\"http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home\">http://bioinf.scri.sari.ac.uk/cgi-bin/plant_snorna/home</a></strong>  </p>\n<p>植物 snoRNA 基因数据库   </p>\n<p><strong><a href=\"http://bioinformatics.psb.ugent.be/webtools/plantcare/html/\">http://bioinformatics.psb.ugent.be/webtools/plantcare/html/</a></strong> </p>\n<p>植物顺式调控元件、增强子和抑制子数据库   </p>\n<p><strong><a href=\"http://metacrop.ipk-gatersleben.de/\">http://metacrop.ipk-gatersleben.de</a></strong>  </p>\n<p>作物代谢途径数据库   </p>\n<p><strong><a href=\"http://podb.nibb.ac.jp/Organellome\">http://podb.nibb.ac.jp/Organellome</a></strong>  </p>\n<p>植物器官研究数据库   </p>\n<p><strong><a href=\"http://www.drastic.org.uk/\">http://www.drastic.org.uk</a></strong>  </p>\n<p>植物细胞的信号转导分析数据库   </p>\n<p><strong><a href=\"http://www.pathoplant.de/\">http://www.pathoplant.de</a></strong>  </p>\n<p>植物 - 病原体相互作用的信号转导相关物质成分数据库   </p>\n<p><strong><a href=\"http://planttfdb.cbi.pku.edu.cn/\">http://planttfdb.cbi.pku.edu.cn/</a></strong></p>\n<p>植物转录因子数据库  </p>\n<p><strong><a href=\"http://plntfdb.bio.uni-potsdam.de/v3.0/\">http://plntfdb.bio.uni-potsdam.de/v3.0/</a></strong></p>\n<p>植物转录因子数据库  </p>\n<p><strong><a href=\"http://psorf.whu.edu.cn/\">http://psorf.whu.edu.cn/</a></strong>  </p>\n<p>植物小型开放阅读框架（sORF）数据资源库 </p>\n<p><strong><a href=\"http://uorflight.whu.edu.cn/\">http://uorflight.whu.edu.cn/</a></strong>  </p>\n<p>植物 uORF 翻译调控相关数据库   </p>\n<p><strong><a href=\"https://apex.ipk-gatersleben.de/apex/f?p=116:1\">https://apex.ipk-gatersleben.de/apex/f?p=116:1</a></strong>  </p>\n<p>作物 EST 数据库   </p>\n<p><strong><a href=\"https://www.dna.affrc.go.jp/PLACE/?action=newplace\">https://www.dna.affrc.go.jp/PLACE/?action=newplace</a></strong>  </p>\n<p>植物顺式调控 DNA 元件数据库   </p>\n<p><strong><a href=\"https://webapps.plantenergy.uwa.edu.au/applications/mpic/\">https://webapps.plantenergy.uwa.edu.au/applications/mpic/</a></strong> </p>\n<p>植物线粒体蛋白运输元件数据库  </p>\n<p><strong><a href=\"https://bioinformatics.cse.unr.edu/fat-ptm\">https://bioinformatics.cse.unr.edu/fat-ptm</a></strong> </p>\n<p>用于分析蛋白质和代谢途径的翻译后修饰数据库 </p>\n<p><strong><a href=\"http://sundarlab.ucdavis.edu/smrnas/\">http://sundarlab.ucdavis.edu/smrnas/</a></strong></p>\n<p>谷物特别是水稻和玉米的小 RNA 数据库  </p>\n<p><strong><a href=\"http://ppdb.tc.cornell.edu/default.aspx\">http://ppdb.tc.cornell.edu/default.aspx</a></strong> </p>\n<p>拟南芥和玉米蛋白质组数据库  </p>\n<p><strong><a href=\"http://atted.jp/\">http://atted.jp/</a></strong>   </p>\n<p>基于互秩指数统计特性的植物共表达数据库   </p>\n<p><strong><a href=\"http://ibi.zju.edu.cn/plantcircbase/\">http://ibi.zju.edu.cn/plantcircbase/</a></strong>   </p>\n<p>植物 Circular RNAs 数据库   </p>\n<p><strong><a href=\"http://plantcrispr.org/cgi-bin/crispr/index.cgi\">http://plantcrispr.org/cgi-bin/crispr/index.cgi</a></strong>  </p>\n<p>植物基因编辑数据库，收集 CRISPR / Cas9 技术产生植物的信息   </p>\n<p><strong><a href=\"https://www.try-db.org/TryWeb/Home.php\">https://www.try-db.org/TryWeb/Home.php</a></strong></p>\n<p>植物性状全球数据库   </p>\n<p><strong><a href=\"http://chibba.agtec.uga.edu/duplication/\">http://chibba.agtec.uga.edu/duplication/</a></strong></p>\n<p>植物基因和基因组加倍的数据库  </p>\n<p><strong><a href=\"http://www.mirbase.org/\">http://www.mirbase.org/</a></strong>  </p>\n<p>生物 microRNA 数据库   </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/PMRD/\">http://bioinformatics.cau.edu.cn/PMRD/</a></strong>  </p>\n<p>植物 microRNA 数据库   </p>\n<p><strong><a href=\"http://bis.zju.edu.cn/pmirkb/\">http://bis.zju.edu.cn/pmirkb/</a></strong>  </p>\n<p>模式植物拟南芥和水稻的 microRNA 数据库   </p>\n<p><strong><a href=\"http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl\">http://genome.ppws.vt.edu/cgi-bin/MLST/home.pl</a></strong>   </p>\n<p>植物相关微生物的多基因座序列分型和分析数据库及网站   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/PlantGSEA\">http://structuralbiology.cau.edu.cn/PlantGSEA</a></strong>   </p>\n<p>植物基因集富集分析平台   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/PNRD\">http://structuralbiology.cau.edu.cn/PNRD</a></strong> </p>\n<p>植物非编码 RNA 数据库   </p>\n<p><strong><a href=\"http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB\">http://amp.pharm.mssm.edu/datasets2tools/landing/tool/PLncDB</a></strong>   </p>\n<p>植物长非编码 RNA 数据库   </p>\n<p><strong><a href=\"http://prgdb.org/prgdb/\">http://prgdb.org/prgdb/</a></strong>   </p>\n<p>植物抗病 R 基因数据库   </p>\n<p><strong><a href=\"https://www.inetbio.org/aranet/\">https://www.inetbio.org/aranet/</a></strong>   </p>\n<p>拟南芥和一些非模式植物的功能基因网络改进数据库 </p>\n<p><strong><a href=\"http://greenc.sciencedesigners.com/wiki/Main_Page\">http://greenc.sciencedesigners.com/wiki/Main_Page</a></strong></p>\n<p>基于 Wiki 的植物长非编码 RNAs 数据库   </p>\n<p><strong><a href=\"http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi\">http://ppdb.agr.gifu-u.ac.jp/ppdb/cgi-bin/index.cgi</a></strong>   </p>\n<p>植物启动子数据库   </p>\n<p><strong><a href=\"http://www.pmiren.com/\">http://www.pmiren.com/</a></strong>   </p>\n<p>植物 miRNA 综合数据库   </p>\n<p><strong><a href=\"http://www.mbkbase.org/\">http://www.mbkbase.org/</a></strong>  </p>\n<p>水稻、小麦和大豆的分子育种资源库   </p>\n<p><strong><a href=\"http://epigenome.genetics.uga.edu/PlantMethylome/\">http://epigenome.genetics.uga.edu/PlantMethylome/</a></strong>  </p>\n<p>植物 DNA 甲基化数据库   </p>\n<p><strong><a href=\"http://bioinfo.sibs.ac.cn/plant-regulomics\">http://bioinfo.sibs.ac.cn/plant-regulomics</a></strong> </p>\n<p>从植物多组学数据中检索获取上游调控因子的数据驱动平台  </p>\n<p><strong><a href=\"http://autosnpdb.appliedbioinformatics.com.au/\">http://autosnpdb.appliedbioinformatics.com.au/</a></strong> </p>\n<p>植物 SNP 检索数据库  </p>\n<p><strong><a href=\"http://www.p3db.org/\">http://www.p3db.org/</a></strong>   </p>\n<p>植物蛋白磷酸化数据库   </p>\n<p><strong><a href=\"http://phytamp.pfba-lab-tun.org/main.php\">http://phytamp.pfba-lab-tun.org/main.php</a></strong>  </p>\n<p>植物天然抗菌肽数据库   </p>\n<p><strong><a href=\"http://bis.zju.edu.cn/pcernadb/index.jsp\">http://bis.zju.edu.cn/pcernadb/index.jsp</a></strong></p>\n<p>植物竞争性内源 RNA 数据库  </p>\n<p><strong><a href=\"http://www.byanbioinfo.org/plamom/\">http://www.byanbioinfo.org/plamom/</a></strong>   </p>\n<p>用于检索，分析和预测植物移动大分子包括 RNA 和蛋白质的数据库平台   </p>\n<p><strong><a href=\"https://cvalues.science.kew.org/\">https://cvalues.science.kew.org/</a></strong>   </p>\n<p>用于获取和比较植物基因组大小的数据库   </p>\n<p><strong><a href=\"https://plantreactome.gramene.org/index.php?lang=en\">https://plantreactome.gramene.org/index.php?lang=en</a></strong> </p>\n<p>植物代谢和调控通路数据库   </p>\n<p><strong><a href=\"http://plantpis.ba.itb.cnr.it/\">http://plantpis.ba.itb.cnr.it/</a></strong>  </p>\n<p>植物蛋白酶抑制剂数据库   </p>\n<p><strong><a href=\"http://plantdhs.org/\">http://plantdhs.org/</a></strong>   </p>\n<p>植物 DNase I 超敏位点数据库   </p>\n<p><strong><a href=\"http://bis.zju.edu.cn/pnatdb/\">http://bis.zju.edu.cn/pnatdb/</a></strong>   </p>\n<p>植物天然反义转录本（Natural Antisense Transcripts）数据库   </p>\n<p><strong><a href=\"http://linux1.softberry.com/berry.phtml?topic=plantprom&amp;group=data&amp;subgroup=plantprom\">http://linux1.softberry.com/berry.phtml?topic=plantprom&amp;group=data&amp;subgroup=plantprom</a></strong>  </p>\n<p>植物启动子数据库   </p>\n<p><strong><a href=\"http://www.sesame-bioinfo.org/PMDBase/\">http://www.sesame-bioinfo.org/PMDBase/</a></strong></p>\n<p>用于研究植物物种和基因组进化中的微卫星 DNA 和标记开发的数据库  </p>\n<p><strong><a href=\"http://pogs.uoregon.edu/#/\">http://pogs.uoregon.edu/#/</a></strong>  </p>\n<p>旨在促进有关植物基因功能和基因模型的跨物种推断的关系数据库   </p>\n<p><strong><a href=\"http://plants.proteincomplexes.org/\">http://plants.proteincomplexes.org/</a></strong>  </p>\n<p>植物蛋白复合物组分以及蛋白间稳定互作图谱数据库   </p>\n<h1 id=\"拟南芥\"><a href=\"#拟南芥\" class=\"headerlink\" title=\"拟南芥\"></a>拟南芥</h1><p><strong><a href=\"http://www.arabidopsis.org/\">www.arabidopsis.org</a></strong> </p>\n<p>最为常用的拟南芥遗传和分子生物学数据资源库   </p>\n<p><strong><a href=\"http://rarge.gsc.riken.jp/\">http://rarge.gsc.riken.jp/</a></strong>   </p>\n<p>拟南芥 cDNA、突变体和微阵列数据库   </p>\n<p><strong><a href=\"https://1001genomes.org/\">https://1001genomes.org/</a></strong>  </p>\n<p>1001 Genomes：拟南芥遗传变异目录  </p>\n<p><strong><a href=\"https://aragwas.1001genomes.org/#/\">https://aragwas.1001genomes.org/#/</a></strong> </p>\n<p>AraGWAS：用于拟南芥的 GWAS 标准结果的公共人工管理数据库  </p>\n<p><strong><a href=\"http://www.athamap.de/\">http://www.athamap.de/</a></strong>   </p>\n<p>拟南芥的全基因组范围的假定的转录因子结合位点数据库   </p>\n<p><strong><a href=\"https://www.gabi-kat.de/\">https://www.gabi-kat.de/</a></strong>   </p>\n<p>拟南芥的基于侧翼序列标签（FST）的 T-DNA 插入突变体查找库   </p>\n<p><strong><a href=\"http://www.plprot.ethz.ch/\">http://www.plprot.ethz.ch/</a></strong>   </p>\n<p>拟南芥质体蛋白数据库   </p>\n<p><strong><a href=\"http://seedgenes.org/\">http://seedgenes.org/</a></strong></p>\n<p>拟南芥发育关键基因数据库  </p>\n<p><strong><a href=\"http://suba.live/\">http://suba.live/</a></strong>   </p>\n<p>拟南芥蛋白的亚细胞定位数据库   </p>\n<p><strong><a href=\"http://travadb.org/\">http://travadb.org/</a></strong>  </p>\n<p>基于 RNA-seq 分析的拟南芥基因表达谱数据库   </p>\n<p><strong><a href=\"http://atrm.cbi.pku.edu.cn/\">http://atrm.cbi.pku.edu.cn/</a></strong>   </p>\n<p>拟南芥转录调控图谱数据库</p>\n<p><strong><a href=\"http://wanglab.sippe.ac.cn/rootatlas/\">http://wanglab.sippe.ac.cn/rootatlas/</a></strong> </p>\n<p>拟南芥根部单细胞 RNA 测序数据库  </p>\n<p><strong><a href=\"http://ipf.sustech.edu.cn/pub/athrna/\">http://ipf.sustech.edu.cn/pub/athrna/</a></strong></p>\n<p>拟南芥 RNA-seq 数据资源，可探索 20,000 多种已发布的拟南芥 RNA-Seq 库  </p>\n<h1 id=\"水稻\"><a href=\"#水稻\" class=\"headerlink\" title=\"水稻\"></a>水稻</h1><p><strong><a href=\"http://www.ricedata.cn/index.htm\">http://www.ricedata.cn/index.htm</a></strong>  </p>\n<p>国家水稻数据中心   </p>\n<p><strong><a href=\"https://omictools.com/bgi-ris-tool\">https://omictools.com/bgi-ris-tool</a></strong>   </p>\n<p>BGI-RIS：水稻以及其他谷类作物和植物基因组研究的信息资源和分析平台  </p>\n<p><strong><a href=\"http://rapdb.dna.affrc.go.jp/\">http://rapdb.dna.affrc.go.jp/</a></strong>   </p>\n<p>粳稻日本晴基因组注释计划   </p>\n<p><strong><a href=\"http://rice.plantbiology.msu.edu/\">http://rice.plantbiology.msu.edu/</a></strong>   </p>\n<p>粳稻日本晴基因组注释计划   </p>\n<p><strong><a href=\"http://redb.ncpgr.cn/\">http://redb.ncpgr.cn/</a></strong>   </p>\n<p>水稻 EST 数据库   </p>\n<p><strong><a href=\"http://rmd.ncpgr.cn/\">http://rmd.ncpgr.cn/</a></strong>   </p>\n<p>水稻突变体数据库 </p>\n<p><strong><a href=\"http://signal.salk.edu/cgi-bin/RiceGE\">http://signal.salk.edu/cgi-bin/RiceGE</a></strong>  </p>\n<p>水稻功能基因组表达数据库   </p>\n<p><strong><a href=\"https://tos.nias.affrc.go.jp/\">https://tos.nias.affrc.go.jp/</a></strong>   </p>\n<p>水稻逆转座子 Tos17 插入突变数据库   </p>\n<p><strong><a href=\"http://urgi.versailles.inra.fr/OryzaTagLine/\">http://urgi.versailles.inra.fr/OryzaTagLine/</a></strong> </p>\n<p>水稻 T-DNA 插入突变数据库   </p>\n<p><strong><a href=\"http://server.ncgr.ac.cn/ricd/\">http://server.ncgr.ac.cn/ricd/</a></strong></p>\n<p>籼稻 cDNA 数据库  </p>\n<p><strong><a href=\"https://shigen.nig.ac.jp/rice/oryzabase/\">https://shigen.nig.ac.jp/rice/oryzabase/</a></strong></p>\n<p>水稻遗传学和基因组学数据库  </p>\n<p><strong><a href=\"https://ricefrend.dna.affrc.go.jp/\">https://ricefrend.dna.affrc.go.jp/</a></strong></p>\n<p>水稻基因共表达数据库  </p>\n<p><strong><a href=\"https://ricephylogenomics.ucdavis.edu/cellwalls/gt/\">https://ricephylogenomics.ucdavis.edu/cellwalls/gt/</a></strong>   </p>\n<p>水稻糖基转移酶数据库   </p>\n<p><strong><a href=\"http://rice.hzau.edu.cn/rice/\">http://rice.hzau.edu.cn/rice/</a></strong></p>\n<p>籼稻基因组的综合生物信息学平台  </p>\n<p><strong><a href=\"https://www.genome.arizona.edu/cgi-bin/rite/index.cgi\">https://www.genome.arizona.edu/cgi-bin/rite/index.cgi</a></strong></p>\n<p>稻属和假稻属的重复序列和转座因子（TEs）数据库  </p>\n<p><strong><a href=\"https://ricexpro.dna.affrc.go.jp/index.html\">https://ricexpro.dna.affrc.go.jp/index.html</a></strong></p>\n<p>水稻表达谱数据库  </p>\n<p><strong><a href=\"http://ricevarmap.ncpgr.cn/v2/\">http://ricevarmap.ncpgr.cn/v2/</a></strong>   </p>\n<p>水稻基因组变异及其功能注释综合数据库   </p>\n<p><strong><a href=\"https://snpseek.irri.org/index.zul\">https://snpseek.irri.org/index.zul</a></strong>   </p>\n<p>水稻 SNP 检索数据库   </p>\n<p><strong><a href=\"http://funricegenes.ncpgr.cn/\">http://funricegenes.ncpgr.cn/</a></strong>   </p>\n<p>水稻已克隆基因的数据库   </p>\n<p><strong><a href=\"http://ibi.zju.edu.cn/ricerelativesgd/\">http://ibi.zju.edu.cn/ricerelativesgd/</a></strong></p>\n<p>水稻相关物种基因组数据库  </p>\n<p><strong><a href=\"http://www.elabcaas.cn/rice/index.html\">http://www.elabcaas.cn/rice/index.html</a></strong></p>\n<p>水稻专属的表观组学数据库  </p>\n<h1 id=\"其他重要植物\"><a href=\"#其他重要植物\" class=\"headerlink\" title=\"其他重要植物\"></a>其他重要植物</h1><p><strong><a href=\"http://www.wheatgenome.org/\">http://www.wheatgenome.org/</a></strong> </p>\n<p>小麦基因组信息数据库   </p>\n<p><strong><a href=\"https://www.wheatgmap.org/\">https://www.wheatgmap.org/</a></strong>   </p>\n<p>小麦基因图谱和数据共享的综合基因组平台 </p>\n<p><strong><a href=\"http://wheat.cau.edu.cn/TGT/\">http://wheat.cau.edu.cn/TGT/</a></strong>  </p>\n<p>小麦族同源基因数据库   </p>\n<p><strong><a href=\"https://wheatproteome.org/\">https://wheatproteome.org/</a></strong></p>\n<p>小麦蛋白质组数据库   </p>\n<p><strong><a href=\"http://202.194.139.32/\">http://202.194.139.32/</a></strong>   </p>\n<p>小麦组学大数据可视化网站   </p>\n<p><strong><a href=\"http://wheat.pw.usda.gov/\">http://wheat.pw.usda.gov</a></strong>  </p>\n<p>小麦族和燕麦属的分子和表型信息数据库</p>\n<p><strong><a href=\"http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/\">http://wheat.cau.edu.cn/Wheat_SnpHub_Portal/</a></strong></p>\n<p>小麦及其祖先的基因组变异数据库  </p>\n<p><strong><a href=\"http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi\">http://earth.nig.ac.jp/~dclust/cgi-bin/index.cgi</a></strong></p>\n<p>大麦种质资源和基因组分析数据库  </p>\n<p><strong><a href=\"https://apex.ipk-gatersleben.de/apex/f?p=284:10\">https://apex.ipk-gatersleben.de/apex/f?p=284:10</a>::::::</strong> </p>\n<p>大麦基因组资源平台  </p>\n<p><strong><a href=\"http://maize.jcvi.org/\">http://maize.jcvi.org/</a></strong></p>\n<p>玉米基因组数据库   </p>\n<p><strong><a href=\"https://www.maizegdb.org/\">https://www.maizegdb.org/</a></strong></p>\n<p>玉米基因组和遗传分析平台   </p>\n<p><strong><a href=\"https://www.panzea.org/\">https://www.panzea.org/</a></strong> </p>\n<p>玉米及其野生近缘种的基因组工程资源库   </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/MCENet/\">http://bioinformatics.cau.edu.cn/MCENet/</a></strong></p>\n<p>玉米多组学基因网络分析平台   </p>\n<p><strong><a href=\"http://www.zeamap.com/\">http://www.zeamap.com/</a></strong> </p>\n<p>适应玉米多组学时代的综合数据库   </p>\n<p><strong><a href=\"https://soybase.org/\">https://soybase.org/</a></strong></p>\n<p>大豆基因组学和分子生物学数据库  </p>\n<p><strong><a href=\"http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi\">http://proteome.dc.affrc.go.jp/cgi-bin/2d/2d.cgi</a></strong>  </p>\n<p>大豆蛋白质组数据库   </p>\n<p><strong><a href=\"http://www.ildis.org/LegumeWeb/\">http://www.ildis.org/LegumeWeb/</a></strong> </p>\n<p>国际豆科植物数据库和信息服务   </p>\n<p><strong><a href=\"https://www.cottongen.org/\">https://www.cottongen.org/</a></strong> </p>\n<p>棉花基因组学，遗传学和育种数据库   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/GraP/\">http://structuralbiology.cau.edu.cn/GraP/</a></strong></p>\n<p>棉花功能基因组学数据分析平台  </p>\n<p><strong><a href=\"http://magen.whu.edu.cn/\">http://magen.whu.edu.cn/</a></strong>  </p>\n<p>锦葵科比较基因组数据库   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/gossypium/\">http://structuralbiology.cau.edu.cn/gossypium/</a></strong> </p>\n<p>二倍体和多倍体棉花基因网络与功能模块比较分析平台   </p>\n<p><strong><a href=\"http://ted.bti.cornell.edu/\">http://ted.bti.cornell.edu/</a></strong> </p>\n<p>番茄功能基因组数据库   </p>\n<p><strong><a href=\"https://www.inetbio.org/tomatonet/\">https://www.inetbio.org/tomatonet/</a></strong>   </p>\n<p>番茄的复杂性状挖掘的全基因组协同网络平台   </p>\n<p><strong><a href=\"http://ted.bti.cornell.edu/epigenome/\">http://ted.bti.cornell.edu/epigenome/</a></strong> </p>\n<p>番茄表观基因组数据库   </p>\n<p><strong><a href=\"http://tea.solgenomics.net/\">http://tea.solgenomics.net/</a></strong>  </p>\n<p>番茄基因及其产物的高分辨率图谱和搜索工具   </p>\n<p><strong><a href=\"http://tomexpress.toulouse.inra.fr/\">http://tomexpress.toulouse.inra.fr/</a></strong> </p>\n<p>番茄转录组数据可视化和分析平台   </p>\n<p><strong><a href=\"https://solgenomics.net/\">https://solgenomics.net/</a></strong> </p>\n<p>茄科物种基因组测序数据库   </p>\n<p><strong><a href=\"http://tropgenedb.cirad.fr/\">http://tropgenedb.cirad.fr/</a></strong>   </p>\n<p>管理热带作物的遗传和基因组信息的数据库 </p>\n<p><strong><a href=\"http://medicinalplantgenomics.msu.edu/participants.shtml\">http://medicinalplantgenomics.msu.edu/participants.shtml</a></strong>  </p>\n<p>药用植物基因组和代谢组资源库   </p>\n<p><strong><a href=\"http://gabipd.org/projects/Pomamo/\">http://gabipd.org/projects/Pomamo/</a></strong> </p>\n<p>马铃薯生物信息数据库   </p>\n<p><strong><a href=\"http://vitisgdb.ynau.edu.cn/\">http://vitisgdb.ynau.edu.cn/</a></strong></p>\n<p>葡萄育种和遗传信息综合数据库  </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/sorghum/\">http://structuralbiology.cau.edu.cn/sorghum/</a></strong></p>\n<p>高梁功能基因组学数据库   </p>\n<p><strong><a href=\"http://structuralbiology.cau.edu.cn/SIFGD/\">http://structuralbiology.cau.edu.cn/SIFGD/</a></strong> </p>\n<p>谷子功能基因组学数据库   </p>\n<p><strong><a href=\"http://pepperhub.hzau.edu.cn/pegnm/\">http://pepperhub.hzau.edu.cn/pegnm/</a></strong></p>\n<p>辣椒基因组信息数据库  </p>\n<p><strong><a href=\"https://www.inetbio.org/wheatnet/\">https://www.inetbio.org/wheatnet/</a></strong></p>\n<p>面包小麦的全基因组规模功能基因网络数据库   </p>\n<p><strong><a href=\"http://brassicadb.org/brad/\">http://brassicadb.org/brad/</a></strong> </p>\n<p>重要芸苔属作物全基因组规模的遗传数据库 <strong><a href=\"http://rapeseed.biocloud.net/home\">http://rapeseed.biocloud.net/home</a></strong></p>\n<p>油菜种质资源遗传信息共享平台网站  </p>\n<p><strong><a href=\"http://cbi.hzau.edu.cn/bnapus\">http://cbi.hzau.edu.cn/bnapus</a></strong>   </p>\n<p>甘蓝型油菜泛基因组数据库   </p>\n<p><strong><a href=\"http://www.brassicagenome.net/\">http://www.brassicagenome.net/</a></strong>   </p>\n<p>芸苔属作物基因组数据库   </p>\n<p><strong><a href=\"http://cucurbitgenomics.org/\">http://cucurbitgenomics.org/</a></strong></p>\n<p>葫芦科植物基因组数据库  </p>\n<p><strong><a href=\"http://coffee-genome.org/\">http://coffee-genome.org/</a></strong></p>\n<p>咖啡基因组学、遗传学、育种数据和分析工具   </p>\n<p><strong><a href=\"http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp\">http://tropgenedb.cirad.fr/tropgene/JSP/index.jsp</a></strong>   </p>\n<p>管理热带作物基因组，遗传和表型信息的数据库   </p>\n<p><strong><a href=\"https://www.rosaceae.org/\">https://www.rosaceae.org/</a></strong>  </p>\n<p>蔷薇科植物基因组数据库   </p>\n<h1 id=\"可用于植物研究的生信工具\"><a href=\"#可用于植物研究的生信工具\" class=\"headerlink\" title=\"可用于植物研究的生信工具\"></a>可用于植物研究的生信工具</h1><p><strong><a href=\"https://bio.tools/\">https://bio.tools/</a></strong>   </p>\n<p>生物信息学和生命科学软件工具门户   </p>\n<p><strong><a href=\"http://abc.gao-lab.org/tools.php\">http://abc.gao-lab.org/tools.php</a></strong>  </p>\n<p>北京大学应用生物信息学中心工具库   </p>\n<p><strong><a href=\"https://github.com/CJ-Chen/TBtools/releases\">https://github.com/CJ-Chen/TBtools/releases</a></strong></p>\n<p>Tbtools：用于生物大数据交互式分析的集成工具包   </p>\n<p><strong><a href=\"http://www.cbs.dtu.dk/services/TargetP/\">http://www.cbs.dtu.dk/services/TargetP/</a></strong> </p>\n<p>TargetP：亚细胞定位 / N 端功能肽预测   </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/easygo/\">http://bioinformatics.cau.edu.cn/easygo/</a></strong> </p>\n<p>EasyGo：提供一系列待查基因的功能注释以及微阵列探针信息   </p>\n<p><strong><a href=\"http://smart.embl-heidelberg.de/\">http://smart.embl-heidelberg.de/</a></strong>  </p>\n<p>SMART：蛋白保守结构域预测工具   </p>\n<p><strong><a href=\"http://biology-assets.anu.edu.au/GenAlEx/Welcome.html\">http://biology-assets.anu.edu.au/GenAlEx/Welcome.html</a></strong> </p>\n<p>GenAlEx：群体遗传分析软件   </p>\n<p><strong><a href=\"https://mapman.gabipd.org/mapman-download/\">https://mapman.gabipd.org/mapman-download/</a></strong> </p>\n<p>MapMan：适用于多组学数据分析的蛋白质分类和注释框架  </p>\n<p><strong><a href=\"https://genevestigator.com/\">https://genevestigator.com/</a></strong></p>\n<p>GENEVESTIGATOR: 转录组数据挖掘比对云平台   </p>\n<p><strong><a href=\"http://skl.scau.edu.cn/\">http://skl.scau.edu.cn/</a></strong>  </p>\n<p>CRISPR-GE: 用于 CRISPR 基因组编辑的便捷软件工具包   </p>\n<p><strong><a href=\"http://skl.scau.edu.cn/dsdecode/\">http://skl.scau.edu.cn/dsdecode/</a></strong>  </p>\n<p>DSDecode：基于 Web 的用于对目标突变基因型的序列色谱图进行解码的工具   </p>\n<p><strong><a href=\"https://github.com/srbehera11/stag-cns\">https://github.com/srbehera11/stag-cns</a></strong></p>\n<p>STAG-CNS：一种可用于任意数量物种的顺序保守非编码序列发现工具  </p>\n<p><strong><a href=\"http://www.hi-tom.net/FED\">http://www.hi-tom.net/FED</a></strong></p>\n<p>FED：基因组编辑外源成分检测平台  </p>\n<p><strong><a href=\"https://m2sb.org/\">https://m2sb.org/</a></strong></p>\n<p>GeneCloud：使用语义技术来扫描特定基因列表的基因描述   </p>\n<p><strong><a href=\"https://mafft.cbrc.jp/alignment/server/\">https://mafft.cbrc.jp/alignment/server/</a></strong></p>\n<p>MAFFT：在线的序列比对工具   </p>\n<p><strong><a href=\"http://wlab.ethz.ch/protter/start/\">http://wlab.ethz.ch/protter/start/</a></strong>  </p>\n<p>Protter：在线蛋白结构绘制工具   </p>\n<p><strong><a href=\"https://www.evolgenius.info/evolview/\">https://www.evolgenius.info/evolview/</a></strong></p>\n<p>EvolView：用于可视化，注释和管理系统树的网络工具   </p>\n<p><strong><a href=\"https://itol.embl.de/\">https://itol.embl.de/</a></strong>  </p>\n<p>iTOL：用于显示，注释和管理系统发育树的在线工具   </p>\n<p><strong><a href=\"https://orthovenn2.bioinfotoolkits.net/\">https://orthovenn2.bioinfotoolkits.net/</a></strong></p>\n<p>OrthoVenn2：多物种直系同源基因簇比较和注释在线服务工具  </p>\n<p><strong><a href=\"http://bioinformatics.cau.edu.cn/ARSER/\">http://bioinformatics.cau.edu.cn/ARSER/</a></strong> </p>\n<p>ARSER: 生物节律表达谱波形分析   </p>\n<h1 id=\"植物研究专用工具\"><a href=\"#植物研究专用工具\" class=\"headerlink\" title=\"植物研究专用工具\"></a>植物研究专用工具</h1><p><strong><a href=\"http://www.bar.utoronto.ca/welcome.htm\">http://www.bar.utoronto.ca/welcome.htm</a></strong> </p>\n<p>BAR：植物生物学分析工具平台  </p>\n<p><strong><a href=\"http://crispr.hzau.edu.cn/CRISPR2/\">http://crispr.hzau.edu.cn/CRISPR2/</a></strong>  </p>\n<p>CRISPR-P: 用于植物基因组编辑的改进的 CRISPR / Cas9 工具包   </p>\n<p><strong><a href=\"https://www.michalopoulos.net/act/\">https://www.michalopoulos.net/act/</a></strong>   </p>\n<p>ACT：拟南芥共表达分析工具   </p>\n<p><strong><a href=\"http://orygenesdb.cirad.fr/\">http://orygenesdb.cirad.fr/</a></strong></p>\n<p>OryGenesDB：用于水稻反向遗传学研究的交互式工具   </p>\n<p><strong><a href=\"http://signal.salk.edu/cgi-bin/tdnaexpress\">http://signal.salk.edu/cgi-bin/tdnaexpress</a></strong></p>\n<p>T-DNA Express：拟南芥基因定位工具  </p>\n<p><strong><a href=\"http://plantgrn.noble.org/pssRNAit/\">http://plantgrn.noble.org/pssRNAit/</a></strong>  </p>\n<p>pssRNAit: 通过全基因组脱靶基因评估设计有效和特异性的植物 RNAi siRNA   </p>\n<p><strong><a href=\"http://www.personal.psu.edu/sma3/CLIMtools.html\">http://www.personal.psu.edu/sma3/CLIMtools.html</a></strong>   </p>\n<p>CLIMtools：基于网络的研究拟南芥基因型、表型和环境相关性的交互式数据库工具 </p>\n<p><strong><a href=\"http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi\">http://bioinfo.bti.cornell.edu/cgi-bin/MetGenMAP/home.cgi</a></strong>  </p>\n<p>Plant MetGenMAP：在生化途径的背景下全面挖掘和整合基因表达和代谢物变化的网络工具 </p>\n<p><strong><a href=\"http://itak.feilab.net/cgi-bin/itak/index.cgi\">http://itak.feilab.net/cgi-bin/itak/index.cgi</a></strong> </p>\n<p>iTAK：用于识别和分类植物转录因子和蛋白激酶的软件包  </p>\n<p><strong><a href=\"http://plantpan2.itps.ncku.edu.tw/\">http://plantpan2.itps.ncku.edu.tw/</a></strong>  </p>\n<p>PlantPAN：检测植物转录因子结合位点的工具  </p>\n<p><strong><a href=\"http://guoweilong.github.io/SnpHub/\">http://guoweilong.github.io/SnpHub/</a></strong>  </p>\n<p>SnpHub：用于探索大规模基因组变异数据的统一的网络服务器框架 </p>\n<hr>\n<blockquote>\n<p>交流请联系：</p>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;\">&#108;&#x69;&#x78;&#x69;&#x61;&#x6e;&#x67;&#49;&#49;&#55;&#x34;&#50;&#x33;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#105;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;\">&#x6c;&#x69;&#120;&#105;&#x61;&#110;&#x67;&#x31;&#49;&#55;&#52;&#50;&#51;&#64;&#x66;&#111;&#x78;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p>\n</blockquote>"},{"title":"群体遗传学与重测序分析","abbrlink":"4b137aba","date":"2020-01-07T07:23:30.000Z","_content":"\n分子层面对生物的研究，在个体水平上主要是看单个基因的变化以及全转录本的变化（RNA-seq）；在对个体的研究的基础上，开始了群体水平的研究。如果说常规的遗传学主要的研究对象是个体或者个体家系的话，那么群体遗传学则是主要研究由不同个体组成的群体的遗传规律。\n<!-- more -->\n在测序技术大力发展之前，对群体主要是依靠表型进行研究，如加拉巴哥群岛的13中鸟雀有着不同的喙，达尔文认为这是自然选择造成的后果$^{[1]}$。达尔文的进化论对应的观点可以简单概括为“物竞天择，适者生存”，这也是最为大众所接受的一种进化学说。直到1968年，日本遗传学家提出了中性进化理论$^{[2]}$，也叫中性演化理论。中性理论的提出很大程度上是基于分子生物化学的发展。可以这样理解中性理论：一群人抽奖，在没有内幕的情况下，每个人抽到一等奖的概率是相等的，这个可能性和参与抽奖的人的身高、年龄、爱好等因素都没有关系。中性理论常作为群体遗传研究中的假设理论（CK）来计算其他各种统计指标。\n群体遗传学，研究的单位是群体，比如粳稻、籼稻、野生稻，就能够构成不同的群体；我们国内的各省份的水稻也可以作为一个个群体。 群体遗传学大概可以分为群体内的研究和群体间的研究。比如研究云南元阳的水稻的遗传多样性；如果研究是的云南元阳的水稻和东北的水稻，那就可以算成是群体间的研究。群体间和群体内的研究是相互的。\n测序价格的急剧下降$^{[3]}$使得大规模的群体测序得以实现。\n\n{% asset_img 1.jpg %}\n\n------\n\n# 几种变异类型\n\n常见的变异类型有SNP、IdDel、SV、CNV等。重测序中最关注的是SNP，其次是InDel。其他的几种结构变异的研究不是太多。\n\n{% asset_img 2.png %}\n\n# 重测序和从头组装\n\n有参考基因组的物种的全基因组测序叫做重测序，没有参考基因组的物种的全基因组测序则需要从头组装。随着测序价格的降低，越来越多物种的参考基因组都已经测序组装完成。*plant genomes*$^{[4]}$网站实时显示全基因组测序已经完成的植物，其中2012年以后爆发式增长。在群体遗传学研究中更多的是有参考基因组的物种，尤其是模式物种，植物中常见的是拟南芥、水稻和玉米。\n{% asset_img 3.png %}\n\n# 重测序分析流程\n\n主要的分析流程见下图。现在的测序公司基本上都会帮客户完成整个的分析流程，因为主要耗费的资源是计算资源。我认为在整个分析的流程中最重要的是Linux目录的构建，混乱的目录会导致后续的分析频频出问题，重测序分析会生成很多的中间文件，良好的目录管理会使得项目分析流程井然有序。\n该部分涉及到的软件的安装和基础的Linux基础知识就不详细说明了。\n{% asset_img 4.png %}\n\n{% asset_img 5.png %}\n\n# 群体进化选择\n\n## 正选择\n\n正选择似乎可以更好地用自然选择来解释。就是一个基因or位点能够使个体有着更强的生存力或者是育性，这样就会使得这个个体的后代更多，如此一来，这个基因or位点在群体中就越来越多。\n{% asset_img 6.png %}\n正选择能够使有利的突变基因or位点在群体中得到传播，但是与此同时却降低了群体的多态性水平。也就是说原先该位点周围的核苷酸组成是多样性的，在经过正选择之后，这个位点周围核苷酸的多样性就渐渐的趋于同质化了。这就好比一块田，里面本来有水稻和稗草及其他杂草，由于稗草的适应性增强，稗草在逐渐增多，水稻慢慢变少，最后甚至是只剩下了稗草。\n我们将这种选择之后多态性降低的情况叫做选择扫荡（Selective Sweep)。检测选择扫荡的软件有SweeD$^{[7]}$。选择扫荡有可能是人工选择的结果，如2014年 Nature Genetics关于非洲栽培稻的文章就使用了SweeD来检测非洲栽培稻基因组上受人工选择的区域$^{[8]}$。\n{% asset_img 7.png %}\n\n## 负选择\n\n负选择和正选择刚好是相反的。简单理解成群体中的某个个体出现了一个致命的突变，从而自己或者是后代从群体中被淘汰。这也导致群体中该位点的多态性的降低。就好比我有10株水稻，其中一株在成长过程中突然不见了，那么对我的这个小的水稻群体来说，这个消失的水稻的独有的位点在群体中就不见了，整体的多态性就降低了。\n{% asset_img 8.png %}\n\n## 平衡选择\n\n平衡选择指多个等位基因在一个群体的基因库中以高于遗传漂变预期的频率被保留，如杂合子优势。\n{% asset_img 9.png %}\n\n\n\n平衡选择检测的算法有BetaScan2$^{[10]}$，这是个Python脚本，输入文件只需要过滤好的SNP数据即可。\n\n------\n\n# 群体遗传学中的统计指标\n\n## 群体多态性参数\n\n计算公式为：\n$$\\theta = 4N_e\\mu$$\n其中$N_e$是有效群体大小，$\\mu$是每个位点的突变速率。*但是群体大小往往是无法精确知道的，需要对其进行估计。*\n\n## 分离位点数目\n\n分离位点数$\\theta_w$是$\\theta$的估计值，表示相关基因在多序列比对中表现出多态性的位置。计算公式为：\n$$\\theta_w = \\frac{K}{a_n}$$\n其中$K$为分离位点数量，比如SNP数量。\n$a_n$为个体数量的倒数和：\n$$a_n = \\sum^{n-1}_{i = 1}\\frac{1}{i}$$\n\n## 核苷酸多样性$\\pi$\n\n$\\pi$指的是核苷酸多样性，值越大说明核苷酸多样性越高。通常用于衡量群体内的核苷酸多样性，也可以用来推演进化关系$^{[11]}$。计算公式为：\n$$\\pi = \\sum_{ij}x_ix_j\\pi_{ij}=2*\\sum_{i = 2}^{n}\\sum_{j=1}^{i-1}x_ix_j\\pi{ij}$$\n可以理解成现在群体内两两求$\\pi$，再计算群体的均值。计算的软件最常见的是*vcftools*，也有对应的R包*PopGenome*。通常是选定有一定的基因组区域，设定好窗口大小，然后滑动窗口进行计算。\n3KRGP文章就计算了水稻不同亚群间4号染色体部分区域上的$\\pi$值$^{[12]}$，能够看出控制水稻籽粒落粒性的基因*Sh4*$^{[13]}$位置多态性在所有的亚群中都降低了。说明这个基因在所有的亚群中都是受到选择的，这可能是人工选择的结果。\n{% asset_img 11.png %}\n\n## 群体内选择检验：Tajima's D\n\nTajima's D是日本学者Tajima Fumio 1989年提出的一种统计检验方法，用于检验DNA序列在演化过程中是否遵循中性演化模型$^{[14]}$。计算公式为：\n$$D=\\frac{\\pi-\\theta_w}{\\sqrt{V(\\pi-\\theta_w)}}$$\nD值大小有如下三种生物学意义：\n{% asset_img 12.png %}\n\n## 群体间分歧度检验：*$F_{st}$*\n\n$F_{st}$叫固定分化指数，用于估计亚群间平均多态性大小与整个种群平均多态性大小的差异，反映的是群体结构的变化。其简单估计的计算公式为：\n$$F_{st}=\\frac{\\pi_{Between}-\\pi_{Within}}{\\pi_{Between}}$$\n$F_{st}$的取值范围是[0,1]。当$F_{st}=1$时，表明亚群间有着明显的种群分化。\n在中性进化条件下，$F_{st}$的大小主要取决于遗传漂变和迁移等因素的影响。假设种群中的某个等位基因因为对特定的生境的适应度较高而经历适应性选择，那该基因的频率在种群中会升高，种群的分化水平增大，使得种群有着较高的$F_{st}$值。\n$F_{st}$值可以和GWAS的结果一起进行分析，$F_{st}$超过一定阈值的区域往往和GWAS筛选到的位点是一致的，如2018年棉花重测序的文章$^{[15]}$：\n{% asset_img 13.png %}\n\n## 群体分歧度检验：ROD\n\nROD可以基于野生群体和驯化群体间核苷酸多态性参数$\\pi$的差异识别选择型号，也可以测量驯化群体和野生型群体相比损失的多态性。计算公式为：\n$$ROD=1-\\frac{\\pi_{驯化群体}}{\\pi_{野生群体}}$$\n和$F_{st}$一样，ROD也可以和GWAS结合起来：\n\n{% asset_img 14.png %}\n\n# 群体结构分析\n\n群体结构分析可以简单理解成采样测序的这些个体可以分成几个小组，以及给每个个体之间的远近关系是怎么样的。群体结构分析三剑客， 分别是*进化树*、*PCA*和*群体结构图*。\n\n## 进化树\n\n进化树就是将个体按照远近关系分别连接起来的图。\n\n### 进化树算法\n\n#### 基于距离\n\n- 非加权算术平均对群法UPGMA\n- 邻接法Neighbor-joining\n\n#### 基于特征\n\n- 最大简约法—最小变化数（祖先状态最小化）\n- 最大似然法—所有枝长和模型参数最优化\n- 贝叶斯推断—基于后验概率\n\n### 进化树类型\n\n- 有根树\n  有根树就是所有的个体都有一个共同的祖先。就像这样的：\n  {% asset_img 15.png %}\n- 无根树\n  无根树只展示个体间的距离，无共同祖先，就像这样的：\n  {% asset_img 16.png %}\n\n### 进化树软件\n\n常用的绘图软件是*Phylip*和*Snpphylo*。进化树修饰的软件有*MEGA*，*ggtree*等，推荐网页版工具[iTOL](https://itol.embl.de/)，无比强大。\n外群定根法：当群体的个体的差异很小时，可以引入其他物种作为根。如在对三叶草建树时可以引入水稻的序列作为根进行建树。\n\n## PCA图\n\nPCA是很常见的降维方法，如微生物研究中常用来检验样品分群情况。PCA计算的软件很多，plink可以直接用vcf文件计算PCA，R语言也可以进行PCA计算。\n{% asset_img 17.png %}\nPCA图在群体重测序中有如下几种作用：\n\n- 查看分群信息，就是测序的样品大概分成几个群。如2015年大豆重测序文章的图[17]:\n  {% asset_img 18.png %}\n- 检测离群样本\n  离群样本就是在PCA图看起来和其他样本差异很大的样本，有可能是这个样本的遗传背景和其他样本本来就很大，也有可能是样本混淆了，比如了将野生型的样本标记成了驯化种进行测序。如果有离群样本，那在后续的类似于GWAS的分析中就需要将离群样本进行剔除。当然如果样本本来就是个很特别的，那就另当别论。\n- 推断亚群进化关系\n  可以从PCA图可以看出群体的进化关系，尤其是地理位置的进化关系。\n  {% asset_img 19.png %}\n\n## 群体分层图\n\n进化树和PCA能够看出来群体是不是分层的，但是无法知道群体分成几个群合适，也无法看出群体间的基因交流，更无法看出个体的混血程度。这时候就需要群体分层图了。\n{% asset_img 20.png %}\n群体分层图的本质是堆叠的柱状图，和微生物研究中的物种组成柱状图类似。每个柱子是一个样本，可以看出一个样本的血缘组成，有几种颜色就说明该样本由几个祖先而来，如果只有一个色，那就说明这个个体很纯。\n常用的软件有*structure*和*ADMIXTURE*$^{[19]}$。两款软件给出的结果都是$K$值。一般选择最低的点为最终的$K$值。\n{% asset_img 21.png %}\n群体分层图的可视化有个极强大的R包：Pophelper$^{[20]}$。\n{% asset_img 22.png %}\n\n## 其他\n\n可以将进化树和群体分层图结合进行展示，如下图：\n\n{% asset_img 23.png %}\n\n# 连锁不平衡分析\n\n先了解下概念，此处借鉴基迪奥生物网站的解释[22]。\n要理解 LD 衰减图，我们就必须先理解连锁不平衡（Linkage disequilibrium，LD）的概念。连锁不平衡是由两个名词构成，连锁 + 不平衡。前者，很容易让我们产生概念混淆；后者，让这个概念变得愈加晦涩。因此从一个类似的概念入手，大家可能更容易理解 LD 的概念，那就是基因的共表达。\n基因的共表达，通常指的是两个基因的表达量呈现相关性。比较常见的例子就是：转录组因子和靶基因间的关系。因为转录因子对它的靶基因有正调控作用，所以转录因子的表达量提高会导致靶基因的表达量也上调，两者往往存在正相关关系。这个正相关关系，可以使用相关系数 $r^2$ 来度量，这个数值在 - 1~1 之间。总而言之，相关性可以理解为两个元素共同变化，步调一致。\n类似的，连锁不平衡（LD）就是度量两个分子标记的基因型变化是否步调一致，存在相关性的指标。如果两个 SNP 标记位置相邻，那么在群体中也会呈现基因型步调一致的情况。比如有两个基因座，分别对应 A/a 和 B/b 两种等位基因。如果两个基因座是相关的，我们将会看到某些基因型往往共同遗传，即某些单倍型的频率会高于期望值。\n参照王荣焕等$^{[23]}$的方法进行LD参数计算：\n{% asset_img 24.png %}\n\n## LD衰减分析\n\n随着标记间的距离增加，平均的LD程度将降低，呈现出衰减状态，这种情况叫LD衰减。LD衰减分析的作用：\n\n- 判断群体的多样性差异，一般野生型群体的LD衰减快于驯化群体；\n  {% asset_img 25.png %}\n- 估计GWAS中标记的覆盖度，通过比较LD衰减距离(0.1)和标记间的平均距离来判断标记是否足够。\n\n------\n\n# GWAS\n\nGWAS(genome-wide association study)，全基因组关联分析，常用在医学和农学领域。简单理解成将SNP等遗传标记和表型数据进行关联分析，检测和表型相关的位点，然后再倒回去找到对应的基因，研究其对表型的影响。这些被研究的表型在医学上常常是疾病的表型；在农学上常常是受关注的农艺性状，比如水稻的株高、产量、穗粒数等。GWAS思想首次提出是在心肌梗塞的治疗上[24]，首次应用是在2005年的文章上$^{[25]}$。\n{% asset_img 26.png %}\n\n## GWAS流程\n\n{% asset_img 27.png %}\n\n- 样品准备就是要收集不同的个体，比如3KRGP就3000多个水稻材料[12]，然后对这些材料进行全基因组测序，还需要表型数据，比如水稻的株高、产量等。\n- 基因型的检测就是前面的变异检测，只是变异检测完的SNP数据还需要过滤才能进行后续的关联分析。\n- 关联分析这一步只需要将基因型数据和表型数据丢给软件就行了。\n\n## GWAS数学模型\n\n目前使用最广泛的模型是混合线性模型$^{[26]}$：\n{% asset_img 28.png %}\n所有的参数软件（如Emmax）会自动完成计算。\n\n## GWAS结果\n\nGWAS结果文件通常只有两个图，一个是曼哈顿图，另外一个是Q-Q图。一般是先看Q-Q图，如果Q-Q正常，曼哈顿图的结果才有意义。\n\n- Q-Q图\n  用于推断关联分析使用的模型是否正确，如下图：\n  {% asset_img 29.png %}\n  {% asset_img 30.png %}\n- 如果模型不正确，那就只能换算法或者软件。\n- 曼哈顿图\n  之所以叫曼哈顿图，是由于这种图长得像曼哈顿：\n  {% asset_img 31.png %}\n  {% asset_img 32.png %}\n  图中横着的虚线通常是研究者设定的，最严格的的阈值线是Bonfferonin($\\frac{0.05}{total{SNPs}}$)。阈值线以上的点就是很值得关注的位点。\n  后续就是验证实验了，比如验证不同的单倍型的生物学功能。\n\n------\n\n# 其他统计指标和算法\n\n## MSMC\n\nMSMC（multiple sequentially Markovian coalescent）$^{[27]}$，底层算法很复杂，类似于PSMC。MSMC的主要功能是推断有效群体大小和群体分离历史。\n\n{% asset_img 33.png %}这样看起来更直观：\n{% asset_img 34.png %}\n\n{% asset_img 35.png %}\n\n## LAMP\n\nLAMP(Local Ancestry in Admixed Populations，混杂群体的局部族源推断)，用于推断采用聚类的方法假设同时检测的位点间不存在重组情况，对每组相邻的 SNP 进行检测分析$^{[28]}$，在运算速度和推断准确度上都有了质的飞跃。\n\n## Treemix\n\n用于推断群体分离和混合[29]。图是这样的：\n{% asset_img 36.png %}\n这种图和进化树长得特别相似，可以将得到的结果和进化树进行比较。如2019年NC上关于*Cushion willow*的文章中就用到了这种算法根据。图是这样的：\n{% asset_img 01.png %}\n\n{% asset_img 37.png %}\n\n前文提到的很多软件和算法都是用来推断群体进化的，也就是找到群体的祖先。都可以看成族源推断。具体的差异可以参考综述*法医族源推断的分子生物学进展*$^{[31]}$。\n\n------\n\n# 群体重测序方案推荐\n\n测序方案关系到后续的分析，不同的样本量对应不同的测序方法和分析方法。\n{% asset_img 38.png %}\n\n------\n\n# 参考文献\n\n[1]. [自然选择(维基百科)]([https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E9%80%89%E6%8B%A)\n[2]. Kimura, Motoo. \"Evolutionary rate at the molecular level.\" ***Nature***. 217.5129 (1968): 624-626 .\n[3]. [测序价格变化趋势](https://www.genome.gov/about-genomics/fact-sheets/DNA-Sequencing-Costs-Data)\n[4]. [plant genomes](https://www.plabipd.de/timeline_view.ep)\n[5]. DePristo, Mark A., et al. \"A framework for variation discovery and genotyping using next-generation DNA sequencing data.\" ***Nature Genetics***. 43.5 (2011): 491.\n[6]. Biswas, Shameek, and Joshua M. Akey. \"Genomic insights into positive selection.\" ***TRENDS in Genetics*** . 22.8 (2006): 437-446.\n[7]. Pavlidis, Pavlos, et al. \"Sweed: likelihood-based detection of selective sweeps in thousands of genomes.\" ***Molecular biology and evolution*** 30.9 (2013): 2224-2234.\n[8]. Wang, Muhua, et al. \"The genome sequence of African rice (*Oryza glaberrima*) and evidence for independent domestication.\" ***Nature Genetics*** 46.9 (2014): 982.\n[9]. Bamshad, Michael, and Stephen P. Wooding. \"Signatures of natural selection in the human genome.\" ***Nature Reviews Genetics*** 4.2 (2003): 99.\n[10]. Siewert, Katherine M., and Benjamin F. Voight. \"BetaScan2: Standardized statistics to detect balancing selection utilizing substitution data.\" ***BioRxiv*** (2018): 497255.\n[11]. Yu, N.; Jensen-Seaman MI; Chemnick L; Ryder O; Li WH (March 2004).  ***Genetics***. 166 (3): 1375–83.\n[12]. Wang, Wensheng, et al. \"Genomic variation in 3,010 diverse accessions of Asian cultivated rice.\" ***Nature*** 557.7703 (2018): 43.\n[13]. Li, C., Zhou, A. & Sang, T. Rice domestication by reducing shattering. ***Science*** 311, 1936–1939 (2006).\n[14]. Tajima, Fumio. \"Statistical method for testing the neutral mutation hypothesis by DNA polymorphism.\" ***Genetics*** 123.3 (1989): 585-595.\n[15]. Du, Xiongming, et al. \"Resequencing of 243 diploid cotton accessions based on an updated A genome identifies the genetic basis of key agronomic traits.\" ***Nature Genetics*** 50.6 (2018): 796.\n[16]. Lu, Kun, et al. \"Whole-genome resequencing reveals Brassica napus origin and genetic loci involved in its improvement.\" ***Nature communications***. 10.1 (2019): 1154.\n[17]. Zhou, Z., Jiang, Y., Wang, Z. et al. Resequencing 302 wild and cultivated accessions identifies genes related to domestication and improvement in soybean. ***Nat Biotechnol*** 33, 408–414 (2015).\n[18]. Liang, Z., Duan, S., Sheng, J. et al. Whole-genome resequencing of 472 Vitis accessions for grapevine diversity and demographic history analyses. ***Nat Commun*** 10, 1190 (2019).\n[19]. Alexander, D.H., Lange, K. Enhancements to the ADMIXTURE algorithm for individual ancestry estimation. ***BMC Bioinformatics*** 12, 246 (2011).\n[20]. Francis, Roy M. \"pophelper: an R package and web app to analyse and visualize population structure.\" ***Molecular ecology resources*** 17.1 (2017): 27-32.\n[21]. [http://www.royfrancis.com/pophelper/articles/index.html](http://www.royfrancis.com/pophelper/articles/index.html).\n[22]. [https://www.omicshare.com/forum/thread-878-1-1.html](https://www.omicshare.com/forum/thread-878-1-1.html).\n[23]. WANG Rong-Huan, WANG Tian-Yu, LI Yu. Linkage disequilibrium in plant genomes[J]. ***HEREDITAS***, 2007, 29(11): 1317-1323.\n[24]. Ozaki, K., Ohnishi, Y., Iida, A. et al. Functional SNPs in the lymphotoxin-α gene that are associated with susceptibility to myocardial infarction. ***Nat Genet*** 32, 650–654 (2002).\n[25]. Klein, Robert J., et al. \"Complement factor H polymorphism in age-related macular degeneration.\" ***Science*** 308.5720 (2005): 385-389.\n[26]. Yu, Jianming, et al. \"A unified mixed-model method for association mapping that accounts for multiple levels of relatedness.\" ***Nature genetics*** 38.2 (2006): 203.\n[27]. Schiffels, Stephan, and Richard Durbin. \"Inferring human population size and separation history from multiple genome sequences.\" ***Nature genetics*** 46.8 (2014): 919.\n[28]. Sankararaman, Sriram, et al. \"Estimating local ancestry in admixed populations.\" ***The American Journal of Human Genetics*** 82.2 (2008): 290-303.\n[29]. Pickrell, Joseph K., and Jonathan K. Pritchard. \"Inference of population splits and mixtures from genome-wide allele frequency data.\" ***PLoS genetics*** 8.11 (2012): e1002967.\n[30]. Chen, Jia-hui, et al. \"Genome-wide analysis of Cushion willow provides insights into alpine plant divergence in a biodiversity hotspot.\" ***Nature communications*** 10.1 (2019): 1-12.\n[31]. 孙宽，侯一平。法医族源推断的分子生物学进展 [J]. ***法医学杂志***，2018,34 (03):286-293.\n[32]. [genek.tv](http://www.genek.tv/)\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","source":"_posts/群体遗传学与重测序分析.md","raw":"---\ntitle: 群体遗传学与重测序分析\ncategories: 生物信息学\ntags: 生物信息学\nabbrlink: 4b137aba\ndate: 2020-01-07 15:23:30\n---\n\n分子层面对生物的研究，在个体水平上主要是看单个基因的变化以及全转录本的变化（RNA-seq）；在对个体的研究的基础上，开始了群体水平的研究。如果说常规的遗传学主要的研究对象是个体或者个体家系的话，那么群体遗传学则是主要研究由不同个体组成的群体的遗传规律。\n<!-- more -->\n在测序技术大力发展之前，对群体主要是依靠表型进行研究，如加拉巴哥群岛的13中鸟雀有着不同的喙，达尔文认为这是自然选择造成的后果$^{[1]}$。达尔文的进化论对应的观点可以简单概括为“物竞天择，适者生存”，这也是最为大众所接受的一种进化学说。直到1968年，日本遗传学家提出了中性进化理论$^{[2]}$，也叫中性演化理论。中性理论的提出很大程度上是基于分子生物化学的发展。可以这样理解中性理论：一群人抽奖，在没有内幕的情况下，每个人抽到一等奖的概率是相等的，这个可能性和参与抽奖的人的身高、年龄、爱好等因素都没有关系。中性理论常作为群体遗传研究中的假设理论（CK）来计算其他各种统计指标。\n群体遗传学，研究的单位是群体，比如粳稻、籼稻、野生稻，就能够构成不同的群体；我们国内的各省份的水稻也可以作为一个个群体。 群体遗传学大概可以分为群体内的研究和群体间的研究。比如研究云南元阳的水稻的遗传多样性；如果研究是的云南元阳的水稻和东北的水稻，那就可以算成是群体间的研究。群体间和群体内的研究是相互的。\n测序价格的急剧下降$^{[3]}$使得大规模的群体测序得以实现。\n\n{% asset_img 1.jpg %}\n\n------\n\n# 几种变异类型\n\n常见的变异类型有SNP、IdDel、SV、CNV等。重测序中最关注的是SNP，其次是InDel。其他的几种结构变异的研究不是太多。\n\n{% asset_img 2.png %}\n\n# 重测序和从头组装\n\n有参考基因组的物种的全基因组测序叫做重测序，没有参考基因组的物种的全基因组测序则需要从头组装。随着测序价格的降低，越来越多物种的参考基因组都已经测序组装完成。*plant genomes*$^{[4]}$网站实时显示全基因组测序已经完成的植物，其中2012年以后爆发式增长。在群体遗传学研究中更多的是有参考基因组的物种，尤其是模式物种，植物中常见的是拟南芥、水稻和玉米。\n{% asset_img 3.png %}\n\n# 重测序分析流程\n\n主要的分析流程见下图。现在的测序公司基本上都会帮客户完成整个的分析流程，因为主要耗费的资源是计算资源。我认为在整个分析的流程中最重要的是Linux目录的构建，混乱的目录会导致后续的分析频频出问题，重测序分析会生成很多的中间文件，良好的目录管理会使得项目分析流程井然有序。\n该部分涉及到的软件的安装和基础的Linux基础知识就不详细说明了。\n{% asset_img 4.png %}\n\n{% asset_img 5.png %}\n\n# 群体进化选择\n\n## 正选择\n\n正选择似乎可以更好地用自然选择来解释。就是一个基因or位点能够使个体有着更强的生存力或者是育性，这样就会使得这个个体的后代更多，如此一来，这个基因or位点在群体中就越来越多。\n{% asset_img 6.png %}\n正选择能够使有利的突变基因or位点在群体中得到传播，但是与此同时却降低了群体的多态性水平。也就是说原先该位点周围的核苷酸组成是多样性的，在经过正选择之后，这个位点周围核苷酸的多样性就渐渐的趋于同质化了。这就好比一块田，里面本来有水稻和稗草及其他杂草，由于稗草的适应性增强，稗草在逐渐增多，水稻慢慢变少，最后甚至是只剩下了稗草。\n我们将这种选择之后多态性降低的情况叫做选择扫荡（Selective Sweep)。检测选择扫荡的软件有SweeD$^{[7]}$。选择扫荡有可能是人工选择的结果，如2014年 Nature Genetics关于非洲栽培稻的文章就使用了SweeD来检测非洲栽培稻基因组上受人工选择的区域$^{[8]}$。\n{% asset_img 7.png %}\n\n## 负选择\n\n负选择和正选择刚好是相反的。简单理解成群体中的某个个体出现了一个致命的突变，从而自己或者是后代从群体中被淘汰。这也导致群体中该位点的多态性的降低。就好比我有10株水稻，其中一株在成长过程中突然不见了，那么对我的这个小的水稻群体来说，这个消失的水稻的独有的位点在群体中就不见了，整体的多态性就降低了。\n{% asset_img 8.png %}\n\n## 平衡选择\n\n平衡选择指多个等位基因在一个群体的基因库中以高于遗传漂变预期的频率被保留，如杂合子优势。\n{% asset_img 9.png %}\n\n\n\n平衡选择检测的算法有BetaScan2$^{[10]}$，这是个Python脚本，输入文件只需要过滤好的SNP数据即可。\n\n------\n\n# 群体遗传学中的统计指标\n\n## 群体多态性参数\n\n计算公式为：\n$$\\theta = 4N_e\\mu$$\n其中$N_e$是有效群体大小，$\\mu$是每个位点的突变速率。*但是群体大小往往是无法精确知道的，需要对其进行估计。*\n\n## 分离位点数目\n\n分离位点数$\\theta_w$是$\\theta$的估计值，表示相关基因在多序列比对中表现出多态性的位置。计算公式为：\n$$\\theta_w = \\frac{K}{a_n}$$\n其中$K$为分离位点数量，比如SNP数量。\n$a_n$为个体数量的倒数和：\n$$a_n = \\sum^{n-1}_{i = 1}\\frac{1}{i}$$\n\n## 核苷酸多样性$\\pi$\n\n$\\pi$指的是核苷酸多样性，值越大说明核苷酸多样性越高。通常用于衡量群体内的核苷酸多样性，也可以用来推演进化关系$^{[11]}$。计算公式为：\n$$\\pi = \\sum_{ij}x_ix_j\\pi_{ij}=2*\\sum_{i = 2}^{n}\\sum_{j=1}^{i-1}x_ix_j\\pi{ij}$$\n可以理解成现在群体内两两求$\\pi$，再计算群体的均值。计算的软件最常见的是*vcftools*，也有对应的R包*PopGenome*。通常是选定有一定的基因组区域，设定好窗口大小，然后滑动窗口进行计算。\n3KRGP文章就计算了水稻不同亚群间4号染色体部分区域上的$\\pi$值$^{[12]}$，能够看出控制水稻籽粒落粒性的基因*Sh4*$^{[13]}$位置多态性在所有的亚群中都降低了。说明这个基因在所有的亚群中都是受到选择的，这可能是人工选择的结果。\n{% asset_img 11.png %}\n\n## 群体内选择检验：Tajima's D\n\nTajima's D是日本学者Tajima Fumio 1989年提出的一种统计检验方法，用于检验DNA序列在演化过程中是否遵循中性演化模型$^{[14]}$。计算公式为：\n$$D=\\frac{\\pi-\\theta_w}{\\sqrt{V(\\pi-\\theta_w)}}$$\nD值大小有如下三种生物学意义：\n{% asset_img 12.png %}\n\n## 群体间分歧度检验：*$F_{st}$*\n\n$F_{st}$叫固定分化指数，用于估计亚群间平均多态性大小与整个种群平均多态性大小的差异，反映的是群体结构的变化。其简单估计的计算公式为：\n$$F_{st}=\\frac{\\pi_{Between}-\\pi_{Within}}{\\pi_{Between}}$$\n$F_{st}$的取值范围是[0,1]。当$F_{st}=1$时，表明亚群间有着明显的种群分化。\n在中性进化条件下，$F_{st}$的大小主要取决于遗传漂变和迁移等因素的影响。假设种群中的某个等位基因因为对特定的生境的适应度较高而经历适应性选择，那该基因的频率在种群中会升高，种群的分化水平增大，使得种群有着较高的$F_{st}$值。\n$F_{st}$值可以和GWAS的结果一起进行分析，$F_{st}$超过一定阈值的区域往往和GWAS筛选到的位点是一致的，如2018年棉花重测序的文章$^{[15]}$：\n{% asset_img 13.png %}\n\n## 群体分歧度检验：ROD\n\nROD可以基于野生群体和驯化群体间核苷酸多态性参数$\\pi$的差异识别选择型号，也可以测量驯化群体和野生型群体相比损失的多态性。计算公式为：\n$$ROD=1-\\frac{\\pi_{驯化群体}}{\\pi_{野生群体}}$$\n和$F_{st}$一样，ROD也可以和GWAS结合起来：\n\n{% asset_img 14.png %}\n\n# 群体结构分析\n\n群体结构分析可以简单理解成采样测序的这些个体可以分成几个小组，以及给每个个体之间的远近关系是怎么样的。群体结构分析三剑客， 分别是*进化树*、*PCA*和*群体结构图*。\n\n## 进化树\n\n进化树就是将个体按照远近关系分别连接起来的图。\n\n### 进化树算法\n\n#### 基于距离\n\n- 非加权算术平均对群法UPGMA\n- 邻接法Neighbor-joining\n\n#### 基于特征\n\n- 最大简约法—最小变化数（祖先状态最小化）\n- 最大似然法—所有枝长和模型参数最优化\n- 贝叶斯推断—基于后验概率\n\n### 进化树类型\n\n- 有根树\n  有根树就是所有的个体都有一个共同的祖先。就像这样的：\n  {% asset_img 15.png %}\n- 无根树\n  无根树只展示个体间的距离，无共同祖先，就像这样的：\n  {% asset_img 16.png %}\n\n### 进化树软件\n\n常用的绘图软件是*Phylip*和*Snpphylo*。进化树修饰的软件有*MEGA*，*ggtree*等，推荐网页版工具[iTOL](https://itol.embl.de/)，无比强大。\n外群定根法：当群体的个体的差异很小时，可以引入其他物种作为根。如在对三叶草建树时可以引入水稻的序列作为根进行建树。\n\n## PCA图\n\nPCA是很常见的降维方法，如微生物研究中常用来检验样品分群情况。PCA计算的软件很多，plink可以直接用vcf文件计算PCA，R语言也可以进行PCA计算。\n{% asset_img 17.png %}\nPCA图在群体重测序中有如下几种作用：\n\n- 查看分群信息，就是测序的样品大概分成几个群。如2015年大豆重测序文章的图[17]:\n  {% asset_img 18.png %}\n- 检测离群样本\n  离群样本就是在PCA图看起来和其他样本差异很大的样本，有可能是这个样本的遗传背景和其他样本本来就很大，也有可能是样本混淆了，比如了将野生型的样本标记成了驯化种进行测序。如果有离群样本，那在后续的类似于GWAS的分析中就需要将离群样本进行剔除。当然如果样本本来就是个很特别的，那就另当别论。\n- 推断亚群进化关系\n  可以从PCA图可以看出群体的进化关系，尤其是地理位置的进化关系。\n  {% asset_img 19.png %}\n\n## 群体分层图\n\n进化树和PCA能够看出来群体是不是分层的，但是无法知道群体分成几个群合适，也无法看出群体间的基因交流，更无法看出个体的混血程度。这时候就需要群体分层图了。\n{% asset_img 20.png %}\n群体分层图的本质是堆叠的柱状图，和微生物研究中的物种组成柱状图类似。每个柱子是一个样本，可以看出一个样本的血缘组成，有几种颜色就说明该样本由几个祖先而来，如果只有一个色，那就说明这个个体很纯。\n常用的软件有*structure*和*ADMIXTURE*$^{[19]}$。两款软件给出的结果都是$K$值。一般选择最低的点为最终的$K$值。\n{% asset_img 21.png %}\n群体分层图的可视化有个极强大的R包：Pophelper$^{[20]}$。\n{% asset_img 22.png %}\n\n## 其他\n\n可以将进化树和群体分层图结合进行展示，如下图：\n\n{% asset_img 23.png %}\n\n# 连锁不平衡分析\n\n先了解下概念，此处借鉴基迪奥生物网站的解释[22]。\n要理解 LD 衰减图，我们就必须先理解连锁不平衡（Linkage disequilibrium，LD）的概念。连锁不平衡是由两个名词构成，连锁 + 不平衡。前者，很容易让我们产生概念混淆；后者，让这个概念变得愈加晦涩。因此从一个类似的概念入手，大家可能更容易理解 LD 的概念，那就是基因的共表达。\n基因的共表达，通常指的是两个基因的表达量呈现相关性。比较常见的例子就是：转录组因子和靶基因间的关系。因为转录因子对它的靶基因有正调控作用，所以转录因子的表达量提高会导致靶基因的表达量也上调，两者往往存在正相关关系。这个正相关关系，可以使用相关系数 $r^2$ 来度量，这个数值在 - 1~1 之间。总而言之，相关性可以理解为两个元素共同变化，步调一致。\n类似的，连锁不平衡（LD）就是度量两个分子标记的基因型变化是否步调一致，存在相关性的指标。如果两个 SNP 标记位置相邻，那么在群体中也会呈现基因型步调一致的情况。比如有两个基因座，分别对应 A/a 和 B/b 两种等位基因。如果两个基因座是相关的，我们将会看到某些基因型往往共同遗传，即某些单倍型的频率会高于期望值。\n参照王荣焕等$^{[23]}$的方法进行LD参数计算：\n{% asset_img 24.png %}\n\n## LD衰减分析\n\n随着标记间的距离增加，平均的LD程度将降低，呈现出衰减状态，这种情况叫LD衰减。LD衰减分析的作用：\n\n- 判断群体的多样性差异，一般野生型群体的LD衰减快于驯化群体；\n  {% asset_img 25.png %}\n- 估计GWAS中标记的覆盖度，通过比较LD衰减距离(0.1)和标记间的平均距离来判断标记是否足够。\n\n------\n\n# GWAS\n\nGWAS(genome-wide association study)，全基因组关联分析，常用在医学和农学领域。简单理解成将SNP等遗传标记和表型数据进行关联分析，检测和表型相关的位点，然后再倒回去找到对应的基因，研究其对表型的影响。这些被研究的表型在医学上常常是疾病的表型；在农学上常常是受关注的农艺性状，比如水稻的株高、产量、穗粒数等。GWAS思想首次提出是在心肌梗塞的治疗上[24]，首次应用是在2005年的文章上$^{[25]}$。\n{% asset_img 26.png %}\n\n## GWAS流程\n\n{% asset_img 27.png %}\n\n- 样品准备就是要收集不同的个体，比如3KRGP就3000多个水稻材料[12]，然后对这些材料进行全基因组测序，还需要表型数据，比如水稻的株高、产量等。\n- 基因型的检测就是前面的变异检测，只是变异检测完的SNP数据还需要过滤才能进行后续的关联分析。\n- 关联分析这一步只需要将基因型数据和表型数据丢给软件就行了。\n\n## GWAS数学模型\n\n目前使用最广泛的模型是混合线性模型$^{[26]}$：\n{% asset_img 28.png %}\n所有的参数软件（如Emmax）会自动完成计算。\n\n## GWAS结果\n\nGWAS结果文件通常只有两个图，一个是曼哈顿图，另外一个是Q-Q图。一般是先看Q-Q图，如果Q-Q正常，曼哈顿图的结果才有意义。\n\n- Q-Q图\n  用于推断关联分析使用的模型是否正确，如下图：\n  {% asset_img 29.png %}\n  {% asset_img 30.png %}\n- 如果模型不正确，那就只能换算法或者软件。\n- 曼哈顿图\n  之所以叫曼哈顿图，是由于这种图长得像曼哈顿：\n  {% asset_img 31.png %}\n  {% asset_img 32.png %}\n  图中横着的虚线通常是研究者设定的，最严格的的阈值线是Bonfferonin($\\frac{0.05}{total{SNPs}}$)。阈值线以上的点就是很值得关注的位点。\n  后续就是验证实验了，比如验证不同的单倍型的生物学功能。\n\n------\n\n# 其他统计指标和算法\n\n## MSMC\n\nMSMC（multiple sequentially Markovian coalescent）$^{[27]}$，底层算法很复杂，类似于PSMC。MSMC的主要功能是推断有效群体大小和群体分离历史。\n\n{% asset_img 33.png %}这样看起来更直观：\n{% asset_img 34.png %}\n\n{% asset_img 35.png %}\n\n## LAMP\n\nLAMP(Local Ancestry in Admixed Populations，混杂群体的局部族源推断)，用于推断采用聚类的方法假设同时检测的位点间不存在重组情况，对每组相邻的 SNP 进行检测分析$^{[28]}$，在运算速度和推断准确度上都有了质的飞跃。\n\n## Treemix\n\n用于推断群体分离和混合[29]。图是这样的：\n{% asset_img 36.png %}\n这种图和进化树长得特别相似，可以将得到的结果和进化树进行比较。如2019年NC上关于*Cushion willow*的文章中就用到了这种算法根据。图是这样的：\n{% asset_img 01.png %}\n\n{% asset_img 37.png %}\n\n前文提到的很多软件和算法都是用来推断群体进化的，也就是找到群体的祖先。都可以看成族源推断。具体的差异可以参考综述*法医族源推断的分子生物学进展*$^{[31]}$。\n\n------\n\n# 群体重测序方案推荐\n\n测序方案关系到后续的分析，不同的样本量对应不同的测序方法和分析方法。\n{% asset_img 38.png %}\n\n------\n\n# 参考文献\n\n[1]. [自然选择(维基百科)]([https://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E9%80%89%E6%8B%A)\n[2]. Kimura, Motoo. \"Evolutionary rate at the molecular level.\" ***Nature***. 217.5129 (1968): 624-626 .\n[3]. [测序价格变化趋势](https://www.genome.gov/about-genomics/fact-sheets/DNA-Sequencing-Costs-Data)\n[4]. [plant genomes](https://www.plabipd.de/timeline_view.ep)\n[5]. DePristo, Mark A., et al. \"A framework for variation discovery and genotyping using next-generation DNA sequencing data.\" ***Nature Genetics***. 43.5 (2011): 491.\n[6]. Biswas, Shameek, and Joshua M. Akey. \"Genomic insights into positive selection.\" ***TRENDS in Genetics*** . 22.8 (2006): 437-446.\n[7]. Pavlidis, Pavlos, et al. \"Sweed: likelihood-based detection of selective sweeps in thousands of genomes.\" ***Molecular biology and evolution*** 30.9 (2013): 2224-2234.\n[8]. Wang, Muhua, et al. \"The genome sequence of African rice (*Oryza glaberrima*) and evidence for independent domestication.\" ***Nature Genetics*** 46.9 (2014): 982.\n[9]. Bamshad, Michael, and Stephen P. Wooding. \"Signatures of natural selection in the human genome.\" ***Nature Reviews Genetics*** 4.2 (2003): 99.\n[10]. Siewert, Katherine M., and Benjamin F. Voight. \"BetaScan2: Standardized statistics to detect balancing selection utilizing substitution data.\" ***BioRxiv*** (2018): 497255.\n[11]. Yu, N.; Jensen-Seaman MI; Chemnick L; Ryder O; Li WH (March 2004).  ***Genetics***. 166 (3): 1375–83.\n[12]. Wang, Wensheng, et al. \"Genomic variation in 3,010 diverse accessions of Asian cultivated rice.\" ***Nature*** 557.7703 (2018): 43.\n[13]. Li, C., Zhou, A. & Sang, T. Rice domestication by reducing shattering. ***Science*** 311, 1936–1939 (2006).\n[14]. Tajima, Fumio. \"Statistical method for testing the neutral mutation hypothesis by DNA polymorphism.\" ***Genetics*** 123.3 (1989): 585-595.\n[15]. Du, Xiongming, et al. \"Resequencing of 243 diploid cotton accessions based on an updated A genome identifies the genetic basis of key agronomic traits.\" ***Nature Genetics*** 50.6 (2018): 796.\n[16]. Lu, Kun, et al. \"Whole-genome resequencing reveals Brassica napus origin and genetic loci involved in its improvement.\" ***Nature communications***. 10.1 (2019): 1154.\n[17]. Zhou, Z., Jiang, Y., Wang, Z. et al. Resequencing 302 wild and cultivated accessions identifies genes related to domestication and improvement in soybean. ***Nat Biotechnol*** 33, 408–414 (2015).\n[18]. Liang, Z., Duan, S., Sheng, J. et al. Whole-genome resequencing of 472 Vitis accessions for grapevine diversity and demographic history analyses. ***Nat Commun*** 10, 1190 (2019).\n[19]. Alexander, D.H., Lange, K. Enhancements to the ADMIXTURE algorithm for individual ancestry estimation. ***BMC Bioinformatics*** 12, 246 (2011).\n[20]. Francis, Roy M. \"pophelper: an R package and web app to analyse and visualize population structure.\" ***Molecular ecology resources*** 17.1 (2017): 27-32.\n[21]. [http://www.royfrancis.com/pophelper/articles/index.html](http://www.royfrancis.com/pophelper/articles/index.html).\n[22]. [https://www.omicshare.com/forum/thread-878-1-1.html](https://www.omicshare.com/forum/thread-878-1-1.html).\n[23]. WANG Rong-Huan, WANG Tian-Yu, LI Yu. Linkage disequilibrium in plant genomes[J]. ***HEREDITAS***, 2007, 29(11): 1317-1323.\n[24]. Ozaki, K., Ohnishi, Y., Iida, A. et al. Functional SNPs in the lymphotoxin-α gene that are associated with susceptibility to myocardial infarction. ***Nat Genet*** 32, 650–654 (2002).\n[25]. Klein, Robert J., et al. \"Complement factor H polymorphism in age-related macular degeneration.\" ***Science*** 308.5720 (2005): 385-389.\n[26]. Yu, Jianming, et al. \"A unified mixed-model method for association mapping that accounts for multiple levels of relatedness.\" ***Nature genetics*** 38.2 (2006): 203.\n[27]. Schiffels, Stephan, and Richard Durbin. \"Inferring human population size and separation history from multiple genome sequences.\" ***Nature genetics*** 46.8 (2014): 919.\n[28]. Sankararaman, Sriram, et al. \"Estimating local ancestry in admixed populations.\" ***The American Journal of Human Genetics*** 82.2 (2008): 290-303.\n[29]. Pickrell, Joseph K., and Jonathan K. Pritchard. \"Inference of population splits and mixtures from genome-wide allele frequency data.\" ***PLoS genetics*** 8.11 (2012): e1002967.\n[30]. Chen, Jia-hui, et al. \"Genome-wide analysis of Cushion willow provides insights into alpine plant divergence in a biodiversity hotspot.\" ***Nature communications*** 10.1 (2019): 1-12.\n[31]. 孙宽，侯一平。法医族源推断的分子生物学进展 [J]. ***法医学杂志***，2018,34 (03):286-293.\n[32]. [genek.tv](http://www.genek.tv/)\n\n---\n\n>💌lixiang117423@gmail.com\n>\n>💌lixiang117423@foxmail.com\n","slug":"群体遗传学与重测序分析","published":1,"updated":"2021-02-02T07:38:44.107Z","_id":"ckwbqwcmr006cr0g09lp690l5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>分子层面对生物的研究，在个体水平上主要是看单个基因的变化以及全转录本的变化（RNA-seq）；在对个体的研究的基础上，开始了群体水平的研究。如果说常规的遗传学主要的研究对象是个体或者个体家系的话，那么群体遗传学则是主要研究由不同个体组成的群体的遗传规律。</p>\n<span id=\"more\"></span>\n<p>在测序技术大力发展之前，对群体主要是依靠表型进行研究，如加拉巴哥群岛的13中鸟雀有着不同的喙，达尔文认为这是自然选择造成的后果$^{[1]}$。达尔文的进化论对应的观点可以简单概括为“物竞天择，适者生存”，这也是最为大众所接受的一种进化学说。直到1968年，日本遗传学家提出了中性进化理论$^{[2]}$，也叫中性演化理论。中性理论的提出很大程度上是基于分子生物化学的发展。可以这样理解中性理论：一群人抽奖，在没有内幕的情况下，每个人抽到一等奖的概率是相等的，这个可能性和参与抽奖的人的身高、年龄、爱好等因素都没有关系。中性理论常作为群体遗传研究中的假设理论（CK）来计算其他各种统计指标。<br>群体遗传学，研究的单位是群体，比如粳稻、籼稻、野生稻，就能够构成不同的群体；我们国内的各省份的水稻也可以作为一个个群体。 群体遗传学大概可以分为群体内的研究和群体间的研究。比如研究云南元阳的水稻的遗传多样性；如果研究是的云南元阳的水稻和东北的水稻，那就可以算成是群体间的研究。群体间和群体内的研究是相互的。<br>测序价格的急剧下降$^{[3]}$使得大规模的群体测序得以实现。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/1.jpg\" class=\"\">\n\n<hr>\n<h1 id=\"几种变异类型\"><a href=\"#几种变异类型\" class=\"headerlink\" title=\"几种变异类型\"></a>几种变异类型</h1><p>常见的变异类型有SNP、IdDel、SV、CNV等。重测序中最关注的是SNP，其次是InDel。其他的几种结构变异的研究不是太多。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<h1 id=\"重测序和从头组装\"><a href=\"#重测序和从头组装\" class=\"headerlink\" title=\"重测序和从头组装\"></a>重测序和从头组装</h1><p>有参考基因组的物种的全基因组测序叫做重测序，没有参考基因组的物种的全基因组测序则需要从头组装。随着测序价格的降低，越来越多物种的参考基因组都已经测序组装完成。<em>plant genomes</em>$^{[4]}$网站实时显示全基因组测序已经完成的植物，其中2012年以后爆发式增长。在群体遗传学研究中更多的是有参考基因组的物种，尤其是模式物种，植物中常见的是拟南芥、水稻和玉米。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<h1 id=\"重测序分析流程\"><a href=\"#重测序分析流程\" class=\"headerlink\" title=\"重测序分析流程\"></a>重测序分析流程</h1><p>主要的分析流程见下图。现在的测序公司基本上都会帮客户完成整个的分析流程，因为主要耗费的资源是计算资源。我认为在整个分析的流程中最重要的是Linux目录的构建，混乱的目录会导致后续的分析频频出问题，重测序分析会生成很多的中间文件，良好的目录管理会使得项目分析流程井然有序。<br>该部分涉及到的软件的安装和基础的Linux基础知识就不详细说明了。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<h1 id=\"群体进化选择\"><a href=\"#群体进化选择\" class=\"headerlink\" title=\"群体进化选择\"></a>群体进化选择</h1><h2 id=\"正选择\"><a href=\"#正选择\" class=\"headerlink\" title=\"正选择\"></a>正选择</h2><p>正选择似乎可以更好地用自然选择来解释。就是一个基因or位点能够使个体有着更强的生存力或者是育性，这样就会使得这个个体的后代更多，如此一来，这个基因or位点在群体中就越来越多。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/6.png\" class=\"\">\n<p>正选择能够使有利的突变基因or位点在群体中得到传播，但是与此同时却降低了群体的多态性水平。也就是说原先该位点周围的核苷酸组成是多样性的，在经过正选择之后，这个位点周围核苷酸的多样性就渐渐的趋于同质化了。这就好比一块田，里面本来有水稻和稗草及其他杂草，由于稗草的适应性增强，稗草在逐渐增多，水稻慢慢变少，最后甚至是只剩下了稗草。<br>我们将这种选择之后多态性降低的情况叫做选择扫荡（Selective Sweep)。检测选择扫荡的软件有SweeD$^{[7]}$。选择扫荡有可能是人工选择的结果，如2014年 Nature Genetics关于非洲栽培稻的文章就使用了SweeD来检测非洲栽培稻基因组上受人工选择的区域$^{[8]}$。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/7.png\" class=\"\">\n\n<h2 id=\"负选择\"><a href=\"#负选择\" class=\"headerlink\" title=\"负选择\"></a>负选择</h2><p>负选择和正选择刚好是相反的。简单理解成群体中的某个个体出现了一个致命的突变，从而自己或者是后代从群体中被淘汰。这也导致群体中该位点的多态性的降低。就好比我有10株水稻，其中一株在成长过程中突然不见了，那么对我的这个小的水稻群体来说，这个消失的水稻的独有的位点在群体中就不见了，整体的多态性就降低了。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/8.png\" class=\"\">\n\n<h2 id=\"平衡选择\"><a href=\"#平衡选择\" class=\"headerlink\" title=\"平衡选择\"></a>平衡选择</h2><p>平衡选择指多个等位基因在一个群体的基因库中以高于遗传漂变预期的频率被保留，如杂合子优势。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/9.png\" class=\"\">\n\n\n\n<p>平衡选择检测的算法有BetaScan2$^{[10]}$，这是个Python脚本，输入文件只需要过滤好的SNP数据即可。</p>\n<hr>\n<h1 id=\"群体遗传学中的统计指标\"><a href=\"#群体遗传学中的统计指标\" class=\"headerlink\" title=\"群体遗传学中的统计指标\"></a>群体遗传学中的统计指标</h1><h2 id=\"群体多态性参数\"><a href=\"#群体多态性参数\" class=\"headerlink\" title=\"群体多态性参数\"></a>群体多态性参数</h2><p>计算公式为：<br>$$\\theta = 4N_e\\mu$$<br>其中$N_e$是有效群体大小，$\\mu$是每个位点的突变速率。<em>但是群体大小往往是无法精确知道的，需要对其进行估计。</em></p>\n<h2 id=\"分离位点数目\"><a href=\"#分离位点数目\" class=\"headerlink\" title=\"分离位点数目\"></a>分离位点数目</h2><p>分离位点数$\\theta_w$是$\\theta$的估计值，表示相关基因在多序列比对中表现出多态性的位置。计算公式为：<br>$$\\theta_w = \\frac{K}{a_n}$$<br>其中$K$为分离位点数量，比如SNP数量。<br>$a_n$为个体数量的倒数和：<br>$$a_n = \\sum^{n-1}_{i = 1}\\frac{1}{i}$$</p>\n<h2 id=\"核苷酸多样性-pi\"><a href=\"#核苷酸多样性-pi\" class=\"headerlink\" title=\"核苷酸多样性$\\pi$\"></a>核苷酸多样性$\\pi$</h2><p>$\\pi$指的是核苷酸多样性，值越大说明核苷酸多样性越高。通常用于衡量群体内的核苷酸多样性，也可以用来推演进化关系$^{[11]}$。计算公式为：<br>$$\\pi = \\sum_{ij}x_ix_j\\pi_{ij}=2<em>\\sum_{i = 2}^{n}\\sum_{j=1}^{i-1}x_ix_j\\pi{ij}$$<br>可以理解成现在群体内两两求$\\pi$，再计算群体的均值。计算的软件最常见的是</em>vcftools<em>，也有对应的R包</em>PopGenome<em>。通常是选定有一定的基因组区域，设定好窗口大小，然后滑动窗口进行计算。<br>3KRGP文章就计算了水稻不同亚群间4号染色体部分区域上的$\\pi$值$^{[12]}$，能够看出控制水稻籽粒落粒性的基因</em>Sh4*$^{[13]}$位置多态性在所有的亚群中都降低了。说明这个基因在所有的亚群中都是受到选择的，这可能是人工选择的结果。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/11.png\" class=\"\">\n\n<h2 id=\"群体内选择检验：Tajima’s-D\"><a href=\"#群体内选择检验：Tajima’s-D\" class=\"headerlink\" title=\"群体内选择检验：Tajima’s D\"></a>群体内选择检验：Tajima’s D</h2><p>Tajima’s D是日本学者Tajima Fumio 1989年提出的一种统计检验方法，用于检验DNA序列在演化过程中是否遵循中性演化模型$^{[14]}$。计算公式为：<br>$$D=\\frac{\\pi-\\theta_w}{\\sqrt{V(\\pi-\\theta_w)}}$$<br>D值大小有如下三种生物学意义：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/12.png\" class=\"\">\n\n<h2 id=\"群体间分歧度检验：-F-st\"><a href=\"#群体间分歧度检验：-F-st\" class=\"headerlink\" title=\"群体间分歧度检验：*$F_{st}$*\"></a>群体间分歧度检验：*$F_{st}$*</h2><p>$F_{st}$叫固定分化指数，用于估计亚群间平均多态性大小与整个种群平均多态性大小的差异，反映的是群体结构的变化。其简单估计的计算公式为：<br>$$F_{st}=\\frac{\\pi_{Between}-\\pi_{Within}}{\\pi_{Between}}$$<br>$F_{st}$的取值范围是[0,1]。当$F_{st}=1$时，表明亚群间有着明显的种群分化。<br>在中性进化条件下，$F_{st}$的大小主要取决于遗传漂变和迁移等因素的影响。假设种群中的某个等位基因因为对特定的生境的适应度较高而经历适应性选择，那该基因的频率在种群中会升高，种群的分化水平增大，使得种群有着较高的$F_{st}$值。<br>$F_{st}$值可以和GWAS的结果一起进行分析，$F_{st}$超过一定阈值的区域往往和GWAS筛选到的位点是一致的，如2018年棉花重测序的文章$^{[15]}$：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/13.png\" class=\"\">\n\n<h2 id=\"群体分歧度检验：ROD\"><a href=\"#群体分歧度检验：ROD\" class=\"headerlink\" title=\"群体分歧度检验：ROD\"></a>群体分歧度检验：ROD</h2><p>ROD可以基于野生群体和驯化群体间核苷酸多态性参数$\\pi$的差异识别选择型号，也可以测量驯化群体和野生型群体相比损失的多态性。计算公式为：<br>$$ROD=1-\\frac{\\pi_{驯化群体}}{\\pi_{野生群体}}$$<br>和$F_{st}$一样，ROD也可以和GWAS结合起来：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/14.png\" class=\"\">\n\n<h1 id=\"群体结构分析\"><a href=\"#群体结构分析\" class=\"headerlink\" title=\"群体结构分析\"></a>群体结构分析</h1><p>群体结构分析可以简单理解成采样测序的这些个体可以分成几个小组，以及给每个个体之间的远近关系是怎么样的。群体结构分析三剑客， 分别是<em>进化树</em>、<em>PCA</em>和<em>群体结构图</em>。</p>\n<h2 id=\"进化树\"><a href=\"#进化树\" class=\"headerlink\" title=\"进化树\"></a>进化树</h2><p>进化树就是将个体按照远近关系分别连接起来的图。</p>\n<h3 id=\"进化树算法\"><a href=\"#进化树算法\" class=\"headerlink\" title=\"进化树算法\"></a>进化树算法</h3><h4 id=\"基于距离\"><a href=\"#基于距离\" class=\"headerlink\" title=\"基于距离\"></a>基于距离</h4><ul>\n<li>非加权算术平均对群法UPGMA</li>\n<li>邻接法Neighbor-joining</li>\n</ul>\n<h4 id=\"基于特征\"><a href=\"#基于特征\" class=\"headerlink\" title=\"基于特征\"></a>基于特征</h4><ul>\n<li>最大简约法—最小变化数（祖先状态最小化）</li>\n<li>最大似然法—所有枝长和模型参数最优化</li>\n<li>贝叶斯推断—基于后验概率</li>\n</ul>\n<h3 id=\"进化树类型\"><a href=\"#进化树类型\" class=\"headerlink\" title=\"进化树类型\"></a>进化树类型</h3><ul>\n<li>有根树<br>有根树就是所有的个体都有一个共同的祖先。就像这样的：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/15.png\" class=\"\"></li>\n<li>无根树<br>无根树只展示个体间的距离，无共同祖先，就像这样的：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/16.png\" class=\"\"></li>\n</ul>\n<h3 id=\"进化树软件\"><a href=\"#进化树软件\" class=\"headerlink\" title=\"进化树软件\"></a>进化树软件</h3><p>常用的绘图软件是<em>Phylip</em>和<em>Snpphylo</em>。进化树修饰的软件有<em>MEGA</em>，<em>ggtree</em>等，推荐网页版工具<a href=\"https://itol.embl.de/\">iTOL</a>，无比强大。<br>外群定根法：当群体的个体的差异很小时，可以引入其他物种作为根。如在对三叶草建树时可以引入水稻的序列作为根进行建树。</p>\n<h2 id=\"PCA图\"><a href=\"#PCA图\" class=\"headerlink\" title=\"PCA图\"></a>PCA图</h2><p>PCA是很常见的降维方法，如微生物研究中常用来检验样品分群情况。PCA计算的软件很多，plink可以直接用vcf文件计算PCA，R语言也可以进行PCA计算。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/17.png\" class=\"\">\n<p>PCA图在群体重测序中有如下几种作用：</p>\n<ul>\n<li>查看分群信息，就是测序的样品大概分成几个群。如2015年大豆重测序文章的图[17]:<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/18.png\" class=\"\"></li>\n<li>检测离群样本<br>离群样本就是在PCA图看起来和其他样本差异很大的样本，有可能是这个样本的遗传背景和其他样本本来就很大，也有可能是样本混淆了，比如了将野生型的样本标记成了驯化种进行测序。如果有离群样本，那在后续的类似于GWAS的分析中就需要将离群样本进行剔除。当然如果样本本来就是个很特别的，那就另当别论。</li>\n<li>推断亚群进化关系<br>可以从PCA图可以看出群体的进化关系，尤其是地理位置的进化关系。<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/19.png\" class=\"\"></li>\n</ul>\n<h2 id=\"群体分层图\"><a href=\"#群体分层图\" class=\"headerlink\" title=\"群体分层图\"></a>群体分层图</h2><p>进化树和PCA能够看出来群体是不是分层的，但是无法知道群体分成几个群合适，也无法看出群体间的基因交流，更无法看出个体的混血程度。这时候就需要群体分层图了。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/20.png\" class=\"\">\n<p>群体分层图的本质是堆叠的柱状图，和微生物研究中的物种组成柱状图类似。每个柱子是一个样本，可以看出一个样本的血缘组成，有几种颜色就说明该样本由几个祖先而来，如果只有一个色，那就说明这个个体很纯。<br>常用的软件有<em>structure</em>和<em>ADMIXTURE</em>$^{[19]}$。两款软件给出的结果都是$K$值。一般选择最低的点为最终的$K$值。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/21.png\" class=\"\">\n<p>群体分层图的可视化有个极强大的R包：Pophelper$^{[20]}$。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/22.png\" class=\"\">\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>可以将进化树和群体分层图结合进行展示，如下图：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/23.png\" class=\"\">\n\n<h1 id=\"连锁不平衡分析\"><a href=\"#连锁不平衡分析\" class=\"headerlink\" title=\"连锁不平衡分析\"></a>连锁不平衡分析</h1><p>先了解下概念，此处借鉴基迪奥生物网站的解释[22]。<br>要理解 LD 衰减图，我们就必须先理解连锁不平衡（Linkage disequilibrium，LD）的概念。连锁不平衡是由两个名词构成，连锁 + 不平衡。前者，很容易让我们产生概念混淆；后者，让这个概念变得愈加晦涩。因此从一个类似的概念入手，大家可能更容易理解 LD 的概念，那就是基因的共表达。<br>基因的共表达，通常指的是两个基因的表达量呈现相关性。比较常见的例子就是：转录组因子和靶基因间的关系。因为转录因子对它的靶基因有正调控作用，所以转录因子的表达量提高会导致靶基因的表达量也上调，两者往往存在正相关关系。这个正相关关系，可以使用相关系数 $r^2$ 来度量，这个数值在 - 1~1 之间。总而言之，相关性可以理解为两个元素共同变化，步调一致。<br>类似的，连锁不平衡（LD）就是度量两个分子标记的基因型变化是否步调一致，存在相关性的指标。如果两个 SNP 标记位置相邻，那么在群体中也会呈现基因型步调一致的情况。比如有两个基因座，分别对应 A/a 和 B/b 两种等位基因。如果两个基因座是相关的，我们将会看到某些基因型往往共同遗传，即某些单倍型的频率会高于期望值。<br>参照王荣焕等$^{[23]}$的方法进行LD参数计算：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/24.png\" class=\"\">\n\n<h2 id=\"LD衰减分析\"><a href=\"#LD衰减分析\" class=\"headerlink\" title=\"LD衰减分析\"></a>LD衰减分析</h2><p>随着标记间的距离增加，平均的LD程度将降低，呈现出衰减状态，这种情况叫LD衰减。LD衰减分析的作用：</p>\n<ul>\n<li>判断群体的多样性差异，一般野生型群体的LD衰减快于驯化群体；<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/25.png\" class=\"\"></li>\n<li>估计GWAS中标记的覆盖度，通过比较LD衰减距离(0.1)和标记间的平均距离来判断标记是否足够。</li>\n</ul>\n<hr>\n<h1 id=\"GWAS\"><a href=\"#GWAS\" class=\"headerlink\" title=\"GWAS\"></a>GWAS</h1><p>GWAS(genome-wide association study)，全基因组关联分析，常用在医学和农学领域。简单理解成将SNP等遗传标记和表型数据进行关联分析，检测和表型相关的位点，然后再倒回去找到对应的基因，研究其对表型的影响。这些被研究的表型在医学上常常是疾病的表型；在农学上常常是受关注的农艺性状，比如水稻的株高、产量、穗粒数等。GWAS思想首次提出是在心肌梗塞的治疗上[24]，首次应用是在2005年的文章上$^{[25]}$。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/26.png\" class=\"\">\n\n<h2 id=\"GWAS流程\"><a href=\"#GWAS流程\" class=\"headerlink\" title=\"GWAS流程\"></a>GWAS流程</h2><img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/27.png\" class=\"\">\n\n<ul>\n<li>样品准备就是要收集不同的个体，比如3KRGP就3000多个水稻材料[12]，然后对这些材料进行全基因组测序，还需要表型数据，比如水稻的株高、产量等。</li>\n<li>基因型的检测就是前面的变异检测，只是变异检测完的SNP数据还需要过滤才能进行后续的关联分析。</li>\n<li>关联分析这一步只需要将基因型数据和表型数据丢给软件就行了。</li>\n</ul>\n<h2 id=\"GWAS数学模型\"><a href=\"#GWAS数学模型\" class=\"headerlink\" title=\"GWAS数学模型\"></a>GWAS数学模型</h2><p>目前使用最广泛的模型是混合线性模型$^{[26]}$：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/28.png\" class=\"\">\n<p>所有的参数软件（如Emmax）会自动完成计算。</p>\n<h2 id=\"GWAS结果\"><a href=\"#GWAS结果\" class=\"headerlink\" title=\"GWAS结果\"></a>GWAS结果</h2><p>GWAS结果文件通常只有两个图，一个是曼哈顿图，另外一个是Q-Q图。一般是先看Q-Q图，如果Q-Q正常，曼哈顿图的结果才有意义。</p>\n<ul>\n<li>Q-Q图<br>用于推断关联分析使用的模型是否正确，如下图：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/29.png\" class=\"\">\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/30.png\" class=\"\"></li>\n<li>如果模型不正确，那就只能换算法或者软件。</li>\n<li>曼哈顿图<br>之所以叫曼哈顿图，是由于这种图长得像曼哈顿：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/31.png\" class=\"\">\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/32.png\" class=\"\">\n图中横着的虚线通常是研究者设定的，最严格的的阈值线是Bonfferonin($\\frac{0.05}{total{SNPs}}$)。阈值线以上的点就是很值得关注的位点。<br>后续就是验证实验了，比如验证不同的单倍型的生物学功能。</li>\n</ul>\n<hr>\n<h1 id=\"其他统计指标和算法\"><a href=\"#其他统计指标和算法\" class=\"headerlink\" title=\"其他统计指标和算法\"></a>其他统计指标和算法</h1><h2 id=\"MSMC\"><a href=\"#MSMC\" class=\"headerlink\" title=\"MSMC\"></a>MSMC</h2><p>MSMC（multiple sequentially Markovian coalescent）$^{[27]}$，底层算法很复杂，类似于PSMC。MSMC的主要功能是推断有效群体大小和群体分离历史。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/33.png\" class=\"\">这样看起来更直观：\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/34.png\" class=\"\">\n\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/35.png\" class=\"\">\n\n<h2 id=\"LAMP\"><a href=\"#LAMP\" class=\"headerlink\" title=\"LAMP\"></a>LAMP</h2><p>LAMP(Local Ancestry in Admixed Populations，混杂群体的局部族源推断)，用于推断采用聚类的方法假设同时检测的位点间不存在重组情况，对每组相邻的 SNP 进行检测分析$^{[28]}$，在运算速度和推断准确度上都有了质的飞跃。</p>\n<h2 id=\"Treemix\"><a href=\"#Treemix\" class=\"headerlink\" title=\"Treemix\"></a>Treemix</h2><p>用于推断群体分离和混合[29]。图是这样的：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/36.png\" class=\"\">\n<p>这种图和进化树长得特别相似，可以将得到的结果和进化树进行比较。如2019年NC上关于<em>Cushion willow</em>的文章中就用到了这种算法根据。图是这样的：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/01.png\" class=\"\">\n\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/37.png\" class=\"\">\n\n<p>前文提到的很多软件和算法都是用来推断群体进化的，也就是找到群体的祖先。都可以看成族源推断。具体的差异可以参考综述<em>法医族源推断的分子生物学进展</em>$^{[31]}$。</p>\n<hr>\n<h1 id=\"群体重测序方案推荐\"><a href=\"#群体重测序方案推荐\" class=\"headerlink\" title=\"群体重测序方案推荐\"></a>群体重测序方案推荐</h1><p>测序方案关系到后续的分析，不同的样本量对应不同的测序方法和分析方法。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/38.png\" class=\"\">\n\n<hr>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>[1]. <a href=\"%5Bhttps://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E9%80%89%EF%BF%BD%25A\">自然选择(维基百科)</a><br>[2]. Kimura, Motoo. “Evolutionary rate at the molecular level.” <em><strong>Nature</strong></em>. 217.5129 (1968): 624-626 .<br>[3]. <a href=\"https://www.genome.gov/about-genomics/fact-sheets/DNA-Sequencing-Costs-Data\">测序价格变化趋势</a><br>[4]. <a href=\"https://www.plabipd.de/timeline_view.ep\">plant genomes</a><br>[5]. DePristo, Mark A., et al. “A framework for variation discovery and genotyping using next-generation DNA sequencing data.” <em><strong>Nature Genetics</strong></em>. 43.5 (2011): 491.<br>[6]. Biswas, Shameek, and Joshua M. Akey. “Genomic insights into positive selection.” <em><strong>TRENDS in Genetics</strong></em> . 22.8 (2006): 437-446.<br>[7]. Pavlidis, Pavlos, et al. “Sweed: likelihood-based detection of selective sweeps in thousands of genomes.” <em><strong>Molecular biology and evolution</strong></em> 30.9 (2013): 2224-2234.<br>[8]. Wang, Muhua, et al. “The genome sequence of African rice (<em>Oryza glaberrima</em>) and evidence for independent domestication.” <em><strong>Nature Genetics</strong></em> 46.9 (2014): 982.<br>[9]. Bamshad, Michael, and Stephen P. Wooding. “Signatures of natural selection in the human genome.” <em><strong>Nature Reviews Genetics</strong></em> 4.2 (2003): 99.<br>[10]. Siewert, Katherine M., and Benjamin F. Voight. “BetaScan2: Standardized statistics to detect balancing selection utilizing substitution data.” <em><strong>BioRxiv</strong></em> (2018): 497255.<br>[11]. Yu, N.; Jensen-Seaman MI; Chemnick L; Ryder O; Li WH (March 2004).  <em><strong>Genetics</strong></em>. 166 (3): 1375–83.<br>[12]. Wang, Wensheng, et al. “Genomic variation in 3,010 diverse accessions of Asian cultivated rice.” <em><strong>Nature</strong></em> 557.7703 (2018): 43.<br>[13]. Li, C., Zhou, A. &amp; Sang, T. Rice domestication by reducing shattering. <em><strong>Science</strong></em> 311, 1936–1939 (2006).<br>[14]. Tajima, Fumio. “Statistical method for testing the neutral mutation hypothesis by DNA polymorphism.” <em><strong>Genetics</strong></em> 123.3 (1989): 585-595.<br>[15]. Du, Xiongming, et al. “Resequencing of 243 diploid cotton accessions based on an updated A genome identifies the genetic basis of key agronomic traits.” <em><strong>Nature Genetics</strong></em> 50.6 (2018): 796.<br>[16]. Lu, Kun, et al. “Whole-genome resequencing reveals Brassica napus origin and genetic loci involved in its improvement.” <em><strong>Nature communications</strong></em>. 10.1 (2019): 1154.<br>[17]. Zhou, Z., Jiang, Y., Wang, Z. et al. Resequencing 302 wild and cultivated accessions identifies genes related to domestication and improvement in soybean. <em><strong>Nat Biotechnol</strong></em> 33, 408–414 (2015).<br>[18]. Liang, Z., Duan, S., Sheng, J. et al. Whole-genome resequencing of 472 Vitis accessions for grapevine diversity and demographic history analyses. <em><strong>Nat Commun</strong></em> 10, 1190 (2019).<br>[19]. Alexander, D.H., Lange, K. Enhancements to the ADMIXTURE algorithm for individual ancestry estimation. <em><strong>BMC Bioinformatics</strong></em> 12, 246 (2011).<br>[20]. Francis, Roy M. “pophelper: an R package and web app to analyse and visualize population structure.” <em><strong>Molecular ecology resources</strong></em> 17.1 (2017): 27-32.<br>[21]. <a href=\"http://www.royfrancis.com/pophelper/articles/index.html\">http://www.royfrancis.com/pophelper/articles/index.html</a>.<br>[22]. <a href=\"https://www.omicshare.com/forum/thread-878-1-1.html\">https://www.omicshare.com/forum/thread-878-1-1.html</a>.<br>[23]. WANG Rong-Huan, WANG Tian-Yu, LI Yu. Linkage disequilibrium in plant genomes[J]. <em><strong>HEREDITAS</strong></em>, 2007, 29(11): 1317-1323.<br>[24]. Ozaki, K., Ohnishi, Y., Iida, A. et al. Functional SNPs in the lymphotoxin-α gene that are associated with susceptibility to myocardial infarction. <em><strong>Nat Genet</strong></em> 32, 650–654 (2002).<br>[25]. Klein, Robert J., et al. “Complement factor H polymorphism in age-related macular degeneration.” <em><strong>Science</strong></em> 308.5720 (2005): 385-389.<br>[26]. Yu, Jianming, et al. “A unified mixed-model method for association mapping that accounts for multiple levels of relatedness.” <em><strong>Nature genetics</strong></em> 38.2 (2006): 203.<br>[27]. Schiffels, Stephan, and Richard Durbin. “Inferring human population size and separation history from multiple genome sequences.” <em><strong>Nature genetics</strong></em> 46.8 (2014): 919.<br>[28]. Sankararaman, Sriram, et al. “Estimating local ancestry in admixed populations.” <em><strong>The American Journal of Human Genetics</strong></em> 82.2 (2008): 290-303.<br>[29]. Pickrell, Joseph K., and Jonathan K. Pritchard. “Inference of population splits and mixtures from genome-wide allele frequency data.” <em><strong>PLoS genetics</strong></em> 8.11 (2012): e1002967.<br>[30]. Chen, Jia-hui, et al. “Genome-wide analysis of Cushion willow provides insights into alpine plant divergence in a biodiversity hotspot.” <em><strong>Nature communications</strong></em> 10.1 (2019): 1-12.<br>[31]. 孙宽，侯一平。法医族源推断的分子生物学进展 [J]. <em><strong>法医学杂志</strong></em>，2018,34 (03):286-293.<br>[32]. <a href=\"http://www.genek.tv/\">genek.tv</a></p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#108;&#x69;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"<p>分子层面对生物的研究，在个体水平上主要是看单个基因的变化以及全转录本的变化（RNA-seq）；在对个体的研究的基础上，开始了群体水平的研究。如果说常规的遗传学主要的研究对象是个体或者个体家系的话，那么群体遗传学则是主要研究由不同个体组成的群体的遗传规律。</p>","more":"<p>在测序技术大力发展之前，对群体主要是依靠表型进行研究，如加拉巴哥群岛的13中鸟雀有着不同的喙，达尔文认为这是自然选择造成的后果$^{[1]}$。达尔文的进化论对应的观点可以简单概括为“物竞天择，适者生存”，这也是最为大众所接受的一种进化学说。直到1968年，日本遗传学家提出了中性进化理论$^{[2]}$，也叫中性演化理论。中性理论的提出很大程度上是基于分子生物化学的发展。可以这样理解中性理论：一群人抽奖，在没有内幕的情况下，每个人抽到一等奖的概率是相等的，这个可能性和参与抽奖的人的身高、年龄、爱好等因素都没有关系。中性理论常作为群体遗传研究中的假设理论（CK）来计算其他各种统计指标。<br>群体遗传学，研究的单位是群体，比如粳稻、籼稻、野生稻，就能够构成不同的群体；我们国内的各省份的水稻也可以作为一个个群体。 群体遗传学大概可以分为群体内的研究和群体间的研究。比如研究云南元阳的水稻的遗传多样性；如果研究是的云南元阳的水稻和东北的水稻，那就可以算成是群体间的研究。群体间和群体内的研究是相互的。<br>测序价格的急剧下降$^{[3]}$使得大规模的群体测序得以实现。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/1.jpg\" class=\"\">\n\n<hr>\n<h1 id=\"几种变异类型\"><a href=\"#几种变异类型\" class=\"headerlink\" title=\"几种变异类型\"></a>几种变异类型</h1><p>常见的变异类型有SNP、IdDel、SV、CNV等。重测序中最关注的是SNP，其次是InDel。其他的几种结构变异的研究不是太多。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/2.png\" class=\"\">\n\n<h1 id=\"重测序和从头组装\"><a href=\"#重测序和从头组装\" class=\"headerlink\" title=\"重测序和从头组装\"></a>重测序和从头组装</h1><p>有参考基因组的物种的全基因组测序叫做重测序，没有参考基因组的物种的全基因组测序则需要从头组装。随着测序价格的降低，越来越多物种的参考基因组都已经测序组装完成。<em>plant genomes</em>$^{[4]}$网站实时显示全基因组测序已经完成的植物，其中2012年以后爆发式增长。在群体遗传学研究中更多的是有参考基因组的物种，尤其是模式物种，植物中常见的是拟南芥、水稻和玉米。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/3.png\" class=\"\">\n\n<h1 id=\"重测序分析流程\"><a href=\"#重测序分析流程\" class=\"headerlink\" title=\"重测序分析流程\"></a>重测序分析流程</h1><p>主要的分析流程见下图。现在的测序公司基本上都会帮客户完成整个的分析流程，因为主要耗费的资源是计算资源。我认为在整个分析的流程中最重要的是Linux目录的构建，混乱的目录会导致后续的分析频频出问题，重测序分析会生成很多的中间文件，良好的目录管理会使得项目分析流程井然有序。<br>该部分涉及到的软件的安装和基础的Linux基础知识就不详细说明了。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/4.png\" class=\"\">\n\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/5.png\" class=\"\">\n\n<h1 id=\"群体进化选择\"><a href=\"#群体进化选择\" class=\"headerlink\" title=\"群体进化选择\"></a>群体进化选择</h1><h2 id=\"正选择\"><a href=\"#正选择\" class=\"headerlink\" title=\"正选择\"></a>正选择</h2><p>正选择似乎可以更好地用自然选择来解释。就是一个基因or位点能够使个体有着更强的生存力或者是育性，这样就会使得这个个体的后代更多，如此一来，这个基因or位点在群体中就越来越多。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/6.png\" class=\"\">\n<p>正选择能够使有利的突变基因or位点在群体中得到传播，但是与此同时却降低了群体的多态性水平。也就是说原先该位点周围的核苷酸组成是多样性的，在经过正选择之后，这个位点周围核苷酸的多样性就渐渐的趋于同质化了。这就好比一块田，里面本来有水稻和稗草及其他杂草，由于稗草的适应性增强，稗草在逐渐增多，水稻慢慢变少，最后甚至是只剩下了稗草。<br>我们将这种选择之后多态性降低的情况叫做选择扫荡（Selective Sweep)。检测选择扫荡的软件有SweeD$^{[7]}$。选择扫荡有可能是人工选择的结果，如2014年 Nature Genetics关于非洲栽培稻的文章就使用了SweeD来检测非洲栽培稻基因组上受人工选择的区域$^{[8]}$。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/7.png\" class=\"\">\n\n<h2 id=\"负选择\"><a href=\"#负选择\" class=\"headerlink\" title=\"负选择\"></a>负选择</h2><p>负选择和正选择刚好是相反的。简单理解成群体中的某个个体出现了一个致命的突变，从而自己或者是后代从群体中被淘汰。这也导致群体中该位点的多态性的降低。就好比我有10株水稻，其中一株在成长过程中突然不见了，那么对我的这个小的水稻群体来说，这个消失的水稻的独有的位点在群体中就不见了，整体的多态性就降低了。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/8.png\" class=\"\">\n\n<h2 id=\"平衡选择\"><a href=\"#平衡选择\" class=\"headerlink\" title=\"平衡选择\"></a>平衡选择</h2><p>平衡选择指多个等位基因在一个群体的基因库中以高于遗传漂变预期的频率被保留，如杂合子优势。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/9.png\" class=\"\">\n\n\n\n<p>平衡选择检测的算法有BetaScan2$^{[10]}$，这是个Python脚本，输入文件只需要过滤好的SNP数据即可。</p>\n<hr>\n<h1 id=\"群体遗传学中的统计指标\"><a href=\"#群体遗传学中的统计指标\" class=\"headerlink\" title=\"群体遗传学中的统计指标\"></a>群体遗传学中的统计指标</h1><h2 id=\"群体多态性参数\"><a href=\"#群体多态性参数\" class=\"headerlink\" title=\"群体多态性参数\"></a>群体多态性参数</h2><p>计算公式为：<br>$$\\theta = 4N_e\\mu$$<br>其中$N_e$是有效群体大小，$\\mu$是每个位点的突变速率。<em>但是群体大小往往是无法精确知道的，需要对其进行估计。</em></p>\n<h2 id=\"分离位点数目\"><a href=\"#分离位点数目\" class=\"headerlink\" title=\"分离位点数目\"></a>分离位点数目</h2><p>分离位点数$\\theta_w$是$\\theta$的估计值，表示相关基因在多序列比对中表现出多态性的位置。计算公式为：<br>$$\\theta_w = \\frac{K}{a_n}$$<br>其中$K$为分离位点数量，比如SNP数量。<br>$a_n$为个体数量的倒数和：<br>$$a_n = \\sum^{n-1}_{i = 1}\\frac{1}{i}$$</p>\n<h2 id=\"核苷酸多样性-pi\"><a href=\"#核苷酸多样性-pi\" class=\"headerlink\" title=\"核苷酸多样性$\\pi$\"></a>核苷酸多样性$\\pi$</h2><p>$\\pi$指的是核苷酸多样性，值越大说明核苷酸多样性越高。通常用于衡量群体内的核苷酸多样性，也可以用来推演进化关系$^{[11]}$。计算公式为：<br>$$\\pi = \\sum_{ij}x_ix_j\\pi_{ij}=2<em>\\sum_{i = 2}^{n}\\sum_{j=1}^{i-1}x_ix_j\\pi{ij}$$<br>可以理解成现在群体内两两求$\\pi$，再计算群体的均值。计算的软件最常见的是</em>vcftools<em>，也有对应的R包</em>PopGenome<em>。通常是选定有一定的基因组区域，设定好窗口大小，然后滑动窗口进行计算。<br>3KRGP文章就计算了水稻不同亚群间4号染色体部分区域上的$\\pi$值$^{[12]}$，能够看出控制水稻籽粒落粒性的基因</em>Sh4*$^{[13]}$位置多态性在所有的亚群中都降低了。说明这个基因在所有的亚群中都是受到选择的，这可能是人工选择的结果。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/11.png\" class=\"\">\n\n<h2 id=\"群体内选择检验：Tajima’s-D\"><a href=\"#群体内选择检验：Tajima’s-D\" class=\"headerlink\" title=\"群体内选择检验：Tajima’s D\"></a>群体内选择检验：Tajima’s D</h2><p>Tajima’s D是日本学者Tajima Fumio 1989年提出的一种统计检验方法，用于检验DNA序列在演化过程中是否遵循中性演化模型$^{[14]}$。计算公式为：<br>$$D=\\frac{\\pi-\\theta_w}{\\sqrt{V(\\pi-\\theta_w)}}$$<br>D值大小有如下三种生物学意义：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/12.png\" class=\"\">\n\n<h2 id=\"群体间分歧度检验：-F-st\"><a href=\"#群体间分歧度检验：-F-st\" class=\"headerlink\" title=\"群体间分歧度检验：*$F_{st}$*\"></a>群体间分歧度检验：*$F_{st}$*</h2><p>$F_{st}$叫固定分化指数，用于估计亚群间平均多态性大小与整个种群平均多态性大小的差异，反映的是群体结构的变化。其简单估计的计算公式为：<br>$$F_{st}=\\frac{\\pi_{Between}-\\pi_{Within}}{\\pi_{Between}}$$<br>$F_{st}$的取值范围是[0,1]。当$F_{st}=1$时，表明亚群间有着明显的种群分化。<br>在中性进化条件下，$F_{st}$的大小主要取决于遗传漂变和迁移等因素的影响。假设种群中的某个等位基因因为对特定的生境的适应度较高而经历适应性选择，那该基因的频率在种群中会升高，种群的分化水平增大，使得种群有着较高的$F_{st}$值。<br>$F_{st}$值可以和GWAS的结果一起进行分析，$F_{st}$超过一定阈值的区域往往和GWAS筛选到的位点是一致的，如2018年棉花重测序的文章$^{[15]}$：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/13.png\" class=\"\">\n\n<h2 id=\"群体分歧度检验：ROD\"><a href=\"#群体分歧度检验：ROD\" class=\"headerlink\" title=\"群体分歧度检验：ROD\"></a>群体分歧度检验：ROD</h2><p>ROD可以基于野生群体和驯化群体间核苷酸多态性参数$\\pi$的差异识别选择型号，也可以测量驯化群体和野生型群体相比损失的多态性。计算公式为：<br>$$ROD=1-\\frac{\\pi_{驯化群体}}{\\pi_{野生群体}}$$<br>和$F_{st}$一样，ROD也可以和GWAS结合起来：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/14.png\" class=\"\">\n\n<h1 id=\"群体结构分析\"><a href=\"#群体结构分析\" class=\"headerlink\" title=\"群体结构分析\"></a>群体结构分析</h1><p>群体结构分析可以简单理解成采样测序的这些个体可以分成几个小组，以及给每个个体之间的远近关系是怎么样的。群体结构分析三剑客， 分别是<em>进化树</em>、<em>PCA</em>和<em>群体结构图</em>。</p>\n<h2 id=\"进化树\"><a href=\"#进化树\" class=\"headerlink\" title=\"进化树\"></a>进化树</h2><p>进化树就是将个体按照远近关系分别连接起来的图。</p>\n<h3 id=\"进化树算法\"><a href=\"#进化树算法\" class=\"headerlink\" title=\"进化树算法\"></a>进化树算法</h3><h4 id=\"基于距离\"><a href=\"#基于距离\" class=\"headerlink\" title=\"基于距离\"></a>基于距离</h4><ul>\n<li>非加权算术平均对群法UPGMA</li>\n<li>邻接法Neighbor-joining</li>\n</ul>\n<h4 id=\"基于特征\"><a href=\"#基于特征\" class=\"headerlink\" title=\"基于特征\"></a>基于特征</h4><ul>\n<li>最大简约法—最小变化数（祖先状态最小化）</li>\n<li>最大似然法—所有枝长和模型参数最优化</li>\n<li>贝叶斯推断—基于后验概率</li>\n</ul>\n<h3 id=\"进化树类型\"><a href=\"#进化树类型\" class=\"headerlink\" title=\"进化树类型\"></a>进化树类型</h3><ul>\n<li>有根树<br>有根树就是所有的个体都有一个共同的祖先。就像这样的：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/15.png\" class=\"\"></li>\n<li>无根树<br>无根树只展示个体间的距离，无共同祖先，就像这样的：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/16.png\" class=\"\"></li>\n</ul>\n<h3 id=\"进化树软件\"><a href=\"#进化树软件\" class=\"headerlink\" title=\"进化树软件\"></a>进化树软件</h3><p>常用的绘图软件是<em>Phylip</em>和<em>Snpphylo</em>。进化树修饰的软件有<em>MEGA</em>，<em>ggtree</em>等，推荐网页版工具<a href=\"https://itol.embl.de/\">iTOL</a>，无比强大。<br>外群定根法：当群体的个体的差异很小时，可以引入其他物种作为根。如在对三叶草建树时可以引入水稻的序列作为根进行建树。</p>\n<h2 id=\"PCA图\"><a href=\"#PCA图\" class=\"headerlink\" title=\"PCA图\"></a>PCA图</h2><p>PCA是很常见的降维方法，如微生物研究中常用来检验样品分群情况。PCA计算的软件很多，plink可以直接用vcf文件计算PCA，R语言也可以进行PCA计算。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/17.png\" class=\"\">\n<p>PCA图在群体重测序中有如下几种作用：</p>\n<ul>\n<li>查看分群信息，就是测序的样品大概分成几个群。如2015年大豆重测序文章的图[17]:<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/18.png\" class=\"\"></li>\n<li>检测离群样本<br>离群样本就是在PCA图看起来和其他样本差异很大的样本，有可能是这个样本的遗传背景和其他样本本来就很大，也有可能是样本混淆了，比如了将野生型的样本标记成了驯化种进行测序。如果有离群样本，那在后续的类似于GWAS的分析中就需要将离群样本进行剔除。当然如果样本本来就是个很特别的，那就另当别论。</li>\n<li>推断亚群进化关系<br>可以从PCA图可以看出群体的进化关系，尤其是地理位置的进化关系。<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/19.png\" class=\"\"></li>\n</ul>\n<h2 id=\"群体分层图\"><a href=\"#群体分层图\" class=\"headerlink\" title=\"群体分层图\"></a>群体分层图</h2><p>进化树和PCA能够看出来群体是不是分层的，但是无法知道群体分成几个群合适，也无法看出群体间的基因交流，更无法看出个体的混血程度。这时候就需要群体分层图了。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/20.png\" class=\"\">\n<p>群体分层图的本质是堆叠的柱状图，和微生物研究中的物种组成柱状图类似。每个柱子是一个样本，可以看出一个样本的血缘组成，有几种颜色就说明该样本由几个祖先而来，如果只有一个色，那就说明这个个体很纯。<br>常用的软件有<em>structure</em>和<em>ADMIXTURE</em>$^{[19]}$。两款软件给出的结果都是$K$值。一般选择最低的点为最终的$K$值。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/21.png\" class=\"\">\n<p>群体分层图的可视化有个极强大的R包：Pophelper$^{[20]}$。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/22.png\" class=\"\">\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>可以将进化树和群体分层图结合进行展示，如下图：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/23.png\" class=\"\">\n\n<h1 id=\"连锁不平衡分析\"><a href=\"#连锁不平衡分析\" class=\"headerlink\" title=\"连锁不平衡分析\"></a>连锁不平衡分析</h1><p>先了解下概念，此处借鉴基迪奥生物网站的解释[22]。<br>要理解 LD 衰减图，我们就必须先理解连锁不平衡（Linkage disequilibrium，LD）的概念。连锁不平衡是由两个名词构成，连锁 + 不平衡。前者，很容易让我们产生概念混淆；后者，让这个概念变得愈加晦涩。因此从一个类似的概念入手，大家可能更容易理解 LD 的概念，那就是基因的共表达。<br>基因的共表达，通常指的是两个基因的表达量呈现相关性。比较常见的例子就是：转录组因子和靶基因间的关系。因为转录因子对它的靶基因有正调控作用，所以转录因子的表达量提高会导致靶基因的表达量也上调，两者往往存在正相关关系。这个正相关关系，可以使用相关系数 $r^2$ 来度量，这个数值在 - 1~1 之间。总而言之，相关性可以理解为两个元素共同变化，步调一致。<br>类似的，连锁不平衡（LD）就是度量两个分子标记的基因型变化是否步调一致，存在相关性的指标。如果两个 SNP 标记位置相邻，那么在群体中也会呈现基因型步调一致的情况。比如有两个基因座，分别对应 A/a 和 B/b 两种等位基因。如果两个基因座是相关的，我们将会看到某些基因型往往共同遗传，即某些单倍型的频率会高于期望值。<br>参照王荣焕等$^{[23]}$的方法进行LD参数计算：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/24.png\" class=\"\">\n\n<h2 id=\"LD衰减分析\"><a href=\"#LD衰减分析\" class=\"headerlink\" title=\"LD衰减分析\"></a>LD衰减分析</h2><p>随着标记间的距离增加，平均的LD程度将降低，呈现出衰减状态，这种情况叫LD衰减。LD衰减分析的作用：</p>\n<ul>\n<li>判断群体的多样性差异，一般野生型群体的LD衰减快于驯化群体；<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/25.png\" class=\"\"></li>\n<li>估计GWAS中标记的覆盖度，通过比较LD衰减距离(0.1)和标记间的平均距离来判断标记是否足够。</li>\n</ul>\n<hr>\n<h1 id=\"GWAS\"><a href=\"#GWAS\" class=\"headerlink\" title=\"GWAS\"></a>GWAS</h1><p>GWAS(genome-wide association study)，全基因组关联分析，常用在医学和农学领域。简单理解成将SNP等遗传标记和表型数据进行关联分析，检测和表型相关的位点，然后再倒回去找到对应的基因，研究其对表型的影响。这些被研究的表型在医学上常常是疾病的表型；在农学上常常是受关注的农艺性状，比如水稻的株高、产量、穗粒数等。GWAS思想首次提出是在心肌梗塞的治疗上[24]，首次应用是在2005年的文章上$^{[25]}$。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/26.png\" class=\"\">\n\n<h2 id=\"GWAS流程\"><a href=\"#GWAS流程\" class=\"headerlink\" title=\"GWAS流程\"></a>GWAS流程</h2><img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/27.png\" class=\"\">\n\n<ul>\n<li>样品准备就是要收集不同的个体，比如3KRGP就3000多个水稻材料[12]，然后对这些材料进行全基因组测序，还需要表型数据，比如水稻的株高、产量等。</li>\n<li>基因型的检测就是前面的变异检测，只是变异检测完的SNP数据还需要过滤才能进行后续的关联分析。</li>\n<li>关联分析这一步只需要将基因型数据和表型数据丢给软件就行了。</li>\n</ul>\n<h2 id=\"GWAS数学模型\"><a href=\"#GWAS数学模型\" class=\"headerlink\" title=\"GWAS数学模型\"></a>GWAS数学模型</h2><p>目前使用最广泛的模型是混合线性模型$^{[26]}$：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/28.png\" class=\"\">\n<p>所有的参数软件（如Emmax）会自动完成计算。</p>\n<h2 id=\"GWAS结果\"><a href=\"#GWAS结果\" class=\"headerlink\" title=\"GWAS结果\"></a>GWAS结果</h2><p>GWAS结果文件通常只有两个图，一个是曼哈顿图，另外一个是Q-Q图。一般是先看Q-Q图，如果Q-Q正常，曼哈顿图的结果才有意义。</p>\n<ul>\n<li>Q-Q图<br>用于推断关联分析使用的模型是否正确，如下图：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/29.png\" class=\"\">\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/30.png\" class=\"\"></li>\n<li>如果模型不正确，那就只能换算法或者软件。</li>\n<li>曼哈顿图<br>之所以叫曼哈顿图，是由于这种图长得像曼哈顿：<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/31.png\" class=\"\">\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/32.png\" class=\"\">\n图中横着的虚线通常是研究者设定的，最严格的的阈值线是Bonfferonin($\\frac{0.05}{total{SNPs}}$)。阈值线以上的点就是很值得关注的位点。<br>后续就是验证实验了，比如验证不同的单倍型的生物学功能。</li>\n</ul>\n<hr>\n<h1 id=\"其他统计指标和算法\"><a href=\"#其他统计指标和算法\" class=\"headerlink\" title=\"其他统计指标和算法\"></a>其他统计指标和算法</h1><h2 id=\"MSMC\"><a href=\"#MSMC\" class=\"headerlink\" title=\"MSMC\"></a>MSMC</h2><p>MSMC（multiple sequentially Markovian coalescent）$^{[27]}$，底层算法很复杂，类似于PSMC。MSMC的主要功能是推断有效群体大小和群体分离历史。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/33.png\" class=\"\">这样看起来更直观：\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/34.png\" class=\"\">\n\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/35.png\" class=\"\">\n\n<h2 id=\"LAMP\"><a href=\"#LAMP\" class=\"headerlink\" title=\"LAMP\"></a>LAMP</h2><p>LAMP(Local Ancestry in Admixed Populations，混杂群体的局部族源推断)，用于推断采用聚类的方法假设同时检测的位点间不存在重组情况，对每组相邻的 SNP 进行检测分析$^{[28]}$，在运算速度和推断准确度上都有了质的飞跃。</p>\n<h2 id=\"Treemix\"><a href=\"#Treemix\" class=\"headerlink\" title=\"Treemix\"></a>Treemix</h2><p>用于推断群体分离和混合[29]。图是这样的：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/36.png\" class=\"\">\n<p>这种图和进化树长得特别相似，可以将得到的结果和进化树进行比较。如2019年NC上关于<em>Cushion willow</em>的文章中就用到了这种算法根据。图是这样的：</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/01.png\" class=\"\">\n\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/37.png\" class=\"\">\n\n<p>前文提到的很多软件和算法都是用来推断群体进化的，也就是找到群体的祖先。都可以看成族源推断。具体的差异可以参考综述<em>法医族源推断的分子生物学进展</em>$^{[31]}$。</p>\n<hr>\n<h1 id=\"群体重测序方案推荐\"><a href=\"#群体重测序方案推荐\" class=\"headerlink\" title=\"群体重测序方案推荐\"></a>群体重测序方案推荐</h1><p>测序方案关系到后续的分析，不同的样本量对应不同的测序方法和分析方法。</p>\n<img src=\"/2020/01/07/%E7%BE%A4%E4%BD%93%E9%81%97%E4%BC%A0%E5%AD%A6%E4%B8%8E%E9%87%8D%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/38.png\" class=\"\">\n\n<hr>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>[1]. <a href=\"%5Bhttps://zh.wikipedia.org/wiki/%E8%87%AA%E7%84%B6%E9%80%89%EF%BF%BD%25A\">自然选择(维基百科)</a><br>[2]. Kimura, Motoo. “Evolutionary rate at the molecular level.” <em><strong>Nature</strong></em>. 217.5129 (1968): 624-626 .<br>[3]. <a href=\"https://www.genome.gov/about-genomics/fact-sheets/DNA-Sequencing-Costs-Data\">测序价格变化趋势</a><br>[4]. <a href=\"https://www.plabipd.de/timeline_view.ep\">plant genomes</a><br>[5]. DePristo, Mark A., et al. “A framework for variation discovery and genotyping using next-generation DNA sequencing data.” <em><strong>Nature Genetics</strong></em>. 43.5 (2011): 491.<br>[6]. Biswas, Shameek, and Joshua M. Akey. “Genomic insights into positive selection.” <em><strong>TRENDS in Genetics</strong></em> . 22.8 (2006): 437-446.<br>[7]. Pavlidis, Pavlos, et al. “Sweed: likelihood-based detection of selective sweeps in thousands of genomes.” <em><strong>Molecular biology and evolution</strong></em> 30.9 (2013): 2224-2234.<br>[8]. Wang, Muhua, et al. “The genome sequence of African rice (<em>Oryza glaberrima</em>) and evidence for independent domestication.” <em><strong>Nature Genetics</strong></em> 46.9 (2014): 982.<br>[9]. Bamshad, Michael, and Stephen P. Wooding. “Signatures of natural selection in the human genome.” <em><strong>Nature Reviews Genetics</strong></em> 4.2 (2003): 99.<br>[10]. Siewert, Katherine M., and Benjamin F. Voight. “BetaScan2: Standardized statistics to detect balancing selection utilizing substitution data.” <em><strong>BioRxiv</strong></em> (2018): 497255.<br>[11]. Yu, N.; Jensen-Seaman MI; Chemnick L; Ryder O; Li WH (March 2004).  <em><strong>Genetics</strong></em>. 166 (3): 1375–83.<br>[12]. Wang, Wensheng, et al. “Genomic variation in 3,010 diverse accessions of Asian cultivated rice.” <em><strong>Nature</strong></em> 557.7703 (2018): 43.<br>[13]. Li, C., Zhou, A. &amp; Sang, T. Rice domestication by reducing shattering. <em><strong>Science</strong></em> 311, 1936–1939 (2006).<br>[14]. Tajima, Fumio. “Statistical method for testing the neutral mutation hypothesis by DNA polymorphism.” <em><strong>Genetics</strong></em> 123.3 (1989): 585-595.<br>[15]. Du, Xiongming, et al. “Resequencing of 243 diploid cotton accessions based on an updated A genome identifies the genetic basis of key agronomic traits.” <em><strong>Nature Genetics</strong></em> 50.6 (2018): 796.<br>[16]. Lu, Kun, et al. “Whole-genome resequencing reveals Brassica napus origin and genetic loci involved in its improvement.” <em><strong>Nature communications</strong></em>. 10.1 (2019): 1154.<br>[17]. Zhou, Z., Jiang, Y., Wang, Z. et al. Resequencing 302 wild and cultivated accessions identifies genes related to domestication and improvement in soybean. <em><strong>Nat Biotechnol</strong></em> 33, 408–414 (2015).<br>[18]. Liang, Z., Duan, S., Sheng, J. et al. Whole-genome resequencing of 472 Vitis accessions for grapevine diversity and demographic history analyses. <em><strong>Nat Commun</strong></em> 10, 1190 (2019).<br>[19]. Alexander, D.H., Lange, K. Enhancements to the ADMIXTURE algorithm for individual ancestry estimation. <em><strong>BMC Bioinformatics</strong></em> 12, 246 (2011).<br>[20]. Francis, Roy M. “pophelper: an R package and web app to analyse and visualize population structure.” <em><strong>Molecular ecology resources</strong></em> 17.1 (2017): 27-32.<br>[21]. <a href=\"http://www.royfrancis.com/pophelper/articles/index.html\">http://www.royfrancis.com/pophelper/articles/index.html</a>.<br>[22]. <a href=\"https://www.omicshare.com/forum/thread-878-1-1.html\">https://www.omicshare.com/forum/thread-878-1-1.html</a>.<br>[23]. WANG Rong-Huan, WANG Tian-Yu, LI Yu. Linkage disequilibrium in plant genomes[J]. <em><strong>HEREDITAS</strong></em>, 2007, 29(11): 1317-1323.<br>[24]. Ozaki, K., Ohnishi, Y., Iida, A. et al. Functional SNPs in the lymphotoxin-α gene that are associated with susceptibility to myocardial infarction. <em><strong>Nat Genet</strong></em> 32, 650–654 (2002).<br>[25]. Klein, Robert J., et al. “Complement factor H polymorphism in age-related macular degeneration.” <em><strong>Science</strong></em> 308.5720 (2005): 385-389.<br>[26]. Yu, Jianming, et al. “A unified mixed-model method for association mapping that accounts for multiple levels of relatedness.” <em><strong>Nature genetics</strong></em> 38.2 (2006): 203.<br>[27]. Schiffels, Stephan, and Richard Durbin. “Inferring human population size and separation history from multiple genome sequences.” <em><strong>Nature genetics</strong></em> 46.8 (2014): 919.<br>[28]. Sankararaman, Sriram, et al. “Estimating local ancestry in admixed populations.” <em><strong>The American Journal of Human Genetics</strong></em> 82.2 (2008): 290-303.<br>[29]. Pickrell, Joseph K., and Jonathan K. Pritchard. “Inference of population splits and mixtures from genome-wide allele frequency data.” <em><strong>PLoS genetics</strong></em> 8.11 (2012): e1002967.<br>[30]. Chen, Jia-hui, et al. “Genome-wide analysis of Cushion willow provides insights into alpine plant divergence in a biodiversity hotspot.” <em><strong>Nature communications</strong></em> 10.1 (2019): 1-12.<br>[31]. 孙宽，侯一平。法医族源推断的分子生物学进展 [J]. <em><strong>法医学杂志</strong></em>，2018,34 (03):286-293.<br>[32]. <a href=\"http://www.genek.tv/\">genek.tv</a></p>\n<hr>\n<blockquote>\n<p>💌<a href=\"mailto:&#108;&#x69;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;\">&#108;&#x69;&#x78;&#105;&#97;&#110;&#x67;&#49;&#49;&#x37;&#x34;&#x32;&#51;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a></p>\n<p>💌<a href=\"mailto:&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;\">&#x6c;&#x69;&#120;&#x69;&#x61;&#110;&#103;&#49;&#x31;&#x37;&#52;&#x32;&#x33;&#x40;&#102;&#111;&#120;&#109;&#97;&#x69;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></p>\n</blockquote>"}],"PostAsset":[{"_id":"source/_posts/ggtree学习笔记/1.png","slug":"1.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/10.png","slug":"10.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/11.png","slug":"11.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/12.png","slug":"12.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/13.png","slug":"13.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/14.png","slug":"14.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/15.png","slug":"15.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/16.png","slug":"16.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/17.png","slug":"17.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/18.png","slug":"18.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/19.png","slug":"19.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/2.png","slug":"2.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/20.png","slug":"20.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/21.png","slug":"21.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/22.png","slug":"22.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/23.png","slug":"23.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/24.png","slug":"24.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/25.png","slug":"25.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/26.png","slug":"26.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/27.png","slug":"27.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/28.png","slug":"28.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/29.png","slug":"29.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/3.png","slug":"3.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/30.png","slug":"30.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/31.png","slug":"31.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/32.png","slug":"32.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/33.png","slug":"33.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/34.png","slug":"34.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/35.png","slug":"35.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/36.png","slug":"36.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/37.png","slug":"37.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/38.png","slug":"38.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/39.png","slug":"39.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/4.png","slug":"4.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/40.png","slug":"40.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/41.png","slug":"41.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/42.png","slug":"42.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/43.png","slug":"43.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/44.png","slug":"44.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/45.png","slug":"45.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/46.png","slug":"46.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/47.png","slug":"47.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/48.png","slug":"48.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/49.png","slug":"49.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/5.png","slug":"5.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/50.png","slug":"50.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/51.png","slug":"51.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/52.png","slug":"52.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/53.png","slug":"53.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/54.png","slug":"54.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/55.png","slug":"55.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/56.png","slug":"56.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/57.png","slug":"57.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/58.png","slug":"58.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/59.png","slug":"59.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/6.png","slug":"6.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/60.png","slug":"60.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/61.png","slug":"61.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/62.png","slug":"62.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/7.png","slug":"7.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/8.png","slug":"8.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/9.png","slug":"9.png","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ggtree学习笔记/ggtree学习笔记.R","slug":"ggtree学习笔记.R","post":"ckwbphnms000048g034vs3ey2","modified":0,"renderable":0},{"_id":"source/_posts/ComplexHeatmap学习笔记/1.jpg","slug":"1.jpg","post":"ckwbqwcdn000hr0g06oetcwlx","modified":0,"renderable":0},{"_id":"source/_posts/clusterProfiler做富集分析/1.png","slug":"1.png","post":"ckwbqwcdh0001r0g009o7dqrt","modified":0,"renderable":0},{"_id":"source/_posts/clusterProfiler做富集分析/2.png","slug":"2.png","post":"ckwbqwcdh0001r0g009o7dqrt","modified":0,"renderable":0},{"_id":"source/_posts/clusterProfiler做富集分析/3.png","slug":"3.png","post":"ckwbqwcdh0001r0g009o7dqrt","modified":0,"renderable":0},{"_id":"source/_posts/clusterProfiler做富集分析/4.png","slug":"4.png","post":"ckwbqwcdh0001r0g009o7dqrt","modified":0,"renderable":0},{"_id":"source/_posts/GENIE3构建基因调控网络/1.png","slug":"1.png","post":"ckwbqwcdj0003r0g04pm2c2t9","modified":0,"renderable":0},{"_id":"source/_posts/GENIE3构建基因调控网络/2.png","slug":"2.png","post":"ckwbqwcdj0003r0g04pm2c2t9","modified":0,"renderable":0},{"_id":"source/_posts/ggplot2坡度图/1.png","slug":"1.png","post":"ckwbqwcdm000cr0g07slu8d7j","modified":0,"renderable":0},{"_id":"source/_posts/ggplot2画箭头/1.jpg","slug":"1.jpg","post":"ckwbqwcdn000fr0g017i3d8ev","modified":0,"renderable":0},{"_id":"source/_posts/iTAK简明教程/1.png","slug":"1.png","post":"ckwbqwcek000xr0g0404zhv0t","modified":0,"renderable":0},{"_id":"source/_posts/iTAK简明教程/2.png","slug":"2.png","post":"ckwbqwcek000xr0g0404zhv0t","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/1.png","slug":"1.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/2.png","slug":"2.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/3.png","slug":"3.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/4.png","slug":"4.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/5.png","slug":"5.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/6.png","slug":"6.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/iTOL修饰进化树/7.png","slug":"7.png","post":"ckwbqwcen0013r0g09vbhfs4y","modified":0,"renderable":0},{"_id":"source/_posts/NMDS分析/1.png","slug":"1.png","post":"ckwbqwceo0014r0g02r0ggykr","modified":0,"renderable":0},{"_id":"source/_posts/NMDS分析/2.png","slug":"2.png","post":"ckwbqwceo0014r0g02r0ggykr","modified":0,"renderable":0},{"_id":"source/_posts/NMDS分析/3.png","slug":"3.png","post":"ckwbqwceo0014r0g02r0ggykr","modified":0,"renderable":0},{"_id":"source/_posts/NMDS分析/4.png","slug":"4.png","post":"ckwbqwceo0014r0g02r0ggykr","modified":0,"renderable":0},{"_id":"source/_posts/NMDS分析/5.png","slug":"5.png","post":"ckwbqwceo0014r0g02r0ggykr","modified":0,"renderable":0},{"_id":"source/_posts/PCA和PERMANOVA分析/1.png","slug":"1.png","post":"ckwbqwceq001cr0g0823b5pf8","modified":0,"renderable":0},{"_id":"source/_posts/MiKTeX安装报错解决办法/1.jpg","slug":"1.jpg","post":"ckwbqwcep0018r0g06xwq2gy3","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/0.png","slug":"0.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/01.png","slug":"01.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/1.png","slug":"1.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/10.png","slug":"10.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/11.png","slug":"11.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/12.png","slug":"12.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/13.png","slug":"13.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/14.png","slug":"14.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/15.png","slug":"15.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/16.png","slug":"16.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/17.png","slug":"17.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/18.png","slug":"18.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/19.png","slug":"19.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/2.png","slug":"2.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/20.png","slug":"20.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/21.png","slug":"21.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/22.png","slug":"22.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/23.png","slug":"23.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/24.png","slug":"24.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/3.png","slug":"3.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/4.png","slug":"4.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/5.png","slug":"5.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/6.png","slug":"6.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/7.png","slug":"7.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/8.png","slug":"8.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/Nature：PTI影响ETI/9.png","slug":"9.png","post":"ckwbqwcf00027r0g0bpyr5ll0","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/0.png","slug":"0.png","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/1.jpg","slug":"1.jpg","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/2.jpg","slug":"2.jpg","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/3.jpg","slug":"3.jpg","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/4.jpg","slug":"4.jpg","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/5.jpg","slug":"5.jpg","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/OPLS-DA在R语言中的实现/6.jpg","slug":"6.jpg","post":"ckwbqwcf10029r0g02wte77wc","modified":0,"renderable":0},{"_id":"source/_posts/PTI中的信号网络/1.png","slug":"1.png","post":"ckwbqwcfp002cr0g03vhx0mbi","modified":0,"renderable":0},{"_id":"source/_posts/PTI中的信号网络/2.png","slug":"2.png","post":"ckwbqwcfp002cr0g03vhx0mbi","modified":0,"renderable":0},{"_id":"source/_posts/PTI中的信号网络/3.png","slug":"3.png","post":"ckwbqwcfp002cr0g03vhx0mbi","modified":0,"renderable":0},{"_id":"source/_posts/PTI中的信号网络/4.png","slug":"4.png","post":"ckwbqwcfp002cr0g03vhx0mbi","modified":0,"renderable":0},{"_id":"source/_posts/R语言批量合并Excel文件/1.png","slug":"1.png","post":"ckwbqwcio002mr0g01iq78pja","modified":0,"renderable":0},{"_id":"source/_posts/tidyHeatmap学习笔记/1.png","slug":"1.png","post":"ckwbqwcio002nr0g0cc235yqt","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/1.png","slug":"1.png","post":"ckwbqwcjh002rr0g0ad1mhqn0","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/2.png","slug":"2.png","post":"ckwbqwcjh002rr0g0ad1mhqn0","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/3.png","slug":"3.png","post":"ckwbqwcjh002rr0g0ad1mhqn0","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/4.png","slug":"4.png","post":"ckwbqwcjh002rr0g0ad1mhqn0","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程1-0——关于Tools4You/5.png","slug":"5.png","post":"ckwbqwcjh002rr0g0ad1mhqn0","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/1.png","slug":"1.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/2.png","slug":"2.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/3.png","slug":"3.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/4.png","slug":"4.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/5.png","slug":"5.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/6.png","slug":"6.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程2-相关性分析/7.png","slug":"7.png","post":"ckwbqwcip002pr0g0b2gn51mw","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程3：线性回归分析/1.png","slug":"1.png","post":"ckwbqwcjn0032r0g013is5r89","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程3：线性回归分析/2.png","slug":"2.png","post":"ckwbqwcjn0032r0g013is5r89","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程3：线性回归分析/3.png","slug":"3.png","post":"ckwbqwcjn0032r0g013is5r89","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程3：线性回归分析/4.png","slug":"4.png","post":"ckwbqwcjn0032r0g013is5r89","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/1.png","slug":"1.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/10.png","slug":"10.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/11.png","slug":"11.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/12.png","slug":"12.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/2.png","slug":"2.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/3.png","slug":"3.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/4.png","slug":"4.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/5.png","slug":"5.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/6.png","slug":"6.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/7.png","slug":"7.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/8.png","slug":"8.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程6：方差分析/9.png","slug":"9.png","post":"ckwbqwcjq0033r0g0deh15lnh","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程5：PCoA/1.png","slug":"1.png","post":"ckwbqwcjr0037r0g0eop7e596","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程5：PCoA/2.png","slug":"2.png","post":"ckwbqwcjr0037r0g0eop7e596","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/0.png","slug":"0.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/1.png","slug":"1.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/10.png","slug":"10.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/11.png","slug":"11.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/12.png","slug":"12.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/13.png","slug":"13.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/2.png","slug":"2.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/3.png","slug":"3.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/4.png","slug":"4.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/5.png","slug":"5.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/6.png","slug":"6.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/7.png","slug":"7.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/8.png","slug":"8.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/Tools4You教程4：PCA/9.png","slug":"9.png","post":"ckwbqwcjs003ar0g0eyz7grk8","modified":0,"renderable":0},{"_id":"source/_posts/不同数量样品绘制柱状图/1.png","slug":"1.png","post":"ckwbqwcjt003gr0g06mb36sse","modified":0,"renderable":0},{"_id":"source/_posts/不同数量样品绘制柱状图/2.png","slug":"2.png","post":"ckwbqwcjt003gr0g06mb36sse","modified":0,"renderable":0},{"_id":"source/_posts/代谢组S-plot/1.png","slug":"1.png","post":"ckwbqwcju003mr0g0c3pe7pbp","modified":0,"renderable":0},{"_id":"source/_posts/利用ImageJ批量计算叶片面积/1.png","slug":"1.png","post":"ckwbqwcjv003qr0g0brdz2lgz","modified":0,"renderable":0},{"_id":"source/_posts/利用ImageJ批量计算叶片面积/2.png","slug":"2.png","post":"ckwbqwcjv003qr0g0brdz2lgz","modified":0,"renderable":0},{"_id":"source/_posts/分类-回归树-CART-在R语言中的实现/1.png","slug":"1.png","post":"ckwbqwcjw003vr0g0gbdf20hk","modified":0,"renderable":0},{"_id":"source/_posts/带连接线的堆积柱状图/1.png","slug":"1.png","post":"ckwbqwcjy0041r0g0bvqz3xwi","modified":0,"renderable":0},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/1.jpg","slug":"1.jpg","post":"ckwbqwckt004mr0g06pxbh3oj","modified":0,"renderable":0},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/2.jpg","slug":"2.jpg","post":"ckwbqwckt004mr0g06pxbh3oj","modified":0,"renderable":0},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/3.jpg","slug":"3.jpg","post":"ckwbqwckt004mr0g06pxbh3oj","modified":0,"renderable":0},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/4.jpg","slug":"4.jpg","post":"ckwbqwckt004mr0g06pxbh3oj","modified":0,"renderable":0},{"_id":"source/_posts/稻壳酮（momilactones）在水稻化感中的角色/5.jpg","slug":"5.jpg","post":"ckwbqwckt004mr0g06pxbh3oj","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/1.png","slug":"1.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/2.png","slug":"2.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/3.png","slug":"3.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/4.png","slug":"4.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/5.png","slug":"5.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/6.png","slug":"6.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/7.png","slug":"7.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/开发一个R包/8.png","slug":"8.png","post":"ckwbqwckt004lr0g0anqsdnhu","modified":0,"renderable":0},{"_id":"source/_posts/部署Rshiny到服务器的常见问题/1.png","slug":"1.png","post":"ckwbqwcku004or0g0bn3x761w","modified":0,"renderable":0},{"_id":"source/_posts/部署Rshiny到服务器的常见问题/2.png","slug":"2.png","post":"ckwbqwcku004or0g0bn3x761w","modified":0,"renderable":0},{"_id":"source/_posts/酚酸是不是水稻中的化感物质/1.png","slug":"1.png","post":"ckwbqwckv004qr0g0a8rw66bo","modified":0,"renderable":0},{"_id":"source/_posts/酚酸是不是水稻中的化感物质/2.png","slug":"2.png","post":"ckwbqwckv004qr0g0a8rw66bo","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/1.png","slug":"1.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/10.png","slug":"10.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/11.png","slug":"11.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/12.png","slug":"12.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/13.png","slug":"13.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/2.png","slug":"2.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/3.png","slug":"3.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/4.png","slug":"4.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/5.png","slug":"5.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/6.png","slug":"6.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/7.png","slug":"7.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/8.png","slug":"8.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/化感和化感物质在植物防御中的作用/9.png","slug":"9.png","post":"ckwbqwckz004xr0g0grwh545y","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/1.jpeg","slug":"1.jpeg","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/2.jpg","slug":"2.jpg","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/3.jpeg","slug":"3.jpeg","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/4.png","slug":"4.png","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/5","slug":"5","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/6.jpg","slug":"6.jpg","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/7.png","slug":"7.png","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/听他十年，成长十年/8.jpeg","slug":"8.jpeg","post":"ckwbqwcl10050r0g0dukte5j6","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/1.png","slug":"1.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/10.png","slug":"10.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/2.png","slug":"2.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/3.png","slug":"3.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/4.png","slug":"4.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/5.png","slug":"5.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/6.png","slug":"6.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/7.png","slug":"7.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/8.png","slug":"8.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/使用ImageJ计算叶片面积/9.png","slug":"9.png","post":"ckwbqwcl0004yr0g041r89wih","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/0.png","slug":"0.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/01.png","slug":"01.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/02.jpg","slug":"02.jpg","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/1.png","slug":"1.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/2.png","slug":"2.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/3.png","slug":"3.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/4.png","slug":"4.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/5.png","slug":"5.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/6.png","slug":"6.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/7.png","slug":"7.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/尿囊素保护番茄免受UV-C胁迫/8.png","slug":"8.png","post":"ckwbqwcm90052r0g0cpxtapqf","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/0.png","slug":"0.png","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/1.jpg","slug":"1.jpg","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/2.jpg","slug":"2.jpg","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/3.jpg","slug":"3.jpg","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/4.jpg","slug":"4.jpg","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/5.jpg","slug":"5.jpg","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/6.jpg","slug":"6.jpg","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/土壤化学遗产激发后茬植物品种特异性及背景依赖性的根系响应/新建 Microsoft PowerPoint 演示文稿.pptx","slug":"新建 Microsoft PowerPoint 演示文稿.pptx","post":"ckwbqwcma0056r0g034bebed4","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/1.png","slug":"1.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/2.png","slug":"2.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/3.png","slug":"3.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/4.png","slug":"4.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/5.png","slug":"5.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/6.png","slug":"6.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/7.png","slug":"7.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/8.png","slug":"8.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/文献检索、追踪、阅读等小总结/9.png","slug":"9.png","post":"ckwbqwcmc005br0g0b8ut2q2o","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/1.png","slug":"1.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/10.png","slug":"10.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/2.png","slug":"2.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/3.png","slug":"3.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/4.png","slug":"4.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/5.png","slug":"5.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/6.png","slug":"6.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/7.png","slug":"7.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/8.png","slug":"8.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/新希望—野生（近缘）种质资源/9.png","slug":"9.png","post":"ckwbqwcme005hr0g02i8xfpsf","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/1.png","slug":"1.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/10.png","slug":"10.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/11.png","slug":"11.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/2.png","slug":"2.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/3.png","slug":"3.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/4.png","slug":"4.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/5.png","slug":"5.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/6.png","slug":"6.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/7.png","slug":"7.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/8.png","slug":"8.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻-稻瘟病互作转录组分析/9.png","slug":"9.png","post":"ckwbqwcmf005kr0g02229h4wh","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/1.png","slug":"1.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/10.png","slug":"10.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/2.png","slug":"2.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/3.png","slug":"3.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/4.png","slug":"4.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/5.png","slug":"5.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/6.png","slug":"6.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/7.png","slug":"7.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/8.png","slug":"8.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/水稻Pan-genome/9.png","slug":"9.png","post":"ckwbqwcmh005nr0g0cdbmgb04","modified":0,"renderable":0},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/1.png","slug":"1.png","post":"ckwbqwcmj005tr0g02jus380k","modified":0,"renderable":0},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/2.png","slug":"2.png","post":"ckwbqwcmj005tr0g02jus380k","modified":0,"renderable":0},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/3.png","slug":"3.png","post":"ckwbqwcmj005tr0g02jus380k","modified":0,"renderable":0},{"_id":"source/_posts/生态和农业中植物亲缘识别的机制/4.png","slug":"4.png","post":"ckwbqwcmj005tr0g02jus380k","modified":0,"renderable":0},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/1.png","slug":"1.png","post":"ckwbqwcmk005wr0g0fl2jd3pk","modified":0,"renderable":0},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/2.png","slug":"2.png","post":"ckwbqwcmk005wr0g0fl2jd3pk","modified":0,"renderable":0},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/3.png","slug":"3.png","post":"ckwbqwcmk005wr0g0fl2jd3pk","modified":0,"renderable":0},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/4.png","slug":"4.png","post":"ckwbqwcmk005wr0g0fl2jd3pk","modified":0,"renderable":0},{"_id":"source/_posts/通过Linux命令行使用Aspera全速上传测序数据到NCBI数据库/5.png","slug":"5.png","post":"ckwbqwcmk005wr0g0fl2jd3pk","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/01.png","slug":"01.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/1.jpg","slug":"1.jpg","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/10.png","slug":"10.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/11.png","slug":"11.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/12.png","slug":"12.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/13.png","slug":"13.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/14.png","slug":"14.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/15.png","slug":"15.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/16.png","slug":"16.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/17.png","slug":"17.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/18.png","slug":"18.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/19.png","slug":"19.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/2.png","slug":"2.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/20.png","slug":"20.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/21.png","slug":"21.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/22.png","slug":"22.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/23.png","slug":"23.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/24.png","slug":"24.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/25.png","slug":"25.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/26.png","slug":"26.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/27.png","slug":"27.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/28.png","slug":"28.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/29.png","slug":"29.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/3.png","slug":"3.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/30.png","slug":"30.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/31.png","slug":"31.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/32.png","slug":"32.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/33.png","slug":"33.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/34.png","slug":"34.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/35.png","slug":"35.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/36.png","slug":"36.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/37.png","slug":"37.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/38.png","slug":"38.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/4.png","slug":"4.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/5.png","slug":"5.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/6.png","slug":"6.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/7.png","slug":"7.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/8.png","slug":"8.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0},{"_id":"source/_posts/群体遗传学与重测序分析/9.png","slug":"9.png","post":"ckwbqwcmr006cr0g09lp690l5","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckwbpbhbc000048g03lhl7n46","category_id":"ckwbp5x4g00020cg0gcy1gth5","_id":"ckwbpbhbh000348g0hrscac08"},{"post_id":"ckwbphnms000048g034vs3ey2","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbphnmu000448g0bis26d8s"},{"post_id":"ckwbqwcdf0000r0g0gtrq450x","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdk0006r0g09jx66h8s"},{"post_id":"ckwbqwcdh0001r0g009o7dqrt","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdl0009r0g0hrjbchdo"},{"post_id":"ckwbqwcdj0003r0g04pm2c2t9","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdm000dr0g0geur84zm"},{"post_id":"ckwbqwcdk0008r0g087xmfpeq","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdo000ir0g07mpr76cu"},{"post_id":"ckwbqwcdm000cr0g07slu8d7j","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdp000lr0g0fleahqhq"},{"post_id":"ckwbqwcdn000fr0g017i3d8ev","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdp000nr0g0aihz06hw"},{"post_id":"ckwbqwcdk0005r0g0c26oaei4","category_id":"ckwbqwcdl000ar0g00lfh2k04","_id":"ckwbqwcdq000qr0g0e5hq2xgd"},{"post_id":"ckwbqwcdn000hr0g06oetcwlx","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcdq000sr0g033126lob"},{"post_id":"ckwbqwcdo000kr0g03mxs5vfp","category_id":"ckwbqwcdq000or0g0djafe81c","_id":"ckwbqwcdq000tr0g0favtb93x"},{"post_id":"ckwbqwcej000ur0g0487a2qgl","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcel000zr0g03lm3hjmb"},{"post_id":"ckwbqwcek000vr0g01wyf0y13","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcel0011r0g0btigcmwo"},{"post_id":"ckwbqwcek000xr0g0404zhv0t","category_id":"ckwbqwcdq000or0g0djafe81c","_id":"ckwbqwcel0012r0g09qe9d53h"},{"post_id":"ckwbqwcen0013r0g09vbhfs4y","category_id":"ckwbqwcdq000or0g0djafe81c","_id":"ckwbqwcep0019r0g0fvj4ezal"},{"post_id":"ckwbqwceo0014r0g02r0ggykr","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwceq001dr0g03fgr9gnc"},{"post_id":"ckwbqwcep0018r0g06xwq2gy3","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwces001ir0g0d3e978f5"},{"post_id":"ckwbqwceq001cr0g0823b5pf8","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwces001lr0g0a4vd76bx"},{"post_id":"ckwbqwcer001fr0g0brey3eub","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcet001pr0g08cil66j6"},{"post_id":"ckwbqwceo0016r0g0avnj311q","category_id":"ckwbqwceq001ar0g0bmfi16s9","_id":"ckwbqwceu001rr0g0fm52engu"},{"post_id":"ckwbqwcet001or0g02n416d0c","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcew001wr0g03xavedi2"},{"post_id":"ckwbqwcet001qr0g044a04npb","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwcew001yr0g0dpapdv9p"},{"post_id":"ckwbqwcer001hr0g0414fgc2w","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwcex0021r0g0f20i63co"},{"post_id":"ckwbqwceu001sr0g020dc3udg","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwcex0023r0g0bjrf5d6t"},{"post_id":"ckwbqwces001kr0g08lf73qc6","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwcex0024r0g0e38wek59"},{"post_id":"ckwbqwcez0026r0g019nsagbh","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcfq002dr0g06lgfeglv"},{"post_id":"ckwbqwcf10029r0g02wte77wc","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcfr002fr0g0hvsx7kxc"},{"post_id":"ckwbqwcf00027r0g0bpyr5ll0","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcfs002jr0g01re660yv"},{"post_id":"ckwbqwcfp002cr0g03vhx0mbi","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcfs002lr0g015o3db7r"},{"post_id":"ckwbqwcio002mr0g01iq78pja","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcjh002sr0g04t1o3448"},{"post_id":"ckwbqwcio002nr0g0cc235yqt","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcji002vr0g07k9p0wtt"},{"post_id":"ckwbqwcip002pr0g0b2gn51mw","category_id":"ckwbqwcji002tr0g0cn3ogj4p","_id":"ckwbqwcjj002zr0g0dp4h1i30"},{"post_id":"ckwbqwcjh002rr0g0ad1mhqn0","category_id":"ckwbqwcji002tr0g0cn3ogj4p","_id":"ckwbqwcjj0031r0g06h1vba1o"},{"post_id":"ckwbqwcjn0032r0g013is5r89","category_id":"ckwbqwcji002tr0g0cn3ogj4p","_id":"ckwbqwcjs0038r0g04zb218da"},{"post_id":"ckwbqwcjq0033r0g0deh15lnh","category_id":"ckwbqwcji002tr0g0cn3ogj4p","_id":"ckwbqwcjs003br0g0fdjm2a39"},{"post_id":"ckwbqwcjr0035r0g05fbq8ydw","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwcjt003er0g008r13i2r"},{"post_id":"ckwbqwcjr0037r0g0eop7e596","category_id":"ckwbqwcji002tr0g0cn3ogj4p","_id":"ckwbqwcju003hr0g00q2943as"},{"post_id":"ckwbqwcjs003ar0g0eyz7grk8","category_id":"ckwbqwcji002tr0g0cn3ogj4p","_id":"ckwbqwcju003kr0g0ctyvd2q9"},{"post_id":"ckwbqwcjt003dr0g0dqmufbvd","category_id":"ckwbqwcdq000or0g0djafe81c","_id":"ckwbqwcjv003nr0g035eicj7t"},{"post_id":"ckwbqwcjt003gr0g06mb36sse","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcjw003rr0g0am2lcr3r"},{"post_id":"ckwbqwcju003mr0g0c3pe7pbp","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcjx003wr0g0ebi5hrou"},{"post_id":"ckwbqwcjv003qr0g0brdz2lgz","category_id":"ckwbqwcdl000ar0g00lfh2k04","_id":"ckwbqwcjy003zr0g0h4pcdag3"},{"post_id":"ckwbqwcjw003tr0g01lhs1r43","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcjy0042r0g0e8yhgl96"},{"post_id":"ckwbqwcju003jr0g0a63e1ybt","category_id":"ckwbqwcjv003or0g01ifrdc4o","_id":"ckwbqwcjz0045r0g0a0qw1p10"},{"post_id":"ckwbqwcjw003vr0g0gbdf20hk","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcjz0048r0g0g0qb6xuv"},{"post_id":"ckwbqwcjx003yr0g09tew24m9","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwck0004br0g05pvb2ll9"},{"post_id":"ckwbqwcjy0041r0g0bvqz3xwi","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwck0004dr0g05ea8fldi"},{"post_id":"ckwbqwcjy0044r0g09wdq9zq7","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwck1004hr0g064md68p1"},{"post_id":"ckwbqwcjz0047r0g0b4yr3b1l","category_id":"ckwbqwces001mr0g08tl9cx0d","_id":"ckwbqwck1004ir0g03dcdav3a"},{"post_id":"ckwbqwck0004ar0g0ge8pbaut","category_id":"ckwbqwck0004er0g070vkbeuo","_id":"ckwbqwck1004kr0g0ejk78o64"},{"post_id":"ckwbqwckt004lr0g0anqsdnhu","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwckw004rr0g0dsrp3w83"},{"post_id":"ckwbqwckt004mr0g06pxbh3oj","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwckw004tr0g0fvqwgtng"},{"post_id":"ckwbqwcku004or0g0bn3x761w","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwckx004vr0g08yl6h893"},{"post_id":"ckwbqwckv004qr0g0a8rw66bo","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwckx004wr0g07qw4bsm1"},{"post_id":"ckwbqwckz004xr0g0grwh545y","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcm90053r0g0g01ygc0z"},{"post_id":"ckwbqwcl0004yr0g041r89wih","category_id":"ckwbqwcdl000ar0g00lfh2k04","_id":"ckwbqwcma0057r0g05fus7v7n"},{"post_id":"ckwbqwcm90052r0g0cpxtapqf","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcmd005cr0g0d3i1f3c4"},{"post_id":"ckwbqwcma0056r0g034bebed4","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcmd005fr0g060up2c46"},{"post_id":"ckwbqwcmb0059r0g09dxb1x10","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcme005ir0g0b2vu295s"},{"post_id":"ckwbqwcl10050r0g0dukte5j6","category_id":"ckwbqwcma0054r0g00orj0dgx","_id":"ckwbqwcmh005lr0g055o8d0a6"},{"post_id":"ckwbqwcmc005br0g0b8ut2q2o","category_id":"ckwbqwcma0054r0g00orj0dgx","_id":"ckwbqwcmi005or0g005ei2mis"},{"post_id":"ckwbqwcmd005er0g00hon6zjp","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcmj005rr0g0eks6f6ad"},{"post_id":"ckwbqwcme005hr0g02i8xfpsf","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcmk005ur0g0glasgsrd"},{"post_id":"ckwbqwcmf005kr0g02229h4wh","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcmk005xr0g06ldvd55p"},{"post_id":"ckwbqwcmh005nr0g0cdbmgb04","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcml0060r0g0byc94wbp"},{"post_id":"ckwbqwcmi005qr0g08hzgf07k","category_id":"ckwbqwcdl000ar0g00lfh2k04","_id":"ckwbqwcmm0063r0g0gnzpep6t"},{"post_id":"ckwbqwcmj005tr0g02jus380k","category_id":"ckwbqwcfn002ar0g0d9eab5ks","_id":"ckwbqwcmn0065r0g00rzm4wvt"},{"post_id":"ckwbqwcmk005wr0g0fl2jd3pk","category_id":"ckwbqwcdq000or0g0djafe81c","_id":"ckwbqwcmn0067r0g014uwgfg7"},{"post_id":"ckwbqwcml005zr0g0dq7hgcb8","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcmn0069r0g0dnvi66pb"},{"post_id":"ckwbqwcmm0062r0g01axman0u","category_id":"ckwbphnmt000148g06r997oj1","_id":"ckwbqwcmn006ar0g0bg63gtj8"},{"post_id":"ckwbqwcmq006br0g07fp876zr","category_id":"ckwbqwcjv003or0g01ifrdc4o","_id":"ckwbqwcms006fr0g061cahsu8"},{"post_id":"ckwbqwcmr006cr0g09lp690l5","category_id":"ckwbqwcdq000or0g0djafe81c","_id":"ckwbqwcms006gr0g0cyr91k1v"}],"PostTag":[{"post_id":"ckwbpbhbc000048g03lhl7n46","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbpbhbh000148g0cg1ba7gb"},{"post_id":"ckwbpbhbc000048g03lhl7n46","tag_id":"ckwbp5x4h00040cg06kq855ob","_id":"ckwbpbhbh000248g0el6k7v65"},{"post_id":"ckwbphnms000048g034vs3ey2","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbphnmu000348g04tba1r24"},{"post_id":"ckwbqwcdf0000r0g0gtrq450x","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdj0002r0g0g27u44cq"},{"post_id":"ckwbqwcdh0001r0g009o7dqrt","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdk0004r0g088q9c7xx"},{"post_id":"ckwbqwcdj0003r0g04pm2c2t9","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdk0007r0g03u3b6yxa"},{"post_id":"ckwbqwcdk0008r0g087xmfpeq","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdm000er0g0as31cp78"},{"post_id":"ckwbqwcdm000cr0g07slu8d7j","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdn000gr0g0bum7bjxl"},{"post_id":"ckwbqwcdn000fr0g017i3d8ev","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdo000jr0g054r179m2"},{"post_id":"ckwbqwcdk0005r0g0c26oaei4","tag_id":"ckwbqwcdl000br0g0axgk3h0v","_id":"ckwbqwcdp000mr0g035i1gdqi"},{"post_id":"ckwbqwcdn000hr0g06oetcwlx","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcdq000pr0g0bbab9720"},{"post_id":"ckwbqwcdo000kr0g03mxs5vfp","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbqwcdq000rr0g0h6294zhb"},{"post_id":"ckwbqwcej000ur0g0487a2qgl","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcek000wr0g0ep0p1wua"},{"post_id":"ckwbqwcek000vr0g01wyf0y13","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcel000yr0g0bjx3a60f"},{"post_id":"ckwbqwcek000xr0g0404zhv0t","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbqwcel0010r0g07bm5h7m7"},{"post_id":"ckwbqwcen0013r0g09vbhfs4y","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbqwceo0015r0g0bj515j3s"},{"post_id":"ckwbqwceo0014r0g02r0ggykr","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcep0017r0g04mqjgrx7"},{"post_id":"ckwbqwceo0016r0g0avnj311q","tag_id":"ckwbp5x4h00040cg06kq855ob","_id":"ckwbqwceq001br0g0ew9g2rvm"},{"post_id":"ckwbqwcep0018r0g06xwq2gy3","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcer001er0g0bs2mh8qp"},{"post_id":"ckwbqwceq001cr0g0823b5pf8","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcer001gr0g04slah7ez"},{"post_id":"ckwbqwcer001fr0g0brey3eub","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwces001jr0g0enrf280c"},{"post_id":"ckwbqwcet001qr0g044a04npb","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwcew001vr0g0a6160uxs"},{"post_id":"ckwbqwcer001hr0g0414fgc2w","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwcew001xr0g0e0xc8pzm"},{"post_id":"ckwbqwceu001sr0g020dc3udg","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwcex0020r0g090ft9spc"},{"post_id":"ckwbqwces001kr0g08lf73qc6","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwcex0022r0g0husrgy41"},{"post_id":"ckwbqwcet001or0g02n416d0c","tag_id":"ckwbqwcew001zr0g0e9226e73","_id":"ckwbqwcex0025r0g0abazg66k"},{"post_id":"ckwbqwcez0026r0g019nsagbh","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcf00028r0g031x06m64"},{"post_id":"ckwbqwcf10029r0g02wte77wc","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcfq002er0g03xnm4lzn"},{"post_id":"ckwbqwcf00027r0g0bpyr5ll0","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcfr002ir0g06qfacpj8"},{"post_id":"ckwbqwcfp002cr0g03vhx0mbi","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcfs002kr0g0f9mx6j0l"},{"post_id":"ckwbqwcio002mr0g01iq78pja","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcip002or0g0808bhph6"},{"post_id":"ckwbqwcio002nr0g0cc235yqt","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcjh002qr0g025ao4abo"},{"post_id":"ckwbqwcip002pr0g0b2gn51mw","tag_id":"ckwbqwcji002ur0g0bngx4qx0","_id":"ckwbqwcjj002yr0g03l9143zm"},{"post_id":"ckwbqwcjh002rr0g0ad1mhqn0","tag_id":"ckwbqwcji002ur0g0bngx4qx0","_id":"ckwbqwcjj0030r0g03dic0nsw"},{"post_id":"ckwbqwcjn0032r0g013is5r89","tag_id":"ckwbqwcji002ur0g0bngx4qx0","_id":"ckwbqwcjr0034r0g09gfbc3ho"},{"post_id":"ckwbqwcjq0033r0g0deh15lnh","tag_id":"ckwbqwcji002ur0g0bngx4qx0","_id":"ckwbqwcjr0036r0g08yqs9h7w"},{"post_id":"ckwbqwcjr0035r0g05fbq8ydw","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwcjs0039r0g0ayscb2yr"},{"post_id":"ckwbqwcjr0037r0g0eop7e596","tag_id":"ckwbqwcji002ur0g0bngx4qx0","_id":"ckwbqwcjt003cr0g0g02obgkk"},{"post_id":"ckwbqwcjs003ar0g0eyz7grk8","tag_id":"ckwbqwcji002ur0g0bngx4qx0","_id":"ckwbqwcjt003fr0g0amsr1t1s"},{"post_id":"ckwbqwcjt003dr0g0dqmufbvd","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbqwcju003ir0g06s81ffs4"},{"post_id":"ckwbqwcjt003gr0g06mb36sse","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcju003lr0g00n3763m5"},{"post_id":"ckwbqwcju003mr0g0c3pe7pbp","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcjw003sr0g0csik21wl"},{"post_id":"ckwbqwcjv003qr0g0brdz2lgz","tag_id":"ckwbqwcdl000br0g0axgk3h0v","_id":"ckwbqwcjw003ur0g00mmib33e"},{"post_id":"ckwbqwcjw003tr0g01lhs1r43","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcjx003xr0g04jh45nnf"},{"post_id":"ckwbqwcju003jr0g0a63e1ybt","tag_id":"ckwbqwcjv003pr0g0bs0x9lrv","_id":"ckwbqwcjy0040r0g00u0q7rxf"},{"post_id":"ckwbqwcjw003vr0g0gbdf20hk","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcjy0043r0g0hpcibwb4"},{"post_id":"ckwbqwcjx003yr0g09tew24m9","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcjz0046r0g0d0b3b7w0"},{"post_id":"ckwbqwcjy0041r0g0bvqz3xwi","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwck00049r0g031c3fjsz"},{"post_id":"ckwbqwcjy0044r0g09wdq9zq7","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwck0004cr0g0gy14bmgp"},{"post_id":"ckwbqwcjz0047r0g0b4yr3b1l","tag_id":"ckwbqwcet001nr0g03wqa3qn0","_id":"ckwbqwck1004gr0g004kha220"},{"post_id":"ckwbqwck0004ar0g0ge8pbaut","tag_id":"ckwbqwck1004fr0g09p083t4x","_id":"ckwbqwck1004jr0g02svhao98"},{"post_id":"ckwbqwckt004lr0g0anqsdnhu","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcku004nr0g0c14n0x52"},{"post_id":"ckwbqwckt004mr0g06pxbh3oj","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwckv004pr0g0g8ro7afg"},{"post_id":"ckwbqwcku004or0g0bn3x761w","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwckw004sr0g07z626d1h"},{"post_id":"ckwbqwckv004qr0g0a8rw66bo","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwckx004ur0g01cbv49wx"},{"post_id":"ckwbqwckz004xr0g0grwh545y","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcl1004zr0g0fpcn2v5f"},{"post_id":"ckwbqwcl0004yr0g041r89wih","tag_id":"ckwbqwcdl000br0g0axgk3h0v","_id":"ckwbqwcm90051r0g02lnm0rz1"},{"post_id":"ckwbqwcm90052r0g0cpxtapqf","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmb0058r0g0335pat6l"},{"post_id":"ckwbqwcma0056r0g034bebed4","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmc005ar0g0dw7u0i97"},{"post_id":"ckwbqwcmb0059r0g09dxb1x10","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcmd005dr0g07k579ohe"},{"post_id":"ckwbqwcl10050r0g0dukte5j6","tag_id":"ckwbqwcma0055r0g090qz04jr","_id":"ckwbqwcme005gr0g06m2thykg"},{"post_id":"ckwbqwcmc005br0g0b8ut2q2o","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmf005jr0g0bj051fj7"},{"post_id":"ckwbqwcmd005er0g00hon6zjp","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcmh005mr0g045rxhhq0"},{"post_id":"ckwbqwcme005hr0g02i8xfpsf","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmi005pr0g05x4e65za"},{"post_id":"ckwbqwcmf005kr0g02229h4wh","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmj005sr0g0ecso9bce"},{"post_id":"ckwbqwcmh005nr0g0cdbmgb04","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmk005vr0g0bdqq9won"},{"post_id":"ckwbqwcmi005qr0g08hzgf07k","tag_id":"ckwbqwcdl000br0g0axgk3h0v","_id":"ckwbqwcml005yr0g08w2658zm"},{"post_id":"ckwbqwcmj005tr0g02jus380k","tag_id":"ckwbqwcfo002br0g09z2p2s0v","_id":"ckwbqwcmm0061r0g0g9jygrfb"},{"post_id":"ckwbqwcmk005wr0g0fl2jd3pk","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbqwcmm0064r0g07ndi6ae6"},{"post_id":"ckwbqwcml005zr0g0dq7hgcb8","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcmn0066r0g00rwcg935"},{"post_id":"ckwbqwcmm0062r0g01axman0u","tag_id":"ckwbphnmt000248g03pg1bh1j","_id":"ckwbqwcmn0068r0g03nai8dkx"},{"post_id":"ckwbqwcmq006br0g07fp876zr","tag_id":"ckwbqwcjv003pr0g0bs0x9lrv","_id":"ckwbqwcms006dr0g04lh4hjc2"},{"post_id":"ckwbqwcmr006cr0g09lp690l5","tag_id":"ckwbp5x4h00030cg0857e9lcl","_id":"ckwbqwcms006er0g0dt5dezp6"}],"Tag":[{"name":"生物信息学","_id":"ckwbp5x4h00030cg0857e9lcl"},{"name":"Linux","_id":"ckwbp5x4h00040cg06kq855ob"},{"name":"R语言","_id":"ckwbphnmt000248g03pg1bh1j"},{"name":"技能","_id":"ckwbqwcdl000br0g0axgk3h0v"},{"name":"Python","_id":"ckwbqwcet001nr0g03wqa3qn0"},{"name":"R 语言","_id":"ckwbqwcew001zr0g0e9226e73"},{"name":"文献","_id":"ckwbqwcfo002br0g09z2p2s0v"},{"name":"Tools4You","_id":"ckwbqwcji002ur0g0bngx4qx0"},{"name":"数据库","_id":"ckwbqwcjv003pr0g0bs0x9lrv"},{"name":"hexo","_id":"ckwbqwck1004fr0g09p083t4x"},{"name":"杂文","_id":"ckwbqwcma0055r0g090qz04jr"}]}}